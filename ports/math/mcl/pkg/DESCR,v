head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.3
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.07.09.16.06.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.09.16.06.11;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.10.31.19.22.11;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.28.16.33.59;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@The MCL algorithm is short for the Markov Cluster Algorithm,
a fast and scalable cluster algorithm for graphs based on
simulation of (stochastic) flow in graphs.  The algorithm was
developed by Stijn van Dongen at the Centre for Mathematics and
Computer Science (also known as CWI) in the Netherlands.

The MCL algorithm is very fast, very scalable, and has a number
of attractive properties causing it to deliver high-quality
clusterings.

WWW: ${HOMEPAGE}
@


1.1.1.1
log
@Bring the entire base system and ports tree in sync with OpenBSD
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree into MirPorts Framework
@
text
@d10 2
@


1.1.1.3
log
@Import OpenBSD ports tree checked out from anoncvs.ca.openbsd.org at
2004-05-28 15:30 UTC.

Lots of SECURITY fixes, at least:

 * databases/mysql: tmpfile issue
 * www/squid: acl bypass
 * games/xonix: privilege escalation
 * archivers/lha: buffer overflow
 * mail/exim: buffer overflows
 * net/rsync: path checking issue
 * net/icecast: buffer overflow
 * www/opera
@
text
@d1 5
a5 5
The Markov Cluster Algorithm (MCL) is a fast and scalable
cluster algorithm for graphs based on simulation of (stochastic)
flow in graphs.  The algorithm was developed by Stijn van Dongen
at the Centre for Mathematics and Computer Science in the
Netherlands.
@


