head	1.2;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.2
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	ctm-3258:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3200:1.1.1.2
	ctm-3188:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.06.28.17.53.26;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.03.22.19.54.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.54.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.14.22.31;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* update to -pre15
* fix JPEG and TIFF (in accordance with bsd.port.mk update)
* regen patches
* fix shown number of languages (two numbers now; source and regenerated)
@
text
@$MirBSD$
$OpenBSD: patch-x_c,v 1.6 2003/04/07 19:30:21 fgsch Exp $
--- x.c.orig	2004-04-20 11:41:57.000000000 +0000
+++ x.c	2004-06-28 17:31:23.000000000 +0000
@@@@ -629,7 +629,24 @@@@ static void x_process_events(void *data)
 				gd=x_find_gd(&(event.xkey.window));
 				if (!gd)break;
 				if (x_translate_key((XKeyEvent*)(&event),&k,&f))
-					gd->keyboard_handler(gd,k,f);
+				{
+ 					if (k == KBD_INS && event.xkey.state & ShiftMask)
+					{
+						Atom pty;
+						if ((pty = XInternAtom(x_display, "XCLIP_OUT", False)))
+						{
+							XConvertSelection(
+								x_display,
+								XA_PRIMARY,
+								XA_STRING,
+								pty,
+								event.xbutton.window,
+								CurrentTime);
+						}
+					
+					} else
+						gd->keyboard_handler(gd,k,f);
+				}
 			}
 			break;
 	
@@@@ -677,7 +694,7 @@@@ static void x_process_events(void *data)
 					break;
 
 					case 2:
-					a=B_MIDDLE;
+					return; /* paste */
 					break;
 
 					default:
@


1.1
log
@Initial revision
@
text
@d1 5
a5 33
$OpenBSD: patch-x_c,v 1.5 2002/12/17 05:50:51 fgsch Exp $
--- x.c.orig	Sat Nov  2 14:22:42 2002
+++ x.c	Tue Dec 17 02:21:56 2002
@@@@ -82,6 +82,7 @@@@
 
 #include <X11/Xlib.h>
 #include <X11/X.h>
+#include <X11/Xatom.h>
 #include <X11/Xutil.h>
 #include <X11/Xlocale.h>
 
@@@@ -168,6 +169,20 @@@@ x_hash_table[X_HASH_TABLE_SIZE];
 
 static int flush_in_progress=0;
 
+static void x_do_paste(struct graphics_device* gd)
+{
+	int num=0;
+	unsigned char *buffer,*p;
+				
+	buffer=XFetchBytes(x_display,&num);
+	for (p=buffer;num>0;num--,p++)
+	{
+		if (*p==10)gd->keyboard_handler(gd,KBD_ENTER,0);
+		else
+			if (*p>=32)gd->keyboard_handler(gd,*p,0);
+	}
+	if (buffer)XFree(buffer);
+}
 
 static void x_do_flush(void *ignore)
 {
@@@@ -607,7 +622,15 @@@@ static void x_process_events(void *data)
d12 14
a25 5
+ 					{
+ 						x_do_paste(gd);
+ 						return;
+ 					}
+					else
d31 2
a32 1
@@@@ -695,21 +718,8 @@@@ static void x_process_events(void *data)
d35 2
a36 18
 					a=B_MIDDLE;
-					if (event.xbutton.state & ShiftMask) /* paste */
-					{
-						int num=0;
-						unsigned char *buffer,*p;
-						
-						buffer=XFetchBytes(x_display,&num);
-						for (p=buffer;num>0;num--,p++)
-						{
-							if (*p==10)gd->keyboard_handler(gd,KBD_ENTER,0);
-							else
-								if (*p>=32)gd->keyboard_handler(gd,*p,0);
-						}
-						if (buffer)XFree(buffer);
-						return;
-					}
+ 					x_do_paste(gd);
+ 					return;
d39 1
a39 28
 					case 4:
@@@@ -1844,6 +1854,18 @@@@ void x_set_window_title(struct graphics_
 	mem_free(t);
 }
 
+void x_set_clipboard(unsigned char *text)
+{
+	Atom cb0, prim;
+
+	cb0 = XInternAtom(x_display, "CUT_BUFFER0", True);
+	XChangeProperty(x_display, x_root_window, cb0, XA_STRING, 8, PropModeReplace, text, strlen(text));
+	XSetSelectionOwner(x_display, cb0, x_root_window, CurrentTime);
+
+	prim = XInternAtom(x_display, "PRIMARY", True);
+	XSetSelectionOwner(x_display, prim, None, CurrentTime);
+}
+
 struct graphics_driver x_driver={
 	"x",
 	x_init_driver,
@@@@ -1869,6 +1891,7 @@@@ struct graphics_driver x_driver={
 	dummy_block,
 	dummy_unblock,
 	x_set_window_title,
+	x_set_clipboard,
 	0,				/* depth (filled in x_init_driver function) */
 	0, 0,				/* size (in X is empty) */
 	0,				/* flags */
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree as of CTM 3188
@
text
@d1 33
a33 4
$OpenBSD: patch-x_c,v 1.6 2003/04/07 19:30:21 fgsch Exp $
--- x.c.orig	Fri Jan 10 19:13:49 2003
+++ x.c	Fri Apr  4 01:10:31 2003
@@@@ -611,7 +611,24 @@@@ static void x_process_events(void *data)
d40 5
a44 14
+					{
+						Atom pty;
+						if ((pty = XInternAtom(x_display, "XCLIP_OUT", False)))
+						{
+							XConvertSelection(
+								x_display,
+								XA_PRIMARY,
+								XA_STRING,
+								pty,
+								event.xbutton.window,
+								CurrentTime);
+						}
+					
+					} else
d50 1
a50 2
@@@@ -659,8 +676,7 @@@@ static void x_process_events(void *data)
 					break;
d53 18
a70 3
-					if (event.xbutton.state & ShiftMask) return; /* paste */
-					a=B_MIDDLE;
+					return; /* paste */
d73 4
a76 3
 					default:
@@@@ -699,8 +715,6 @@@@ static void x_process_events(void *data)
 					break;
d78 23
a100 6
 					case 2:
-					a=B_MIDDLE;
-					if (event.xbutton.state & ShiftMask) /* paste */
 					{
 						Atom pty;
 						if ((pty = XInternAtom(x_display, "XCLIP_OUT", False)))
@

