head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.02.14.23.21.38;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.02.02.18.34.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@this directory is now 100% superfluous

XXX there are only 27 port-flavours which are USE_LIBTOOL=Yes
maybe we can get rid altogether of libtool 1.3?
this area should be worth some investigation...
@
text
@$MirBSD: patch-lt1.3.5-2-aclocal_m4,v 1.1 2004/02/02 18:34:50 tg Exp $
--- aclocal.m4.orig	2001-09-15 00:47:06.000000000 +0000
+++ aclocal.m4	2004-02-02 18:20:03.000000000 +0000
@@@@ -885,7 +885,14 @@@@ old_postuninstall_cmds=
 
 if test -n "$RANLIB"; then
   old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
-  old_postinstall_cmds="\$RANLIB \$oldlib~$old_postinstall_cmds"
+  case "$host_os" in
+  openbsd* | mirbsd* | ekkobsd*)
+    old_postinstall_cmds="\$RANLIB -t \$oldlib~$old_postinstall_cmds"
+  ;;
+  *)
+    old_postinstall_cmds="\$RANLIB \$oldlib~$old_postinstall_cmds"
+  ;;
+  esac
 fi
 
 # Allow CC to be a program name with arguments.
@@@@ -1288,7 +1295,9 @@@@ cygwin* | mingw* | pw32* )
     with_gnu_ld=no
   fi
   ;;
-
+openbsd*)
+  with_gnu_ld=no
+  ;;
 esac
 
 ld_shlibs=yes
@@@@ -1691,11 +1700,32 @@@@ else
     hardcode_shlibpath_var=no
     ;;
 
-  openbsd*)
-    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
-    hardcode_libdir_flag_spec='-R$libdir'
-    hardcode_direct=yes
-    hardcode_shlibpath_var=no
+  openbsd* | mirbsd* | ekkobsd*)
+    case "$host_cpu" in
+    m88k|hppa|vax)
+      ld_shlibs=no
+      ;;
+    *)
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_libdir_flag_spec='${wl}-R$libdir'
+	export_dynamic_flag_spec='${wl}-E'
+      else
+	case "$host_os" in
+	openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	  archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_libdir_flag_spec='-R$libdir'
+	  ;;
+	*)
+	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_libdir_flag_spec='${wl}-R$libdir'
+	  ;;
+	esac
+      fi
+      ;;
+    esac
     ;;
 
   os2*)
@@@@ -2167,11 +2197,27 @@@@ newsos6)
   shlibpath_overrides_runpath=yes
   ;;
 
-openbsd*)
+openbsd* | mirbsd* | ekkobsd*)
   version_type=sunos
-  if test "$with_gnu_ld" = yes; then
-    need_lib_prefix=no
-    need_version=no
+  need_lib_prefix=no
+  need_version=no
+  sys_lib_search_path_spec="/usr/lib"
+  sys_lib_dlsearch_path_spec="/usr/lib /usr/local/lib"
+  file_magic_cmd=/usr/bin/file
+  file_magic_test_file=`echo /usr/lib/libc.so.*`
+  if test "`echo __ELF__ | $CC -E - | grep __ELF__`" = "" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB shared object'
+    case "$host_os" in
+    openbsd2.[89] | openbsd2.[89].*)
+      shlibpath_overrides_runpath=no
+    ;;
+    *)
+      shlibpath_overrides_runpath=yes
+    ;;
+    esac
+  else
+    deplibs_check_method='file_magic OpenBSD.* shared library'
+    shlibpath_overrides_runpath=yes
   fi
   library_names_spec='${libname}${release}.so$versuffix ${libname}.so$versuffix'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
@


1.1
log
@this is a more common way to do it:
 - switch port from gnu to autoconf
   (attention: look at the version denoted in configure,
    this one here wants 2.13 so no version in Makefile)
 - use patches from infrastructure
   (apparently, there are two differing libtool-1.3.5
    sources around, *sigh*)

tested to make package
@
text
@d1 1
a1 1
$MirBSD$
@

