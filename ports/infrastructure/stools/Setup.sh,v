head	1.24;
access;
symbols;
locks; strict;
comment	@# @;


1.24
date	2005.02.28.22.19.33;	author tg;	state Exp;
branches;
next	1.23;

1.23
date	2005.02.28.21.20.17;	author tg;	state Exp;
branches;
next	1.22;

1.22
date	2005.02.28.21.12.19;	author tg;	state Exp;
branches;
next	1.21;

1.21
date	2005.02.28.21.10.34;	author tg;	state Exp;
branches;
next	1.20;

1.20
date	2005.02.28.20.35.04;	author tg;	state Exp;
branches;
next	1.19;

1.19
date	2005.02.27.13.09.11;	author tg;	state Exp;
branches;
next	1.18;

1.18
date	2005.02.27.13.06.50;	author tg;	state Exp;
branches;
next	1.17;

1.17
date	2005.02.27.13.05.04;	author tg;	state Exp;
branches;
next	1.16;

1.16
date	2005.02.27.13.01.11;	author tg;	state Exp;
branches;
next	1.15;

1.15
date	2005.02.27.12.56.42;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.27.12.52.51;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2005.02.27.12.24.03;	author tg;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.26.15.02.10;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2005.02.26.13.10.48;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.26.12.52.41;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.26.12.43.42;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2005.02.24.19.26.50;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.23.22.42.22;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2005.02.23.22.38.00;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.23.18.04.18;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.20.13.18.26;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.14.14.17.13;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.09.11.38.58;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.05.15.23.52;	author tg;	state Exp;
branches;
next	;


desc
@@


1.24
log
@/usr/mpkg/bin first in PATH

now, ports/editors/joe works (install, uninstall, clean) on Mac OSX
@
text
@#!/bin/ksh
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.23 2005/02/28 21:20:17 tg Exp $
#-
# Copyright (c) 2004, 2005
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# MirPorts Framework - Installation script
#
# What does this thing do?
# 1) detect which OS we are running on
# 2) build and install package tools to
#    /usr/sbin (MirOS), /usr/local/sbin (OpenBSD), /usr/mpkg/sbin (Darwin)
# 3) patch <bsd.sys.mk> if necessary
# 4) install generic makefile includes
#    and, if necessary, mirports.osdep.mk
# 5) patch /etc/mk.conf
# 6) augment user and group list

print "1. Detecting environment..."

function f_start
{
	cat >>$1 |&
}

function f_end
{
	exec 3>&p; exec 3>&-
}

cd $(dirname $0)
top=$(cd ../..; pwd)
ti=$top/infrastructure
if os="$(uname -M 2>/dev/null)"; then
	os=${os%% *}
else
	os="$(uname -s)"
fi
osver=$(uname -r | sed 's/\./_/')
[[ -z $SHELL ]] && SHELL=/bin/ksh
export SHELL

if ! tmp=$(mktemp /tmp/mirports.XXXXXXXXXX); then
	print cannot make temporary file
	exit 1
fi

trap 'rm -f $tmp ; exit 0' 0
trap 'rm -f $tmp ; exit 1' 1 2 3 13 15

if ! chown root $tmp; then
	print need root
	exit 1
fi

case $os in
Darwin)
	localbase=/usr/mpkg
	sysmk=$localbase/share/mmake
	mtar=$localbase/bin/tar
	pkgbin=$localbase/sbin

	cat $ti/db/fake.mtree >$tmp
	(print '/@@@@local/d\ni\n'; IFS=/; s=;
	 for pc in $(print "$localbase"); do
		s="$s    "; print "$s$pc"
	 done; print '.\nwq') | ed -s $tmp
	mtree -U -e -d -n -p / -f $tmp
	mkdir -p $localbase/{db/pkg,etc}
	if ! fgrep $localbase /etc/profile >/dev/null 2>&1; then
		f_start /etc/profile
		print -p "export MANPATH=\$(manpath -q):$localbase/man"
		print -p "export PATH=$localbase/bin:\$PATH"
		f_end
	fi
	export PATH=$localbase/bin:$PATH
	;;
MirBSD)
	localbase=/usr/local
	sysmk=/usr/share/mk
	mtar=/bin/tar
	pkgbin=/usr/sbin

	ospl=$(uname -l | sed -e 's/^#//' -e 's/-.*$//' -e 's/^\(.\)./\1_/')
	ospm=${ospl%_*}
	ospl=${ospl#*_}
	# test is ancient -current or older, or modern
	if [[ $ospm -gt 7 ]]; then
		mirosnew=1
	else
		mirosnew=0
	fi
	( cd /usr/lib;
	  [[ -e libresolv.a && ! -e libdl.a ]] \
	    && ln libresolv.a libdl.a; \
	  [[ -e libexpat.so.0.0 && ! -e libexpat.so.4.0 ]] \
	    && ln -s libexpat.so.0.0 libexpat.so.4.0; \
	  for a in libpng.so.[01].*; do \
		b="$a"; \
		[[ -e $b ]] || b=nein; \
	  done; \
	  [[ $b != nein && ! -e libpng.so.4.0 ]] && ln -s $b libpng.so.4.0 )
	;;
OpenBSD)
	localbase=/usr/local
	sysmk=/usr/share/mk
	mtar=/bin/tar
	pkgbin=$localbase/sbin

	( cd /usr/lib;
	  [[ -e libresolv.a && ! -e libdl.a ]] \
	    && ln libresolv.a libdl.a )
	;;
*)
	print No support for the $os operating system.
	exit 1
	;;
esac

( cd $pkgbin
  rm -f mirports_tar
  print "#!$SHELL" >mirports_tar
  print "exec $mtar "'"$@@"' >>mirports_tar
  chmod 555 mirports_tar
)

# detect compiler version and if it's GCC
if gv=$($ourCC -v 2>&1 | grep '/specs$'); then
	gv=${gv%/specs}
	gv=${gv##*/}
else
	gv=no
fi

print "2. Building package tools..."

cd $ti/stools
rm -rf */obj
set -e
$MAKE cleandir
$MAKE obj
$MAKE cleandir
if [[ $os = Darwin ]]; then
	$MAKE depend INCS='-I/usr/mpkg/share/mmake'
	$MAKE PORTABLE=yes DB_DIR=$localbase/db \
	    INCS='-I/usr/mpkg/share/mmake' \
	    LIBS=/usr/mpkg/share/mmake/libhash.a
	$MAKE install PREFIX=$localbase MANDIR=$localbase/man/cat
elif [[ $os = MirBSD ]]; then
	$MAKE depend
	if [[ $mirosnew = 1 ]]; then
		$MAKE
	else
		$MAKE PORTABLE=yes
	fi
	$MAKE install
elif [[ $os = OpenBSD ]]; then
	$MAKE depend
	$MAKE PORTABLE=yes
	$MAKE install PREFIX=$localbase MANDIR=$localbase/man/cat
fi
set +e
rm -rf */obj

print -n "3. Patching <bsd.sys.mk>..."

if grep '\.ifndef.TRUEPREFIX' $sysmk/bsd.sys.mk >/dev/null 2>&1; then
	print not needed.
else
	if patch $sysmk/bsd.sys.mk \
	    $ti/compat/generic/patch-bsd_sys_mk; then
		print done.
		rm -f $sysmk/bsd.sys.mk.orig
	else
		print failed.
		exit 1
	fi
fi

print -n "4. Installing MirPorts system makefile includes..."

case $os in
Darwin)
	if ! install -c -o root -g wheel -m 644 \
	    $ti/compat/osdep/darwin-mirports.osdep.mk \
	    $ti/mk/mirports.osdep.mk; then
		print failed.
		exit 1
	fi
	;;
MirBSD)
	if [[ $mirosnew = 0 ]]; then
		if ! install -c -o root -g wsrc -m 664 \
		    $ti/compat/osdep/mbsd-mirports.osdep.mk \
		    $ti/mk/mirports.osdep.mk; then
			print failed.
			exit 1
		fi
	else
		rm -f $ti/mk/mirports.osdep.mk
	fi
	;;
OpenBSD)
	if ! install -c -o root -g wsrc -m 664 \
	    $ti/compat/osdep/obsd-mirports.osdep.mk \
	    $ti/mk/mirports.osdep.mk; then
		print failed.
		exit 1
	fi
	print '/^#@@@@PKG_CMDDIR/s/^#@@@@//\nwq' | ed -s $ti/mk/mirports.osdep.mk
	;;
esac

if install -c -o root -g bin -m 444 \
    $ti/compat/generic/*.mk $sysmk/; then
	print done.
else
	print failed.
	exit 1
fi

print -n "5. Preparing /etc/mk.conf..."

touch /etc/mk.conf
if fgrep '#@@@@MIRPORTS start' /etc/mk.conf >/dev/null 2>&1; then
	ed -s /etc/mk.conf 2>/dev/null <<-EOF
		/#@@@@MIRPORTS start/,/#@@@@MIRPORTS end/c
		#@@@@MIRPORTS deleteme
		.
		w
		+g/^$/d
		-,.g/#@@@@MIRPORTS deleteme/d
		wq
	EOF
	print 'g/#@@@@MIRPORTS deleteme/d\nwq' | ed -s /etc/mk.conf
fi

f_start /etc/mk.conf
if ! fgrep '#@@@@MIRPORTS user1' /etc/mk.conf >/dev/null 2>&1; then
	print -p '#@@@@MIRPORTS user1'
	print -p '### Options for MirPorts (recommended)'
	print -p '# make clean descends into dependencies'
	print -p '# is overriden by certain ports though'
	print -p 'CLEANDEPENDS?=		yes'
	print -p '# install all subpackages by default on make install'
	print -p '# NOTE: earlier MirPorts versions defaulted to off!'
	print -p '#PREFER_SUBPKG_INSTALL?=no	# default: yes'
	print -p
fi

print -p '#@@@@MIRPORTS start'
print -p
print -p "_CC_IS_GCC=		$gv"
print -p

case $os in
Darwin)
	print -p "PORTSDIR=		$top"
	print -p "PKG_CMDDIR=		$localbase/sbin"
	;;
MirBSD)
	# nothing else here yet
	;;
OpenBSD)
	if [[ $top = /usr/ports ]]; then
		print -p "PKG_CMDDIR=		$localbase/sbin"
	else
		print -p "USE_MIRPORTS?=\t	yes"
		print -p
		print -p '.if ${USE_MIRPORTS:L} == "yes"'
		print -p "PORTSDIR=		$top"
		print -p "PKG_CMDDIR=		$localbase/sbin"
		print -p ".else"
		print -p "PORTSDIR=		/usr/ports"
		print -p ".endif"
	fi
	print -p
	;;
esac

print -p '#@@@@MIRPORTS end'
print -p
f_end
print done.

print -n "6. Augmenting user and group database..."

if [[ $os = @@(Open|Mir)BSD ]]; then
	$SHELL $ti/db/mkuserdb
	print done.
else
	print not supported on $os, please do so manually!
fi

cat <<EOF

================================================
               Congratulations!
------------------------------------------------
 Your MirPorts Framework system is now set up
 completely and ready to run.
 If you have not yet done so, read the README
 file appropriate for your operating system for
 further information about how to use MirPorts:
 $ti/compat/README.${os}
================================================

EOF
exit 0
@


1.23
log
@need /var/db/pkg
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.22 2005/02/28 21:12:19 tg Exp $
d92 1
a92 1
		print -p "export PATH=\$PATH:$localbase/bin"
d95 1
a95 1
	export PATH=$PATH:$localbase/bin
@


1.22
log
@oops, tar not pax
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.21 2005/02/28 21:10:34 tg Exp $
d88 1
a88 1
	mkdir -p $localbase/{db,etc}
@


1.21
log
@use mirports_tar better
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.20 2005/02/28 20:35:04 tg Exp $
d79 1
a79 1
	mtar=$localbase/bin/pax
d100 1
a100 1
	mtar=/bin/pax
d126 1
a126 1
	mtar=/bin/pax
@


1.20
log
@switch to $PKG_CMDDIR/mirports_tar for creating packages
on Darwin (and maybe later, on old MirOS and OpenBSD versions),
this is MirCpio (which is built by darwin-setup.sh)
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.19 2005/02/27 13:09:11 tg Exp $
d79 1
a79 1
	mftp=$localbase/bin/pax
d100 1
a100 1
	mftp=/bin/pax
d126 1
a126 1
	mftp=/bin/pax
d139 6
a144 1
(cd $pkgbin; ln -sf $mftp mirports_tar)
@


1.19
log
@darwin doesn't come with group 'wsrc' by default
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.18 2005/02/27 13:06:50 tg Exp $
d79 3
d100 3
d126 3
d138 2
@


1.18
log
@missed a /share/

now off, donating a t-shirt to somebody
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.17 2005/02/27 13:05:04 tg Exp $
d187 1
a187 1
	if ! install -c -o root -g wsrc -m 664 \
@


1.17
log
@fix /usr/share/mk abuse
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.16 2005/02/27 13:01:11 tg Exp $
d78 1
a78 1
	sysmk=$localbase/mmake
@


1.16
log
@whoops, inserted way too much
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.15 2005/02/27 12:56:42 tg Exp $
d78 1
d96 1
d119 1
d170 1
a170 1
if grep '\.ifndef.TRUEPREFIX' /usr/share/mk/bsd.sys.mk >/dev/null 2>&1; then
d173 1
a173 1
	if patch /usr/share/mk/bsd.sys.mk \
d176 1
a176 1
		rm -f /usr/share/mk/bsd.sys.mk.orig
a192 1
	sysmk=$localbase/mk
a204 1
	sysmk=/usr/share/mk
a213 1
	sysmk=/usr/share/mk
@


1.15
log
@don't overwrite LDADD, add to it
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.14 2005/02/27 12:52:51 tg Exp $
d81 1
a81 1
		s="$s    "; print '/@@@@local/i\n'"$s$pc"
@


1.14
log
@* PORTABLE is a yes/no, no defined/undef
* add INCS to make depend, too
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.13 2005/02/27 12:24:03 tg Exp $
d147 1
a147 1
	    LDADD=/usr/mpkg/share/mmake/libhash.a
@


1.13
log
@add MirMake contributed dir to include path
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.12 2005/02/26 15:02:10 tg Exp $
a142 1
$MAKE depend
d144 2
a145 1
	$MAKE PORTABLE=1 DB_DIR=$localbase/db \
d150 1
d154 1
a154 1
		$MAKE PORTABLE=1
d158 2
a159 1
	$MAKE PORTABLE=1
@


1.12
log
@LDADD=libhash.a (from mmake) @@darwin
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.11 2005/02/26 13:10:48 tg Exp $
d146 1
@


1.11
log
@correct the use of IFS and ed
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.10 2005/02/26 12:52:41 tg Exp $
d145 2
a146 1
	$MAKE PORTABLE=1 DB_DIR=$localbase/db
@


1.10
log
@use $MAKE
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.9 2005/02/26 12:43:42 tg Exp $
d79 4
a82 3
	(export IFS=/; s=; for pc in $(print "$localbase"); do
		s="$s    "; print '/@@@@local/i\n'"$s$pc"'\n.\nwq' | ed -s $tmp
	 done; print '/@@@@local/d\nwq' | ed -s $tmp)
@


1.9
log
@fix mktemp calls, Darwin mktemp(1) (FreeBSD!) doesn't like
to be called w/o template (wtf?!)
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.8 2005/02/24 19:26:50 tg Exp $
d139 4
a142 4
make cleandir
make obj
make cleandir
make depend
d144 2
a145 2
	mmake PORTABLE=1 DB_DIR=$localbase/db
	mmake install PREFIX=$localbase MANDIR=$localbase/man/cat
d148 1
a148 1
		make
d150 1
a150 1
		make PORTABLE=1
d152 1
a152 1
	make install
d154 2
a155 2
	make PORTABLE=1
	make install PREFIX=$localbase MANDIR=$localbase/man/cat
@


1.8
log
@* use mtree for building /usr/mpkg/* on Darwin
* fix mtree spec for the ${LOCALBASE} != "/usr/local" case
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.7 2005/02/23 22:42:22 tg Exp $
d62 1
a62 1
if ! tmp=$(mktemp); then
@


1.7
log
@modularise localbase (a bit)

this is a start for making MirPorts usable as mere user
(for specifying user/group, look at MirMake for hints,
 to the person who's going to implement this - yes, I
 need volunteers)
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.6 2005/02/23 22:38:00 tg Exp $
d78 6
a83 1
	mkdir -p $localbase/{bin,db,etc,lib,man/{man,cat}{1,2,3,4,5,6,7,8},sbin}
@


1.6
log
@modularise output functions a bit
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.5 2005/02/23 18:04:18 tg Exp $
d77 3
a79 2
	mkdir -p /usr/mpkg/{bin,db,etc,lib,man/{man,cat}{1,2,3,4,5,6,7,8},sbin}
	if ! fgrep /usr/mpkg /etc/profile >/dev/null 2>&1; then
d81 2
a82 2
		print -p 'export MANPATH=$(manpath -q):/usr/mpkg/man'
		print -p 'export PATH=$PATH:/usr/mpkg/bin'
d85 1
a85 1
	export PATH=$PATH:/usr/mpkg/bin
d88 1
d110 1
d139 2
a140 2
	mmake PORTABLE=1 DB_DIR=/usr/mpkg/db
	mmake install PREFIX=/usr/mpkg MANDIR=/usr/mpkg/man/cat
d150 1
a150 1
	make install PREFIX=/usr/local MANDIR=/usr/local/man/cat
d180 1
a180 1
	sysmk=/usr/mpkg/mk
d252 1
a252 1
	print -p "PKG_CMDDIR=		/usr/mpkg/sbin"
d259 1
a259 1
		print -p "PKG_CMDDIR=		/usr/local/sbin"
d265 1
a265 1
		print -p "PKG_CMDDIR=		/usr/local/sbin"
@


1.5
log
@first step at supporting MirPorts on Mac OSX (tee emm, or err, or something)
* no shared libraries
* no "provided setup script" right now
* two things to fix in mirmake

while here,
* ekkoBSD is history
* lowercase HTML tags
@
text
@d2 1
a2 1
# $MirBSD$
d40 10
d79 4
a82 3
		print 'export MANPATH=$(manpath -q):/usr/mpkg/man' \
		    >>/etc/profile
		print 'export PATH=$PATH:/usr/mpkg/bin' >>/etc/profile
d228 1
d230 9
a238 11
	cat >>/etc/mk.conf <<EOF
#@@@@MIRPORTS user1
### Options for MirPorts (recommended)
# make clean descends into dependencies
# is overriden by certain ports though
CLEANDEPENDS?=		yes
# install all subpackages by default on make install
# NOTE: earlier MirPorts versions defaulted to off!
#PREFER_SUBPKG_INSTALL?=no	# default: yes

EOF
a240 1
cat >>/etc/mk.conf |&
d273 1
a273 1
exec 3>&p; exec 3>&-
@


1.4
log
@now, with SHA-1 being broken for (pretty) sure, check
all available checksums on a file, not only the first
"good" one.

Could someone please test this on #7ter in the follo-
wing two ports: archivers/arc; archivers/lha
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.3 2005/01/14 14:17:13 tg Exp $
d14 4
d31 1
a31 1
#    /usr/sbin (MirOS), /usr/local/sbin (OpenBSD)
d66 8
a73 4
OpenBSD)
	( cd /usr/lib;
	  [[ -e libresolv.a && ! -e libdl.a ]] \
	    && ln libresolv.a libdl.a )
d96 5
d124 4
a127 1
if [[ $os = MirBSD ]]; then
d134 1
a134 1
else
d159 1
a159 1
OpenBSD)
d161 1
a161 1
	    $ti/compat/osdep/obsd-mirports.osdep.mk \
d166 1
a166 1
	print '/^#@@@@PKG_CMDDIR/s/^#@@@@//\nwq' | ed -s $ti/mk/mirports.osdep.mk
d179 11
d194 1
a194 1
    $ti/compat/generic/*.mk /usr/share/mk/; then
d238 7
a259 3
MirBSD)
	# nothing else here yet
	;;
d269 6
a274 1
$SHELL $ti/db/mkuserdb
a276 1
done.
@


1.3
log
@better manipulation of /etc/mk.conf handling
please test on obsd
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.2 2005/01/09 11:38:58 tg Exp $
a196 2
# make checksum uses this order
PREFERRED_CIPHERS=	sha512 rmd160 sha1 md5
@


1.2
log
@add MirPorts-related /etc/mk.conf entries to the list of things added
to /etc/mk.conf (not overwritten if they have changed) and document
this fact; rename documentation so that it matches what the script says.
@
text
@d2 1
a2 1
# $MirBSD: ports/infrastructure/stools/Setup.sh,v 1.1 2005/01/05 15:23:52 tg Exp $
d177 11
a187 3
if fgrep '#@@@@MIRPORTS' /etc/mk.conf >/dev/null 2>&1; then
	print '/#@@@@MIRPORTS start/,/#@@@@MIRPORTS end/d\nwq' \
	    | ed -s /etc/mk.conf
@


1.1
log
@move Setup.sh out of the way
requested by bsiegert@@ fairly some time ago
@
text
@d2 1
a2 1
# $MirBSD: src/share/misc/licence.template,v 1.20 2004/12/03 16:18:37 tg Rel $
d182 16
a198 1
print -p
d226 1
@

