head	1.3;
access;
symbols
	cvs-200408271520:1.1.3.1 tg:1.1.3;
locks; strict;
comment	@ * @;


1.3
date	2005.03.12.18.40.25;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.10.16.46.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.27.15.27.01;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.08.27.15.27.01;	author tg;	state Stab;
branches;
next	;


desc
@@


1.3
log
@some cleanup:
* more const
* less redundant decls
* no shadowing variables with wider scope
* declare functions or static them

goal: to pass
  -Wall -Wextra -Wunused -Wdeclaration-after-statement -Wundef
  -Wendif-labels -Wshadow -Wpointer-arith -Wbad-function-cast
  -Wcast-qual -Wcast-align -Wwrite-strings -Wstrict-prototypes
  -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations
  -Wmissing-noreturn -Wmissing-format-attribute -Wredundant-decls
  -Wno-unreachable-code -Winline -pedantic -std=c99

end goal:
  -Wreachable-code -Wconversion

the former is broken in my very gcc 3.4.4 snapshot,
and the latter is broken for all <stdbool.h> types
due to integer promotion rules

thanks to waldi (the mirbsd.de sponsor) for helping with C a bit
@
text
@/* $MirBSD: ports/infrastructure/stools/lib/pwarnx.c,v 1.2 2004/10/10 16:46:21 tg Exp $ */
/* $OpenBSD: pwarnx.c,v 1.4 2003/08/21 20:24:57 espie Exp $ */

/*-
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdarg.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include "lib.h"

__RCSID("$MirBSD: ports/infrastructure/stools/lib/pwarnx.c,v 1.2 2004/10/10 16:46:21 tg Exp $");

static char pkgname[72+1];

void
set_pkg(char *name)
{

    char *name2;

    if (name != NULL) {
    	size_t len;

	len = strlen(name);
	while (len != 0 && name[len-1] == '/')
		name[--len] = '\0';

    	name2 = strrchr(name, '/');
	if (name2 != NULL)
		name = name2+1;
	strlcpy(pkgname, name, sizeof pkgname);
	name2 = strstr(pkgname, ".tgz");
	if (name2 != NULL && name2[4] == '\0')
		*name2 = '\0';
    } else
    	pkgname[0] = '\0';
}


extern const char *__progname;

void
pwarnx(const char *fmt, ...)
{
	va_list ap;
	va_start(ap, fmt);

	if (pkgname[0] == '\0')
	    (void)fprintf(stderr, "%s: ", __progname);
	else
	    (void)fprintf(stderr, "%s(%s): ", __progname, pkgname);
	if (fmt != NULL)
		(void)vfprintf(stderr, fmt, ap);
	(void)fprintf(stderr, "\n");
	va_end(ap);
}

void
pwarn(const char *fmt, ...)
{
	va_list ap;
	int sverrno;

	sverrno = errno;
	va_start(ap, fmt);

	if (pkgname[0] == '\0')
	    (void)fprintf(stderr, "%s: ", __progname);
	else
	    (void)fprintf(stderr, "%s(%s): ", __progname, pkgname);
	if (fmt != NULL) {
		(void)vfprintf(stderr, fmt, ap);
		(void)fprintf(stderr, ": ");
	}
	(void)fprintf(stderr, "%s\n", strerror(sverrno));
	(void)fprintf(stderr, "\n");
	va_end(ap);
}
@


1.2
log
@* sync pkg tools with what's currently in src/
  idea by bsiegert@@
* -Wall -Werror only ifndef PORTABLE
  (so it's still in for native development)
* let setup.sh define PORTABLE
@
text
@d1 1
a1 1
/* $MirBSD: src/usr.sbin/pkg_install/lib/pwarnx.c,v 1.3 2004/07/21 10:24:36 tg Stab $ */
d39 1
a39 1
__RCSID("$MirBSD: src/usr.sbin/pkg_install/lib/pwarnx.c,v 1.3 2004/07/21 10:24:36 tg Stab $");
d44 1
a44 2
set_pkg(name)
    char *name;
d68 1
a68 1
extern char *__progname;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $MirBSD: src/usr.sbin/pkg_install/lib/pwarnx.c,v 1.3 2004/07/21 10:24:36 tg Exp $ */
d39 1
a39 1
__RCSID("$MirBSD: src/usr.sbin/pkg_install/lib/pwarnx.c,v 1.3 2004/07/21 10:24:36 tg Exp $");
@


1.1.3.1
log
@src/usr.sbin/pkg_install comes into ports/infrastructure
@
text
@@
