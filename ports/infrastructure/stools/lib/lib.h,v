head	1.19;
access;
symbols
	cvs-200408271520:1.1.3.1 tg:1.1.3;
locks; strict;
comment	@ * @;


1.19
date	2005.03.12.19.23.55;	author tg;	state Exp;
branches;
next	1.18;

1.18
date	2005.03.12.19.02.20;	author tg;	state Exp;
branches;
next	1.17;

1.17
date	2005.03.12.18.40.25;	author tg;	state Exp;
branches;
next	1.16;

1.16
date	2005.03.12.17.20.35;	author tg;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.12.17.12.54;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.06.21.53.42;	author bsiegert;	state Exp;
branches;
next	1.13;

1.13
date	2005.03.06.16.43.11;	author bsiegert;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.02.22.17.48;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2005.02.23.18.04.18;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.06.22.11.31;	author bsiegert;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.21.19.06.06;	author bsiegert;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.16.20.44.20;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.12.14.45.29;	author bsiegert;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.12.21.24.05;	author bsiegert;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.12.13.06.40;	author bsiegert;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.11.23.02.03;	author bsiegert;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.12.21.35.07;	author bsiegert;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.10.16.46.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.27.15.27.01;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.08.27.15.27.01;	author tg;	state Stab;
branches;
next	;


desc
@@


1.19
log
@now all of stools build with
 -Wall -Wextra -Wunused -Wdeclaration-after-statement -Wundef
 --Wendif-labels -Wshadow -Wpointer-arith -Wbad-function-cast
 --Wcast-qual -Wcast-align -Wwrite-strings -Wstrict-prototypes
 --Wold-style-definition -Wmissing-prototypes -Wmissing-declarations
 --Wmissing-noreturn -Wmissing-format-attribute -Wredundant-decls
 --Wno-unreachable-code -Winline -pedantic -std=c99

didn't look at octools yet, since I don't have XCode(R)
@
text
@/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.18 2005/03/12 19:02:20 tg Exp $ */
/*	$OpenBSD: lib.h,v 1.14 2003/08/21 20:24:57 espie Exp $	*/

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * Include and define various things wanted by the library routines.
 */

#ifndef _INST_LIB_LIB_H_
#define _INST_LIB_LIB_H_

/* Includes */
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/file.h>

#include <ctype.h>
#include <dirent.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <stdbool.h>
#include <string.h>
#include <unistd.h>

#include "rcdb.h"

/* Usually "rm", but often "echo" during debugging! */
#define REMOVE_CMD		"rm"

/* Usually "rm", but often "echo" during debugging! */
#define RMDIR_CMD		"rmdir"

/* just in case we change the environment variable name */
#define PKG_DBDIR		"PKG_DBDIR"

/* The names of our "special" files */
#define CONTENTS_FNAME		"+CONTENTS"
#define COMMENT_FNAME		"+COMMENT"
#define DESC_FNAME		"+DESC"
#define INSTALL_FNAME		"+INSTALL"
#define DEINSTALL_FNAME		"+DEINSTALL"
#define REQUIRE_FNAME		"+REQUIRE"
#define REQUIRED_BY_FNAME	"+REQUIRED_BY"
#define DISPLAY_FNAME		"+DISPLAY"
#define MTREE_FNAME		"+MTREE_DIRS"

#define CMD_CHAR		'@@'	/* prefix for extended PLIST cmd */

/* The name of the "prefix" environment variable given to scripts */
#define PKG_PREFIX_VNAME	"PKG_PREFIX"

/* maximum size of comment that will fit on one line */
#ifndef MAXINDEXSIZE
#define MAXINDEXSIZE 72
#endif

/* enumerated constants for plist entry types */
typedef enum pl_ent_t {
	PLIST_SHOW_ALL = -1,
	PLIST_FILE,
	PLIST_CWD,
	PLIST_CMD,
	PLIST_CHMOD,
	PLIST_CHOWN,
	PLIST_CHGRP,
	PLIST_COMMENT,
	PLIST_ARCH,
	PLIST_IGNORE,
	PLIST_NAME,
	PLIST_UNEXEC,
	PLIST_SRC,
	PLIST_DISPLAY,
	PLIST_PKGDEP,
	PLIST_MTREE,
	PLIST_DIR_RM,
	PLIST_OPTION,
	PLIST_PKGCFL,
	PLIST_EXTRA,
	PLIST_EXTRAUNEXEC,
	PLIST_NEWDEP,
	PLIST_LIBDEP,
	PLIST_INFO,
	PLIST_MAN,
	PLIST_SAMPLE,
	PLIST_LIB,
	PLIST_SHELL,
	PLIST_ENDFAKE,
	PLIST_LDCACHE
} pl_ent_t;

/* Types */

/* this structure describes a packing list entry */
typedef struct plist_t {
	struct plist_t	*prev;		/* previous entry */
	struct plist_t	*next;		/* next entry */
	char		*name;		/* name of entry */
	bool		marked;		/* whether entry has been marked */
	pl_ent_t	type;		/* type of entry */
} plist_t;

/* this structure describes a package's complete packing list */
typedef struct package_t {
	plist_t		*head;		/* head of list */
	plist_t		*tail;		/* tail of list */
} package_t;

enum {
	ChecksumLen = 16,
	LegibleChecksumLen = 33
};

/* type of function to be handed to findmatchingname; return value of this
 * is currently ignored */
typedef int (*matchfn)(const char *found, char *data, int len);

/* Prototypes */
/* Misc */
int		vsystem(const char *, ...)
		    __attribute__((__format__ (printf, 1, 2)));
void		cleanup(int);
char		*make_playpen(char *, size_t, size_t);
char		*where_playpen(void);
void		leave_playpen(char *);
off_t		min_free(const char *);
void            save_dirs(char **c, char **p);
void            restore_dirs(char *c, char *p);

/* String */
char 		*get_dash_string(char **);
char		*copy_string(const char *);
bool		suffix(char *, char *);
void		nuke_suffix(char *);
void		str_lowercase(char *);
char		*toabs(const char *, const char *);
char		*strconcat(const char *, const char *);
int		pmatch(const char *, const char *);
int		findmatchingname(const char *, const char *, matchfn, char *, int); /* doesn't really belong here */
char		*findbestmatchingname(const char *, const char *); /* neither */
int		ispkgpattern(const char *);
char		*strnncpy(char *to, size_t tosize, char *from, size_t cc);

/* File */
bool		fexists(const char *);
bool		isdir(const char *);
bool		islinktodir(const char *);
bool		isemptydir(const char *fname);
bool		isemptyfile(const char *fname);
bool		isfile(const char *);
bool		isURL(const char *);
char		*ensure_tgz(char *);
char		*fileGetURL(char *, char *);
char		*fileURLFilename(char *, char *, int);
char		*fileURLHost(char *, char *, int);
char		*fileFindByPath(char *, char *);
char		*fileGetContents(char *);
bool		make_preserve_name(char *, size_t, char *, char *);
void		write_file(const char *, const char *);
void		copy_file(const char *, const char *, const char *);
void		move_file(const char *, const char *, char *);
void		copy_hierarchy(const char *, char *, bool);
int		delete_hierarchy(char *, bool, bool);
int		unpack(char *, const char *);
int		format_cmd(char *, size_t , const char *, const char *,
		    const char *);

/* Packing list */
plist_t		*new_plist_entry(void);
plist_t		*last_plist(package_t *);
plist_t		*find_plist(package_t *, pl_ent_t, const char *);
char		*find_plist_option(package_t *, const char *);
void		plist_delete(package_t *, bool, pl_ent_t, char *);
void		free_plist(package_t *);
void		mark_plist(package_t *);
void		csum_plist_entry(char *, plist_t *);
void		add_plist(package_t *, pl_ent_t, const char *);
void		add_plist_top(package_t *, pl_ent_t, const char *);
void		add_plist_at(package_t *, plist_t *, pl_ent_t, const char *);
void		add_plist_glob(package_t *, plist_t *, const char *, const char *);
void		delete_plist(package_t *pkg, bool all, pl_ent_t type, char *name);
void		write_plist(package_t *, FILE *);
void		read_plist(package_t *, FILE *);
int		plist_cmd(char *, char **);
int		delete_package(bool, bool, bool, bool, package_t *);
int		process_dirrm(plist_t *, bool, int *, RCDB *, const char *);
void		delete_extra(const char *, bool);

/* For all */
int		pkg_perform(char **);

void		set_pkg(char *);
void 		pwarnx(const char *, ...)
		    __attribute__((__format__ (printf, 1, 2)));
void 		pwarn(const char *, ...)
		    __attribute__((__format__ (printf, 1, 2)));

/* Externs */
extern bool	Verbose;
extern bool	Fake;
extern bool	Force;

#ifndef	__SCCSID
#define	__SCCSID(x)	static const char sccsid[] = x
#endif

#ifndef	__RCSID
#define	__RCSID(x)	static const char rcsid[] = x
#endif

#endif /* _INST_LIB_LIB_H_ */
@


1.18
log
@now less warnings: lib, add, create
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.17 2005/03/12 18:40:25 tg Exp $ */
d179 1
a179 1
int		unpack(char *, char *);
@


1.17
log
@some cleanup:
* more const
* less redundant decls
* no shadowing variables with wider scope
* declare functions or static them

goal: to pass
  -Wall -Wextra -Wunused -Wdeclaration-after-statement -Wundef
  -Wendif-labels -Wshadow -Wpointer-arith -Wbad-function-cast
  -Wcast-qual -Wcast-align -Wwrite-strings -Wstrict-prototypes
  -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations
  -Wmissing-noreturn -Wmissing-format-attribute -Wredundant-decls
  -Wno-unreachable-code -Winline -pedantic -std=c99

end goal:
  -Wreachable-code -Wconversion

the former is broken in my very gcc 3.4.4 snapshot,
and the latter is broken for all <stdbool.h> types
due to integer promotion rules

thanks to waldi (the mirbsd.de sponsor) for helping with C a bit
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.16 2005/03/12 17:20:35 tg Exp $ */
d147 1
a147 1
char		*copy_string(char *);
d152 1
a152 1
char		*strconcat(char *, char *);
d174 2
a175 2
void		write_file(char *, char *);
void		copy_file(char *, char *, char *);
d186 1
a186 1
plist_t		*find_plist(package_t *, pl_ent_t, char *);
d192 3
a194 3
void		add_plist(package_t *, pl_ent_t, char *);
void		add_plist_top(package_t *, pl_ent_t, char *);
void		add_plist_at(package_t *, plist_t *, pl_ent_t, char *);
@


1.16
log
@* Boolean/TRUE/FALSE -> bool/true/false
* SUCCESS/FAIL -> 0/-1
* no /usr/tmp (it violates hier(7))
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.15 2005/03/12 17:12:54 tg Exp $ */
d135 2
a136 1
int		vsystem(const char *, ...);
d141 1
a141 1
off_t		min_free(char *);
d165 1
a165 1
bool         isfile(const char *);
d176 2
a177 2
void		move_file(char *, char *, char *);
void		copy_hierarchy(char *, char *, bool);
d181 1
a181 1
    const char *);
d187 1
a187 1
char		*find_plist_option(package_t *, char *);
d201 1
a201 1
int		process_dirrm(plist_t *, bool, int *, RCDB *, char *);
a206 1

d208 4
a211 2
void 		pwarnx(const char *, ...);
void 		pwarn(const char *, ...);
@


1.15
log
@convert int PlistOnly from YES/NO to bool, true/false <stdbool.h>
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.14 2005/03/06 21:53:42 bsiegert Exp $ */
a42 12
/* Macros */
#define SUCCESS	(0)
#define	FAIL	(-1)

#ifndef TRUE
#define TRUE	(1)
#endif

#ifndef FALSE
#define FALSE	(0)
#endif

d44 1
a44 1
#define REMOVE_CMD	"rm"
d47 1
a47 1
#define RMDIR_CMD	"rmdir"
a107 1
typedef unsigned int Boolean;
d114 1
a114 1
	Boolean		marked;		/* whether entry has been marked */
d147 1
a147 1
Boolean		suffix(char *, char *);
d159 7
a165 7
Boolean		fexists(const char *);
Boolean		isdir(const char *);
Boolean		islinktodir(const char *);
Boolean		isemptydir(const char *fname);
Boolean		isemptyfile(const char *fname);
Boolean         isfile(const char *);
Boolean		isURL(const char *);
d172 1
a172 1
Boolean		make_preserve_name(char *, size_t, char *, char *);
d176 2
a177 2
void		copy_hierarchy(char *, char *, Boolean);
int		delete_hierarchy(char *, Boolean, Boolean);
d187 1
a187 1
void		plist_delete(package_t *, Boolean, pl_ent_t, char *);
d195 1
a195 1
void		delete_plist(package_t *pkg, Boolean all, pl_ent_t type, char *name);
d199 3
a201 3
int		delete_package(Boolean, Boolean, Boolean, Boolean, package_t *);
int		process_dirrm(plist_t *, Boolean, int *, RCDB *, char *);
void		delete_extra(const char *, Boolean);
d212 3
a214 3
extern Boolean	Verbose;
extern Boolean	Fake;
extern Boolean  Force;
@


1.14
log
@Add dylib support for Mac OS X.

Mac OS users, please test this. To test:

# Do a "env SHELL=/bin/mksh mmake setup" in /usr/mirports (assuming you have
  already installed MirPorts)
# Install a library without a PFRAG.dylib file and a dependent package
# Test if the library is there and the dependent package works
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.13 2005/03/06 16:43:11 bsiegert Exp $ */
d37 1
a53 3

#define YES		2
#define NO		1
@


1.13
log
@Replace the @@dylib token in PLISTs with @@option dylib. Also document this
in pkg_create(1).

agreed tg@@
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.12 2005/03/02 22:17:48 tg Exp $ */
d209 1
@


1.12
log
@experimental lib*.dylib support using PFRAG.dylib,
including an untested perl hack (I don't know perl
and still got to do this, aww) to create them

I wonder why I have to do this - on a PC notebook!
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.11 2005/02/23 18:04:18 tg Exp $ */
d118 1
a118 2
	PLIST_LDCACHE,
	PLIST_DYLIB
@


1.11
log
@first step at supporting MirPorts on Mac OSX (tee emm, or err, or something)
* no shared libraries
* no "provided setup script" right now
* two things to fix in mirmake

while here,
* ekkoBSD is history
* lowercase HTML tags
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.10 2005/02/06 22:11:31 bsiegert Exp $ */
d118 2
a119 1
	PLIST_LDCACHE
@


1.10
log
@Refactoring: delete_files() -> delete_extra(), as it is only used for
@@extra/@@sample entries. It also gains a second parameter to specify if you
mean a file or a directory. While here, reindent and document.
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.9 2004/12/21 19:06:06 bsiegert Exp $ */
a62 2
/* Where we put logging information by default, else ${PKG_DBDIR} if set */
#define DEF_LOG_DIR		"/var/db/pkg"
@


1.9
log
@Refactor dir/ handling.

This means that directory entries in PLISTs are not replaced by @@exec mkdir
and @@dirrm at pkg_create time, but instead they are kept in the final package.
No real functional changes, but packages created using these new tools are not
compatible with older versions.

This was needed to implement @@sample dir/ (which should come next).

ok tg@@
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.8 2004/12/16 20:44:20 tg Exp $ */
d217 1
@


1.8
log
@add a new plist item:
	@@ldcache 0
	@@ldcache 1

only during @@ldcache 1 sessions, @@lib automatically
adds the exec/unexec ldconfig calls.

not tested, but since @@lib is not used anywhere, I
commit it anyway, so Benny has got less work

the <bsd.port.mk> logic is correct, and a simple port
still installs with the new tools.
@
text
@d1 1
a1 1
/**	$MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.7 2004/12/12 14:45:29 bsiegert Exp $ */
d40 2
d216 1
@


1.7
log
@Add support for @@man.

pkg_create just changes them to a normal file entry.
@
text
@d1 2
a2 2
/* $MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.6 2004/11/12 21:24:05 bsiegert Exp $ */
/* $OpenBSD: lib.h,v 1.14 2003/08/21 20:24:57 espie Exp $ */
a20 1
 *
d117 2
a118 1
	PLIST_ENDFAKE
@


1.6
log
@Change find_plist() to accept a string to search for.
@
text
@d1 1
a1 1
/* $MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.5 2004/11/12 13:06:40 bsiegert Exp $ */
d114 1
@


1.5
log
@Remove all traces of basename_of() and dirname_of() and replace by
basename(3) and dirname(3) from libc (which seemingly did not exist when
the pkgtools were written).

As for testing: I have tested pkg_create, add, and remove with the changes.
pkg_create gave me a package that was two bytes larger, but when uncompressed
and unpacked showed no difference. So I assume it works :).
@
text
@d1 1
a1 1
/* $MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.4 2004/11/11 23:02:03 bsiegert Exp $ */
d199 2
a200 2
plist_t		*find_plist(package_t *, pl_ent_t);
char		*find_plist_option(package_t *, char *name);
@


1.4
log
@Add toabs() function to convert a filename to an absolute one. To be used
in several places (only one for now).
@
text
@d1 1
a1 1
/* $MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.3 2004/10/12 21:35:07 bsiegert Exp $ */
d34 1
a163 2
char		*basename_of(char *);
char		*dirname_of(const char *);
@


1.3
log
@Implement @@lib, @@shell, and @@endfake.

@@endfake is thrown away at pkg_create(1) time.
@@lib and @@shell are treated like normal files.
@
text
@d1 1
a1 1
/* $MirBSD: ports/infrastructure/stools/lib/lib.h,v 1.2 2004/10/10 16:46:21 tg Exp $ */
d165 1
@


1.2
log
@* sync pkg tools with what's currently in src/
  idea by bsiegert@@
* -Wall -Werror only ifndef PORTABLE
  (so it's still in for native development)
* let setup.sh define PORTABLE
@
text
@d1 1
a1 1
/* $MirBSD: src/usr.sbin/pkg_install/lib/lib.h,v 1.6 2004/09/20 16:39:33 tg Exp $ */
d113 4
a116 1
	PLIST_SAMPLE
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $MirBSD: src/usr.sbin/pkg_install/lib/lib.h,v 1.5 2004/08/05 13:43:38 bsiegert Exp $ */
d112 2
a113 1
	PLIST_INFO
@


1.1.3.1
log
@src/usr.sbin/pkg_install comes into ports/infrastructure
@
text
@@
