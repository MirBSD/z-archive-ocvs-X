head	1.4;
access;
symbols
	cvs-200408271520:1.1.3.1 tg:1.1.3;
locks; strict;
comment	@ * @;


1.4
date	2005.03.12.19.23.55;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.12.17.20.34;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.10.16.46.20;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.27.15.27.01;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.08.27.15.27.01;	author tg;	state Stab;
branches;
next	;


desc
@@


1.4
log
@now all of stools build with
 -Wall -Wextra -Wunused -Wdeclaration-after-statement -Wundef
 --Wendif-labels -Wshadow -Wpointer-arith -Wbad-function-cast
 --Wcast-qual -Wcast-align -Wwrite-strings -Wstrict-prototypes
 --Wold-style-definition -Wmissing-prototypes -Wmissing-declarations
 --Wmissing-noreturn -Wmissing-format-attribute -Wredundant-decls
 --Wno-unreachable-code -Winline -pedantic -std=c99

didn't look at octools yet, since I don't have XCode(R)
@
text
@/**	$MirBSD: ports/infrastructure/stools/info/main.c,v 1.3 2005/03/12 17:20:34 tg Exp $ */
/*	$OpenBSD: main.c,v 1.15 2003/07/04 17:31:19 avsm Exp $	*/

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * This is the add module.
 */

#include <err.h>
#include "lib.h"
#include "info.h"

__RCSID("$MirBSD: ports/infrastructure/stools/info/main.c,v 1.3 2005/03/12 17:20:34 tg Exp $");

static char Options[] = "acDde:fIikLl:mpqRrsvh";

int	Flags		= 0;
bool	AllInstalled	= false;
bool	Quiet		= false;
const char *InfoPrefix	= "";
char PlayPen[FILENAME_MAX];
size_t PlayPenSize	= sizeof(PlayPen);
char *CheckPkg		= NULL;

static __dead void usage(void);

int
main(int argc, char **argv)
{
    int ch;
    char **pkgs, **start;

    pkgs = start = argv;
    while ((ch = getopt(argc, argv, Options)) != -1)
	switch(ch) {
	case 'a':
	    AllInstalled = true;
	    break;

	case 'c':
	    Flags |= SHOW_COMMENT;
	    break;

	case 'D':
	    Flags |= SHOW_DISPLAY;
	    break;

	case 'd':
	    Flags |= SHOW_DESC;
	    break;

	case 'e':
	    CheckPkg = optarg;
	    break;

	case 'f':
	    Flags |= SHOW_PLIST;
	    break;

	case 'I':
	    Flags |= SHOW_INDEX;
	    break;

	case 'i':
	    Flags |= SHOW_INSTALL;
	    break;

	case 'k':
	    Flags |= SHOW_DEINSTALL;
	    break;

	case 'L':
	    Flags |= SHOW_FILES;
	    break;

	case 'l':
	    InfoPrefix = optarg;
	    break;

	case 'm':
	    Flags |= SHOW_MTREE;
	    break;

	case 'p':
	    Flags |= SHOW_PREFIX;
	    break;

	case 'q':
	    Quiet = true;
	    break;

	case 'R':
	    Flags |= SHOW_REQBY;
	    break;

	case 'r':
	    Flags |= SHOW_REQUIRE;
	    break;

	case 's':
	    Flags |= SHOW_SAMPLE;
	    break;

	case 'v':
	    Verbose = true;
	    /* Reasonable definition of 'everything' */
	    Flags = SHOW_COMMENT | SHOW_DESC | SHOW_PLIST | SHOW_INSTALL |
		SHOW_DEINSTALL | SHOW_REQUIRE | SHOW_DISPLAY | SHOW_MTREE |
		SHOW_REQBY;
	    break;

	case 'h':
	case '?':
	default:
	    usage();
	    /* NOTREACHED */
	}

    argc -= optind;
    argv += optind;

    if (argc == 0 && !Flags) {
	/* No argument or flags specified - assume -Ia */
	Flags = SHOW_INDEX;
	AllInstalled = true;
    }

    /* Set some reasonable defaults */
    if (!Flags)
	Flags = SHOW_COMMENT | SHOW_DESC | SHOW_REQBY;

    /* Get all the remaining package names, if any */
    while (*argv)
	*pkgs++ = *argv++;

    /* If no packages, yelp */
    if (pkgs == start && !AllInstalled && !CheckPkg)
	pwarnx("missing package name(s)"), usage();
    *pkgs = NULL;
    return pkg_perform(start);
}

static __dead void
usage(void)
{
    fprintf(stderr, "usage: %s\nusage: %s\n",
	"pkg_info [-cDdfIikLmpqRrvh] [-e package] [-l prefix] pkg-name ...",
	"pkg_info -a [flags]");
    exit(1);
}
@


1.3
log
@* Boolean/TRUE/FALSE -> bool/true/false
* SUCCESS/FAIL -> 0/-1
* no /usr/tmp (it violates hier(7))
@
text
@d1 1
a1 1
/**	$MirBSD$ */
d27 1
a27 1
__RCSID("$MirBSD: ports/infrastructure/stools/info/main.c,v 1.2 2004/10/10 16:46:20 tg Exp $");
d34 1
a34 1
char *InfoPrefix	= "";
d39 1
a39 1
static void usage(void);
d157 2
a158 2
static void
usage()
@


1.2
log
@* sync pkg tools with what's currently in src/
  idea by bsiegert@@
* -Wall -Werror only ifndef PORTABLE
  (so it's still in for native development)
* let setup.sh define PORTABLE
@
text
@d1 1
d27 1
a27 1
__RCSID("$MirBSD: src/usr.sbin/pkg_install/info/main.c,v 1.4 2004/09/20 16:39:32 tg Exp $");
d32 2
a33 2
Boolean AllInstalled	= FALSE;
Boolean Quiet		= FALSE;
d51 1
a51 1
	    AllInstalled = TRUE;
d103 1
a103 1
	    Quiet = TRUE;
d119 1
a119 1
	    Verbose = TRUE;
d139 1
a139 1
	AllInstalled = TRUE;
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
__RCSID("$MirBSD: src/usr.sbin/pkg_install/info/main.c,v 1.3 2004/07/21 10:24:35 tg Exp $");
d28 1
a28 1
static char Options[] = "acDde:fIikLl:mpqRrvh";
d111 4
@


1.1.3.1
log
@src/usr.sbin/pkg_install comes into ports/infrastructure
@
text
@@
