head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200406091925:1.1.1.3
	cvs-200406012030:1.1.1.3
	cvs-200405281530:1.1.1.3
	cvs-200403091710:1.1.1.3
	cvs-200402211630:1.1.1.3
	cvs-200401261625:1.1.1.2
	cvs-200401181215:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307030815:1.1.1.1
	cvs-200306301400:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.51.19;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.51.19;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.10.31.19.19.58;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.02.21.17.04.41;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl

# $OpenBSD: find-all-conflicts,v 1.5 2002/03/19 22:20:50 espie Exp $
# Copyright (c) 2000
# Marc Espie.  All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Neither the name of OpenBSD nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY ITS AUTHOR AND THE OpenBSD project ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# check all packages in the current directory, and report conflicts which
# are not apparent in @@pkgcfl.

use strict;

use File::Spec;

sub analyze {
	my $fh = shift;
	my $all = shift;
	my $dir = shift;
	my $conflicts = shift;
	my ($name, $cwd);
	my $default_conflict=1;
	my $conflict_list = [];
	my $basedir;
	local $_;
	while (<$fh>) {
		chomp;
		if (m/^\@@(?:newdepend|libdepend|comment|exec|unexec|mtree|src|pkgdep|mode|group|owner|display)/) {
			next; 
		} elsif (m/^\@@ignore/) {
			$_ = <$fh>;
			next;
		} elsif (m/^\@@name\s+/) {
			$name = $';
		} elsif (m/^\@@cwd\s+/) {
			my $newpath = $';
			if (File::Spec->file_name_is_absolute($newpath)) {
				$cwd = $newpath;
			} else {
				$cwd = File::Spec->catfile($cwd, $newpath);
			}
			$basedir = $cwd unless defined $basedir;
		} elsif (m/^\@@pkgcfl\s+(.*?)\s*$/) {
			my $conflict=$1;
			$conflict =~ s/\*/\.\*/g;
			$conflict =~ s/\?/\./g;
			$conflict =~ s/\+/\\\+/g;
			push @@$conflict_list, "$conflict";
		} elsif (m/^\@@option\s+no-default-conflict/) {
			$default_conflict=0;
		} elsif (m/^\@@dirrm\s+/) {
			my $d = $';
			if (!File::Spec->file_name_is_absolute($d)) {
				$d = File::Spec->catfile($basedir, $d);
			}
			$d = File::Spec->canonpath($d);
			unless (defined $dir->{$d}) {
				$dir->{$d} = [];
			}
			push @@{$dir->{$d}}, $name;
		} elsif (m/^\@@/) {
			print $_, "\n";
		} else {
			my $file= File::Spec->catfile($cwd, $_);
			$file = File::Spec->canonpath($file);
			unless (defined $all->{$file}) {
				$all->{$file} = [];
			}
			push @@{$all->{$file}}, $name;
		}
	}
	if ($default_conflict) {
		if ($name =~ m/^(.*)\-\d/) {
			push @@$conflict_list, "\Q$1\E\\-\\d.*";
		} elsif ($name =~ m/^(.*)-/) {
			push @@$conflict_list, "\Q$1\E\\-.*";
		}
	}
	$conflicts->{$name}=$conflict_list;
}

sub show_problems
{
    my $h = shift;
    my $conflicts = shift;
    while (my ($key, $l) = each %$h) {
	    if (@@$l > 1) {
		my $notfound = 0;
		for my $pkg (@@$l) {
		    FOUND: for my $pkg2 (@@$l) {
			    next FOUND if $pkg2 eq $pkg;
			    for my $check (@@{$conflicts->{$pkg}}) {
				    next FOUND if ($pkg2 =~ m/^$check$/);
			    }
			    $notfound = 1;
		    }
		}
		if ($notfound) {
		    print "$key: ", join(',', @@$l), "\n";
		}
	    }
    }
}

my %hash=();
my %dirhash=();
my %conflicts=();

print "Scanning packages\n";
print "-----------------\n";
for my $pkgname (<*.tgz>) {
	print STDERR "$pkgname\n";
	system "tar zxqf $pkgname +CONTENTS";
	if (open(my $fh, '<+CONTENTS')) {
	    analyze($fh, \%hash, \%dirhash, \%conflicts);
	    unlink("+CONTENTS");
	} else {
	    warn "Problem with $pkgname";
	}
}

print "File problems:\n";
print "-------------\n";
show_problems(\%hash, \%conflicts);
print "\@@dirrm problems:\n";
print  "---------------\n";
show_problems(\%dirhash, \%conflicts);
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree into MirPorts Framework
@
text
@d3 1
a3 1
# $OpenBSD: find-all-conflicts,v 1.6 2003/10/23 17:49:02 espie Exp $
a32 4
use OpenBSD::PackageLocator;
use OpenBSD::PackageInfo;
use OpenBSD::PackingList;
use OpenBSD::PkgCfl;
d34 61
a94 10
sub analyze 
{
	my ($plist, $all) = @@_;
	my $pkgname = $plist->pkgname();

	for my $item (@@{$plist->{items}}) {
		next unless $item->IsFile();
		my $file= File::Spec->canonpath($item->fullname());
		unless (defined $all->{$file}) {
			$all->{$file} = [];
a95 1
		push @@{$all->{$file}}, $pkgname;
d97 1
d102 2
a103 2
    my ($h, $conflicts) = @@_;

a106 2
		# create a list of unconflicting packages.
		my @@l2 = ();
d108 7
a114 3
		    next if $conflicts->{$pkg}->conflicts_with(
			    grep { $_ ne $pkg } (@@$l));
		    push(@@l2, $pkg);
d116 2
a117 2
		if (@@l2 != 0) {
		    print "$key: ", join(',', @@l2), "\n";
d123 1
a123 1
my $filehash={};
d125 1
a125 1
my $conflicts={};
d129 1
a129 4
if (@@ARGV==0) {
	@@ARGV=(<*.tgz>);
}
for my $pkgname (@@ARGV) {
d131 7
a137 8
	my $true_package = OpenBSD::PackageLocator->find($pkgname);
	next unless $true_package;
	my $dir = $true_package->info();
	$true_package->close();
	my $plist = OpenBSD::PackingList->fromfile($dir.CONTENTS);
	$conflicts->{$plist->pkgname()} = 
	    OpenBSD::PkgCfl->make_conflict_list($plist);
	analyze($plist, $filehash);
d142 4
a145 1
show_problems($filehash, $conflicts);
@


1.1.1.3
log
@Import OpenBSD ports again. This will give us lots of new toys :).
@
text
@d3 1
a3 1
# $OpenBSD: find-all-conflicts,v 1.7 2004/02/12 13:55:45 espie Exp $
a32 1
use File::Path;
a89 1
	rmtree($dir);
@


