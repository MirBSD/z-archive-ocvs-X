head	1.2;
access;
symbols
	cvs-200312021610:1.1.1.3
	cvs-200311151930:1.1.1.3
	cvs-200310311830:1.1.1.3
	cvs-200310021000:1.1.1.3
	cvs-200309281111:1.1.1.3
	cvs-200309171515:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3449:1.1.1.3
	cvs-200307191610:1.1.1.3
	ctm-3416:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	ctm-3258:1.1.1.2
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.12.03.20.24.17;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.19.50.22;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.50.22;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.06.14.24.38;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.07.09.15.52.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke emacs20, as per espie@@openbsd, and wbx request
@
text
@--- src/unexelf.c.orig	Mon May 15 02:14:02 2000
+++ src/unexelf.c	Sun Mar 17 20:03:34 2002
@@@@ -466,7 +466,7 @@@@ typedef struct {
 #define hdrNil ((pHDRR)0)
 #endif
 
-#ifdef __NetBSD__
+#if __NetBSD__
 /*
  * NetBSD does not have normal-looking user-land ELF support.
  */
@@@@ -500,6 +500,11 @@@@ typedef struct {
 
 #ifdef __OpenBSD__
 # include <sys/exec_elf.h>
+# ifdef __alpha__
+#  include <sys/exec_ecoff.h>
+#  define HDRR           struct ecoff_symhdr
+#  define pHDRR          HDRR *
+# endif
 #endif
 
 #if __GNU_LIBRARY__ - 0 >= 6
@@@@ -512,10 +517,12 @@@@ typedef struct {
 # else
 #  define ElfBitsW(bits, type) Elf/**/bits/**/_/**/type
 # endif
-# ifdef _LP64
-#  define ELFSIZE 64
-# else
-#  define ELFSIZE 32
+# ifndef __OpenBSD__
+#  ifdef _LP64
+#   define ELFSIZE 64
+#  else
+#   define ELFSIZE 32
+#  endif
 # endif
   /* This macro expands `bits' before invoking ElfBitsW.  */
 # define ElfExpandBitsW(bits, type) ElfBitsW (bits, type)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD ports CVS as of roughly 12:00-14:00 UTC today,
which should be equivalent to CTM delta 3258.
@
text
@a0 2
$NetBSD: patch-az,v 1.1.1.1 2003/04/11 00:31:45 uebayasi Exp $

d2 7
a8 2
+++ src/unexelf.c	Thu Apr 17 01:14:07 2003
@@@@ -470,7 +470,7 @@@@ typedef struct {
d12 1
a12 6
-# ifdef __alpha__
+# if defined(__alpha__) || defined(__sparc_v9__)
 #  define ELFSIZE	64
 # else
 #  define ELFSIZE	32
@@@@ -479,6 +479,7 @@@@ typedef struct {
d14 8
a21 13
 # ifndef PT_LOAD
 #  define PT_LOAD	Elf_pt_load
+#  define SHT_PROGBITS	Elf_sht_progbits
 #  define SHT_SYMTAB	Elf_sht_symtab
 #  define SHT_DYNSYM	Elf_sht_dynsym
 #  define SHT_NULL	Elf_sht_null
@@@@ -495,7 +496,7 @@@@ typedef struct {
 #  include <sys/exec_ecoff.h>
 #  define HDRR		struct ecoff_symhdr
 #  define pHDRR		HDRR *
-# endif
+# endif /* __alpha__ */
 #endif /* __NetBSD__ */
d23 2
a24 2
 #ifdef __OpenBSD__
@@@@ -512,7 +513,7 @@@@ typedef struct {
d29 12
a40 90
+# if defined (_LP64) || defined(__alpha__)
 #  define ELFSIZE 64
 # else
 #  define ELFSIZE 32
@@@@ -613,12 +614,34 @@@@ find_section (name, section_names, file_
       if (noerror)
 	return -1;
       else
-	fatal ("Can't find %s in %s.\n", name, file_name, 0);
+	fatal ("Can't find %s in %s.\n", name, file_name);
     }
 
   return idx;
 }
 
+#if defined(__alpha__)
+/* We are using  ECOFF symbols embedded in ELF. */
+
+void
+relocate_ecoff_symhdr(symhdr, diff)
+    HDRR *symhdr;
+    ElfW(Word) diff;
+{
+  symhdr->cbLineOffset += diff;
+  symhdr->cbDnOffset   += diff;
+  symhdr->cbPdOffset   += diff;
+  symhdr->cbSymOffset  += diff;
+  symhdr->cbOptOffset  += diff;
+  symhdr->cbAuxOffset  += diff;
+  symhdr->cbSsOffset   += diff;
+  symhdr->cbSsExtOffset += diff;
+  symhdr->cbFdOffset   += diff;
+  symhdr->cbRfdOffset  += diff;
+  symhdr->cbExtOffset  += diff;
+}
+#endif /* __alpha__ or __sony_news and systype_sysv */
+
 /* ****************************************************************
  * unexec
  *
@@@@ -1005,22 +1028,11 @@@@ unexec (new_name, old_name, data_start, 
 	  == 0)
 	{
 	  pHDRR symhdr = (pHDRR) (NEW_SECTION_H (nn).sh_offset + new_base);
-
-	  symhdr->cbLineOffset += new_data2_size;
-	  symhdr->cbDnOffset += new_data2_size;
-	  symhdr->cbPdOffset += new_data2_size;
-	  symhdr->cbSymOffset += new_data2_size;
-	  symhdr->cbOptOffset += new_data2_size;
-	  symhdr->cbAuxOffset += new_data2_size;
-	  symhdr->cbSsOffset += new_data2_size;
-	  symhdr->cbSsExtOffset += new_data2_size;
-	  symhdr->cbFdOffset += new_data2_size;
-	  symhdr->cbRfdOffset += new_data2_size;
-	  symhdr->cbExtOffset += new_data2_size;
+	  relocate_ecoff_symhdr(symhdr, new_data2_size);
 	}
 #endif /* __alpha__ */
 
-#if defined (__sony_news) && defined (_SYSTYPE_SYSV)
+#ifdef HAVE_MIPS_SBSS
       if (NEW_SECTION_H (nn).sh_type == SHT_MIPS_DEBUG
 	  && old_mdebug_index != -1) 
         {
@@@@ -1030,20 +1042,12 @@@@ unexec (new_name, old_name, data_start, 
 
 	  if (diff)
 	    {
-	      phdr->cbLineOffset += diff;
-	      phdr->cbDnOffset   += diff;
-	      phdr->cbPdOffset   += diff;
-	      phdr->cbSymOffset  += diff;
-	      phdr->cbOptOffset  += diff;
-	      phdr->cbAuxOffset  += diff;
-	      phdr->cbSsOffset   += diff;
-	      phdr->cbSsExtOffset += diff;
-	      phdr->cbFdOffset   += diff;
-	      phdr->cbRfdOffset  += diff;
-	      phdr->cbExtOffset  += diff;
+#ifdef DEBUG
+	      printf("Dont know how to relocate mdebug syms by %0x\n", diff);
+#endif
 	    }
 	}
-#endif /* __sony_news && _SYSTYPE_SYSV */
+#endif /* HAVE_MIPS_SBSS */
 
 #if __sgi
       /* Adjust  the HDRR offsets in .mdebug and copy the 
@


1.1.1.3
log
@Bring the entire base system and ports tree in sync with OpenBSD
@
text
@d1 14
a14 4
$OpenBSD: patch-src_unexelf.c,v 1.4 2003/07/06 15:27:52 naddy Exp $
--- src/unexelf.c.orig	Sun Jul  6 14:21:21 2003
+++ src/unexelf.c	Sun Jul  6 14:24:34 2003
@@@@ -500,7 +500,12 @@@@ typedef struct {
d16 11
a26 7
 #ifdef __OpenBSD__
 # include <sys/exec_elf.h>
-#endif
+# ifdef __alpha__
+#  include <sys/exec_ecoff.h>
+#  define HDRR		struct ecoff_symhdr
+#  define pHDRR		HDRR *
d28 1
a28 1
+#endif /* __OpenBSD__ */
d30 2
a31 3
 #if __GNU_LIBRARY__ - 0 >= 6
 # include <link.h>	/* get ElfW etc */
@@@@ -512,10 +517,12 @@@@ typedef struct {
d36 5
a40 13
-#  define ELFSIZE 64
-# else
-#  define ELFSIZE 32
+# ifndef __OpenBSD__
+#  ifdef _LP64
+#   define ELFSIZE 64
+#  else
+#   define ELFSIZE 32
+#  endif
 # endif
   /* This macro expands `bits' before invoking ElfBitsW.  */
 # define ElfExpandBitsW(bits, type) ElfBitsW (bits, type)
@@@@ -613,7 +620,7 @@@@ find_section (name, section_names, file_
d49 77
@


