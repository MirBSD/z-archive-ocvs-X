head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.08.17.13.11.14;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.17.13.11.14;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-src_LexRuby_cxx,v 1.1.1.1 2003/08/14 18:24:31 sturm Exp $
--- src/LexRuby.cxx.orig	2003-08-13 17:38:22.000000000 +1000
+++ src/LexRuby.cxx	2003-08-13 17:43:34.000000000 +1000
@@@@ -19,7 +19,7 @@@@
 #include "Scintilla.h"
 #include "SciLexer.h"
 
-static void ClassifyWordRb(unsigned int start, unsigned int end, WordList &keywords, Accessor &styler, char *prevWord) {
+static void ClassifyWordRb(unsigned int start, unsigned int end, WordList &keywords, Accessor &styler, char *prevWord, size_t prevWord_len) {
 	char s[100];
 	bool wordIsNumber = isdigit(styler[start]) != 0;
 	for (unsigned int i = 0; i < end - start + 1 && i < 30; i++) {
@@@@ -45,7 +45,7 @@@@ static void ClassifyWordRb(unsigned int 
 		}
 	}
 	styler.ColourTo(end, chAttr);
-	strcpy(prevWord, s);
+	strlcpy(prevWord, s, prevWord_len);
 }
 
 static bool IsRbComment(Accessor &styler, int pos, int len) {
@@@@ -224,7 +224,7 @@@@ static void ColouriseRbDoc(unsigned int 
 			}
 			} else if (state == SCE_P_WORD) {
 			if (!iswordchar(ch)) {
-				ClassifyWordRb(styler.GetStartSegment(), i - 1, keywords, styler, prevWord);
+				ClassifyWordRb(styler.GetStartSegment(), i - 1, keywords, styler, prevWord, sizeof(prevWord));
 				state = SCE_P_DEFAULT;
 				if (ch == '#') {
 					state = chNext == '#' ? SCE_P_COMMENTBLOCK : SCE_P_COMMENTLINE;
@@@@ -294,7 +294,7 @@@@ static void ColouriseRbDoc(unsigned int 
 		chPrev = ch;
 	}
 	if (state == SCE_P_WORD) {
-		ClassifyWordRb(styler.GetStartSegment(), lengthDoc-1, keywords, styler, prevWord);
+		ClassifyWordRb(styler.GetStartSegment(), lengthDoc-1, keywords, styler, prevWord, sizeof(prevWord));
 	} else {
 		styler.ColourTo(lengthDoc-1, state);
 	}
@


1.1.1.1
log
@Import OpenBSD CVS repository (checked out) of roughly 12:00 UTC today,
retrieved from the canadian anoncvs server (due to CTM unavailability)
@
text
@@
