head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.09.11.18.29.25;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.06.29.20.05.24;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@joe-2.8 dies, without prejudice
joe-3.1 with my patches has proven more stable with not much more bloat,
and the utf-8 support (in uxterm) rocks. joe-2.8 also didn't work on the
timet64 arches, whereas it 'should' be possible to build joe-3.1 for the
other OSses (DOS maybe, Interix definitively).
@
text
@$MirBSD: ports/editors/joe/modern/patches/patch-i18n_c,v 1.1 2004/06/29 20:05:24 tg Stab $
--- i18n.c.orig	2004-06-29 19:54:52.000000000 +0000
+++ i18n.c	2004-06-29 19:55:43.000000000 +0000
@@@@ -11,6 +11,11 @@@@
  * was very easy to do with just the text editor.
  */
 
+#include "config.h"
+#ifdef HAVE_STDLIB_H
+#include <stdlib.h>
+#endif
+
 #include "charmap.h"
 #include "utf8.h"
 #include "i18n.h"
@@@@ -149,8 +154,6 @@@@ static int bisearch(int ucs, const struc
 
 int joe_wcwidth(int wide,int ucs)
 {
-	int x;
-
 	/* sorted list of non-overlapping intervals of non-spacing characters */
 	/* generated by "uniset +cat=Me +cat=Mn +cat=Cf -00AD +1160-11FF +200B c" */
 	static const struct interval combining[] = {
@@@@ -828,7 +831,7 @@@@ int joe_iswalpha_(struct charmap *foo,in
 
 int joe_iswalnum_(struct charmap *foo,int c)
 {
-	if (c>=0x30 && c<=0x39 || c==0x5F)
+	if ((c>=0x30 && c<=0x39) || c==0x5F)
 		return 1;
 	else
 		return joe_iswalpha(foo,c);
@


1.1
log
@* fix -Werror -Wall build
* add support for utf-8 display and multiple (even non-utf8) character
  sets on yours truly non-8bit-aware operating system
* bump patchlevel

I'm going to feed these back, yes...
@
text
@d1 1
a1 1
$MirBSD$
@

