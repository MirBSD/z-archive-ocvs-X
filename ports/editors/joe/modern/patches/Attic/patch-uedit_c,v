head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.09.11.18.29.32;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.06.29.20.05.25;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@joe-2.8 dies, without prejudice
joe-3.1 with my patches has proven more stable with not much more bloat,
and the utf-8 support (in uxterm) rocks. joe-2.8 also didn't work on the
timet64 arches, whereas it 'should' be possible to build joe-3.1 for the
other OSses (DOS maybe, Interix definitively).
@
text
@$MirBSD: ports/editors/joe/modern/patches/patch-uedit_c,v 1.1 2004/06/29 20:05:25 tg Stab $
--- uedit.c.orig	2004-05-28 16:39:21.000000000 +0000
+++ uedit.c	2004-06-29 19:49:45.000000000 +0000
@@@@ -115,10 +115,9 @@@@ int u_goto_left(BW *bw)
 		} else if (prgetc(bw->cursor) != NO_MORE_DATA) {
 			bw->cursor->xcol = piscol(bw->cursor);
 			return 0;
-		} else {
-			return -1;
 		}
 	}
+	return -1;
 }
 
 /*
@@@@ -694,13 +693,11 @@@@ int ubacks(BW *bw, int k)
 {
 	/* Don't backspace when at beginning of line in prompt windows */
 	if (bw->parent->watom->what == TYPETW || !pisbol(bw->cursor)) {
-		P *p;
 		int c;
 		int indent;
 		int col;
 		int indwid;
 		int wid;
-		int pure = 1;
 
 		if (pisbof(bw->cursor))
 			return -1;
@@@@ -727,7 +724,6 @@@@ int ubacks(BW *bw, int k)
 		/* Ignore purify for backspace */
 		if (col == indent && (col%indwid)==0 && col!=0 && bw->o.smartbacks && bw->o.autoindent) {
 			P *p;
-			int x;
 
 			/* Delete all indentation */
 			p = pdup(bw->cursor);
@@@@ -912,11 +908,12 @@@@ int utypebw(BW *bw, int k)
 		int col = bw->cursor->xcol;		/* Current cursor column */
 		col = col + bw->o.tab - (col%bw->o.tab);/* Move to next tab stop */
 		pcol(bw->cursor,col);			/* Try to position cursor there */
-		if (!bw->o.picture && piseol(bw->cursor) && piscol(bw->cursor)<col)	/* We moved past end of line, insert a tab (unless in picture mode) */
+		if (!bw->o.picture && piseol(bw->cursor) && piscol(bw->cursor)<col) {	/* We moved past end of line, insert a tab (unless in picture mode) */
 			if (bw->o.spaces)
 				pfill(bw->cursor,col,' ');
 			else
 				pfill(bw->cursor,col,'\t');
+		}
 		bw->cursor->xcol = col;			/* Put cursor there even if we can't really go there */
 	} else if (k == '\t' && bw->o.smartbacks && bw->o.autoindent && pisindent(bw->cursor)>=piscol(bw->cursor)) {
 		P *p = pdup(bw->cursor);
@@@@ -1014,9 +1011,7 @@@@ int utypebw(BW *bw, int k)
 		if (simple && bw->parent->t->t->sary[bw->y + bw->cursor->line - bw->top->line])
 			simple = 0;
 		if (simple && k != '\t' && k != '\n' && !curmacro) {
-			int a;
 			int atr = 0;
-			unsigned char c = k;
 			SCRN *t = bw->parent->t->t;
 			int y = bw->y + bw->cursor->line - bw->top->line;
 			int *screen = t->scrn + y * t->co;
@@@@ -1442,7 +1437,7 @@@@ static int domsg(BASE *b, unsigned char 
 {
 	if (notify)
 		*notify = 1;
-	strcpy((char *)msgbuf, (char *)s);
+	strlcpy((char *)msgbuf, (char *)s, JOE_MSGBUFSIZE);
 	vsrm(s);
 	msgnw(b->parent, msgbuf);
 	return 0;
@


1.1
log
@* fix -Werror -Wall build
* add support for utf-8 display and multiple (even non-utf8) character
  sets on yours truly non-8bit-aware operating system
* bump patchlevel

I'm going to feed these back, yes...
@
text
@d1 1
a1 1
$MirBSD$
@

