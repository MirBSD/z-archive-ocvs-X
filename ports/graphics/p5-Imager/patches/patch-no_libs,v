head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.51.13;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.51.13;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@--- Makefile.PL.orig	Tue Oct 30 01:32:44 2001
+++ Makefile.PL	Thu Nov 15 23:32:02 2001
@@@@ -151,9 +151,9 @@@@ bugs.  Imager can crash or display other
 reading or writing gif images.  Some of the gif tests can even fail
 since they stress some parts of the buggy code.
 
-Do you want to remove gif support? [Y/n]
+I am deleting gif/ungif support.
 EOFF
-    my $resp = <STDIN>;
+    my $resp = "y";
     chomp($resp);
     if ($resp ne "n") {
       delete $formats{'gif'};
@@@@ -263,7 +263,7 @@@@ sub pathcheck {
 sub init {
 
   @@definc{'/usr/include'}=();
-  @@incs=(qw(/usr/include/freetype2 /usr/local/include/freetype2 /usr/include /usr/local/include /usr/include/freetype /usr/local/include/freetype), split /:/, $INCPATH );
+  @@incs=(qw(/usr/include), split /:/, $INCPATH );
   @@libs=(split(/ /, $Config{'libpth'}), split(/:/, $LIBPATH) );
   if ($^O =~ /win32/i && $Config{cc} =~ /\bcl\b/i) {
     push(@@incs, split /;/, $ENV{INCLUDE}) if exists $ENV{INCLUDE};
@@@@ -274,126 +274,6 @@@@ sub init {
     push(@@incs, '/usr/include/w32api') if -d '/usr/lib/w32api';
   }
 
-  $formats{'jpeg'}={
-		    order=>'21',
-		    def=>'HAVE_LIBJPEG',
-		    inccheck=>sub { $_[0] eq 'jpeglib.h' },
-		    libcheck=>sub { $_[0] eq "libjpeg$aext" or $_ eq "libjpeg.$lext" },
-		    libfiles=>'-ljpeg',
-		    objfiles=>'jpeg.o',
-		    docs=>q{
-			    In order to use jpeg with this module you need to have libjpeg
-			    installed on your computer}
-		   };
-
-  $formats{'tiff'}={
-		    order=>'23',
-		    def=>'HAVE_LIBTIFF',
-		    inccheck=>sub { $_[0] eq 'tiffio.h' },
-		    libcheck=>sub { $_[0] eq "libtiff$aext" or $_ eq "libtiff.$lext" },
-		    libfiles=>'-ltiff',
-		    objfiles=>'tiff.o',
-		    docs=>q{
-			    In order to use tiff with this module you need to have libtiff
-			    installed on your computer}
-		   };
-
-  $formats{'png'}={
-		   order=>'22',
-		   def=>'HAVE_LIBPNG',
-		   inccheck=>sub { $_[0] eq 'png.h' },
-		   libcheck=>sub { $_[0] eq "libpng$aext" or $_[0] eq "libpng.$lext" },
-		   libfiles=>'-lpng -lz',
-		   objfiles=>'png.o',
-		   docs=>q{
-			   Png stands for Portable Network Graphics and is intended as
-			   a replacement for gif on the web. It is patent free and
-			   is recommended by the w3c, you need libpng to use these formats}
-		  };
-
-  $formats{'gif'}={
-		   order=>'20',
-		   def=>'HAVE_LIBGIF',
-		   inccheck=>sub { $_[0] eq 'gif_lib.h' },
-		   libcheck=>sub { $_[0] eq "libgif$aext" or $_[0] eq "libgif.$lext" },
-		   libfiles=>'-lgif',
-		   objfiles=>'gif.o',
-		   docs=>q{
-			   gif is the de facto standard for webgraphics at the moment,
-			   it does have some patent problems. If you have giflib and
-			   are not in violation with the unisys patent you should use
-			   this instead of the 'ungif' option.  Note that they cannot
-			   be in use at the same time}
-		  };
-
-  $formats{'ungif'}={
-		     order=>'21',
-		     def=>'HAVE_LIBGIF',
-		     inccheck=>sub { $_[0] eq 'gif_lib.h' },
-		     libcheck=>sub { $_[0] eq "libungif$aext" or $_[0] eq "libungif.$lext" },
-		     libfiles=>'-lungif',
-		     objfiles=>'gif.o',
-		     docs=>q{
-			     gif is the de facto standard for webgraphics at the moment,
-			     it does have some patent problems. If you have libungif and
-			     want to create images free from LZW patented compression you
-			     should use this option instead of the 'gif' option}
-		    };
-
-  $formats{'T1-fonts'}={
-			order=>'30',
-			def=>'HAVE_LIBT1',
-			inccheck=>sub { $_[0] eq 't1lib.h' },
-			libcheck=>sub { $_[0] eq "libt1$aext" or $_[0] eq "libt1.$lext" },
-			libfiles=>'-lt1',
-			objfiles=>'',
-			docs=>q{
-				postscript t1 fonts are scalable fonts. They can include 
-				ligatures and kerning information and generally yield good
-				visual quality. We depend on libt1 to rasterize the fonts
-				for use in images.}
-		       };
-
-  $formats{'TT-fonts'}={
-			order=>'31',
-			def=>'HAVE_LIBTT',
-			inccheck=>sub { $_[0] eq 'freetype.h' },
-			libcheck=>sub { $_[0] eq "libttf$aext" or $_[0] eq "libttf.$lext" },
-			libfiles=>'-lttf',
-			objfiles=>'',
-			docs=>q{
-				Truetype fonts are scalable fonts. They can include 
-				kerning and hinting information and generally yield good
-				visual quality esp on low resultions. The freetype library is
-				used to rasterize for us. The only drawback is that there
-				are alot of badly designed fonts out there.}
-		       };
-  $formats{'w32'} = {
-		     order=>40,
-		     def=>'HAVE_WIN32',
-		     inccheck=>sub { lc $_[0] eq 'windows.h' },
-		     libcheck=>sub { lc $_[0] eq 'gdi32.lib' 
-				       || lc $_[0] eq 'libgdi32.a' },
-		     libfiles=>$^O eq 'cygwin' ? '-lgdi32' : '',
-		     objfiles=>'win32.o',
-		     docs => <<DOCS
-Uses the Win32 GDI for rendering text.
-
-This currently only works on under normal Win32 and cygwin.
-DOCS
-		    };
-  $formats{'freetype2'} = {
-                           order=>'29',
-                           def=>'HAVE_FT2',
-                           inccheck=>sub { lc $_[0] eq 'ft2build.h' },
-                           libcheck=>sub { $_[0] eq "libfreetype$aext" or $_[0] eq "libfreetype.$lext" },
-                           libfiles=>'-lfreetype',
-                           objfiles=>'freetyp2.o',
-                           docs=><<DOCS
-Freetype 2 supports both Truetype and Type 1 fonts, both of which are
-scalable.
-DOCS
-                          };
   # Make fix indent
   for (keys %formats) { $formats{$_}->{docs} =~ s/^\s+/  /mg; }
 }
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
