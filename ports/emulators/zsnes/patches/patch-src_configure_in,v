head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.2
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	ctm-3258:1.1.1.2
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.50.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.50.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.06.14.24.59;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@--- src/configure.in.orig	Thu May 23 10:11:18 2002
+++ src/configure.in	Wed Jul 17 05:17:37 2002
@@@@ -16,7 +16,7 @@@@ dnl See also: remarks supplied in the de
 AC_INIT(init.asm)
 AC_CONFIG_HEADER(config.h)	
 dnl -- Where is our compiler, and who are we compiling for?
-CFLAGS="-pipe -I. -Wall"
+CFLAGS="$CFLAGS -I. -Wall"
 AC_PROG_CC
 AC_PATH_PROG(NASMPATH,nasm,[AC_MSG_ERROR(nasm 0.98 is required)])
 NFLAGS="$NFLAGS -w-orphan-labels"
@@@@ -145,31 +145,6 @@@@ else
 	
 	CFLAGS="$CFLAGS -Os -ffast-math -fomit-frame-pointer -fschedule-insns2 -s"
 	ZSNESEXE="zsnes"
-fi
-
-AC_MSG_CHECKING(which processor class to optimize for)
-if test x$debug != xyes; then
-			case "$target" in
-				i486-*-*)
-					CFLAGS="$CFLAGS -march=i486"
-					AC_MSG_RESULT(486)
-					;;
-				i586-*-*)
-					CFLAGS="$CFLAGS -march=pentium"
-					AC_MSG_RESULT(Pentium)
-					;;
-				i686-*-*)
-					CFLAGS="$CFLAGS -march=pentiumpro"
-					AC_MSG_RESULT(PPro/P2)
-					;;
-				*)
-					AC_MSG_RESULT(386)
-					AC_MSG_WARN(*** This is probably not what you want use --target)
-					;;
-			esac
-
-else
-	AC_MSG_RESULT(no optimization because debug enabled)
 fi
 
 dnl Checks for header files.
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD ports CVS as of roughly 12:00-14:00 UTC today,
which should be equivalent to CTM delta 3258.
@
text
@d2 1
a2 1
+++ src/configure.in	Fri Apr 25 22:46:33 2003
d12 1
a12 12
@@@@ -29,7 +29,7 @@@@ case "$target" in
 		;;
 	*-*-*openbsd*)
 		CFLAGS="$CFLAGS -D__LINUX__ -D__FreeBSD__"
-		NFLAGS="$NFLAGS -D__LINUX__ -D__FreeBSD__ -D__OpenBSD__ -f aoutb"
+		NFLAGS="$NFLAGS -D__LINUX__ -D__FreeBSD__ -D__OpenBSD__ -DELF -f elf"
 		;;
 	*-*-*bsd*)
 		CFLAGS="$CFLAGS -D__LINUX__ -D__FreeBSD__"
@@@@ -143,33 +143,8 @@@@ else
 	dnl zsnes more easily deal with small instruction caches, and more
 	dnl effectivly use branch prediction.
d14 1
a14 2
-	CFLAGS="$CFLAGS -Os -ffast-math -fomit-frame-pointer -fschedule-insns2 -s"
+	CFLAGS="$CFLAGS -Os -ffast-math -fomit-frame-pointer -fschedule-insns2"
@

