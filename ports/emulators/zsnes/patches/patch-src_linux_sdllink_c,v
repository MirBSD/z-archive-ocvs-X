head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.50.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.50.34;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-src_linux_sdllink_c,v 1.1 2002/08/31 04:19:14 wcobb Exp $
--- src/linux/sdllink.c.orig	Sat Aug 31 01:01:05 2002
+++ src/linux/sdllink.c	Sat Aug 31 01:11:38 2002
@@@@ -350,14 +350,24 @@@@ int Main_Proc(void)
 				if(cvidmode != 16) {
 				    surface = SDL_SetVideoMode(WindowWidth, WindowHeight,
 					    BitDepth, surface->flags & ~SDL_RESIZABLE);
-					adjustMouseXScale();
-					adjustMouseYScale();
+				    if (surface == NULL) {
+				    	printf("SDL_SetVideoMode: %s\n",
+					    SDL_GetError());
+					break;
+				    }
+				    adjustMouseXScale();
+				    adjustMouseYScale();
 				    break;
 				}
 				WindowWidth = SurfaceX = event.resize.w;
 				WindowHeight = SurfaceY = event.resize.h;
 				surface = SDL_SetVideoMode(WindowWidth,
 				    WindowHeight, BitDepth, surface->flags);
+				if (surface == NULL) {
+				    	printf("SDL_SetVideoMode: %s\n",
+					    SDL_GetError());
+					break;
+				}
 				adjustMouseXScale();
 				adjustMouseYScale();
 				glViewport(0,0, WindowWidth, WindowHeight);
@@@@ -526,7 +536,7 @@@@ int InitSound(void)
 
 	if (SDL_OpenAudio(&wanted, NULL) < 0)
 	{
-		fprintf(stderr, "Sound init failed!\n");
+		fprintf(stderr, "SDL_OpenAudio: %s\n", SDL_GetError());
 		fprintf(stderr, "freq: %d, channels: %d, samples: %d\n",
 			wanted.freq, wanted.channels, wanted.samples);
 		SoundEnabled = 0;
@@@@ -552,7 +562,10 @@@@ BOOL InitJoystickInput(void)
 	// If it is possible to use SDL_NumJoysticks
 	// before initialising SDL_INIT_JOYSTICK then
 	// this call can be replaced with SDL_InitSubSystem
-	SDL_InitSubSystem (SDL_INIT_JOYSTICK);
+	if (SDL_InitSubSystem (SDL_INIT_JOYSTICK) != 0) {
+		printf("SDL_InitSubSystem: %s\n", SDL_GetError());
+		return FALSE;
+	}
 	max_num_joysticks = SDL_NumJoysticks();
 	if (!max_num_joysticks)
 	{
@@@@ -566,6 +579,10 @@@@ BOOL InitJoystickInput(void)
 	for (i = 0; i < max_num_joysticks; i++)
 	{
 		JoystickInput[i] = SDL_JoystickOpen(i);
+		if (JoystickInput[i] == NULL) {
+			printf("SDL_JoystickOpen[%d]: %s\n", i, SDL_GetError());
+			return FALSE;
+		}
 		printf("Joystick %i (%i Buttons): %s\n", i,
 		       SDL_JoystickNumButtons(JoystickInput[i]),
 		       SDL_JoystickName(i));
@@@@ -584,7 +601,11 @@@@ int saybitdepth()
 {
   int MyBitsPerPixel;
   const SDL_VideoInfo *info;
-  SDL_Init(SDL_INIT_VIDEO);
+ 
+  if (SDL_Init(SDL_INIT_VIDEO) != 0) {
+  	printf("SDL_INIT_VIDEO: %s\n", SDL_GetError());
+	return FALSE;
+  }
   info = SDL_GetVideoInfo();
   MyBitsPerPixel = info->vfmt->BitsPerPixel;
   switch (MyBitsPerPixel)
@@@@ -593,7 +614,7 @@@@ int saybitdepth()
     case 16: break;
     default: printf("You are running in %d bpp, but ZSNES is forcing 16 bpp.\nYou may experience poor performance and/or crashing.\n\n", MyBitsPerPixel); break;
     }
-  return 0;
+  return TRUE;
 }
 
 int startgame(void)
@@@@ -605,7 +626,8 @@@@ int startgame(void)
 		if (SDL_Init(SDL_INIT_AUDIO | SDL_INIT_TIMER |
 	        SDL_INIT_VIDEO) < 0)
 		{
-			fprintf(stderr, "Could not initialize SDL: %s", SDL_GetError());
+			fprintf(stderr, "Could not initialize SDL: %s\n",
+			    SDL_GetError());
 			return FALSE;
 		}
 		sdl_state = vid_none;
@@@@ -614,7 +636,9 @@@@ int startgame(void)
 	if (sdl_state == vid_soft) sw_end();
 #ifdef __OPENGL__
 	else if (sdl_state == vid_gl) gl_end();
-	saybitdepth();
+	if (saybitdepth() == FALSE) {
+		return FALSE;
+	}
 	if (UseOpenGL)
 	{
 		status = gl_start(WindowWidth, WindowHeight, BitDepth, FullScreen);
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
