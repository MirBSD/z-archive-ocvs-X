head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2005.02.14.21.34.08;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.21.10.57.09;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.10.21.17.23.10;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@up to 0.96
please test
@
text
@$MirBSD: patch-stage2_builtins_c,v 1.1 2003/10/21 17:23:10 tg Exp $
--- stage2/builtins.c.orig	Sun Jun 20 13:32:42 2004
+++ stage2/builtins.c	Mon Feb 14 21:21:22 2005
@@@@ -18,6 +18,14 @@@@
  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
  */
 
+/* Fucking GNU people use nested functions.  */
+void __enable_execute_stack(void *);
+
+void
+__enable_execute_stack(void *x)
+{
+}
+
 /* Include stdio.h before shared.h, because we can't define
    WITHOUT_LIBC_STUBS here.  */
 #ifdef GRUB_UTIL
@@@@ -254,6 +262,10 @@@@ boot_func (char *arg, int flags)
       bsd_boot (kernel_type, bootdev, (char *) mbi.cmdline);
       break;
 
+    case KERNEL_TYPE_OPENBSD:
+      openbsd_boot (kernel_type, bootdev, (char *) mbi.cmdline);
+      break;
+
     case KERNEL_TYPE_LINUX:
       /* Linux */
       linux_boot ();
@@@@ -2341,9 +2353,11 @@@@ kernel_func (char *arg, int flags)
 	  else if (grub_memcmp (arg, "freebsd", 7) == 0)
 	    suggested_type = KERNEL_TYPE_FREEBSD;
 	  else if (grub_memcmp (arg, "openbsd", 7) == 0)
-	    /* XXX: For now, OpenBSD is identical to NetBSD, from GRUB's
-	       point of view.  */
-	    suggested_type = KERNEL_TYPE_NETBSD;
+	    suggested_type = KERNEL_TYPE_OPENBSD;
+	  else if (grub_memcmp (arg, "ekkobsd", 7) == 0)
+	    suggested_type = KERNEL_TYPE_OPENBSD;
+	  else if (grub_memcmp (arg, "mirbsd", 7) == 0)
+	    suggested_type = KERNEL_TYPE_OPENBSD;
 	  else if (grub_memcmp (arg, "linux", 5) == 0)
 	    suggested_type = KERNEL_TYPE_LINUX;
 	  else if (grub_memcmp (arg, "biglinux", 8) == 0)
@@@@ -3365,6 +3379,8 @@@@ static struct builtin builtin_savedefaul
   " `fallback' is used, next fallback entry is saved."
 };
 
+long boot_serial_unit = 0;
+long boot_serial_speed = 0;
 
 #ifdef SUPPORT_SERIAL
 /* serial */
@@@@ -3373,6 +3389,7 @@@@ serial_func (char *arg, int flags)
 {
   unsigned short port = serial_hw_get_port (0);
   unsigned int speed = 9600;
+  int unit = 0;
   int word_len = UART_8BITS_WORD;
   int parity = UART_NO_PARITY;
   int stop_bit_len = UART_1_STOP_BIT;
@@@@ -3385,7 +3402,6 @@@@ serial_func (char *arg, int flags)
       if (grub_memcmp (arg, "--unit=", sizeof ("--unit=") - 1) == 0)
 	{
 	  char *p = arg + sizeof ("--unit=") - 1;
-	  int unit;
 	  
 	  if (! safe_parse_maxint (&p, &unit))
 	    return 1;
@@@@ -3499,6 +3515,8 @@@@ serial_func (char *arg, int flags)
       return 1;
     }
   
+  boot_serial_unit = unit;
+  boot_serial_speed = speed;
   return 0;
 }
 
@


1.2
log
@have GNU GRUB recognize 0x27 partition type and
add MirBSD types

pt out by bsiegert@@ - live code from www.fosdem.org
@
text
@d2 18
a19 3
--- stage2/builtins.c.orig	2002-12-04 04:41:35.000000000 +0000
+++ stage2/builtins.c	2004-02-21 10:52:39.000000000 +0000
@@@@ -252,6 +252,10 @@@@ boot_func (char *arg, int flags)
d30 1
a30 1
@@@@ -2307,9 +2311,11 @@@@ kernel_func (char *arg, int flags)
d45 2
a46 2
@@@@ -3244,6 +3250,8 @@@@ static struct builtin builtin_savedefaul
   "Save the current entry as the default boot entry."
d54 1
a54 1
@@@@ -3252,6 +3260,7 @@@@ serial_func (char *arg, int flags)
d62 1
a62 1
@@@@ -3264,7 +3273,6 @@@@ serial_func (char *arg, int flags)
d70 1
a70 1
@@@@ -3378,6 +3386,8 @@@@ serial_func (char *arg, int flags)
@


1.1
log
@GNU GRUB, that boot loader, with an additional hacked support
for netbooting MirBSD kernels

Comes as floppy, PXE and NBI (Etherboot) image, with GNU Texinfo docs
@
text
@d1 1
a1 1
$MirBSD$
d3 1
a3 1
+++ stage2/builtins.c	2003-10-21 16:28:13.000000000 +0000
d15 1
a15 1
@@@@ -2307,9 +2311,7 @@@@ kernel_func (char *arg, int flags)
d23 4
d30 1
a30 1
@@@@ -3244,6 +3246,8 @@@@ static struct builtin builtin_savedefaul
d39 1
a39 1
@@@@ -3252,6 +3256,7 @@@@ serial_func (char *arg, int flags)
d47 1
a47 1
@@@@ -3264,7 +3269,6 @@@@ serial_func (char *arg, int flags)
d55 1
a55 1
@@@@ -3378,6 +3382,8 @@@@ serial_func (char *arg, int flags)
@

