head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.3
	cvs-200402211630:1.1.1.3
	cvs-200401261625:1.1.1.3
	cvs-200401162142:1.1.1.3
	cvs-200301141450:1.1.1.3
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.2
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	ctm-3258:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3200:1.1.1.2
	ctm-3188:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.55.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.55.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.14.27.53;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.14.16.06.12;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-qmake_generators_unix_unixmake2_cpp,v 1.8 2003/01/19 17:36:51 espie Exp $
--- qmake/generators/unix/unixmake2.cpp.orig	Mon Dec  9 10:41:04 2002
+++ qmake/generators/unix/unixmake2.cpp	Sun Jan 19 15:55:16 2003
@@@@ -228,10 +228,14 @@@@ UnixMakefileGenerator::writeMakeParts(QT
     } else if (!project->isActiveConfig("staticlib") && project->variables()["QMAKE_APP_FLAG"].isEmpty()) {
 	t << "TARGETA	= " << var("TARGETA") << endl;
 	if (project->isEmpty("QMAKE_HPUX_SHLIB")) {
-	    t << "TARGETD	= " << var("TARGET_x.y.z") << endl;
-	    t << "TARGET0	= " << var("TARGET_") << endl;
-	    t << "TARGET1	= " << var("TARGET_x") << endl;
-	    t << "TARGET2	= " << var("TARGET_x.y") << endl;
+  	    if (!project->isEmpty("QMAKE_OPENBSD_SHLIBS")) {
+  		t << "TARGETD	= " << var("TARGET_x.y") << endl;
+ 	    } else {
+		t << "TARGETD	= " << var("TARGET_x.y.z") << endl;
+		t << "TARGET0	= " << var("TARGET_") << endl;
+		t << "TARGET1	= " << var("TARGET_x") << endl;
+		t << "TARGET2	= " << var("TARGET_x.y") << endl;
+	    }
 	} else {
 	    t << "TARGETD	= " << var("TARGET_x") << endl;
 	    t << "TARGET0	= " << var("TARGET_") << endl;
@@@@ -1019,6 +1023,7 @@@@ void UnixMakefileGenerator::init2()
 							    project->first("VER_PAT"));
 	    }
 	    project->variables()["TARGET"] = project->variables()["TARGET_x.y.z"];
+
 	} else {
 	    project->variables()["TARGET_"].append("lib" + project->first("TARGET") + "." +
 						   project->first("QMAKE_EXTENSION_SHLIB"));
@@@@ -1039,10 +1044,19 @@@@ void UnixMakefileGenerator::init2()
 		project->variables()["TARGET_x"].append("lib" + project->first("TARGET") + "." +
 							project->first("QMAKE_EXTENSION_SHLIB") +
 							"." + project->first("VER_MAJ"));
-		project->variables()["TARGET_x.y"].append("lib" + project->first("TARGET") + "." +
-						      project->first("QMAKE_EXTENSION_SHLIB")
-						      + "." + project->first("VER_MAJ") +
-						      "." + project->first("VER_MIN"));
+		if ( !project->variables()["QMAKE_OPENBSD_SHLIBS"].isEmpty() ) {
+		    QString s;
+		    s.setNum(project->first("VER_MIN").toInt()*10+ project->first("VER_PAT").toInt());
+		    project->variables()["TARGET_x.y"].append("lib" + project->first("TARGET") + "." +
+							  project->first("QMAKE_EXTENSION_SHLIB")
+							  + "." + project->first("VER_MAJ") +
+							  "." + s );
+		} else {
+		    project->variables()["TARGET_x.y"].append("lib" + project->first("TARGET") + "." +
+							  project->first("QMAKE_EXTENSION_SHLIB")
+							  + "." + project->first("VER_MAJ") +
+							  "." + project->first("VER_MIN"));
+		}
 		project->variables()["TARGET_x.y.z"].append("lib" + project->first("TARGET") +
 							    "." +
 							    project->variables()[
@@@@ -1051,7 +1065,10 @@@@ void UnixMakefileGenerator::init2()
 							    project->first("VER_MIN") +  "." +
 							    project->first("VER_PAT"));
 	    }
-	    project->variables()["TARGET"] = project->variables()["TARGET_x.y.z"];
+	    if ( !project->variables()["QMAKE_OPENBSD_SHLIBS"].isEmpty() )
+		project->variables()["TARGET"] = project->variables()["TARGET_x.y"];
+	    else
+		project->variables()["TARGET"] = project->variables()["TARGET_x.y.z"];
 	}
 	if(project->isEmpty("QMAKE_LN_SHLIB"))
 	    project->variables()["QMAKE_LN_SHLIB"].append("ln -s");
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree as of CTM 3188
@
text
@d1 3
a3 3
$OpenBSD: patch-qmake_generators_unix_unixmake2_cpp,v 1.9 2003/04/05 14:45:19 espie Exp $
--- qmake/generators/unix/unixmake2.cpp.orig	Mon Feb 24 09:30:51 2003
+++ qmake/generators/unix/unixmake2.cpp	Sat Mar 22 17:57:45 2003
d23 1
a23 1
@@@@ -1024,6 +1028,7 @@@@ void UnixMakefileGenerator::init2()
d31 1
a31 1
@@@@ -1044,10 +1049,19 @@@@ void UnixMakefileGenerator::init2()
d55 1
a55 1
@@@@ -1056,7 +1070,10 @@@@ void UnixMakefileGenerator::init2()
@


1.1.1.3
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d1 4
a4 4
$OpenBSD: patch-qmake_generators_unix_unixmake2_cpp,v 1.10 2004/01/08 01:12:59 brad Exp $
--- qmake/generators/unix/unixmake2.cpp.orig	2003-11-10 05:22:48.000000000 -0500
+++ qmake/generators/unix/unixmake2.cpp	2003-12-29 04:35:25.000000000 -0500
@@@@ -293,10 +293,14 @@@@ UnixMakefileGenerator::writeMakeParts(QT
d23 1
a23 1
@@@@ -1238,6 +1242,7 @@@@ void UnixMakefileGenerator::init2()
d31 1
a31 1
@@@@ -1258,10 +1263,19 @@@@ void UnixMakefileGenerator::init2()
d55 1
a55 1
@@@@ -1270,7 +1284,10 @@@@ void UnixMakefileGenerator::init2()
a66 56
@@@@ -1358,6 +1375,20 @@@@ void UnixMakefileGenerator::init2()
 }
 
 QString
+UnixMakefileGenerator::prefixedVariable( const QString &projectVariableName, const QString &defaultSuffix )
+{
+    QString prefix = qInstallPath();
+
+    QString value = var( projectVariableName );
+    if ( value.isEmpty() )
+	value = "${prefix}" + defaultSuffix;
+    else if ( value.startsWith( prefix ) )
+	value.replace( prefix, "${prefix}" );
+
+    return value;
+}
+
+QString
 UnixMakefileGenerator::libtoolFileName()
 {
     QString ret = var("TARGET");
@@@@ -1476,13 +1507,13 @@@@ UnixMakefileGenerator::writePkgConfigFil
     QTextStream t(&ft);
 
     QString prefix = qInstallPath();
-    QString libDir = prefix + "/lib";
-    QString includeDir = prefix + "/include";
+    QString libDir = prefixedVariable( "libs.path", "/lib" );
+    QString includeDir = prefixedVariable( "headers.path", "/include" );
 
-    t << "prefix=" << libDir << endl;
+    t << "prefix=" << prefix << endl;
     t << "exec_prefix=${prefix}\n"
-      << "libdir=${exec_prefix}/lib\n"
-      << "includedir=${prefix}/include" << endl;
+      << "libdir=" << libDir << endl
+      << "includedir=" << includeDir << endl;
     // non-standard entry. Provides useful info normally only
     // contained in the internal .qmake.cache file
     t << varGlue("CONFIG", "qt_config=", " ", "") << endl << endl;
@@@@ -1499,7 +1530,7 @@@@ UnixMakefileGenerator::writePkgConfigFil
 	libs << "QMAKE_LIBS"; //obvious one
     if(project->isActiveConfig("thread"))
 	libs << "QMAKE_LFLAGS_THREAD"; //not sure about this one, but what about things like -pthread?
-    t << "Libs: -L" << libDir << " -l" << lname << " ";
+    t << "Libs: -L${libdir} -l" << var( "QMAKE_ORIG_TARGET" ) << " ";
     for(QStringList::ConstIterator it = libs.begin(); it != libs.end(); ++it)
 	t << project->variables()[(*it)].join(" ") << " ";
     t << endl;
@@@@ -1511,5 +1542,5 @@@@ UnixMakefileGenerator::writePkgConfigFil
       << varGlue("PRL_EXPORT_DEFINES","-D"," -D"," ")
       << project->variables()["PRL_EXPORT_CXXFLAGS"].join(" ")
 	//      << varGlue("DEFINES","-D"," -D"," ")
-      << " -I" << includeDir;
+      << " -I${includedir}" << endl;
 }
@


