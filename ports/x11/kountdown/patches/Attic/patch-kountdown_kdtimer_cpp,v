head	1.2;
access;
symbols
	MIRBSD_5:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.07.06.20.19.48;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.19.55.25;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.55.25;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@mop up
@
text
@$OpenBSD: patch-kountdown_kdtimer_cpp,v 1.1 2002/09/30 13:10:39 naddy Exp $
--- kountdown/kdtimer.cpp.orig	Mon Sep 30 15:09:27 2002
+++ kountdown/kdtimer.cpp	Mon Sep 30 15:11:04 2002
@@@@ -71,7 +71,7 @@@@ KDTimer::KDTimer( const QDateTime *fdate
 * Make sure the round off (fr and hr) is within boundaries (KD::DOWN (0) - KD::MATH (3) ) else set it to KD::DOWN
 * hf and hr are only checked if != 0
 **/
-void KDTimer::init( short int *ff, short int *fr, short int *hf = 0, short int *hr = 0 )
+void KDTimer::init( short int *ff, short int *fr, short int *hf, short int *hr )
 {
 	finishDate = new QDateTime();
 	halfDate = new QDateTime();
@@@@ -214,7 +214,7 @@@@ void KDTimer::years( short int r )
 	}
 }
 
-void KDTimer::months( short int r, const short int f = -1 )
+void KDTimer::months( short int r, const short int f )
 {
 	ULONG months = 0;
 	// Check if we can call years() to calc years left
@@@@ -322,7 +322,7 @@@@ void KDTimer::weeks( short int r )
 	}	
 }
 
-void KDTimer::days( short int r, const short int f = -1 )
+void KDTimer::days( short int r, const short int f )
 {
 	ULONG temp = calcDate->daysTo( finishDate->date() );
 	if ( *calcTime > finishDate->time() )
@@@@ -353,7 +353,7 @@@@ void KDTimer::days( short int r, const s
 	}		
 }
 
-void KDTimer::hours( short int r, const short int f = -1 )
+void KDTimer::hours( short int r, const short int f )
 {
 	if ( f >= 0 && f < KD::DAYS )
 	{
@@@@ -389,7 +389,7 @@@@ void KDTimer::hours( short int r, const 
 	}		
 }
 
-void KDTimer::mins( short int r, const short int f = -1 )
+void KDTimer::mins( short int r, const short int f )
 {
 	if ( f < 0 && f < KD::HOURS )
 	{
@@@@ -423,7 +423,7 @@@@ void KDTimer::mins( short int r, const s
 	}			
 }
 
-void KDTimer::secs( const short int f = -1 )
+void KDTimer::secs( const short int f )
 {
 	timeLeft.secs = calcDateTime->secsTo( *finishDate );
 	if ( f != -2 )
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
