head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.3
	cvs-200402211630:1.1.1.3
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.55.15;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.55.15;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.01.14.16.04.12;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.02.21.17.11.36;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.3 2003/01/27 19:22:50 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	Sun Jan 12 15:09:42 2003
+++ konsole/konsole/TEPty.cpp	Mon Jan 13 10:04:37 2003
@@@@ -130,6 +130,9 @@@@
         #include <errno.h>
         #include <utmp.h>
 #endif
+#ifdef __OpenBSD__
+#undef USE_LOGIN
+#endif
 
 #include <signal.h>
 
@@@@ -201,7 +204,13 @@@@ FILE* syslog_file = NULL; //stdout;
 #define PTY_FILENO 3
 #define BASE_CHOWN "konsole_grantpty"
 
-int chownpty(int fd, bool grant)
+const int PTY_GRANT=0,
+	PTY_REVOKE=1,
+	PTY_LOGIN=2,
+	PTY_LOGOUT=3;
+	
+
+int chownpty(int fd, int mode)
 // param fd: the fd of a master pty.
 // param grant: true to grant, false to revoke
 // returns 1 on success 0 on fail
@@@@ -222,10 +231,25 @@@@ int chownpty(int fd, bool grant)
   }
   if (pid == 0)
   {
+    const char *arg;
     /* We pass the master pseudo terminal as file descriptor PTY_FILENO. */
     if (fd != PTY_FILENO && dup2(fd, PTY_FILENO) < 0) exit(1);
     QString path = locate("exe", BASE_CHOWN);
-    execle(path.ascii(), BASE_CHOWN, grant?"--grant":"--revoke", NULL, NULL);
+    switch(mode) {
+    case PTY_REVOKE:
+    	arg = "--revoke";
+	break;
+    case PTY_GRANT:
+    	arg = "--grant";
+	break;
+    case PTY_LOGIN:
+    	arg = "--login";
+	break;
+    case PTY_LOGOUT:
+    	arg = "--logout";
+	break;
+    }
+    execle(path.ascii(), BASE_CHOWN, arg, NULL, NULL);
     exit(1); // should not be reached
   }
 
@@@@ -273,7 +297,7 @@@@ void TEPty::commClose()
      utmp.start(KProcess::Block);
   }
 #elif defined(USE_LOGIN)
-  char *tty_name=ttyname(0);
+  char *tty_name=ttynam;
   if (tty_name)
   {
   	if (strncmp(tty_name, "/dev/", 5) == 0)
@@@@ -281,7 +305,10 @@@@ void TEPty::commClose()
         logout(tty_name);
   }
 #endif
-  if (m_bNeedGrantPty) chownpty(m_MasterFd, false);
+#ifdef __OpenBSD__
+  chownpty(m_MasterFd, PTY_LOGOUT);
+#endif
+  if (m_bNeedGrantPty) chownpty(m_MasterFd, PTY_REVOKE);
 
   KProcess::commClose();
 }
@@@@ -357,7 +384,7 @@@@ void TEPty::openPty()
   // be opened by several different methods.
 
   // We try, as we know them, one by one.
-#if defined(HAVE_OPENPTY) //FIXME: some work needed.
+#if defined(HAVE_OPENPTY) && !defined(__OpenBSD__) //FIXME: some work needed.
   if (m_MasterFd < 0) {
     int master_fd, slave_fd;
     if (openpty(&master_fd, &slave_fd, NULL, NULL, NULL) == 0) {
@@@@ -453,7 +480,7 @@@@ void TEPty::openPty()
     return;
   }
 
-  if (m_bNeedGrantPty && !chownpty(m_MasterFd, true))
+  if (m_bNeedGrantPty && !chownpty(m_MasterFd, PTY_GRANT))
   {
     fprintf(stderr,"konsole: chownpty failed for device %s::%s.\n",ptynam,ttynam);
     fprintf(stderr,"       : This means the session can be eavesdroped.\n");
@@@@ -462,7 +489,6 @@@@ void TEPty::openPty()
             KGlobal::dirs()->findResourceDir("exe",
                                              "konsole").local8Bit().data());
   }
-
   fcntl(m_MasterFd,F_SETFL,O_NDELAY);
 }
 
@@@@ -530,7 +556,7 @@@@ int TEPty::makePty(bool _addutmp)
      l_struct.ut_host[UT_HOSTSIZE]=0;
   }
 
-  if (! (str_ptr=ttyname(tt)) ) {
+  if (! (str_ptr=ttyname(tt)) && !(str_ptr=ttynam)) {
     abort();
   }
   if (strncmp(str_ptr, "/dev/", 5) == 0)
@@@@ -539,6 +565,9 @@@@ int TEPty::makePty(bool _addutmp)
   time(&l_struct.ut_time);
 
   login(&l_struct);
+#endif
+#ifdef __OpenBSD__
+  chownpty(tt, PTY_LOGIN);
 #endif
   return tt;
 }
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d1 4
a4 4
$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.4 2003/12/07 20:19:13 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	2003-09-01 13:32:01.000000000 +0200
+++ konsole/konsole/TEPty.cpp	2003-12-04 02:59:16.000000000 +0100
@@@@ -137,6 +137,9 @@@@
d14 3
a16 3
@@@@ -229,7 +232,13 @@@@ void TEPtyInit()
 #endif
 }
d29 1
a29 1
@@@@ -252,6 +261,7 @@@@ int chownpty(int fd, bool grant)
d37 1
a37 5
@@@@ -260,7 +270,21 @@@@ int chownpty(int fd, bool grant)
     ** to be constant, we need an additional parameter.
     */
     QString fdnumber = QString::number(PTY_FILENO);
-    execle(path.ascii(), BASE_CHOWN, grant?"--grant":"--revoke", fdnumber.ascii(), NULL, NULL);
d52 1
a52 1
+    execle(path.ascii(), BASE_CHOWN, arg, fdnumber.ascii(), NULL, NULL);
d56 1
a56 1
@@@@ -308,7 +332,7 @@@@ void TEPty::commClose()
d65 1
a65 1
@@@@ -316,7 +340,10 @@@@ void TEPty::commClose()
d77 1
a77 1
@@@@ -392,7 +419,7 @@@@ void TEPty::openPty()
d86 1
a86 1
@@@@ -488,7 +515,7 @@@@ void TEPty::openPty()
d95 1
a95 1
@@@@ -497,7 +524,6 @@@@ void TEPty::openPty()
d103 2
a104 1
@@@@ -603,7 +629,7 @@@@ int TEPty::makePty(bool _addutmp)
a105 1
 #endif
d109 5
a113 4
 #ifdef Q_OS_FREEBSD
     /*
     ** In FreeBSD, the ttyname() call always returns NULL
@@@@ -628,6 +654,9 @@@@ int TEPty::makePty(bool _addutmp)
d116 1
a116 1
 #endif
d119 1
a119 1
+#endif
a121 1
 
@


1.1.1.3
log
@Import OpenBSD ports again. This will give us lots of new toys :).
@
text
@d1 6
a6 6
$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.5 2004/02/01 14:59:22 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	2003-07-21 09:32:26.000000000 +0200
+++ konsole/konsole/TEPty.cpp	2004-01-21 01:20:49.000000000 +0100
@@@@ -64,6 +64,9 @@@@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
d12 114
a125 2
 #include <sys/types.h>
 #include <sys/stat.h>
@


