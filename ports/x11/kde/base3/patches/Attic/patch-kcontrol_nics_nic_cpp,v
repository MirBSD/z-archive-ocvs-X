head	1.2;
access;
symbols
	cvs-200401261625:1.1.1.3
	cvs-200401162142:1.1.1.3
	cvs-200301141450:1.1.1.3
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.02.21.21.48.47;	author bsiegert;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.19.55.15;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.55.15;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.17.13.49.59;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.14.16.04.10;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge last import for x11/.

XXX libgnomeprint{,ui} are untested
@
text
@$OpenBSD: patch-kcontrol_nics_nic_cpp,v 1.2 2003/01/27 19:22:50 espie Exp $
--- kcontrol/nics/nic.cpp.orig	Thu Dec  5 21:40:07 2002
+++ kcontrol/nics/nic.cpp	Sat Jan 11 05:48:40 2003
@@@@ -37,6 +37,7 @@@@
 #endif
 
 #include <sys/types.h>
+#include <sys/param.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
 #include <stdio.h>
@@@@ -55,6 +56,11 @@@@
 
 #include <sys/ioctl.h>
 
+#include <ifaddrs.h>
+#include <netdb.h>
+
+QString flags_tos (unsigned int flags);
+
 typedef KGenericFactory<KCMNic, QWidget > KCMNicFactory;
 K_EXPORT_COMPONENT_FACTORY (kcm_nic, KCMNicFactory("kcmnic") );
 
@@@@ -127,76 +133,81 @@@@ NICList* findNICs()
    NICList* nl=new NICList;
    nl->setAutoDelete(true);
 
-	int sockfd = socket(AF_INET, SOCK_DGRAM, 0);
-
-   char buf[8*1024];
-   struct ifconf ifc;
-	ifc.ifc_len = sizeof(buf);
-	ifc.ifc_req = (struct ifreq *) buf;
-	int result=ioctl(sockfd, SIOCGIFCONF, &ifc);
-
-   for (char* ptr = buf; ptr < buf + ifc.ifc_len; )
-   {
-      struct ifreq *ifr =(struct ifreq *) ptr;
-      int len = sizeof(struct sockaddr);
-#ifdef	HAVE_SOCKADDR_SA_LEN
-      if (ifr->ifr_addr.sa_len > len)
-         len = ifr->ifr_addr.sa_len;		/* length > 16 */
-#endif
-      ptr += sizeof(ifr->ifr_name) + len;	/* for next one in buffer */
+  struct ifaddrs *ifap, *ifa;
+  if (getifaddrs(&ifap) != 0) {
+    return nl;
+  }
+
+  MyNIC *tmp=0;
+  for (ifa = ifap; ifa; ifa = ifa->ifa_next) {
+    switch (ifa->ifa_addr->sa_family) {
+    case AF_INET6:
+    case AF_INET: {
+      tmp = new MyNIC;
+      tmp->name = ifa->ifa_name;
+
+      char buf[128];
+
+      bzero(buf, 128);
+      getnameinfo(ifa->ifa_addr, ifa->ifa_addr->sa_len, buf, 127, 0, 0, NI_NUMERICHOST);
+      tmp->addr = buf;
+
+      if (ifa->ifa_netmask != NULL) {
+      	if (ifa->ifa_netmask->sa_family == 0)
+		ifa->ifa_netmask->sa_family = AF_INET;
+	bzero(buf, 128);
+	int result = getnameinfo(ifa->ifa_netmask, ifa->ifa_netmask->sa_len, buf, 127, 0, 0, NI_NUMERICHOST);
+	tmp->netmask = buf;
+      }
 
-      int flags;
-      struct sockaddr_in *sinptr;
-      MyNIC *tmp=0;
-      switch (ifr->ifr_addr.sa_family)
-      {
-      case AF_INET:
-         sinptr = (struct sockaddr_in *) &ifr->ifr_addr;
-         flags=0;
-
-         struct ifreq ifcopy;
-         ifcopy=*ifr;
-         result=ioctl(sockfd,SIOCGIFFLAGS,&ifcopy);
-         flags=ifcopy.ifr_flags;
-
-         tmp=new MyNIC;
-         tmp->name=ifr->ifr_name;
-         if ((flags & IFF_UP) == IFF_UP)
-            tmp->state=i18n("Up");
-         else
-            tmp->state=i18n("Down");
-
-         if ((flags & IFF_BROADCAST) == IFF_BROADCAST)
-            tmp->type=i18n("Broadcast");
-         else if ((flags & IFF_POINTOPOINT) == IFF_POINTOPOINT)
-            tmp->type=i18n("Point to Point");
-         else if ((flags & IFF_MULTICAST) == IFF_MULTICAST)
-            tmp->type=i18n("Multicast");
-         else if ((flags & IFF_LOOPBACK) == IFF_LOOPBACK)
-            tmp->type=i18n("Loopback");
-         else
-            tmp->type=i18n("Unknown");
-
-         tmp->addr=inet_ntoa(sinptr->sin_addr);
-
-         ifcopy=*ifr;
-         result=ioctl(sockfd,SIOCGIFNETMASK,&ifcopy);
-         if (result==0)
-         {
-            sinptr = (struct sockaddr_in *) &ifcopy.ifr_addr;
-            tmp->netmask=inet_ntoa(sinptr->sin_addr);
-         }
-         else
-            tmp->netmask=i18n("Unknown");
-         nl->append(tmp);
-         break;
+      if (ifa->ifa_flags & IFF_UP)
+	tmp->state=i18n("Up");
+      else
+	tmp->state=i18n("Down");
+
+      tmp->type = flags_tos(ifa->ifa_flags);
+
+      nl->append(tmp);
+      break;
+    }
+    default:
+      break;
+    }
+  }
 
-      default:
-         break;
-      }
-   }
+  freeifaddrs(ifap);
    return nl;
 };
 
-#include "nic.moc"
 
+QString flags_tos (unsigned int flags)
+{
+  QString tmp;
+  if (flags & IFF_POINTOPOINT) {
+    tmp +=  i18n("Point to Point");
+  }
+
+  if (flags & IFF_BROADCAST) {
+    if (tmp.length()) {
+      tmp += QString::fromLatin1(", ");
+    }
+    tmp += i18n("Broadcast");
+  }
+  
+  if (flags & IFF_MULTICAST) {
+    if (tmp.length()) {
+      tmp += QString::fromLatin1(", ");
+    }
+    tmp += i18n("Multicast");
+  }
+  
+  if (flags & IFF_LOOPBACK) {
+    if (tmp.length()) {
+      tmp += QString::fromLatin1(", ");
+    }
+    tmp += i18n("Loopback");
+  }
+  return tmp;
+}
+
+#include "nic.moc"
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD CVS repository (checked out) of roughly 12:00 UTC today,
retrieved from the canadian anoncvs server (due to CTM unavailability)
@
text
@d1 3
a3 3
$OpenBSD: patch-kcontrol_nics_nic_cpp,v 1.3 2003/07/30 12:59:22 espie Exp $
--- kcontrol/nics/nic.cpp.orig	Sun Jul 13 21:23:37 2003
+++ kcontrol/nics/nic.cpp	Wed Jul 16 01:20:06 2003
d24 1
a24 1
@@@@ -127,76 +133,80 @@@@ NICList* findNICs()
d138 1
a138 1
 }
d141 1
d171 1
a171 1
 
@


1.1.1.3
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d1 3
a3 3
$OpenBSD: patch-kcontrol_nics_nic_cpp,v 1.4 2003/12/07 20:19:13 espie Exp $
--- kcontrol/nics/nic.cpp.orig	2003-09-01 13:31:09.000000000 +0200
+++ kcontrol/nics/nic.cpp	2003-12-04 02:56:13.000000000 +0100
d22 1
a22 1
 K_EXPORT_COMPONENT_FACTORY (kcm_nic, KCMNicFactory("kcmnic") )
@


