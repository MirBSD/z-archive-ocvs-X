head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.01.01.18.04.57;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.11.16.16.38.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@preliminary update to 1.0pre3
sync with OpenBSD
splitting out C++ flavours
adjusting for MirOS

aa,win32 builds, untested
@
text
@$MirBSD: patch-DOCS_en_mplayer_1,v 1.1 2003/11/16 16:38:45 tg Exp $
--- DOCS/en/mplayer.1.orig	2003-11-16 16:14:12.000000000 +0000
+++ DOCS/en/mplayer.1	2003-11-16 16:15:38.000000000 +0000
@@@@ -1,3 +1,8 @@@@
+.\" $MirBSD: patch-DOCS_en_mplayer_1,v 1.1 2003/11/16 16:38:45 tg Exp $
+.\"
+.\" The macro names have been kludged into two characters.
+.\" Someone should check if they don't conflict with reserved names.
+.\"
 .\" MPlayer (C) 2000-2003 Arpad Gereoffy
 .\" This man page was/is done by Gabucino, Diego Biurrun, Jonas Jermann
 .\" 
@@@@ -16,20 +21,20 @@@@
 .\" define indentation for suboptions
 .nr SS 5
 .\" add new suboption
-.de IPs
+.de iP
 .IP "\\$1" \n(SS
 ..
 .\" begin of first level suboptions, end with .RE
-.de RSs
+.de rS
 .RS \n(IN+3
 ..
 .\" begin of 2nd level suboptions
-.de RSss
+.de rP
 .PD 0
 .RS \n(SS+3
 ..
 .\" end of 2nd level suboptions
-.de REss
+.de rE
 .RE
 .PD 1
 ..
@@@@ -250,52 +255,52 @@@@ These keys may/\:may not work, depending
 .TP
 .B general control
 .PD 0
-.RSs
-.IPs "<\- and \->"
+.rS
+.iP "<\- and \->"
 seek backward/\:forward 10 seconds
-.IPs "up and down"
+.iP "up and down"
 seek backward/\:forward  1 minute
-.IPs "pgup and pgdown"
+.iP "pgup and pgdown"
 seek backward/\:forward 10 minutes
-.IPs "< and >"
+.iP "< and >"
 backward/\:forward in playlist
-.IPs "HOME and END"
+.iP "HOME and END"
 go to next/\:previous playtree entry in the parent list
-.IPs "INS and DEL"
+.iP "INS and DEL"
 go to next/\:previous alternative source (asx playlist only)
-.IPs "p / SPACE"
+.iP "p / SPACE"
 pause movie (any key unpauses)
-.IPs "q / ESC"
+.iP "q / ESC"
 stop playing and quit
-.IPs "+ and \-"
+.iP "+ and \-"
 adjust audio delay by +/\:\- 0.1 second
-.IPs "/ and *"
+.iP "/ and *"
 decrease/\:increase volume
-.IPs "9 and 0"
+.iP "9 and 0"
 decrease/\:increase volume
-.IPs m\ \ \ \ 
+.iP m\ \ \ \ 
 mute sound
-.IPs f\ \ \ \ 
+.iP f\ \ \ \ 
 toggle fullscreen
-.IPs "w and e"
+.iP "w and e"
 decrease/\:increase panscan range
-.IPs o\ \ \ \ 
+.iP o\ \ \ \ 
 toggle between OSD states: none / seek / seek+timer
-.IPs d\ \ \ \ 
+.iP d\ \ \ \ 
 toggle frame dropping
-.IPs v\ \ \ \ 
+.iP v\ \ \ \ 
 toggle subtitle visibility
-.IPs j\ \ \ \ 
+.iP j\ \ \ \ 
 switch subtitle language
 .IP F\ \ \ \ 
 toggle display of "forced subtitles"
-.IPs a\ \ \ \ 
+.iP a\ \ \ \ 
 toggle subtitle aligment: top/middle/bottom
-.IPs "z and x"
+.iP "z and x"
 adjust subtitle delay by +/\:\- 0.1 second
-.IPs "r and t"
+.iP "r and t"
 adjust subtitle position
-.IPs i\ \ \ \ 
+.iP i\ \ \ \ 
 set EDL mark
 
 .PP
@@@@ -303,13 +308,13 @@@@ set EDL mark
 output (xv, (x)vidix, (x)mga, etc), or the software equalizer filter
 (-vf eq or -vf eq2).
 
-.IPs "1 and 2"
+.iP "1 and 2"
 adjust contrast
-.IPs "3 and 4"
+.iP "3 and 4"
 adjust brightness
-.IPs "5 and 6"
+.iP "5 and 6"
 adjust hue
-.IPs "7 and 8"
+.iP "7 and 8"
 adjust saturation
 .RE
 .PD 1
@@@@ -317,16 +322,16 @@@@ adjust saturation
 .TP
 .B GUI keyboard control
 .PD 0
-.RSs
-.IPs ENTER
+.rS
+.iP ENTER
 start playing
-.IPs s\ \ \ \ 
+.iP s\ \ \ \ 
 stop playing
-.IPs l\ \ \ \ 
+.iP l\ \ \ \ 
 load file
-.IPs c\ \ \ \ 
+.iP c\ \ \ \ 
 skin browser
-.IPs p\ \ \ \ 
+.iP p\ \ \ \ 
 toggle playlist
 .RE
 .PD 1
@@@@ -334,12 +339,12 @@@@ toggle playlist
 .TP
 .B TV input control
 .PD 0
-.RSs
-.IPs "h and k"
+.rS
+.iP "h and k"
 select previous/\:next channel
-.IPs n\ \ \ \ 
+.iP n\ \ \ \ 
 change norm
-.IPs u\ \ \ \ 
+.iP u\ \ \ \ 
 change channel list
 .RE
 .PD 1
@@@@ -432,21 +437,21 @@@@ Autorepeat is currently only supported b
 Available commands are:
 
 .PD 0
-.RSs
-.IPs conf=<file>
+.rS
+.iP conf=<file>
 Read alternative input.conf.
 If given without pathname, ~/\:.mplayer is assumed.
-.IPs ar\-delay
+.iP ar\-delay
 Delay in msec before we start to autorepeat a key (0 to disable).
-.IPs ar\-rate
+.iP ar\-rate
 How many key presses per second when we autorepeat.
-.IPs keylist
+.iP keylist
 Prints all keys that can be bound.
-.IPs cmdlist
+.iP cmdlist
 Prints all commands that can be bound.
-.IPs js\-dev
+.iP js\-dev
 Specifies the joystick device to use (default is /dev/\:input/\:js0).
-.IPs file\ 
+.iP file\ 
 Read commands from the given file.
 Mostly useful with a fifo.
 .br
@@@@ -516,8 +521,8 @@@@ Load skin from the given directory (WITH
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-skin fittyfene"
+.rS
+.iP "\-skin fittyfene"
 tries Skin/fittyfene.
 It first checks
 /usr/local/share/mplayer/
@@@@ -571,8 +576,8 @@@@ output.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-alang hu,en"
+.rS
+.iP "\-alang hu,en"
 Plays Hungarian and falls back to English if Hungarian is not available.
 .RE
 .PD 1
@@@@ -609,32 +614,32 @@@@ This option can be used to tune the CD A
 .br
 Available options are:
 .
-.RSs
-.IPs speed=<value>
+.rS
+.iP speed=<value>
 set CD spin speed
-.IPs paranoia=<0\-2>
+.iP paranoia=<0\-2>
 set paranoia level
-.RSss
+.rP
 0: disable checking
 .br
 1: overlap checking only (default)
 .br
 2: full data correction and verification
-.REss
-.IPs generic-dev=<value>
+.rE
+.iP generic-dev=<value>
 use specified generic SCSI device
-.IPs sector-size=<value>
+.iP sector-size=<value>
 atomic read size
-.IPs overlap=<value>
+.iP overlap=<value>
 force minimum overlap search during verification to <value> sectors.
-.IPs toc-bias
+.iP toc-bias
 Assume that the beginning offset of track 1 as reported in the TOC will be
 addressed as LBA\ 0.
 Some Toshiba drives need this for getting track boundaries correct.
-.IPs toc-offset=<value>
+.iP toc-offset=<value>
 Add <value> sectors to the values reported when addressing tracks.
 May be negative.
-.IPs (no)skip
+.iP (no)skip
 (never) accept imperfect data reconstruction.
 .RE
 .
@@@@ -663,12 +668,12 @@@@ This option is honored by codecs (AC3 on
 Available options are:
 
 .PD 0
-.RSs
-.IPs 2
+.rS
+.iP 2
 Stereo
-.IPs 4
+.iP 4
 Surround
-.IPs 6
+.iP 6
 Full 5.1
 .RE
 .PD 1
@@@@ -707,12 +712,12 @@@@ Pass the following parameters to the DVB
 the default ones:
 
 .PD 0
-.RSs
-.IPs card=<1\-4>
+.rS
+.iP card=<1\-4>
 Specifies using card number 1\-4 (default: 1).
-.IPs file=<file>
+.iP file=<file>
 Instructs MPlayer to read the channels list from <file>.
-.IPs type=<SAT|TER|CBL>
+.iP type=<SAT|TER|CBL>
 Specifies that the card type is SATellite, TERrestrial or CaBLe. If not specified
 the type will be autodetected.
 .RE
@@@@ -781,14 +786,14 @@@@ Used when decoding from multiple PNG or 
 Available options are:
 
 .PD 0
-.RSs
-.IPs w=<value>
+.rS
+.iP w=<value>
 width of the output (autodetect)
-.IPs h=<value>
+.iP h=<value>
 height of the output (autodetect)
-.IPs fps=<value>
+.iP fps=<value>
 fps of the output (default: 25)
-.IPs type=<value>
+.iP type=<value>
 type of input files (available types: jpeg, png, tga, sgi)
 .RE
 .PD 1
@@@@ -827,16 +832,16 @@@@ It may also be used to play audio CDs wh
 Available options are:
 
 .PD 0
-.RSs
-.IPs on\ \ \ 
+.rS
+.iP on\ \ \ 
 use raw audio demuxer
-.IPs channels=<value>
+.iP channels=<value>
 number of channels
-.IPs rate=<value>
+.iP rate=<value>
 rate in samples per second
-.IPs samplesize=<value>
+.iP samplesize=<value>
 sample size in byte
-.IPs format=<value>
+.iP format=<value>
 fourcc in hex
 .RE
 .PD 1
@@@@ -848,22 +853,22 @@@@ This option lets you play raw video file
 Available options are:
 
 .PD 0
-.RSs
-.IPs on\ \ \ 
+.rS
+.iP on\ \ \ 
 use raw video demuxer
-.IPs fps=<value>
+.iP fps=<value>
 rate in frames per second, default 25.0
-.IPs sqcif|qcif|cif|4cif|pal|ntsc
+.iP sqcif|qcif|cif|4cif|pal|ntsc
 set standard image size
-.IPs w=<value>
+.iP w=<value>
 image width in pixels
-.IPs h=<value>
+.iP h=<value>
 image height in pixels
-.IPs y420|yv12|yuy2|y8
+.iP y420|yv12|yuy2|y8
 set colorspace
-.IPs format=<value>
+.iP format=<value>
 colorspace (fourcc) in hex
-.IPs size=<value>
+.iP size=<value>
 frame size in Bytes
 .RE
 .PD 1
@@@@ -888,10 +893,10 @@@@ Seek to given time position.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ss 56"
+.rS
+.iP "\-ss 56"
 seeks to 56 seconds
-.IPs "\-ss 01:10:00"
+.iP "\-ss 01:10:00"
 seeks to 1\ hour 10\ min
 .RE
 .PD 1
@@@@ -920,38 +925,38 @@@@ samplerate and use this codec.
 .br
 Available options are:
 .
-.RSs
-.IPs noaudio
+.rS
+.iP noaudio
 no sound
-.IPs driver=<value>
+.iP driver=<value>
 available: dummy, v4l, v4l2, bsdbt848
-.IPs device=<value>
+.iP device=<value>
 Specify other device than the default /dev/\:video0.
-.IPs input=<value>
+.iP input=<value>
 Specify other input than the default 0 (Television) (see output for a list)
-.IPs freq=<value>
+.iP freq=<value>
 Specify the frequency to set the tuner to (e.g.\& 511.250).
 Not compatible with channels parameter.
-.IPs outfmt=<value>
+.iP outfmt=<value>
 output format of the tuner (yv12, rgb32, rgb24, rgb16, rgb15, uyvy, yuy2,
 i420)
-.IPs width=<value>
+.iP width=<value>
 width of the output window
-.IPs height=<value>
+.iP height=<value>
 height of the output window
-.IPs fps=<value>
+.iP fps=<value>
 framerate at which to capture video (frames per second)
-.IPs buffersize=<value>
+.iP buffersize=<value>
 maximum size of the capture buffer in megabytes (default: dynamical)
-.IPs norm=<value>
+.iP norm=<value>
 available: PAL, SECAM, NTSC. For v4l2 use the normid option below.
-.IPs normid=<value>
+.iP normid=<value>
 v4l2 only. See MPlayer output for a list of available TV norms.
-.IPs channel=<value>
+.iP channel=<value>
 Set tuner to <value> channel.
-.IPs chanlist=<value>
+.iP chanlist=<value>
 available: europe-east, europe-west, us-bcast, us-cable, etc
-.IPs channels=<channel>\-<name>,<channel>\-<name>,...
+.iP channels=<channel>\-<name>,<channel>\-<name>,...
 Set names for channels.
 Use _ for spaces in names (or play with quoting ;-).
 The channel names will then be written using OSD, and the commands tv_step_channel,
@@@@ -960,17 +965,17 @@@@ Not compatible with frequency parameter.
 Warning: The channel number will then be the position in the 'channels' list,
 beginning with 1.
 Example: use tv://1, tv://2, tv://TV1, tv_set_channel 1, tv_set_channel 2, tv_set_channel TV1, etc.
-.IPs [brightness|contrast|hue|saturation]=<\-100\-100>
+.iP [brightness|contrast|hue|saturation]=<\-100\-100>
 set the color equalizer on the video card.
-.IPs audiorate=<value>
+.iP audiorate=<value>
 set audio capture bitrate
-.IPs forceaudio
+.iP forceaudio
 capture audio even if there are no audio sources reported by v4l
-.IPs alsa\ 
+.iP alsa\ 
 capture from ALSA
-.IPs amode=<0\-3>
+.iP amode=<0\-3>
 choose an audio mode:
-.RSss
+.rP
 0: mono
 .br
 1: stereo
@@@@ -978,44 +983,44 @@@@ choose an audio mode:
 2: language 1
 .br
 3: language 2
-.REss
-.IPs forcechan=<1\-2>
+.rE
+.iP forcechan=<1\-2>
 By default, the count of recorded audio channels is determined automatically
 by querying the audio mode from the tv card.
 This option allows to force stereo/\:mono recording regardless of the amode
 option and the values returned by v4l.
 This can be used for troubleshooting when the tv card is unable to report the
 current audio mode.
-.IPs adevice=<value>
+.iP adevice=<value>
 set an audio device
-.RSss
+.rP
 /dev/\:...\& for OSS
 .br
 hardware ID for ALSA
-.REss
-.IPs audioid=<value>
+.rE
+.iP audioid=<value>
 choose an audio output of the capture card, if it has more of them
-.IPs [volume|bass|treble|balance]=<0\-65535>
-.IPs [volume|bass|treble|balance]=<0\-100>
+.iP [volume|bass|treble|balance]=<0\-65535>
+.iP [volume|bass|treble|balance]=<0\-100>
 These options set parameters of the mixer on the video capture card.
 They will have no effect, if your card doesn't have one.
 For v4l1, 0-65535 is a valid range. For v4l2, the valid range is
 0 to 100, and 50 maps to the default value of the control, as reported
 by the driver.
-.IPs immediatemode=<bool>
+.iP immediatemode=<bool>
 A value of 0 means capture and buffer audio and video together
 (default for MEncoder).
 A value of 1 (default for MPlayer) means to do video capture only and let the
 audio go through a loopback cable from the TV card to the soundcard.
-.IPs mjpeg
+.iP mjpeg
 Use hardware mjpeg compression (if the card supports it). 
 When using this option, you do not need to specify the width and height
 of the output window, because MPlayer will determine it automatically 
 from the decimation value (see below).
-.IPs decimation=<1,2,4>
+.iP decimation=<1,2,4>
 choose the size of the picture that will be compressed by hardware
 mjpeg compression:
-.RSss
+.rP
 1: full size
     704x576    PAL
     704x480    NTSC
@@@@ -1027,8 +1032,8 @@@@ mjpeg compression:
 4: small size
     176x144    PAL
     176x120    NTSC
-.REss
-.IPs quality=<0-100>
+.rE
+.iP quality=<0-100>
 choose the quality of the jpeg compression
 .br
 (quality < 60 recommended for full size)
@@@@ -1086,14 +1091,14 @@@@ Resample alphamap of the font.
 Can be:
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 plain white fonts
-.IPs 0.75
+.iP 0.75
 very narrow black outline (default)
-.IPs 1
+.iP 1
 narrow black outline
-.IPs 10
+.iP 10
 bold black outline
 .RE
 .PD 1
@@@@ -1115,7 +1120,7 @@@@ The \-subfont-* options are available on
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-font ~/\:.mplayer/\:arial\-14/\:font.desc
 .br
 \-font ~/\:.mplayer/\:arialuni.ttf
@@@@ -1142,14 +1147,14 @@@@ Turns off automatic loading of subtitle 
 Specifies which mode the OSD should start in.
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 subtitles only
-.IPs 1
+.iP 1
 volume + seek (default)
-.IPs 2
+.iP 2
 volume + seek + timer + percentage
-.IPs 3
+.iP 3
 volume + seek + timer + percentage + total time
 .RE
 .PD 1
@@@@ -1177,8 +1182,8 @@@@ priority when searching for subtitles.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-slang hu,en"
+.rS
+.iP "\-slang hu,en"
 Selects Hungarian and falls back to English if Hungarian is not available.
 .RE
 .PD 1
@@@@ -1191,16 +1196,16 @@@@ when original and scaled frame size alre
 smooth subtitles with the gaussian blur.
 The available modes are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 none (fastest, very ugly)
-.IPs 1
+.iP 1
 approximate (broken?)
-.IPs 2
+.iP 2
 full (slow)
-.IPs 3
+.iP 3
 bilinear (default, fast and not too bad)
-.IPs 4
+.iP 4
 uses swscaler gaussian blur (looks very good)
 .RE
 .PD 1
@@@@ -1238,12 +1243,12 @@@@ Force subtitle demuxer type for \-subfil
 .B \-sub-fuzziness
 Adjust matching fuzziness when searching for subtitles:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 exact match
-.IPs 1
+.iP 1
 load all subs containing movie name
-.IPs 2
+.iP 2
 load all subs in the current directory
 .RE
 .PD 1
@@@@ -1270,7 +1275,7 @@@@ specify codepage of the subtitle.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-subcp latin2
 .br
 \-subcp cp1250
@@@@ -1296,14 +1301,14 @@@@ Zero means that text-scale and osd-scale
 The mode can be:
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no autoscale
-.IPs 1
+.iP 1
 proportional to movie height
-.IPs 2
+.iP 2
 proportional to movie width
-.IPs 3
+.iP 3
 proportional to movie diagonal (default)
 .RE
 .PD 1
@@@@ -1377,11 +1382,11 @@@@ If the list has a trailing ',' it will f
 
 .I EXAMPLE
 .PD 0
-.RSs
-.IPs "\-ao oss:/\:dev/\:dsp2,oss:/\:dev/\:dsp1,"
+.rS
+.iP "\-ao oss:/\:dev/\:dsp2,oss:/\:dev/\:dsp1,"
 try to use OSS with the specified sound devices and fallback to others if it
 fails
-.IPs "\-ao sdl:esd"
+.iP "\-ao sdl:esd"
 specify the SDL subdriver
 .RE
 .PD 1
@@@@ -1395,21 +1400,21 @@@@ Specify audio plugin(s) and their option
 .br
 Available options are:
 .
-.RSs
-.IPs list=[plugins]
+.rS
+.iP list=[plugins]
 comma separated list of plugins (resample, surround, format, volume,
 extrastereo, volnorm)
-.IPs delay=<sec>
+.iP delay=<sec>
 example plugin, do not use.
-.IPs format=<format>
+.iP format=<format>
 output format (format plugin only)
-.IPs fout=<Hz>
+.iP fout=<Hz>
 output frequency (resample plugin only)
-.IPs volume=<0\-255>
+.iP volume=<0\-255>
 volume (volume plugin only)
-.IPs mul=<value>
+.iP mul=<value>
 stereo coefficient (default: 2.5) (extrastereo plugin only)
-.IPs softclip
+.iP softclip
 compressor / 'soft\-clipping' capabilities (volume plugin only)
 .RE
 .
@@@@ -1422,32 +1427,32 @@@@ Select the format used for output from t
 defines in libao2/afmt.h):
 
 .PD 0
-.RSs
-.IPs 1
+.rS
+.iP 1
 Mu-Law
-.IPs 2
+.iP 2
 A-Law
-.IPs 4
+.iP 4
 Ima-ADPCM
-.IPs 8
+.iP 8
 Signed 8-bit
-.IPs 16
+.iP 16
 Unsigned 8-bit
-.IPs 32
+.iP 32
 Unsigned 16-bit (Little-Endian)
-.IPs 64
+.iP 64
 Unsigned 16-bit (Big-Endian)
-.IPs 128
+.iP 128
 Signed  16-bit (Little-Endian)
-.IPs 256
+.iP 256
 Signed 16-bit (Big-Endian)
-.IPs 512
+.iP 512
 MPEG (2) Audio
-.IPs 1024
+.iP 1024
 AC3
-.IPs 4096
+.iP 4096
 Signed 32-bit (Little-Endian)
-.IPs 8192
+.iP 8192
 Signed 32-bit (Big-Endian)
 .RE
 .PD 1
@@@@ -1490,7 +1495,7 @@@@ on.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-display xtest.localdomain:0
 .RE
 .PD 1
@@@@ -1512,82 +1517,82 @@@@ Warning: may cause OSD/\:SUB corruption!
 .B \-dxr2 <option1:option2:...>
 This option is used to control the dxr2 driver.
 
-.RSs
-.IPs ar-mode=<value>
+.rS
+.iP ar-mode=<value>
 aspect ratio mode (0 = normal, 1 = pan scan, 2 = letterbox (default))
-.IPs iec958\-encoded
+.iP iec958\-encoded
 iec958 output mode
-.IPs iec958\-decoded
+.iP iec958\-decoded
 set iec958 output mode to decoded (default)
-.IPs macrovision=<value>
+.iP macrovision=<value>
 macrovision mode (0 = off (default), 1 = agc, 2 = agc 2 colorstripe,
 3 = agc 4 colorstripe)
-.IPs mute\ 
+.iP mute\ 
 mute sound output
-.IPs unmute
+.iP unmute
 unmute sound output
-.IPs ucode=<value>
+.iP ucode=<value>
 path to the microcode
 .RE
 .RS
 
 .I TV Out
 .RE
-.RSs
-.IPs 75ire
+.rS
+.iP 75ire
 enable 7.5 IRE output mode
-.IPs no75ire
+.iP no75ire
 disable 7.5 IRE output mode (default)
-.IPs bw\ \ \ 
+.iP bw\ \ \ 
 b/\:w TV output
-.IPs color
+.iP color
 color TV output (default)
-.IPs interlaced
+.iP interlaced
 interlaced TV output (default)
-.IPs nointerlaced
+.iP nointerlaced
 disable interlaced TV output
-.IPs norm=<value>
+.iP norm=<value>
 TV norm (ntsc (default), pal,pal60,palm,paln,palnc)
-.IPs square\-pixel
+.iP square\-pixel
 set pixel mode to square
-.IPs ccir601\-pixel
+.iP ccir601\-pixel
 set pixel mode to ccir601
 .RE
 .RS
 
 .I Overlay
 .RE
-.RSs
-.IPs cr-left=<0\-500>
+.rS
+.iP cr-left=<0\-500>
 set the left cropping value (default: 50)
-.IPs cr-right=<0\-500>
+.iP cr-right=<0\-500>
 set the right cropping value (default: 300)
-.IPs cr-top=<0\-500>
+.iP cr-top=<0\-500>
 set the top cropping value (default: 0)
-.IPs cr-bottom=<0\-500>
+.iP cr-bottom=<0\-500>
 set the bottom cropping value (default: 0)
-.IPs ck-[r|g|b]=<0\-255>
+.iP ck-[r|g|b]=<0\-255>
 set the r(ed), g(reen) or b(lue) gain of the overlay color-key
-.IPs ck-[r|g|b]min=<0\-255>
+.iP ck-[r|g|b]min=<0\-255>
 minimum value for the respective color key
-.IPs ck-[r|g|b]max=<0\-255>
+.iP ck-[r|g|b]max=<0\-255>
 maximum value for the respective color key
-.IPs ignore\-cache
+.iP ignore\-cache
 ignore cached overlay settings
-.IPs update\-cache
+.iP update\-cache
 update cached overlay settings
-.IPs ol-osd
+.iP ol-osd
 enable overlay onscreen display
-.IPs nool-osd
+.iP nool-osd
 disable overlay onscreen display (default)
-.IPs ol[h|w|x|y]\-cor=<-20\-20>
+.iP ol[h|w|x|y]\-cor=<-20\-20>
 adjust the overlay size (h,w) and position (x,y) in case it doesn't match the
 window perfectly (default: 0)
-.IPs overlay
+.iP overlay
 activate overlay (default)
-.IPs nooverlay
+.iP nooverlay
 activate TVout
-.IPs overlay-ratio=<1\-2500>
+.iP overlay-ratio=<1\-2500>
 tune the overlay (default 1000)
 .RE
 .
@@@@ -1625,22 +1630,22 @@@@ Specify a priority list of fullscreen la
 used. The available types are:
 
 .PD 0
-.RSs
-.IPs "above"
+.rS
+.iP "above"
 Use _NETWM_STATE_ABOVE hint if available.
-.IPs "below"
+.iP "below"
 Use _NETWM_STATE_BELOW hint if available.
-.IPs "fullscreen"
+.iP "fullscreen"
 Use _NETWM_STATE_FULLSCREEN hint if available.
-.IPs "layer"
+.iP "layer"
 Use _WIN_LAYER hint with default layer.
-.IPs "layer=<0..15>"
+.iP "layer=<0..15>"
 Use _WIN_LAYER hint with layer number.
-.IPs "netwm"
+.iP "netwm"
 Force NETWM style.
-.IPs "none"
+.iP "none"
 Don't set fullscreen window layer.
-.IPs "stays_on_top"
+.iP "stays_on_top"
 Use _NETWM_STATE_STAYS_ON_TOP hint if available.
 .RE
 .PD 1
@@@@ -1678,14 +1683,14 @@@@ directx and tdfxfb.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs 50:40
+.rS
+.iP 50:40
 Places the window at x=50, y=40
-.IPs 50%:50%
+.iP 50%:50%
 Places the window in the middle of the screen
-.IPs 100%\ 
+.iP 100%\ 
 Places the window at the top left corner of the screen
-.IPs 100%:100%
+.iP 100%:100%
 Places the window at the bottom left corner of the screen
 .RE
 .PD 1
@@@@ -1704,20 +1709,20 @@@@ You can get colored negative of image wi
 Sets the layer of the fullscreen window of MPlayer for icewm.
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 Desktop
-.IPs 2
+.iP 2
 Below
-.IPs 4
+.iP 4
 Normal
-.IPs 6
+.iP 6
 OnTop
-.IPs 8
+.iP 8
 Dock
-.IPs 10
+.iP 10
 AboveDock
-.IPs 12
+.iP 12
 Menu (default)
 .RE
 .PD 1
@@@@ -1729,18 +1734,18 @@@@ Specify options for the JPEG output.
 Available options are:
 
 .PD 0
-.RSs
-.IPs [no]progressive
+.rS
+.iP [no]progressive
 Specify standard or progressive JPEG.
-.IPs [no]baseline
+.iP [no]baseline
 Specify use of baseline or not.
-.IPs optimize=<value>
+.iP optimize=<value>
 Optimization factor [0-100]
-.IPs smooth=<value>
+.iP smooth=<value>
 Smooth factor [0-100]
-.IPs quality=<value>
+.iP quality=<value>
 Quality factor [0-100]
-.IPs outdir=<value>
+.iP outdir=<value>
 Directory to save the JPEG files
 .RE
 .PD 1
@@@@ -1759,7 +1764,7 @@@@ See also \-aspect for movie aspect.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-monitoraspect 4:3  or 1.3333
 .br
 \-monitoraspect 16:9 or 1.7777
@@@@ -1821,11 +1826,11 @@@@ If the list has a trailing ',' it will f
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vo xmga,xv,"
+.rS
+.iP "\-vo xmga,xv,"
 Try Matrox kernel driver, then Xv driver, then others
 .br
-.IPs "\-vo sdl:aalib"
+.iP "\-vo sdl:aalib"
 specify the SDL subdriver
 .RE
 .PD 1
@@@@ -1846,10 +1851,10 @@@@ displays) this option tells MPlayer whic
 Specifies compression level for PNG output (-vo png)
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no compression
-.IPs 9
+.iP 9
 max compression
 .RE
 .PD 1
@@@@ -1916,14 +1921,14 @@@@ If the list has a trailing ',' it will f
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ac mp3acm"
+.rS
+.iP "\-ac mp3acm"
 force l3codeca.acm MP3 codec
-.IPs "\-ac mad,"
+.iP "\-ac mad,"
 try libmad first, then fallback to others
-.IPs "\-ac hwac3,a52,"
+.iP "\-ac hwac3,a52,"
 try hardware AC3 passthrough, then software AC3 codec, then others
-.IPs "\-ac -ffmp3,"
+.iP "\-ac -ffmp3,"
 try other codecs except FFmpeg's MP3 decoder
 .RE
 .PD 1
@@@@ -1934,18 +1939,18 @@@@ Activate a comma separated list of audio
 .br
 Available filters are:
 .
-.RSs
-.IPs resample[=srate[:sloppy][:type]]
+.rS
+.iP resample[=srate[:sloppy][:type]]
 Changes the sample rate of the audio stream to an integer srate (Hz).
 It only supports the 16 bit little endian format.
-.IPs channels[=nch]
+.iP channels[=nch]
 Change the number of channels to nch output channels.
 If the number of output channels is bigger than the number of input channels
 empty channels are inserted (except mixing from mono to stereo, then the mono
 channel is repeated in both of the output channels).
 If the number of output channels is smaller than the number of input channels
 the exceeding channels are truncated.
-.IPs format[=bps,f]
+.iP format[=bps,f]
 Select the format f and bytes per sample bps used for output from the
 filter layer.
 The option bps is an integer and denotes Bytes per sample.
@@@@ -1959,37 +1964,37 @@@@ unsigned or signed
 .br
 le or be (little or big endian)
 .br
-.IPs volume[=v:sc]
+.iP volume[=v:sc]
 Select the output volume level.
 This filter is not reentrant and can therefore only be enabled once for every
 audio stream.
-.RSss
+.rP
 v: desired gain in dB for all channels in the stream.
 The gain can be set from -200dB to +40dB (where -200dB mutes the sound
 completely and +40dB equals a gain of 1000).
 .br
 sc: enable soft clipping.
-.REss
-.IPs pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...]
+.rE
+.iP pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...]
 Mixes channels arbitrarily, see DOCS/sound.html for details.
-.RSss
+.rP
 n: number of output channels (1 - 6).
 .br
 lij: how much of input channel j is mixed into output channel i.
-.REss
-.IPs sub[=fc:ch]
+.rE
+.iP sub[=fc:ch]
 Add sub-woofer channel.
-.RSss
+.rP
 fc: Cutoff frequency for low-pass filter (20Hz to 300Hz) default is 60Hz.
 .br
 ch: channel number for the sub-channel.
-.REss
-.IPs surround[=d]
+.rE
+.iP surround[=d]
 Decoder for matrix encoded surround sound, works on many 2 channel files.
-.RSss
+.rP
 d: delay time in ms for the rear speakers (0ms to 1000ms) default is 15ms.
-.REss
-.IPs delay[=ch1:ch2:...]
+.rE
+.iP delay[=ch1:ch2:...]
 Delays the sound output.
 Specify the delay separately for each channel in milliseconds (floating point
 number between 0 and 1000).
@@@@ -1999,10 +2004,10 @@@@ number between 0 and 1000).
 .B \-af-adv <force=(0\-3):list=(filters)> (see -af option too)
 Specify advanced audio filter options:
 .
-.RSs
-.IPs force=<0-3>
+.rS
+.iP force=<0-3>
 Forces the insertion of audio filters to one of the following:
-.RSss
+.rP
 0: Completely automatic insertion of filters (default)
 .br
 1: Optimize for speed
@@@@ -2010,8 +2015,8 @@@@ Forces the insertion of audio filters to
 2: Optimize for accuracy
 .br
 3: Turn off auto
-.REss
-.IPs list=<filters>
+.rE
+.iP list=<filters>
 Same as -af (see -af option).
 .RE
 .
@@@@ -2027,10 +2032,10 @@@@ See \-afm help for a full list of availa
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-afm ffmpeg"
+.rS
+.iP "\-afm ffmpeg"
 try FFmpeg's libavcodec (mp1/\:2/\:3) codecs first
-.IPs "\-afm acm,dshow"
+.iP "\-afm acm,dshow"
 try Win32 codecs first
 .RE
 .PD 1
@@@@ -2042,7 +2047,7 @@@@ It's autodetected on MPEG files, but can
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-aspect 4:3  or \-aspect 1.3333
 .br
 \-aspect 16:9 or \-aspect 1.7777
@@@@ -2058,7 +2063,7 @@@@ If decoding with libavcodec, you can spe
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-lavdopts bug=1
 .RE
 .PD 1
@@@@ -2071,19 +2076,19 @@@@ Just add the values of the things you wa
 Available options are:
 .RE
 .
-.RSs
-.IPs ec\ \ \ 
+.rS
+.iP ec\ \ \ 
 error concealment:
-.RSss
+.rP
 1: use strong deblock filter for damaged MBs
 .br
 2: iterative MV search (slow)
 .br
 3: all (default)
-.REss
-.IPs er=<value>
+.rE
+.iP er=<value>
 error resilience:
-.RSss
+.rP
 .br
 0: disabled
 .br
@@@@ -2094,10 +2099,10 @@@@ error resilience:
 3: agressive (more checks but might cause problems even for valid bitstreams)
 .br
 4: very agressive
-.REss
-.IPs bug=<value>
+.rE
+.iP bug=<value>
 manually work around encoder bugs:
-.RSss
+.rP
 0: nothing
 .br
 1: autodetect bugs (default)
@@@@ -2121,12 +2126,12 @@@@ manually work around encoder bugs:
 512 (mpeg4): direct-qpel-blocksize bug (autodetected per fourcc/ver)
 .br
 1024 (mpeg4): edge padding bug (autodetected per fourcc/ver)
-.REss
-.IPs idct=<0\-99>
+.rE
+.iP idct=<0\-99>
 (see lavcopts)
 For best decoding quality use the same idct algorithm for decoding and encoding.
 This may come at a price in accuracy, though.
-.IPs gray\ 
+.iP gray\ 
 grayscale only decoding (a bit faster than with color)
 .RE
 .
@@@@ -2162,24 +2167,24 @@@@ Specifies SwScaler parameters.
 
 .I EXAMPLE
 .PD 0
-.RSs
+.rS
 \-vf scale \-ssf lgb=3.0
 .RE
 .PD 1
 
 .PD 0
-.RSs
-.IPs lgb=<0\-100>
+.rS
+.iP lgb=<0\-100>
 Gaussian blur filter (luma)
-.IPs cgb=<0\-100>
+.iP cgb=<0\-100>
 Gaussian blur filter (chroma)
-.IPs ls=<0\-100>
+.iP ls=<0\-100>
 sharpen filter (luma)
-.IPs cs=<0\-100>
+.iP cs=<0\-100>
 sharpen filter (chroma)
-.IPs chs=<h>
+.iP chs=<h>
 chroma horizontal shifting
-.IPs cvs=<v>
+.iP cvs=<v>
 chroma vertical shifting
 .RE
 .PD 1
@@@@ -2189,12 +2194,12 @@@@ chroma vertical shifting
 Select type of MP2/\:MP3 stereo output.
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 Stereo
-.IPs 1
+.iP 1
 Left channel
-.IPs 2
+.iP 2
 Right channel
 .RE
 .PD 1
@@@@ -2213,28 +2218,28 @@@@ of \-vf scale (0 (soft) \- 100 (sharp)),
 length (1 \- 10).
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 fast bilinear (default)
-.IPs 1
+.iP 1
 bilinear
-.IPs 2
+.iP 2
 bicubic (good quality)
-.IPs 3
+.iP 3
 experimental
-.IPs 4
+.iP 4
 nearest neighbour (bad quality)
-.IPs 5
+.iP 5
 area
-.IPs 6
+.iP 6
 luma bicubic / chroma bilinear
-.IPs 7
+.iP 7
 gauss
-.IPs 8
+.iP 8
 sincR
-.IPs 9
+.iP 9
 lanczos
-.IPs 10
+.iP 10
 bicubic spline
 .RE
 .PD 1
@@@@ -2253,14 +2258,14 @@@@ If the list has a trailing ',' it will f
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vc divx"
+.rS
+.iP "\-vc divx"
 force Win32/\:VFW DivX codec, no fallback
-.IPs "\-vc divx4,"
+.iP "\-vc divx4,"
 try divx4linux codec first, then fallback to others
-.IPs "\-vc -divxds,-divx,"
+.iP "\-vc -divxds,-divx,"
 try other codecs except Win32 DivX codecs
-.IPs "\-vc ffmpeg12,mpeg12,"
+.iP "\-vc ffmpeg12,mpeg12,"
 try libavcodec's MPEG1/\:2 codec, then libmpeg2, then others
 .RE
 .PD 1
@@@@ -2282,11 +2287,11 @@@@ See \-vfm help for a full list of availa
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vfm ffmpeg,dshow,vfw"
+.rS
+.iP "\-vfm ffmpeg,dshow,vfw"
 try the libavcodec, then Directshow, then VFW codecs and fallback to the
 others, if still none is ok
-.IPs "\-vfm xanim"
+.iP "\-vfm xanim"
 try XAnim codecs first
 .RE
 .PD 1
@@@@ -2300,10 +2305,10 @@@@ Disables aspect calculations.
 Specify additional parameters when decoding with XviD.
 
 .PD 0
-.RSs
-.IPs dr2\ \ 
+.rS
+.iP dr2\ \ 
 Activate direct rendering method 2.
-.IPs nodr2
+.iP nodr2
 Deactivate direct rendering method 2.
 .RE
 .PD 1
@@@@ -2311,10 +2316,10 @@@@ Deactivate direct rendering method 2.
 .TP
 .B \-xy <value>
 .PD 0
-.RSs
-.IPs value<=8
+.rS
+.iP value<=8
 Scale image by factor <value>.
-.IPs value>8
+.iP value>8
 Set width to value and calculate height to keep correct aspect ratio.
 .RE
 .PD 1
@@@@ -2361,10 +2366,10 @@@@ Available filters are:
 Crops the given part of the image and discards the rest.
 Useful to remove black bands from widescreen movies.
 .PD 0
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 Cropped width and height, defaults to original width and height.
-.IPs x,y
+.iP x,y
 Position of the cropped picture, defaults to center.
 .RE
 .PD 1
@@@@ -2380,11 +2385,11 @@@@ The threshold can be optionally specifie
 The plugin responds to the input.conf directive 'change_rectangle'
 that takes two parameters.
 .PD 0
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 width and height (default: -1, maximum possible width where boundaries
 are still visible.
-.IPs x,y
+.iP x,y
 top left corner position (default: -1, uppermost leftmost)
 .RE
 .PD 1
@@@@ -2393,27 +2398,27 @@@@ top left corner position (default: -1, u
 Expands (not scales) movie resolution to the given value and places the
 unscaled original at coordinates x, y.
 Can be used for placing subtitles/\:OSD in the resulting black bands.
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 expanded width,height (default: original width,height).
 Negative values for w and h are treated as offsets to the original size.
 
 .I EXAMPLE
 .PD 0
-.RSs
+.rS
 .IP expand=0:-50:0:0
 adds a 50 pixel border to the bottom of the picture
 .RE
 .PD 1
-.IPs x,y
+.iP x,y
 position of original image on the expanded image (default: center)
-.IPs o
+.iP o
 OSD/subtitle rendering
-.RSss
+.rP
 0: disable (default)
 .br
 1: enable
-.REss
+.rE
 .RE
 .TP
 .B flip\ \ \ 
@@@@ -2431,12 +2436,12 @@@@ portrait and not landscape.
 .B scale[=w:h[:c[:p]]]
 Scales the image with the software scaler (slow) and performs a YUV<\->RGB
 colorspace conversion (also see \-sws option).
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 new width/height after scaling (default: original width,height)
 Note: If -zoom is used, and underlying filters (including libvo) are
 incapable of scaling, then it defaults to d_width/\:d_height!
-.RSss
+.rP
  0:   scaled d_width/\:d_height
 .br
 -1:   original width/\:height
@@@@ -2444,10 +2449,10 @@@@ incapable of scaling, then it defaults t
 -2:   Calculate w/\:h using the other dimension and the prescaled aspect ratio.
 .br
 -3:   Calculate w/\:h using the other dimension and the original aspect ratio.
-.REss
-.IPs c
+.rE
+.iP c
 chroma skipping
-.RSss
+.rP
 0: use all available input lines for chroma
 .br
 1: use only every 2. input line for chroma
@@@@ -2455,16 +2460,16 @@@@ chroma skipping
 2: use only every 4. input line for chroma
 .br
 3: use only every 8. input line for chroma
-.REss
-.IPs p
+.rE
+.iP p
 scaling parameter (depends upon the scaling method used)
-.RSss
+.rP
 -sws 2 (bicubic):  sharpness (0 (soft) - 100 (sharp))
 .br
 -sws 7 (gaussian): sharpness (0 (soft) - 100 (sharp))
 .br
 -sws 9 (lanczos):  filter length (1 - 10)
-.REss
+.rE
 .RE
 .TP
 .B dsize={aspect|w:h}
@@@@ -2489,8 +2494,8 @@@@ Deprecated in favor of the software scal
 .B rgb2bgr[=swap]
 RGB 24/\:32 <\-> BGR 24/\:32 colorspace conversion.
 .PD 0
-.RSs
-.IPs swap
+.rS
+.iP swap
 Also perform  R <\-> B swapping.
 .RE
 .PD 1
@@@@ -2502,8 +2507,8 @@@@ RGB/\:BGR 8 \-> 15/\:16/\:24/\:32bpp col
 Restricts the colorspace for the next filter without doing any conversion.
 Use together with the scale filter for a real conversion.
 .PD 0
-.RSs
-.IPs fourcc
+.rS
+.iP fourcc
 format name like rgb15, bgr24, yv12, etc (default: yuy2)
 .RE
 .PD 1
@@@@ -2522,12 +2527,12 @@@@ The keywords accept a '\-' prefix to dis
 A ':' followed by a letter may be appended to the option to indicate its
 scope:
 .PD 0
-.RSs
-.IPs a
+.rS
+.iP a
 Automatically switches the filter off if the CPU is too slow.
-.IPs c
+.iP c
 Do chrominance filtering, too.
-.IPs y
+.iP y
 Do not do chrominance filtering (only luminance filtering).
 .RE
 .PD 1
@@@@ -2536,18 +2541,18 @@@@ Do not do chrominance filtering (only lu
 .I EXAMPLES:
 .RE
 .PD 0
-.RSs
-.IPs "\-vf pp=hb/vb/dr/al"
+.rS
+.iP "\-vf pp=hb/vb/dr/al"
 horizontal and vertical deblocking, deringing and automatic
 brightness/\:contrast
-.IPs "\-vf pp=hb/vb/dr/al/lb"
+.iP "\-vf pp=hb/vb/dr/al/lb"
 horizontal and vertical deblocking, deringing, automatic
 brightness/\:contrast and linear blend deinterlacer
-.IPs "\-vf pp=de/\-al"
+.iP "\-vf pp=de/\-al"
 default filters without brightness/\:contrast correction
-.IPs "\-vf pp=de/tn:1:2:3"
+.iP "\-vf pp=de/tn:1:2:3"
 Enable default filters & temporal denoiser.
-.IPs "\-vf pp=hb:y/vb:a \-autoq 6"
+.iP "\-vf pp=hb:y/vb:a \-autoq 6"
 Deblock horizontal only luminance and switch vertical deblocking on or
 off automatically depending on available CPU time.
 .RE
@@@@ -2559,14 +2564,14 @@@@ Generate various test patterns.
 .B lavc[=quality:fps]
 Fast software YV12 to MPEG1 conversion with libavcodec for use with DVB/\:DXR3.
 Faster and of better quality than \-vf fame.
-.RSs
-.IPs quality
-.RSss
+.rS
+.iP quality
+.rP
 1 \- 31: fixed qscale
 .br
 32 \-:   fixed bitrate in kBits
-.REss
-.IPs fps\ \ 
+.rE
+.iP fps\ \ 
 force output fps (float value) (default: 0, autodetect based on height)
 .RE
 .TP
@@@@ -2578,8 +2583,8 @@@@ Set up optimal scaling for DVB cards, sc
 calculating the Y axis scaling in software to keep aspect.
 It's only useful together with expand+scale
 (\-vf dvbscale,scale=-1:0,expand=-1:576:-1:-1:1,lavc).
-.RSs
-.IPs aspect
+.rS
+.iP aspect
 control aspect ratio, calculate as DVB_HEIGHT*ASPECTRATIO (default:
 576*4/3=768), set it to 576*(16/9)=1024 for a 16:9 TV.
 .RE
@@@@ -2587,20 +2592,20 @@@@ control aspect ratio, calculate as DVB_H
 .B "noise[=luma[u][t|a][h][p]:chroma[u][t|a][h][p]]"
 Adds noise.
 .PD 0
-.RSs
-.IPs <0\-100>
+.rS
+.iP <0\-100>
 luma noise
-.IPs <0\-100>
+.iP <0\-100>
 chroma noise
-.IPs u
+.iP u
 uniform noise (gaussian otherwise)
-.IPs t
+.iP t
 temporal noise (noise pattern changes between frames)
-.IPs a
+.iP a
 averaged temporal noise (smoother, but a lot slower)
-.IPs h
+.iP h
 high quality (slightly better looking, slightly slower)
-.IPs p
+.iP p
 mix random noise with a (semi)regular pattern
 .RE
 .PD 1
@@@@ -2612,12 +2617,12 @@@@ images really still (This should enhance
 It can be given from 0 to 3 parameters.  If you omit a parameter, a reasonable
 value will be inferred.
 .PD 0
-.RSs
-.IPs luma
+.rS
+.iP luma
 spatial luma strength (default = 4)
-.IPs chroma
+.iP chroma
 spatial chroma strength (default = 3)
-.IPs time
+.iP time
 temporal strength (default = 6)
 .RE
 .PD 1
@@@@ -2696,22 +2701,22 @@@@ Use libavcodec's deinterlace filter.
 .TP
 .B "unsharp=l|cWxH:amount[:l|cWxH:amount]"
 Unsharp mask / gaussian blur.
-.RSs
-.IPs l
+.rS
+.iP l
 Apply effect on luma component.
-.IPs c
+.iP c
 Apply effect on chroma components.
-.IPs WxH
+.iP WxH
 width and height of the matrix, odd sized in both directions
 (min = 3x3, max = 13x11 or 11x13, usually something between 3x3 and 7x7)
-.IPs amount
+.iP amount
 Relative amount of sharpness/\:blur to add to the image
 (a sane range should be -1.5 \- 1.5).
-.RSss
+.rP
 <0: blur
 .br
 >0: sharpen
-.REss
+.rE
 .RE
 .TP
 .B swapuv\ 
@@@@ -2728,12 +2733,12 @@@@ permanently (by smoothing, averaging, et
 2 fields (so called half pictures), so you can process (filter) them
 independently and then re-interleave them.
 .PD 0
-.RSs
-.IPs d
+.rS
+.iP d
 deinterleave
-.IPs i
+.iP i
 interleave
-.IPs s
+.iP s
 swap fields (exchange even & odd lines)
 .RE
 .PD 1
@@@@ -2752,27 +2757,27 @@@@ Please be aware that there is absolutely
 unless you see interlacing when playing the movie!
 The following arguments (see syntax above) may be used to control
 its behavior:
-.RSs
-.IPs dr
+.rS
+.iP dr
 Set the frame dropping mode.
 0 (default) means don't drop frames to maintain fixed output framerate.
 1 means always drop a frame when there have been no drops or telecine
 merges in the past 5 frames.
 2 means always maintain exact 5:4 input to output frame ratio.
 (Note: use mode 1 with MEncoder!)
-.IPs am
+.iP am
 Analysis mode.
 Available values are 0 (fixed pattern with initial frame number
 specified by fr=#) and 1 (agressive search for telecine pattern).
 Default is 1.
-.IPs fr
+.iP fr
 Set initial frame number in sequence.
 0-2 are the three clean progressive frames; 3 and 4 are the two
 interlaced frames.
 The default, -1, means "not in telecine sequence".
 The number specified here is the type for the imaginary previous
 frame before the movie starts.
-.IPs "tr0, tr1, tr2, tr3"
+.iP "tr0, tr1, tr2, tr3"
 Threshold values to be used in certain modes.
 .RE
 .TP
@@@@ -2827,15 +2832,15 @@@@ frame, halving the framerate. Even frame
 field, odd frames to the lower field. This can be used to fully reverse
 the effect of the tfields filter (in mode 0). Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 odd frames into upper field, even to lower, generating a full-height
 frame at half the framerate
-.IPs 1
+.iP 1
 only output odd frames, even frames are dropped, height unchanged
-.IPs 2
+.iP 2
 only output even frames, odd frames are dropped, height unchanged
-.IPs 3
+.iP 3
 expand each frame to full height, but pad alternate lines with black,
 framerate unchanged
 .RE
@@@@ -2849,14 +2854,14 @@@@ MEncoder, and only if both -fps and -ofp
 desired (double) framerate!
 Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 leave fields unchanged (this will jump/flicker)
-.IPs 1
+.iP 1
 interpolate missing lines (the algorithm used might not be so good)
-.IPs 2
+.iP 2
 translate fields by 1/4 pixel with linear interp (no jump)
-.IPs 4
+.iP 4
 translate fields by 1/4 pixel with 4tap filter (higher quality)
 .RE
 .PD 1
@@@@ -2864,10 +2869,10 @@@@ translate fields by 1/4 pixel with 4tap 
 .B "boxblur=radius:power[:radius:power]"
 box blur
 .PD 0
-.RSs
-.IPs radius
+.rS
+.iP radius
 size of the filter
-.IPs power
+.iP power
 How often the filter should be applied.
 .RE
 .PD 1
@@@@ -2875,12 +2880,12 @@@@ How often the filter should be applied.
 .B "sab=rad:pf:colorDiff[:rad:pf:colorDiff]"
 shape adaptive blur
 .PD 0
-.RSs
-.IPs rad\ \ \ 
+.rS
+.iP rad\ \ \ 
 blur filter strength (~0.1\-4.0) (slower if larger)
-.IPs pf\ \ \ 
+.iP pf\ \ \ 
 prefilter strength (~0.1\-2.0)
-.IPs colorDiff
+.iP colorDiff
 How different the pixels are allowed to be considered.
 (~0.1-100.0)
 .RE
@@@@ -2889,12 +2894,12 @@@@ How different the pixels are allowed to 
 .B "smartblur=rad:strength:thresh[:rad:strength:thresh]"
 smart blur
 .PD 0
-.RSs
-.IPs rad\ \ 
+.rS
+.iP rad\ \ 
 blur filter strength (~0.1\-5.0) (slower if larger)
-.IPs strength
+.iP strength
 blur (0.0\-1.0) or sharpen (-1.0\-0.0)
-.IPs thresh
+.iP thresh
 filter all (0), filter flat areas (0\-30) or filter edges (-30\-0)
 .RE
 .PD 1
@@@@ -2902,10 +2907,10 @@@@ filter all (0), filter flat areas (0\-30
 .B "perspective=x0:y0:x1:y1:x2:y2:x3:y3:t"
 perspective correction
 .PD 0
-.RSs
-.IPs x0,y0,...
+.rS
+.iP x0,y0,...
 coordinates of the top left, top right, bottom left, bottom right corners
-.IPs t\ \ \ \ 
+.iP t\ \ \ \ 
 linear (0) or cubic resampling (1)
 .RE
 .PD 1
@@@@ -2921,8 +2926,8 @@@@ Reposition and resize stereoscopic image
 Extracts both stereo fields and places them side by side, resizing
 them to maintain the original movie aspect.
 .PD 0
-.RSs
-.IPs lines
+.rS
+.iP lines
 number of lines to select from the middle of the image (default: 12)
 .RE
 .PD 1
@@@@ -2931,12 +2936,12 @@@@ number of lines to select from the middl
 Read bitmaps from a FIFO and display them in a window.
 .
 .PD 0
-.RSs
-.IPs hidden
+.rS
+.iP hidden
 sets the default value of the 'hidden' flag (boolean)
-.IPs opaque
+.iP opaque
 flag switching between alphablended (transparent) and opaque (fast) mode
-.IPs fifo\ 
+.iP fifo\ 
 path/filename for the FIFO (named pipe connecting mplayer -vf bmovl to the
 controlling application)
 .RE
@@@@ -2946,25 +2951,25 @@@@ controlling application)
 FIFO commands are:
 .RE
 .PD 0
-.RSs
-.IPs "RGBA32 width height xpos ypos alpha clear"
+.rS
+.iP "RGBA32 width height xpos ypos alpha clear"
 followed by width*height*4 Bytes of raw RGBA32 data.
-.IPs "ABGR32 width height xpos ypos alpha clear"
+.iP "ABGR32 width height xpos ypos alpha clear"
 followed by width*height*4 Bytes of raw ABGR32 data.
-.IPs "RGB24 width height xpos ypos alpha clear"
+.iP "RGB24 width height xpos ypos alpha clear"
 followed by width*height*3 Bytes of raw RGB32 data.
-.IPs "BGR24 width height xpos ypos alpha clear"
+.iP "BGR24 width height xpos ypos alpha clear"
 followed by width*height*3 Bytes of raw BGR32 data.
-.IPs "ALPHA width height xpos ypos alpha"
+.iP "ALPHA width height xpos ypos alpha"
 change alpha for area
-.IPs "CLEAR width height xpos ypos"
+.iP "CLEAR width height xpos ypos"
 clear area
-.IPs OPAQUE
+.iP OPAQUE
 disable all alpha transparency.
 Send "ALPHA 0 0 0 0 0" to enable it again.
-.IPs HIDE\ 
+.iP HIDE\ 
 hide bitmap
-.IPs SHOW\ 
+.iP SHOW\ 
 show bitmap
 .RE
 .PD 1
@@@@ -2973,30 +2978,30 @@@@ show bitmap
 Arguments are:
 .RE
 .PD 0
-.RSs
-.IPs "width, height"
+.rS
+.iP "width, height"
 size of image/area
-.IPs "xpos, ypos"
+.iP "xpos, ypos"
 start blitting at X/Y position   
-.IPs alpha
+.iP alpha
 set alpha difference.
 If you set this to -255 you can then send a sequence of ALPHA-commands to set
 the area to -225, -200, -175 etc for a nice fade-in-effect! ;)
-.RSss
+.rP
 0:    same as original
 .br
 255:  makes everything opaque
 .br
 -255: makes everything transparent
-.REss
-.IPs clear
+.rE
+.iP clear
 clear the framebuffer before blitting.
-.RSss
+.rP
 0: The image will just be blitted on top of the old one, so you don't need to
 send 1,8MB of RGBA32 data everytime a small part of the screen is updated.
 .br
 1: clear
-.REss
+.rE
 .RE
 .PD 1
 .TP
@@@@ -3028,20 +3033,20 @@@@ Tile a series of images into a single, b
 
 The parameters are:
 .PD 0
-.RSs
-.IPs xtile
+.rS
+.iP xtile
 number of tiles on the x axis (default: 5)
-.IPs ytile
+.iP ytile
 number of tiles on the y axis (default: 5)
-.IPs output
+.iP output
 Render the tile when 'output' number of frames are reached, where 'output'
 should be a number less than xtile * ytile.
 Missing tiles are left blank.
 You could, for example, write an 8 * 7 tile every 50 frames to have one
 image every 2 seconds @@ 25 fps.
-.IPs start  
+.iP start  
 pixel at the start (x/y) (default: 2)
-.IPs delta
+.iP delta
 pixel between 2 tiles, (x/y) (default: 4)
 .RE
 .PD 1
@@@@ -3056,12 +3061,12 @@@@ surrounding pixels. Just set a rectangle
 it disappear (and sometimes something even uglier appear - your
 mileage may vary).
 .PD 0
-.RSs
-.IPs x,y
+.rS
+.iP x,y
 Position of the top left corner of the logo.
-.IPs w,h
+.iP w,h
 Width and height of the cleared rectangle.
-.IPs t
+.iP t
 Thickness of the fuzzy edge of the rectangle (added to w and h). When
 set to -1, a green rectangle is drawn on the screen to simplify finding
 the right x,y,w,h parameters.
@@@@ -3096,12 +3101,12 @@@@ a frame boundary.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-endpos 56"
+.rS
+.iP "\-endpos 56"
 encode only 56 seconds
-.IPs "\-endpos 01:10:00"
+.iP "\-endpos 01:10:00"
 encode only 1 hour 10 minutes
-.IPs "\-endpos 100mb"
+.iP "\-endpos 100mb"
 encode only 100 MBytes
 .RE
 .PD 1
@@@@ -3112,8 +3117,8 @@@@ Can be used to override the video fourcc
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "-ffourcc div3"
+.rS
+.iP "-ffourcc div3"
 will have the output file contain 'div3' as video fourcc.
 .RE
 .PD 1
@@@@ -3127,22 +3132,22 @@@@ Specify the info header of the resulting
 .br
 Available options are:
 .
-.RSs
-.IPs help\ 
+.rS
+.iP help\ 
 show this description
-.IPs name=<value>
+.iP name=<value>
 title of the subject of the file
-.IPs artist=<value>
+.iP artist=<value>
 artist or author of the original subject of the file
-.IPs genre=<value>
+.iP genre=<value>
 original work category
-.IPs subject=<value>
+.iP subject=<value>
 contents of the file
-.IPs copyright=<value>
+.iP copyright=<value>
 copyright information for the file
-.IPs srcform=<value>
+.iP srcform=<value>
 original form of the material that was digitized
-.IPs comment=<value>
+.iP comment=<value>
 general comments about the file or the subject of the file
 .RE
 .
@@@@ -3165,12 +3170,12 @@@@ Use \-oac help to get a list of availabl
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "-oac copy"
+.rS
+.iP "-oac copy"
 no encoding, just streamcopy
-.IPs "-oac pcm"
+.iP "-oac pcm"
 encode to uncompressed PCM
-.IPs "-oac mp3lame"
+.iP "-oac mp3lame"
 encode to MP3 (using Lame)
 .RE
 .PD 1
@@@@ -3182,10 +3187,10 @@@@ Use \-of help to get a list of available
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "-of avi"
+.rS
+.iP "-of avi"
 encode to avi (default)
-.IPs "-of mpeg"
+.iP "-of mpeg"
 encode to mpeg
 .RE
 .PD 1
@@@@ -3203,14 +3208,14 @@@@ Use \-ovc help to get a list of availabl
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ovc copy"
+.rS
+.iP "\-ovc copy"
 no encoding, just streamcopy
-.IPs "\-ovc divx4"
+.iP "\-ovc divx4"
 encode to DivX4/\:DivX5
-.IPs "\-ovc rawrgb"
+.iP "\-ovc rawrgb"
 encode to uncompressed RGB24
-.IPs "\-ovc lavc"
+.iP "\-ovc lavc"
 encode with a libavcodec codecs
 .RE
 .PD 1
@@@@ -3228,14 +3233,14 @@@@ Maximal skipable frames after non-skippe
 Increment verbose level (more \-v means more verbosity).
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 only some informal output (default)
-.IPs 1
+.iP 1
 some basic debug infos, avi header, function values (init debug)
-.IPs 2
+.iP 2
 print avi indexes, chunk inputs, more debug infos (player debug)
-.IPs 3
+.iP 3
 prints everything related to input parsers (parser debug)
 .RE
 .PD 1
@@@@ -3273,10 +3278,10 @@@@ get help
 .TP
 .B br=<value>
 specify bitrate
-.RSs
-.IPs 4\-16000
+.rS
+.iP 4\-16000
 (in kbit)
-.IPs 16001\-24000000
+.iP 16001\-24000000
 (in bit)
 .RE
 .TP
@@@@ -3316,13 +3321,13 @@@@ pass=2.
 Override the pass argument and use XviD VBR Library instead of DivX4 VBR.
 Available options are:
 .
-.RSs
-.IPs 0
+.rS
+.iP 0
 one pass encoding (as in not putting pass on the command line)
-.IPs 1
+.iP 1
 Analysis (first) pass of two pass encoding.
 The resulting AVI file can be directed to /dev/null.
-.IPs 2
+.iP 2
 Final (second) pass of two pass encoding.
 .RE
 
@@@@ -3336,16 +3341,16 @@@@ get help
 .B vbr=<0\-4>
 variable bitrate method
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 cbr
-.IPs 1
+.iP 1
 mt
-.IPs 2
+.iP 2
 rh (default)
-.IPs 3
+.iP 3
 abr
-.IPs 4
+.iP 4
 mtrh
 .RE
 .PD 1
@@@@ -3376,26 +3381,26 @@@@ set audio input gain
 .B mode=<0\-3>
 (default: auto)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 stereo
-.IPs 1
+.iP 1
 joint-stereo
-.IPs 2
+.iP 2
 dualchannel
-.IPs 3
+.iP 3
 mono
 .RE
 .PD 1
 .TP
 .B padding=<0\-2>
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no
-.IPs 1
+.iP 1
 all
-.IPs 2
+.iP 2
 adjust
 .RE
 .PD 1
@@@@ -3406,16 +3411,16 @@@@ quality and higher bitrates.
 .TP
 .B preset=<value>
 preset values
-.RSs
-.IPs medium
+.rS
+.iP medium
 VBR encoding, good quality, 150\-180 kbps bitrate range.
-.IPs standard
+.iP standard
 VBR encoding, high quality, 170\-210 kbps bitrate range.
-.IPs extreme
+.iP extreme
 VBR encoding, very high quality, 200\-240 kbps bitrate range.
-.IPs insane
+.iP insane
 CBR encoding, highest preset quality, 320 kbps bitrate.
-.IPs <8\-320>
+.iP <8\-320>
 ABR encoding at average given kbps bitrate.
 .RE
 
@@@@ -3423,16 +3428,16 @@@@ ABR encoding at average given kbps bitra
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs fast:preset=standard
+.rS
+.iP fast:preset=standard
 for most people on most music and already quite high in quality.
-.IPs cbr:preset=192
+.iP cbr:preset=192
 encode with ABR presets at a 192 kbps forced constant bitrate.
-.IPs preset=172
+.iP preset=172
 encode with ABR presets at a 172 kbps average bitrate.
-.IPs preset=extreme
+.iP preset=extreme
 for people with extremely good hearing and similar equipment.
-.IPs preset=help
+.iP preset=help
 print additional options and informations on presets settings.
 .RE
 .PD 1
@@@@ -3442,8 +3447,8 @@@@ print additional options and information
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
+.rS
+.iP vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
 .RE
 .PD 1
 
@@@@ -3451,52 +3456,52 @@@@ print additional options and information
 .B vcodec=<value>
 use the specified codec (there is no default, you must specify it):
 .PD 0
-.RSs
-.IPs mjpeg
+.rS
+.iP mjpeg
 Motion JPEG
-.IPs ljpeg
+.iP ljpeg
 Lossless JPEG
-.IPs h263
+.iP h263
 H263
-.IPs h263p
+.iP h263p
 H263 Plus
-.IPs mpeg4
+.iP mpeg4
 DivX 4/\:5
-.IPs msmpeg4
+.iP msmpeg4
 DivX 3
-.IPs msmpeg4v2
+.iP msmpeg4v2
 MS MPEG4v2
-.IPs wmv1
+.iP wmv1
 Windows Media Video, version 1 (aka WMV7)
-.IPs wmv2
+.iP wmv2
 Windows Media Video, version 2 (aka WMV8)
-.IPs rv10
+.iP rv10
 an old RealVideo codec
-.IPs mpeg1video
+.iP mpeg1video
 MPEG1 video
-.IPs mpeg2video
+.iP mpeg2video
 MPEG2 video
-.IPs huffyuv
+.iP huffyuv
 HuffYUV
-.IPs asv1
+.iP asv1
 ASUS Video v1
-.IPs asv2
+.iP asv2
 ASUS Video v2
-.IPs ffv1
+.iP ffv1
 FFmpeg's lossless video codec
 .RE
 .PD 1
 .TP
 .B vqmin=<1\-31>
 minimum quantizer (pass\ 1/\:2)
-.RSs
-.IPs 1
+.rS
+.iP 1
 Not recommended (much larger file, little quality difference and weird side
 effects: msmpeg4, h263 will be very low quality, ratecontrol will be confused
 resulting in lower quality and some decoders will not be able to decode it).
-.IPs 2
+.iP 2
 Recommended for normal mpeg4/mpeg1video encoding (default).
-.IPs 3
+.iP 3
 Recommended for h263(p)/msmpeg4.  The reason for preferring 3 over 2 is that
 2 could lead to overflows (this will be fixed for h263(p) by changing the
 quantizer per MB in the future, msmpeg4 cannot be fixed as it does not support
@@@@ -3523,10 +3528,10 @@@@ maximum quantizer difference between I o
 .B vmax_b_frames=<0\-4>
 maximum number of B frames between non B frames:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no B frames (default)
-.IPs 0\-2
+.iP 0\-2
 sane range for MPEG4
 .RE
 .PD 1
@@@@ -3537,18 +3542,18 @@@@ Note: 0\-3 currently ignores the amount 
 so quality may be low.
 Available methods are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 none (very low quality)
-.IPs 1
+.iP 1
 full (slow)
-.IPs 2
+.iP 2
 log (low quality)
-.IPs 3
+.iP 3
 phods (low quality)
-.IPs 4
+.iP 4
 EPZS (default)
-.IPs 5
+.iP 5
 X1 (experimental)
 .RE
 .PD 1
@@@@ -3558,12 +3563,12 @@@@ Macroblock decision algorithm (high qual
 block in all modes and choose the best.
 This is slow but results in better quality and file size.
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 use mbcmp (default)
-.IPs 1
+.iP 1
 select the MB mode which needs the fewest bits (=vhq)
-.IPs 2
+.iP 2
 select the MB mode which has the best rate distortion
 .RE
 .PD 1
@@@@ -3584,10 +3589,10 @@@@ For a strict MPEG1/\:2/\:4 compliance th
 .TP
 .B vb_strategy=<0\-1>
 strategy to choose between I/\:P/\:B frames (pass\ 2):
-.RSs
-.IPs 0
+.rS
+.iP 0
 always use the maximum number of B frames (default)
-.IPs 1
+.iP 1
 avoid B frames in high motion scenes (will cause bitrate misprediction)
 .RE
 .TP
@@@@ -3595,10 +3600,10 @@@@ avoid B frames in high motion scenes (wi
 Activates internal two pass mode, only specify if you wish to use two pass
 encoding (default: disabled).
 .PD 0
-.RSs
-.IPs 1
+.rS
+.iP 1
 first pass
-.IPs 2
+.iP 2
 second pass
 .RE
 .PD 1
@@@@ -3607,10 +3612,10 @@@@ second pass
 huffyuv:
 .RE
 .PD 0
-.RSs
-.IPs pass 1
+.rS
+.iP pass 1
 saves statistics
-.IPs pass 2
+.iP pass 2
 encodes with an optimal Huffman table based upon pass 1 statistics.
 .RE
 .PD 1
@@@@ -3625,9 +3630,9 @@@@ The aspect parameter can be given as a r
 .RS
 .I EXAMPLE:
 .RE
-.RSs
+.rS
 .PD 0
-.IPs "aspect=16/9 or aspect=1.78"
+.iP "aspect=16/9 or aspect=1.78"
 .PD 1
 .RE
 .TP
@@@@ -3638,12 +3643,12 @@@@ filter chain.
 .TP
 .B vbitrate=<value>
 specify bitrate (pass\ 1/\:2).  Warning: 1kBit = 1000 Bits.
-.RSs
-.IPs 4\-16000
+.rS
+.iP 4\-16000
 (in kbit)
-.IPs 16001\-24000000
+.iP 16001\-24000000
 (in bit)
-.IPs 800
+.iP 800
 default
 .RE
 .TP
@@@@ -3692,12 +3697,12 @@@@ vqmin= <ip_quant>:vqmax= <ip_quant>:vb_q
 .B vqblur=<0.0\-1.0>
 quantizer blur (pass1) Larger values will average the quantizer more over
 time (slower change).
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 qblur disabled
-.IPs 0.5
+.iP 0.5
 (default)
-.IPs 1.0
+.iP 1.0
 average the quantizer over all previous frames
 .RE
 .TP
@@@@ -3712,14 +3717,14 @@@@ quantizer compression, depends upon vrc_
 main ratecontrol equation (pass\ 1/\:2):
 
 .PD 0
-.RSs
-.IPs 1\ \ \ \ 
+.rS
+.iP 1\ \ \ \ 
 constant bitrate
-.IPs tex\ \ 
+.iP tex\ \ 
 constant quality
-.IPs 1+(tex/\:avgTex-1)*qComp
+.iP 1+(tex/\:avgTex-1)*qComp
 approximately the equation of the old ratecontrol code
-.IPs tex^qComp
+.iP tex^qComp
 with qcomp 0.5 or something like that (default)
 .RE
 .PD 1
@@@@ -3731,36 +3736,36 @@@@ infix operators: +,-,*,/,^
 .RS
 variables:
 .RE
-.RSs
-.IPs tex\ \ 
+.rS
+.iP tex\ \ 
 texture complexity
-.IPs iTex,pTex
+.iP iTex,pTex
 intra, non intra texture complexity
-.IPs avgTex
+.iP avgTex
 average texture complexity
-.IPs avgIITex
+.iP avgIITex
 average intra texture complexity in I frames
-.IPs avgPITex
+.iP avgPITex
 average intra texture complexity in P frames
-.IPs avgPPTex
+.iP avgPPTex
 average non intra texture complexity in P frames
-.IPs avgBPTex
+.iP avgBPTex
 average non intra texture complexity in B frames
-.IPs mv\ \ \ 
+.iP mv\ \ \ 
 Bits used for motion vectors
-.IPs fCode
+.iP fCode
 maximum length of motion vector in log2 scale
-.IPs iCount
+.iP iCount
 number of intra macro blocks / number of macro blocks
-.IPs var\ \ 
+.iP var\ \ 
 spatial complexity
-.IPs mcVar
+.iP mcVar
 temporal complexity
-.IPs qComp
+.iP qComp
 qcomp from the command line
-.IPs isI, isP, isB
+.iP isI, isP, isB
 is 1 if picture type is I/\:P/\:B else 0
-.IPs Pi,E\ 
+.iP Pi,E\ 
 see your favorite math book
 .RE
 
@@@@ -3768,16 +3773,16 @@@@ see your favorite math book
 functions:
 .RE
 .PD 0
-.RSs
-.IPs max(a,b),min(a,b)
+.rS
+.iP max(a,b),min(a,b)
 maximum / minimum
-.IPs gt(a,b)
+.iP gt(a,b)
 is 1 if a>b, 0 otherwise
-.IPs lt(a,b)
+.iP lt(a,b)
 is 1 if a<b, 0 otherwise
-.IPs eq(a,b)
+.iP eq(a,b)
 is 1 if a==b, 0 otherwise
-.IPs "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
+.iP "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
 .RE
 .PD 1
 .
@@@@ -3786,10 +3791,10 @@@@ is 1 if a==b, 0 otherwise
 User specified quality for specific parts (ending, credits, ..) (pass\ 1/\:2).
 The options are <start-frame>, <end-frame>, <quality>[/\:<start-frame>,
 <end-frame>, <quality>[/...]]:
-.RSs
-.IPs "quality (2\-31)"
+.rS
+.iP "quality (2\-31)"
 quantizer
-.IPs "quality (\-500\-0)"
+.iP "quality (\-500\-0)"
 quality correction in %
 .RE
 .TP
@@@@ -3799,10 +3804,10 @@@@ initial complexity (pass\ 1)
 .B vqsquish=<0,1>
 specify how to keep the quantizer between qmin and qmax (pass\ 1/\:2):
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 use clipping
-.IPs 1
+.iP 1
 use a nice differentiable function (default)
 .RE
 .PD 1
@@@@ -3812,10 +3817,10 @@@@ single coefficient elimination threshold
 Negative values will also consider the dc coefficient (should be at least -4
 or lower for encoding at quant=1):
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs -4
+.iP -4
 (JVT recommendation)
 .RE
 .PD 1
@@@@ -3825,22 +3830,22 @@@@ single coefficient elimination threshold
 Negative values will also consider the dc coefficient (should be at least -4
 or lower for encoding at quant=1):
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 7
+.iP 7
 (JVT recommendation)
 .RE
 .TP
 .B vstrict=<-1,0,1>
 strict standard compliance
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 1
+.iP 1
 only recommended if you want to feed the output into the mpeg4 reference
 decoder
-.IPs -1
+.iP -1
 allows non-standard YV12 huffyuv encoding (20% smaller files, but cannot be
 played by the official huffyuv codec)
 .RE
@@@@ -3852,12 +3857,12 @@@@ Adds 2 Bytes per video packet, improves 
 unreliable channels (eg.\& streaming over the internet)
 Each video packet will be encoded in 3 separate partitions:
 .PD 0
-.RSs
-.IPs "1. MVs"
+.rS
+.iP "1. MVs"
 (movement)
-.IPs "2. DC coefficients"
+.iP "2. DC coefficients"
 (low res picture)
-.IPs "3. AC coefficients"
+.iP "3. AC coefficients"
 (details)
 .RE
 .PD 1
@@@@ -3872,10 +3877,10 @@@@ as without partitioning an error will tr
 .TP
 .B vpsize=<0\-10000>
 video packet size, improves error-resistance (see \-vdpart option too):
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 100-1000
+.iP 100-1000
 good choice
 .RE
 .TP
@@@@ -3885,16 +3890,16 @@@@ grayscale only encoding (faster) (defaul
 .B vfdct=<0\-10>
 dct algorithm:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 automatically select a good one (default)
-.IPs 1
+.iP 1
 fast integer
-.IPs 2
+.iP 2
 accurate integer
-.IPs 3
+.iP 3
 mmx
-.IPs 4
+.iP 4
 mlib
 .RE
 .PD 1
@@@@ -3904,22 +3909,22 @@@@ idct algorithm.
 Note: To the best of our knowledge all these IDCTs do pass the IEEE1180
 tests.
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 automatically select a good one (default)
-.IPs 1
+.iP 1
 jpeg reference integer
-.IPs 2
+.iP 2
 simple
-.IPs 3
+.iP 3
 simplemmx
-.IPs 4
+.iP 4
 libmpeg2mmx (inaccurate, DON'T USE for encoding with keyint >100)
-.IPs 5
+.iP 5
 ps2
-.IPs 6:
+.iP 6:
 mlib
-.IPs 7
+.iP 7
 arm
 .RE
 .PD 1
@@@@ -3929,10 +3934,10 @@@@ luminance masking.
 Warning: Be careful, too large values can cause disastrous things.
 Warning2: Large values might look good on some monitors but may look horrible
 on other monitors:
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 disabled (default)
-.IPs 0.0\-0.3
+.iP 0.0\-0.3
 sane range
 .RE
 .TP
@@@@ -3941,10 +3946,10 @@@@ darkness masking.
 Warning: be careful, too large values can cause disasterous things.
 Warning2: large values might look good on some monitors but may look horrible
 on other monitors / TV / TFT:
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 disabled (default)
-.IPs 0.0\-0.3
+.iP 0.0\-0.3
 sane range
 .RE
 .TP
@@@@ -3957,10 +3962,10 @@@@ Larger values help against blockiness, i
 decoding.
 Tip: Crop any black borders completely as they will reduce the quality
 of the macro blocks (also applies without scplx_mask).
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 disabled (default)
-.IPs 0.0\-0.5
+.iP 0.0\-0.5
 sane range
 .RE
 .TP
@@@@ -3975,28 +3980,28 @@@@ average.
 use interlaced dct
 .TP
 .B format=<value>
-.RSs
-.IPs YV12
+.rS
+.iP YV12
 default
-.IPs 444P
+.iP 444P
 for ffv1
-.IPs 422P
+.iP 422P
 for huffyuv, lossless jpeg and ffv1
-.IPs 411P,YVU9
+.iP 411P,YVU9
 for lossless jpeg and ffv1
-.IPs BGR32
+.iP BGR32
 for lossless jpeg only
 .RE
 .TP
 .B pred
 (for huffyuv)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 left prediction
-.IPs 1
+.iP 1
 plane/gradient prediction
-.IPs 2
+.iP 2
 median prediction
 .RE
 .PD 1
@@@@ -4004,16 +4009,16 @@@@ median prediction
 .B pred
 (for lossless jpeg)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 left prediction
-.IPs 1
+.iP 1
 top prediction
-.IPs 2
+.iP 2
 topleft prediction
-.IPs 3
+.iP 3
 plane/gradient prediction
-.IPs 6
+.iP 6
 mean prediction
 .RE
 .PD 1
@@@@ -4031,24 +4036,24 @@@@ comparison function for full pel motion 
 .B subcmp=<0\-2000>
 comparison function for sub pel motion estimation
 .PD 0
-.RSs
-.IPs "0 (SAD)"
+.rS
+.iP "0 (SAD)"
 sum of absolute differences, fast (default)
-.IPs "1 (SSE)"
+.iP "1 (SSE)"
 sum of squared errors
-.IPs "2 (SATD)"
+.iP "2 (SATD)"
 sum of absolute hadamard transformed differences
-.IPs "3 (DCT)"
+.iP "3 (DCT)"
 sum of absolute dct transformed differences
-.IPs "4 (PSNR)"
+.iP "4 (PSNR)"
 sum of the squared quantization errors (don't use, low quality)
-.IPs "5 (BIT)"
+.iP "5 (BIT)"
 number of bits needed for the block
-.IPs "6 (RD)"
+.iP "6 (RD)"
 rate distortion optimal, slow
-.IPs "7 (ZERO)"
+.iP "7 (ZERO)"
 0
-.IPs +256\ 
+.iP +256\ 
 use chroma too, doesn't work (correctly) with B frames currently
 .RE
 .PD 1
@@@@ -4059,14 +4064,14 @@@@ Diamond type and size for motion estimat
 .B dia=<\-99\-6>
 Diamond type & size for motion estimation.
 Note: The sizes of the normal diamonds and shape adaptive ones dont have the same meaning
-.RSs
-.IPs \-3
+.rS
+.iP \-3
 shape adaptive (fast) diamond with size 3
-.IPs \-2
+.iP \-2
 shape adaptive (fast) diamond with size 2
-.IPs \-1
+.iP \-1
 experimental
-.IPs  1
+.iP  1
 normal size=1 diamond (default) =EPZS type diamond
 .nf
 .ne
@@@@ -4075,7 +4080,7 @@@@ normal size=1 diamond (default) =EPZS ty
       0 
 .fi
 .br
-.IPs 2
+.iP 2
 normal size=2 diamond
 .nf
 .ne
@@@@ -4095,12 +4100,12 @@@@ vs bitrate sense (assuming that there wo
 by the IDCT, which is obviously not the case) it simply finds a block for
 the minimum of error and lambda*bits.
 .PD 0
-.RSs
-.IPs lambda
+.rS
+.iP lambda
 qp dependant constant
-.IPs bits\ 
+.iP bits\ 
 amount of bits needed to encode the block
-.IPs error
+.iP error
 sum of squared errors of the quantization
 .RE
 .PD 1
@@@@ -4117,10 +4122,10 @@@@ this has no effect if mbd=0
 .B last_pred=<0\-99>
 Amount of motion predictors from the previous frame
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 (default)
-.IPs a
+.iP a
 will use 2a+1 x 2a+1 macro block square of motion vector predictors from the
 previous frame
 .RE
@@@@ -4129,12 +4134,12 @@@@ previous frame
 .B preme=<0\-2> 
 motion estimation pre-pass
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled
-.IPs 1
+.iP 1
 only after I frames (default)
-.IPs 2
+.iP 2
 always
 .RE
 .PD 1
@@@@ -4338,16 +4343,16 @@@@ enable a better prediction of AC compone
 .B vhq=<0\-4>
 enable a higher quality ME search using DCT, faster to slower:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 off (default)
-.IPs 1
+.iP 1
 mode decision (inter/intra MB)
-.IPs 2
+.iP 2
 limited search
-.IPs 3
+.iP 3
 medium search
-.IPs 4
+.iP 4
 wide search
 .RE
 .PD 1
@


1.1
log
@* no FAAD for now (it's broken)
* fix build
* fix manual page
* fix one sprintf -> snprintf while here
* regenerate patches, PLIST
@
text
@d1 1
a1 1
$MirBSD$
d5 1
a5 1
+.\" $MirBSD$
@

