head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.52.39;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.52.39;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-icb_unix_c,v 1.1 2001/05/14 16:42:54 millert Exp $
--- icb/unix.c.orig	Fri Feb 24 14:20:31 1995
+++ icb/unix.c	Mon May 14 10:33:04 2001
@@@@ -9,11 +9,35 @@@@
 #include "externs.h"
 #include <pwd.h>
 #include <sys/dir.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
 
 #undef stty
 #undef gtty
 
-#ifndef SYSV
+#ifdef SYSV
+
+#define USE_TERMIO
+#include <termio.h>
+#define TTYSTRUCT termio
+#define stty(fd,buf) ioctl((fd),TCSETA,(buf))
+#define gtty(fd,buf) ioctl((fd),TCGETA,(buf))
+
+#else /* SYSV */
+
+# ifdef BSD4_4
+# define USE_TERMIO
+# include <termios.h>
+# define TTYSTRUCT termios
+# define stty(fd,buf) ioctl((fd),TIOCSETA,(buf))
+# define gtty(fd,buf) ioctl((fd),TIOCGETA,(buf))
+
+# endif /* BSD4_4 */
+
+#endif /* SYSV */
+
+#ifndef USE_TERMIO /* neither case above (SYSV or BSD4_4) */
 
 #ifdef linux
 #include <bsd/sgtty.h>
@@@@ -22,18 +46,15 @@@@
 #endif
 
 #define TTYSTRUCT sgttyb
-#define stty(fd,buf) ioctl((fd),TIOCSETN,(buf))
+#define stty(fd,buf) ioctl((fd),TIOCSETP,(buf))
 #define gtty(fd,buf) ioctl((fd),TIOCGETP,(buf))
-#else /* SYSV */
-#include <termio.h>
-#define TTYSTRUCT termio
-#define stty(fd,buf) ioctl((fd),TCSETA,(buf))
-#define gtty(fd,buf) ioctl((fd),TCGETA,(buf))
-#endif /* SYSV */
+#endif
 
 char *getlogin();
 
 struct TTYSTRUCT origtty;	/* holds the user's original term settings */
+struct stat origtty_stats;	/* holds termainal stats */
+char *mytty = NULL;		/* holds terminal name */
 
 int badttyinfo = 0;	/* used when running under some weird modes */
 
@@@@ -79,13 +100,13 @@@@ FILE *fp;
 pushback(c)
 char c;
 {
-#ifndef SYSV
+#ifndef USE_TERMIO
 	if (ioctl(0, TIOCSTI, &c) < 0)
 		perror("TIOCSTI ioctl failed");
-#else /* SYSV */
+#else /* USE_TERMIO */
 	if (ungetc(c,stdin) == EOF)
 		perror("ungetc() failed");
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 }
 
 
@@@@ -94,25 +115,30 @@@@ char c;
 
 getterm()
 {
-#ifndef SYSV
+	/* get terminal stats */
+	if ((mytty = ttyname(STDERR_FILENO))) {
+		if (stat(mytty, &origtty_stats)) mytty = NULL;
+	}
+
+#ifndef USE_TERMIO
 	struct ltchars lt;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 	/* get tty settings */
 	if (gtty(0,&origtty) < 0) {
 		badttyinfo++;
 		ttyinfo.erase = '\b';	/* ^H */
 		ttyinfo.kill = '\025';	/* ^U */
 	} else {
-#ifndef SYSV
+#ifndef USE_TERMIO
 		ttyinfo.erase = origtty.sg_erase;
 		ttyinfo.kill = origtty.sg_kill;
-#else /* SYSV */
+#else /* USE_TERMIO */
 		ttyinfo.erase = origtty.c_cc[VERASE];
 		ttyinfo.kill = origtty.c_cc[VKILL];
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 	}
 
-#ifndef SYSV
+#ifndef USE_TERMIO
 	/* get local special chars */
  	if (ioctl(0, TIOCGLTC, &lt) < 0) {
 		ttyinfo.redraw = '\022'; /* ^R */
@@@@ -121,10 +147,10 @@@@ getterm()
 		ttyinfo.redraw = lt.t_rprntc;
 		ttyinfo.werase = lt.t_werasc;
 	}
-#else /* SYSV */
+#else /* USE_TERMIO */
 	ttyinfo.redraw = '\022'; /* ^R */
 	ttyinfo.werase = '\027'; /* ^W */
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	/* get the current window size */
 	getwinsize();
@@@@ -138,21 +164,24 @@@@ icbterm()
 {
 	struct TTYSTRUCT tty;
 
+	/* disable biff/mesg */
+	if (mytty)
+		chmod(mytty, origtty_stats.st_mode & ~(S_IXUSR | S_IWGRP));
+
 	if (badttyinfo)
 		return;
 
-
 	bcopy((char *)&origtty, (char *)&tty, (unsigned)sizeof(struct TTYSTRUCT));
 
 	/* turn on cbreak - turn off echo */
-#ifndef SYSV
+#ifndef USE_TERMIO
 	tty.sg_flags |= CBREAK;
 	tty.sg_flags &= ~ECHO;
-#else /* SYSV */
+#else /* USE_TERMIO */
 	tty.c_lflag  &= ~ICANON;
 	tty.c_cc[VEOF] = 1;
 	tty.c_lflag &= ~ECHO;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	echomode = 0;
 	/* set the new flags */
@@@@ -167,6 +196,10 @@@@ icbterm()
 
 restoreterm()
 {
+	/* restore terminal stats */
+	if (mytty)
+		chmod(mytty, origtty_stats.st_mode);
+
 	if (badttyinfo)
 		return;
 
@@@@ -258,11 +291,11 @@@@ echo()
 	}
 
 	/* turn on echo */
-#ifndef SYSV
+#ifndef USE_TERMIO
 	tty.sg_flags |= ECHO;
-#else /* SYSV */
+#else /* USE_TERMIO */
 	tty.c_lflag  |= ECHO;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	echomode = 1;
 
@@@@ -287,11 +320,11 @@@@ noecho()
 	}
 
 	/* turn off echo */
-#ifndef SYSV
+#ifndef USE_TERMIO
 	tty.sg_flags &= ~ECHO;
-#else /* SYSV */
+#else /* USE_TERMIO */
 	tty.c_lflag  &= ~ECHO;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	echomode = 0;
 
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
