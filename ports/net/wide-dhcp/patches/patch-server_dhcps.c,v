head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.19.53.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.53.11;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@--- server/dhcps.c.orig	Sun Jul 19 09:16:53 1998
+++ server/dhcps.c	Tue Dec 22 09:19:18 1998
@@@@ -136,7 +136,7 @@@@
 int  nmacaddr;
 #endif
 
-void
+int
 main(argc, argv)
   int argc;
   char **argv;
@@@@ -146,7 +146,7 @@@@
   struct if_info *ifp = NULL;          /* pointer to interface */
   char *option = NULL;                 /* command line option */
   char msgtype;                        /* DHCP message type */
-  struct sockaddr_in my_addr, any_addr;
+  struct sockaddr_in my_addr;
   struct ifreq ifreq;
 
   bzero(&ifreq, sizeof(ifreq));
@@@@ -228,9 +228,19 @@@@
 #define LOG_PERROR	0	/* Don't bother if not defined... */
 #endif
   if (debug == 1) {
+#ifndef __OpenBSD__
     openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+#else
+    /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+    openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+#endif
   } else {
+#ifndef __OpenBSD__
     openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL0);
+#else
+    /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+    openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL1);
+#endif
   }
 
   init_db();               /* initialize databases */
@@@@ -540,6 +550,11 @@@@
 static void
 init_db()
 {
+#ifdef __OpenBSD__
+  int dump_fd;
+  char *dump_tmp = ADDRPOOL_DUMP ".XXXXXXXX";
+#endif
+
   if (addrpool_db[0] == '\0') strcpy(addrpool_db, ADDRPOOL_DB);
   if ((addrpool_dbfp = fopen(addrpool_db, "r")) == NULL) {
     syslog(LOG_ERR, "Cannot open the resource database \"%s\"", addrpool_db);
@@@@ -563,7 +578,23 @@@@
     syslog(LOG_ERR, "Cannot open the binding database \"%s\"", binding_db);
     exit(1);
   }
+#ifdef __OpenBSD__
+  if ((dump_fd = mkstemp(dump_tmp)) < 0) {
+    syslog(LOG_ERR, "Cannot open temporary resource dump file");
+    exit(1);
+  }
   unlink(ADDRPOOL_DUMP);
+  if (link(dump_tmp, ADDRPOOL_DUMP) < 0) {
+    syslog(LOG_ERR, "Cannot link \"%s\" to \"%s\"", dump_tmp, ADDRPOOL_DUMP);
+    close(dump_fd);
+    unlink(dump_tmp);
+    exit(1);
+  }
+  close(dump_fd);
+  unlink(dump_tmp);
+#else
+  unlink(ADDRPOOL_DUMP);
+#endif
   if ((dump_fp = fopen(ADDRPOOL_DUMP, "w+")) == NULL) {
     syslog(LOG_ERR, "Cannot open the resource dump file \"%s\"",ADDRPOOL_DUMP);
     exit(1);
@@@@ -1921,7 +1952,11 @@@@
     snd.dhcp->options[off_options] = END;
   } else if (off_extopt > 0 && off_extopt < maxoptlen - DFLTOPTLEN &&
 	     sbufvec[1].iov_base != NULL) {
+#ifndef __OpenBSD__
     sbufvec[1].iov_base[off_extopt++] = END;
+#else
+    *((char *)sbufvec[1].iov_base + off_extopt++) = END;
+#endif
   }
 
   if (off_extopt < sbufvec[1].iov_len) {
@@@@ -2378,7 +2413,11 @@@@
   char *inserted;
   char flag;
 {
+#ifdef __OpenBSD__
+  u_int32_t *addr = 0;
+#else
   u_Long *addr = 0;
+#endif
   char option[6];
   int symbol = 0;
   int retval = 0;
@@@@ -2939,7 +2978,11 @@@@
       len -= done;
       off_options += done; /* invalid offset, So, to access
 					    here will cause fatal error */
+#ifndef __OpenBSD__
       bcopy(&opt[done], &sbufvec[1].iov_base[off_extopt], len);
+#else
+      bcopy(&opt[done], (char *)sbufvec[1].iov_base + off_extopt, len);
+#endif
       off_extopt += len;
       return(0);
     }
@@@@ -3016,7 +3059,7 @@@@
     return(GOOD);
   }
 
-#if defined(__bsdi__) || (__FreeBSD__ >= 2)
+#if defined(__bsdi__) || (__FreeBSD__ >= 2) || defined(__OpenBSD__)
   delarp(ip);
 #else
   delarp(ip, sockfd);
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
