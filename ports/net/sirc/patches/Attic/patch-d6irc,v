head	1.3;
access;
symbols
	MIRBSD_5:1.2
	MIRBSD_4:1.2;
locks; strict;
comment	@# @;


1.3
date	2003.07.06.11.27.09;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.03.24.18.32.24;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.23.15.23.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update patches a bit (only cosmetic changes yet)
@
text
@$MirBSD: patch-d6irc,v 1.2 2003/03/24 18:32:24 tg Exp $
--- d6irc.orig	Mon Mar 24 18:29:07 2003
+++ d6irc	Mon Mar 24 18:29:54 2003
@@@@ -1,13 +1,15 @@@@
-#!/usr/local/bin/perl
+#!/usr/bin/perl
 
 # dsirc: dumb-mode small irc client in perl
 # by orabidoo <roger.espel.llima@@pobox.com>
 #
 # Copyright (C) 1995-1997 Roger Espel Llima
+# Copyright (c) 2001-2003 Thorsten "mirabile" Glaser
+# $MirBSD: patch-d6irc,v 1.2 2003/03/24 18:32:24 tg Exp $
 #
 # for a full-screen termcap interface, use this with ssfe
 #
-# use: dsirc [options] [nick [server[:port[:password]]]]
+# use: dsirc[6] [options] [nick [server[:port[:password]]]]
 # options are:
 #	-p = specify port number
 #	-i = specify IRCNAME
@@@@ -20,7 +22,7 @@@@
 #	-Q = don't load system sircrc or sircrc.pl
 #	-R = run in restricted (secure) mode
 #	-r = raw mode (no control-char filtering)
-#	-8 = 8-bit mode
+#	-7 = 7-bit (ISO_646.irv:1991) mode
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@@@ -36,9 +38,9 @@@@
 
 $version='2.211';
 $date='10 Mar 1998';
-$add_ons='';
+$add_ons='+[mirabile-p4]-utf8-IPv6';
 
-$libdir=$ENV{"SIRCLIB"} || ".";
+$libdir=$ENV{"SIRCLIB"} || "PREFIX.SED/share/sirc/";
 push(@@INC, $libdir, $ENV{"HOME"});
 @@loadpath=($ENV{"HOME"}."/.sirc", $libdir, ".");
 
@@@@ -52,6 +54,8 @@@@ even there! Have you even bothered to ru
 }
 
 if ($] >= 5 && (eval "use Socket;", $@@ eq '')) {
+    print "used Socket\n";
+    use Socket6;
 } elsif (-f "$libdir/sircsock.ph") {
   do "$libdir/sircsock.ph";
 } elsif (-f $ENV{'HOME'}."/sircsock.ph") {
@@@@ -63,24 +67,25 @@@@ couldn't be found. Have you even bothere
     exit;
 }
 
+use Encode;
 &Getopts('n:s:p:u:i:l:L:H:rqQR78');
 
 %set=("LOGFILE", "", "LOG", "off", "PRINTUH", "none", "PRINTCHAN", "off",
- 	"LOCALHOST", "", "CTCP", "noflood", "SENDAHEAD", 4096,
+ 	"LOCALHOST", "", "CTCP", "no", "SENDAHEAD", 4096,
 	"USERINFO", "", "FINGER", "", "IRCNAME", "", "EIGHT_BIT", "on",
 	"LOADPATH", join(":", @@loadpath), "CTRL_T", "/next");
 
 $raw_mode=$opt_r || (!-t STDOUT);
 $ansi=!$raw_mode && $ENV{"TERM"} =~ /^vt|^xterm|^ansi/i;
 $server=$opt_s || $ARGV[1] || $ENV{"SIRCSERVER"} || $ENV{"IRCSERVER"} ||
-                  "irc.primenet.com";
+                  "irc.freenode.net";
 $port0=$opt_p || $ENV{"SIRCPORT"} || $ENV{"IRCPORT"} || 6667;
 $username=$opt_u || $ENV{"SIRCUSER"} || $ENV{"IRCUSER"} || (getpwuid($<))[0] ||
                 $ENV{"USER"} || "blah";
-$set{"IRCNAME"}=$opt_i || $ENV{"SIRCNAME"} || $ENV{"IRCNAME"} || "sirc user";
+$set{"IRCNAME"}=$opt_i || $ENV{"SIRCNAME"} || $ENV{"IRCNAME"} || "/whois your father?";
 $nick=$opt_n || $ARGV[0] || $ENV{"SIRCNICK"} || $ENV{"IRCNICK"} || $username;
-$set{"FINGER"}=$ENV{"IRCFINGER"} || "keep your fingers to yourself";
-$set{"USERINFO"}=$ENV{"USERINFO"} || "yep, I'm a user";
+$set{"FINGER"}=$ENV{"IRCFINGER"} || "keep your fingers touching yourself";
+$set{"USERINFO"}=$ENV{"USERINFO"} || "yep, I'm a happy OpenBSD user";
 ($server, $port, $pass)=split(/[\s:]+/, $server);
 $port || ($port=$port0);
 $server0=$server1=$server;
@@@@ -91,10 +96,11 @@@@ $rcfile=$opt_L || $ENV{"SIRCRC"} || $ENV
   if $opt_L || !$opt_q;
 $sysrc=$libdir."/sircrc" if $libdir ne '.' && !$opt_Q;
 $set{"LOGFILE"}=$logfile=$ENV{'HOME'}."/sirc.log";
-$opt_8 || ($set{"EIGHT_BIT"}="off");
+$opt_7 && ($set{"EIGHT_BIT"}="off");
 $restrict=$opt_R;
 $set{"LOCALHOST"}=$opt_H || $ENV{"SIRCHOST"} || $ENV{"IRCHOST"} ||
 		$ENV{"LOCALHOST"} || "";
+$use_ipv6=0;   # enabled when the given server gets resolved by gethostbyname2
 
 if ($set{"LOCALHOST"}) {
   $bindaddr=&resolve($set{"LOCALHOST"});
@@@@ -148,7 +154,16 @@@@ sub resolve {
   } elsif ($_[0] =~ /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/) {
     return pack("c4", $1, $2, $3, $4);
   } else {
-    return (gethostbyname($_[0]))[4];
+      local $rc;
+
+      $rc = (gethostbyname2($_[0], AF_INET6))[4];
+
+      if ($rc) {
+	  $use_ipv6 = 1;
+	  return $rc;
+      } else {
+	  return (gethostbyname($_[0]))[4];
+      }
   }
 }
 
@@@@ -162,19 +177,31 @@@@ sub connect {
   local($fh, $host, $port)=@@_;
   local($adr, $otherend)=&resolve($host);
   &tell("*\cbE\cb* Hostname `$host' not found"), return 0 unless $adr;
-  $otherend=pack("S n a4 x8", &AF_INET, $port, $adr);
-  &print("*\cbE\cb* Out of file descriptors"), return 0
-    unless socket($fh, &PF_INET, &SOCK_STREAM, 0);
-  if ($set{"LOCALHOST"}) {
-    bind($fh, pack("S n a4 x8", &AF_INET, 0, $bindaddr)) ||
-      &tell("*\cbE\cb* Warning: can't bind to sirc host ".$set{'LOCALHOST'});
+  if ($use_ipv6) {
+      $otherend=pack_sockaddr_in6($port, $adr);
+      &print("*\cbE\cb* Out of file descriptors"), return 0
+	  unless socket($fh, &PF_INET6, &SOCK_STREAM, 0);
+  } else {
+      $otherend=pack_sockaddr_in($port, $adr);
+      &print("*\cbE\cb* Out of file descriptors"), return 0
+	  unless socket($fh, &PF_INET, &SOCK_STREAM, 0);
+  }
+  if (! $use_ipv6) {
+      if ($set{"LOCALHOST"}) {
+	  bind($fh, pack("S n a4 x8", &AF_INET, 0, $bindaddr)) ||
+	      &tell("*\cbE\cb* Warning: can't bind to sirc host ".$set{'LOCALHOST'});
+      }
   }
   $trysock=$fh;
   $SIG{'QUIT'}='sigquit';
   &print("*\cbE\cb* Can't connect to host: $!"), close $fh,
     $SIG{'QUIT'}='IGNORE', return 0 unless connect($fh, $otherend);
   $SIG{'QUIT'}='IGNORE';
-  $bindaddr=(unpack("S n a4", getsockname($fh)))[2] if !$bindaddr;
+  if ($use_ipv6) {
+      $bindaddr=(unpack_sockaddr_in6(getsockname($fh)))[2] if !$bindaddr;
+  } else {
+      $bindaddr=(unpack_sockaddr_in(getsockname($fh)))[2] if !$bindaddr;
+  }
   select($fh); $|=1; select(STDOUT);
   return 1;
 }
@@@@ -183,15 +210,26 @@@@ sub listen {
   $_[0]=&newfh;
   local($fh, $port)=@@_;
   local($thisend);
-  $bindaddr=pack("x4", 0) unless $bindaddr;
-  $thisend=pack("S n a4 x8", &AF_INET, $port+0, $bindaddr);
-  &tell("*\cbE\cb* Out of file descriptors"), return 0
-    unless socket($fh, &PF_INET, &SOCK_STREAM, 0);
+  if ($use_ipv6) {
+      $bindaddr=pack_sockaddr_in6(0, 0) unless $bindaddr;
+      $thisend=pack_sockaddr_in6($port+0, $bindaddr);
+      &tell("*\cbE\cb* Out of file descriptors"), return 0
+	  unless socket($fh, &PF_INET6, &SOCK_STREAM, 0);
+  } else {
+      $bindaddr=pack_sockaddr_in(0, 0) unless $bindaddr;
+      $thisend=pack_sockaddr_in($port+0, $bindaddr);
+      &tell("*\cbE\cb* Out of file descriptors"), return 0
+	  unless socket($fh, &PF_INET, &SOCK_STREAM, 0);
+  }
   &tell("*\cbE\cb* Can't bind local socket!"), close $fh, return 0
     unless bind($fh, $thisend);
   &tell("*\cbE\cb* Can't listen to socket!"), close $fh, return
     unless listen($fh, 5);
-  return (unpack("S n", getsockname($fh)))[1];
+  if ($use_ipv6) {
+      return (unpack_sockaddr_in6(getsockname($fh)))[1];
+  } else {
+      return (unpack_sockaddr_in(getsockname($fh)))[1];
+  }
 }
 
 sub accept {
@@@@ -224,7 +262,11 @@@@ sub gl {
   }
   local($buf)='';
   if (sysread($_[0], $buf, 4096)) {
-    $buffer{$_[0]}.=$buf;
+    if ($_[0] eq $S) {
+      $buffer{$_[0]}.=Encode::encode("ISO-8859-1", Encode::decode("utf8", $buf), 4) or $buffer{$_[0]}.=$buf;
+    } else {
+      $buffer{$_[0]}.=$buf;
+    }
     if ($buffer{$_[0]} =~ /^([^\n\r]*)\r?\n\r?/) {
       $buffer{$_[0]}=$';
       $_=$1."\n";
@@@@ -237,7 +279,7 @@@@ sub gl {
 }
 
 sub sl {
-  &print("*\cbE\cb* Error writing to server: $!") unless print $S $_[0]."\n";
+  &print("*\cbE\cb* Error writing to server: $!") unless print $S Encode::encode("utf8", Encode::decode("ISO-8859-1", $_[0]))."\n";
 }
 
 sub dostatus {
@@@@ -276,6 +318,8 @@@@ sub print {
   &dohooks("print", $what);
   return if $skip;
   $what =~ s/\s+$//;
+  # windows-1252 and broken utf-8 => latin-1
+  $what =~ tr/\x80-\x9F/e ,f,.tT\^×S<ö Z  ''""·\-\-\~Ts>ö zÿ/;
   # thanks to Toy (wacren@@obspm.fr) for this translation
   $what =~ tr/\x80-\xff/\x00-\x1f !cLxY|$_ca<\-\-R_o+23\'mp.,1o>123?AAAAAAACEEEEIIIIDNOOOOO*0UUUUYPBaaaaaaaceeeeiiiidnooooo:0uuuuypy/
     if $set{"EIGHT_BIT"} ne 'on';
@@@@ -867,7 +911,7 @@@@ sub docommand {
     } else {
       &tell("*\cbE\cb* You must specify a nick or channel!");
     }
-  } elsif ($cmd eq 'QUERY' || $cmd eq 'Q') {
+  } elsif ($cmd eq 'QUERY') {
     if ($args) {
       $args =~ s/\s+$//;
       $query=$args;
@@@@ -1183,7 +1227,7 @@@@ sub docommand {
     } else {
       &tell("*\cbE\cb* You must specify a nick or channel!");
     }
-  } elsif ($cmd eq 'PING' || $cmd eq 'P') {
+  } elsif ($cmd eq 'PING') {
     &dosplat;
     if ($args) {
       &getarg;
@@@@ -1194,7 +1238,7 @@@@ sub docommand {
     } else {
       &tell("*\cbE\cb* You must specify a nick or channel!");
     }
-  } elsif ($cmd eq 'ME') {
+  } elsif ($cmd eq 'ME' || $cmd eq 'D') {
     if ($talkchannel) {
       &describe($talkchannel, $args);
     } else {
@@@@ -1212,7 +1256,7 @@@@ sub docommand {
     } else {
       &sl("TOPIC $c");
     }
-  } elsif ($cmd eq 'LEAVE' || $cmd eq 'PART' || $cmd eq 'HOP') {
+  } elsif ($cmd eq 'PART' || $cmd eq 'P') {
     &dosplat;
     $args=$talkchannel if $args eq '';
     &sl("PART $args");
@@@@ -1222,7 +1266,7 @@@@ sub docommand {
     } else {
       &tell("*\cbE\cb* Not on a channel");
     }
-  } elsif ($cmd eq 'O' || $cmd eq 'OP') {
+  } elsif ($cmd eq 'OP') {
     local($c, $n, $l)=($talkchannel, 0, '');
     &getarg, $c=$newarg if ($args =~ /^[\#\&\+]/);
     local(@@ppl)=split(/ +/, $args);
@@@@ -1237,7 +1281,7 @@@@ sub docommand {
       }
     }
     $l && &sl("MODE $c +oooo $l");
-  } elsif ($cmd eq 'D' || $cmd eq 'DEOP') {
+  } elsif ($cmd eq 'DEOP') {
     local($c, $n, $l)=($talkchannel, 0, '');
     &getarg, $c=$newarg if ($args =~ /^[\#\&\+]/);
     local(@@ppl)=split(/ +/, $args);
@@@@ -1277,7 +1321,7 @@@@ sub docommand {
     } else {
       &sl("JOIN $args");
     }
-  } elsif ($cmd eq 'QUOTE') {
+  } elsif ($cmd eq 'QUOTE' || $cmd eq 'Q') {
     $args ne '' && &sl($args);
   } elsif ($cmd eq 'UMODE') {
     &sl("MODE $nick $args");
@@@@ -2205,4 +2249,3 @@@@ while (1) {
     }
   }
 }
-
@


1.2
log
@fix sirc script (utf-8 handling):
- incoming chars from 0x80 to 0x9F are converted as if
  they came from a windows-1252 host. They may as well be
  "broken" (i.e. not converted to latin1) utf-8 chars.
- fix addons

if you ever need to fix a broken screen:
- ^Z
- echo -e \\033c
- fg
@
text
@d1 1
a1 1
$MirBSD: patch-d6irc,v 1.1 2003/03/23 15:23:41 tg Exp $
d13 1
a13 1
+# $MirBSD: patch-d6irc,v 1.1 2003/03/23 15:23:41 tg Exp $
@


1.1
log
@import utf-8 and ipv6 sirc from MirBSD-old
@
text
@d1 3
a3 3
$MirBSD: obsd.ports,v 1.62 2003/03/22 22:33:27 tg Exp $
--- d6irc.orig	Sun Feb 23 14:40:43 2003
+++ d6irc	Sun Feb 23 14:41:12 2003
d13 1
a13 1
+# $MirBSD: obsd.ports,v 1.62 2003/03/22 22:33:27 tg Exp $
d36 1
a36 1
+$add_ons='+[mirabile;IPv6]-utf8';
d207 10
a216 1
@@@@ -867,7 +909,7 @@@@ sub docommand {
d225 1
a225 1
@@@@ -1183,7 +1225,7 @@@@ sub docommand {
d234 1
a234 1
@@@@ -1194,7 +1236,7 @@@@ sub docommand {
d243 1
a243 1
@@@@ -1212,7 +1254,7 @@@@ sub docommand {
d252 1
a252 1
@@@@ -1222,7 +1264,7 @@@@ sub docommand {
d261 1
a261 1
@@@@ -1237,7 +1279,7 @@@@ sub docommand {
d270 1
a270 1
@@@@ -1277,7 +1319,7 @@@@ sub docommand {
d279 1
a279 1
@@@@ -2205,4 +2247,3 @@@@ while (1) {
@

