head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.53.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.53.06;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-tcpslice_c,v 1.1 2001/10/18 15:12:40 naddy Exp $
--- tcpslice.c.orig	Fri Oct 12 18:24:23 2001
+++ tcpslice.c	Fri Oct 12 18:28:45 2001
@@@@ -71,14 +71,14 @@@@ enum stamp_styles timestamp_style = TIME
 
 
 int is_timestamp( char *str );
-struct timeval parse_time(char *time_string, struct timeval base_time);
+struct bpf_timeval parse_time(char *time_string, struct bpf_timeval base_time);
 void fill_tm(char *time_string, int is_delta, struct tm *t, time_t *usecs_addr);
 void get_file_range( char filename[], pcap_t **p,
-			struct timeval *first_time, struct timeval *last_time );
-struct timeval first_packet_time(char filename[], pcap_t **p_addr);
+			struct bpf_timeval *first_time, struct bpf_timeval *last_time );
+struct bpf_timeval first_packet_time(char filename[], pcap_t **p_addr);
 void extract_slice(char filename[], char write_file_name[],
-			struct timeval *start_time, struct timeval *stop_time);
-char *timestamp_to_string(struct timeval *timestamp);
+			struct bpf_timeval *start_time, struct bpf_timeval *stop_time);
+char *timestamp_to_string(struct bpf_timeval *timestamp);
 void dump_times(pcap_t **p, char filename[]);
 __dead void usage(void)__attribute__((volatile));
 
@@@@ -98,7 +98,7 @@@@ main(int argc, char **argv)
 	char *start_time_string = 0;
 	char *stop_time_string = 0;
 	char *write_file_name = "-";	/* default is stdout */
-	struct timeval first_time, start_time, stop_time;
+	struct bpf_timeval first_time, start_time, stop_time;
 	pcap_t *pcap;
 	char ebuf[PCAP_ERRBUF_SIZE];
 
@@@@ -223,15 +223,19 @@@@ int is_timestamp( char *str )
  * containing the specified time.
  */
 
-struct timeval
-parse_time(char *time_string, struct timeval base_time)
+struct bpf_timeval
+parse_time(char *time_string, struct bpf_timeval base_time)
 {
-	struct tm *bt = localtime((time_t *) &base_time.tv_sec);
+	struct tm *bt;
 	struct tm t;
-	struct timeval result;
+	struct bpf_timeval result;
+	time_t secs;
 	time_t usecs = 0;
 	int is_delta = (time_string[0] == '+');
 
+	secs = base_time.tv_sec;
+	bt = localtime(&secs);
+
 	if ( is_delta )
 		++time_string;	/* skip over '+' sign */
 
@@@@ -412,7 +416,7 @@@@ fill_tm(char *time_string, int is_delta,
  */
 void
 get_file_range( char filename[], pcap_t **p,
-		struct timeval *first_time, struct timeval *last_time )
+		struct bpf_timeval *first_time, struct bpf_timeval *last_time )
 {
 	*first_time = first_packet_time( filename, p );
 
@@@@ -427,7 +431,7 @@@@ int snaplen;
  * reading.
  */
 
-struct timeval
+struct bpf_timeval
 first_packet_time(char filename[], pcap_t **p_addr)
 {
 	struct pcap_pkthdr hdr;
@@@@ -457,10 +461,10 @@@@ first_packet_time(char filename[], pcap_
 
 void
 extract_slice(char filename[], char write_file_name[],
-		struct timeval *start_time, struct timeval *stop_time)
+		struct bpf_timeval *start_time, struct bpf_timeval *stop_time)
 {
 	off_t start_pos, stop_pos;
-	struct timeval file_start_time, file_stop_time;
+	struct bpf_timeval file_start_time, file_stop_time;
 	struct pcap_pkthdr hdr;
 	pcap_t *p;
 	char errbuf[PCAP_ERRBUF_SIZE];
@@@@ -511,7 +515,7 @@@@ extract_slice(char filename[], char writ
 
 	for ( ; ; )
 		{
-		struct timeval *timestamp;
+		struct bpf_timeval *timestamp;
 		const u_char *pkt = pcap_next( p, &hdr );
 
 		if ( pkt == 0 )
@@@@ -554,7 +558,7 @@@@ extract_slice(char filename[], char writ
  */
 
 char *
-timestamp_to_string(struct timeval *timestamp)
+timestamp_to_string(struct bpf_timeval *timestamp)
 {
 	struct tm *t;
 #define NUM_BUFFERS 2
@@@@ -599,7 +603,7 @@@@ timestamp_to_string(struct timeval *time
 void
 dump_times(pcap_t **p, char filename[])
 {
-	struct timeval first_time, last_time;
+	struct bpf_timeval first_time, last_time;
 
 	get_file_range( filename, p, &first_time, &last_time );
 
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
