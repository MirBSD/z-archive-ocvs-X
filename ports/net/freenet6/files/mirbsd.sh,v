head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2004.09.13.22.32.20;	author sap;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.13.22.07.55;	author sap;	state dead;
branches;
next	1.2;

1.2
date	2003.09.19.14.21.32;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.09.09.19.35.29;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Bring in tspc2.1
@
text
@#!/bin/sh -x
#mirbsd.sh, based on:
#openbsd.sh,v 1.6 2004/07/07 19:15:03 dgregoire Exp
#
# This source code copyright (c) Hexago Inc. 2002-2004.
#
# This program is free software; you can redistribute it and/or modify it 
# under the terms of the GNU General Public License (GPL) Version 2, 
# June 1991 as published by the Free  Software Foundation.
#
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY;  without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with this program; see the file GPL_LICENSE.txt. If not, write 
# to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
# MA 02111-1307 USA
#

LANGUAGE=C

if [ -z $TSP_VERBOSE ]; then
   TSP_VERBOSE=0
fi

KillProcess()
{
   if [ ! -z $TSP_VERBOSE ]; then
      if [ $TSP_VERBOSE -ge 2 ]; then
         echo killing $*
      fi
   fi
   PID=`ps axww | grep $1 | grep -v grep | awk '{ print $1;}'`
   if [ ! -z "${PID}" ]; then
      kill $PID
   fi
}

Display()
{
   if [ -z $TSP_VERBOSE ]; then
      return;
   fi
   if [ $TSP_VERBOSE -lt $1 ]; then
      return;
   fi
   shift
   echo $*
}

Exec()
{
   if [ ! -z $TSP_VERBOSE ]; then
      if [ $TSP_VERBOSE -ge 2 ]; then
         echo $*
      fi
   fi
   $* # Execute command
   if [ $? -ne 0 ]; then
      echo "Error while executing $1"
      echo "   Command: $*"
      exit 1
   fi
}

ExecNoCheck()
{
   if [ ! -z $TSP_VERBOSE ]; then
      if [ $TSP_VERBOSE -ge 2 ]; then
         echo $*
      fi
   fi
   $* # Execute command
}

# Programs localization

Display 1 "--- Start of configuration script. ---"
Display 1 "Script: " `basename $0`

ifconfig=/sbin/ifconfig
route=/sbin/route
rtadvd=/usr/sbin/rtadvd
sysctl=/usr/sbin/sysctl

if [ -z $TSP_HOME_DIR ]; then
   echo "TSP_HOME_DIR variable not specified!;"
   exit 1
fi

if [ ! -d $TSP_HOME_DIR ]; then
   echo "Error : directory $TSP_HOME_DIR does not exist"
   exit 1
fi
#

if [ -z $TSP_HOST_TYPE ]; then
   echo Error: TSP_HOST_TYPE not defined.
   exit 1
fi

if [ X"${TSP_HOST_TYPE}" = X"host" ] || [ X"${TSP_HOST_TYPE}" = X"router" ]; then
   #
   # Configured tunnel config (IPv4)
   Display 1 Setting up interface $TSP_TUNNEL_INTERFACE
# Delete first the any previous tunnel

   ExecNoCheck $ifconfig $TSP_TUNNEL_INTERFACE deletetunnel
   Exec $ifconfig $TSP_TUNNEL_INTERFACE giftunnel $TSP_CLIENT_ADDRESS_IPV4 $TSP_SERVER_ADDRESS_IPV4

   #
   # Configured tunnel config (IPv6)

   # Check if the interface already has an IPv6 configuration
   list=`$ifconfig $TSP_TUNNEL_INTERFACE | grep inet6 | awk '{print $2}' | grep -v '^fe80'`
   for ipv6address in $list
   do 
     Exec $ifconfig $TSP_TUNNEL_INTERFACE inet6 $ipv6address delete
   done

   Exec $ifconfig $TSP_TUNNEL_INTERFACE inet6 $TSP_CLIENT_ADDRESS_IPV6 $TSP_SERVER_ADDRESS_IPV6 prefixlen $TSP_TUNNEL_PREFIXLEN alias

   #
   # Default route
   Display 1 Adding default route to $TSP_SERVER_ADDRESS_IPV6

   # Delete first any default IPv6 route
   ExecNoCheck $route delete -inet6 default
##mirabilos## this fails, but no need to abort there
   Exec $route add -inet6 default $TSP_SERVER_ADDRESS_IPV6
fi

# Router configuration if required
if [ X"${TSP_HOST_TYPE}" = X"router" ]; then
   Display 1 "Router configuration"
   Display 1 "Kernel setup"
#   if [ X"${TSP_PREFIXLEN}" != X"64" ]; then
#      ExecNoCheck $route add -net -inet6 $TSP_PREFIX:: -prefixlen $TSP_PREFIXLEN -interface lo0
#   fi
   Exec $sysctl -w net.inet6.ip6.forwarding=1     # ipv6_forwarding enabled
   Exec $sysctl -w net.inet6.ip6.accept_rtadv=0   # routed must disable any router advertisement incoming
   Display 1 "Adding prefix to $TSP_HOME_INTERFACE"
   Exec $ifconfig $TSP_HOME_INTERFACE inet6 $TSP_PREFIX::1 prefixlen 64 alias
   # Router advertisement startup
   KillProcess rtadvd
   Exec $rtadvd $TSP_HOME_INTERFACE
fi

Display 1 "--- End of configuration script. ---"

exit 0
@


1.3
log
@Removing outdated tspc port
@
text
@d1 151
a151 89
#!/bin/ksh
# $MirBSD: ports/net/freenet6/files/mirbsd.sh,v 1.2 2003/09/19 14:21:32 tg Stab $
#-
# Copyright (c) 2003 Thorsten Glaser <x86@@ePost.de>
#
# Subject to these terms, everybody who obtained a copy of this work
# is hereby permitted to deal in the work without restriction inclu-
# ding without limitation the rights to use, distribute, sell, modi-
# fy, publically perform, give away, merge or sublicense it provided
# this notice is kept and the authors and contributors are given due
# credit in derivates or accompanying documents.
# This work is provided "as is" with no explicit or implicit warran-
# ties whatsoever to the maximum extend permitted by applicable law;
# in no event may an author or contributor be held liable for damage
# that is, directly or indirectly, caused by the work, even if advi-
# sed of the possibility of such damage.
#-
# Script to set up IPv6 for freenet6

T=$(mktemp) || { echo "Error: mktemp failed!"; exit 1; }
trap 'rm -f $T ; exit 0' 0
trap 'rm -f $T ; exit 1' 1 2 3 13 15

###
# Are we host or router?

HOSTTYPE=$(echo "$TSP_HOST_TYPE" | tr "[:lower:]" "[:upper:]")

if [[ $HOSTTYPE != HOST ]]; then
	if [[ $HOSTTYPE != ROUTER ]]; then
		echo "Error: this node is neither HOST nor ROUTER."
		exit 1
	  else
		RT_UNNUMBERED=1
	fi
  else
	RT_UNNUMBERED=0
fi

###
# Clean up old tunnels, if existent
ifconfig gif0 deletetunnel down >/dev/null 2>&1
ifconfig gif0 2>/dev/null | fgrep inet6 >$T
while read proto addr rest; do
	ifconfig gif0 $proto $addr delete >/dev/null 2>&1
done <$T
route -n delete -inet6 default

###
# Configure the IPv4 side of the tunnel
ifconfig gif0 tunnel $TSP_CLIENT_ADDRESS_IPV4 $TSP_SERVER_ADDRESS_IPV4

###
# Configure the IPv6 side of the tunnel and the default route
if [ $RT_UNNUMBERED = 0 ]; then
	ifconfig gif0 inet6 $TSP_CLIENT_ADDRESS_IPV6 \
	    $TSP_SERVER_ADDRESS_IPV6 prefixlen 128 alias
	route add -inet6 default $TSP_SERVER_ADDRESS_IPV6 -mtu 1280
  else
	route add -inet6 default fe80::%gif0 -mtu 1280
fi

###
# Configure the local interface prefix
IF=${TSP_HOME_INTERFACE:-fxp0}
if [ $RT_UNNUMBERED = 1 ]; then
	PREFIX=${TSP_PREFIX}:1
	ifconfig $IF 2>/dev/null | fgrep inet6 >$T
	while read proto addr rest; do
		echo "$addr" | fgrep 3ffe: >/dev/null 2>&1 && \
		    ifconfig $IF $proto $addr delete >/dev/null 2>&1
	done <$T
	ifconfig $IF inet6 ${PREFIX}:: prefixlen 64 anycast alias
	ifconfig $IF inet6 ${PREFIX}::1 prefixlen 64 alias
fi

###
# Clean up (to be sure)
rm -f $T

###
# Configuration of rtadvd
#if [ $RT_UNNUMBERED = 1 ]; then
#	# Stop rtadvd
#	[ -e /var/run/rtadvd.pid ] && kill $(</var/run/rtadvd.pid)
#	# Configure rtadvd.conf XXX missing
#	# Start rtadvd
#	rtadvd $IF
#fi
d153 1
a153 2
# End of file
###
@


1.2
log
@o clean up tempfiles in mirbsd.sh
o add stubbed out rtadvd starter in mirbsd.sh
o nuke additional added "/" in tspc, convert from sprintf to strlcpy
@
text
@d2 1
a2 1
# $MirBSD: mirbsd.sh,v 1.1 2003/09/09 19:35:29 tg Exp $
@


1.1
log
@add back an updated freenet6 port
again: from the GPL'd sources of cygwin
@
text
@d2 1
a2 1
# $MirBSD: licence.template,v 1.5 2003/07/26 12:33:13 tg Exp $
d65 1
a66 1
	IF=${TSP_HOME_INTERFACE:-fxp0}
d78 2
a79 1
# Configuration of rtadvd -- not included
d81 9
@

