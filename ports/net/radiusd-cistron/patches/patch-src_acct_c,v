head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.2
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.53.00;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.53.00;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.19.13.31.31;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-src_acct_c,v 1.4 2002/09/30 15:19:40 danh Exp $
--- src/acct.c.orig	Wed Feb  6 08:44:35 2002
+++ src/acct.c	Sun Sep 29 23:43:18 2002
@@@@ -931,11 +931,11 @@@@ static int rad_check_ts(struct radutmp *
 
 	s = CHECKRAD2;
 	execl(CHECKRAD2, "checkrad", nas->nastype, address, port,
-		ut->login, session_id, NULL);
+		ut->login, session_id, (void *)NULL);
 	if (errno == ENOENT) {
 		s = CHECKRAD1;
 		execl(CHECKRAD1, "checklogin", nas->nastype, address, port,
-			ut->login, session_id, NULL);
+			ut->login, session_id, (void *)NULL);
 	}
 	log(L_ERR, "Check-TS: exec %s: %s", s, strerror(errno));
 
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@sync Ports with OpenBSD CTM#3341 plus xpdf security fix
@
text
@d1 4
a4 44
$OpenBSD: patch-src_acct_c,v 1.5 2003/06/18 14:19:09 brad Exp $
--- src/acct.c.orig	Wed Jun 18 07:42:26 2003
+++ src/acct.c	Wed Jun 18 07:42:35 2003
@@@@ -119,9 +119,10 @@@@ char *uue(void *in)
  */
 static void make_wtmp(struct radutmp *ut, struct utmp *wt, int status)
 {
-	char		buf[32];
+	char		buf[48];
 	NAS		*cl;
 	char		*s;
+	int		len;
 
 	/*
 	 *	Fill out the UTMP struct for the radwtmp file.
@@@@ -143,11 +144,13 @@@@ static void make_wtmp(struct radutmp *ut
 		s = cl->shortname;
 	if (s == NULL || s[0] == 0) s = uue(&(ut->nas_address));
 #if UT_LINESIZE > 9
-	sprintf(buf, "%03d:%.20s", ut->nas_port, s);
+	sprintf(buf, "%03u:%.20s", ut->nas_port, s);
 #else
-	sprintf(buf, "%02d%.20s", ut->nas_port, s);
+	sprintf(buf, "%02u%.20s", ut->nas_port, s);
 #endif
-	strncpy(wt->ut_line, buf, UT_LINESIZE);
+	len = UT_LINESIZE;
+	if (len > sizeof(buf)) len = sizeof(buf);
+	strncpy(wt->ut_line, buf, len);
 
 	/*
 	 *	We store the dynamic IP address in the hostname field.
@@@@ -155,7 +158,9 @@@@ static void make_wtmp(struct radutmp *ut
 #ifdef UT_HOSTSIZE
 	if (ut->framed_address) {
 		ipaddr2str(buf, ntohl(ut->framed_address));
-		strncpy(wt->ut_host, buf, UT_HOSTSIZE);
+		len = UT_HOSTSIZE;
+		if (len > sizeof(buf)) len = sizeof(buf);
+		strncpy(wt->ut_host, buf, len);
 	}
 #endif
 #ifdef __svr4__
@@@@ -931,11 +936,11 @@@@ static int rad_check_ts(struct radutmp *
@

