head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2003.06.13.18.15.31;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@add new djbdns ports
features:
 - one instead of three ports; selection done via FLAVOR
 - different flavours for ICANN, OpenNIC, ORSC and European-ORSN
   domain root servers (IPv4 and default only)
 -> the recent ICANN root name server move is integrated
 - Full integration (IPv6 only) of Felix von Leitners IPv6 patches
 - Partial integration (default only) of the IPv6 patches for
   IPv4 transport DNS servers
 -> http://www.fefe.de/dns/  patch revision: test19
 - consistent use of scripting, Makefile features and macroes
   leads to lean, readible port
 - tinydns installs to /usr/local/bin by default
 - home-grown diffs for more flexibility
 - all binaries are prefixed with a "6" (IPv6 transport only)
 - hand-edited diffs provide integral patch support
@
text
@$MirBSD$
--- dns_rcip.c.orig	Sun Feb 11 21:11:23 2001
+++ dns_rcip.c	Fri Jun 13 17:29:01 2003
@@@@ -2,12 +2,13 @@@@
 #include "openreadclose.h"
 #include "byte.h"
 #include "ip4.h"
+#include "ip6.h"
 #include "env.h"
 #include "dns.h"
 
 static stralloc data = {0};
 
-static int init(char ip[64])
+static int init(char ip[256])
 {
   int i;
   int j;
@@@@ -20,10 +21,10 @@@@ static int init(char ip[64])
       if (*x == '.')
 	++x;
       else {
-        i = ip4_scan(x,ip + iplen);
+        i = ip6_scan(x,ip + iplen);
 	if (!i) break;
 	x += i;
-	iplen += 4;
+	iplen += 16;
       }
     }
 
@@@@ -40,10 +41,8 @@@@ static int init(char ip[64])
             while ((data.s[i] == ' ') || (data.s[i] == '\t'))
               ++i;
             if (iplen <= 60)
-              if (ip4_scan(data.s + i,ip + iplen)) {
-		if (byte_equal(ip + iplen,4,"\0\0\0\0"))
-		  byte_copy(ip + iplen,4,"\177\0\0\1");
-                iplen += 4;
+              if (ip6_scan(data.s + i,ip + iplen)) {
+                iplen += 16;
 	      }
           }
           i = j + 1;
@@@@ -52,19 +51,19 @@@@ static int init(char ip[64])
   }
 
   if (!iplen) {
-    byte_copy(ip,4,"\177\0\0\1");
-    iplen = 4;
+    byte_copy(ip,16,"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1");
+    iplen = 16;
   }
-  byte_zero(ip + iplen,64 - iplen);
+  byte_zero(ip + iplen,256 - iplen);
   return 0;
 }
 
 static int ok = 0;
 static unsigned int uses;
 static struct taia deadline;
-static char ip[64]; /* defined if ok */
+static char ip[256]; /* defined if ok */
 
-int dns_resolvconfip(char s[64])
+int dns_resolvconfip(char s[256])
 {
   struct taia now;
 
@@@@ -81,6 +80,6 @@@@ int dns_resolvconfip(char s[64])
   }
 
   --uses;
-  byte_copy(s,64,ip);
+  byte_copy(s,256,ip);
   return 0;
 }
@
