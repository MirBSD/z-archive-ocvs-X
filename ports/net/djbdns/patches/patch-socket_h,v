head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.09.11.15.14.27;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.06.13.18.15.32;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bring DJBDNS port up to date:
o fix errors in the Makefile (unescaped braces)
o regenerate patches with gdiff and manually separate them
  (this fixes a huge amount of line numbers!)
o update MESSAGE
o update PLISTs for @@extra stuff
o update PLIST6: the IPv6 flavour (no_ipv4) has /etc/dnsroots.global.v6 now
o update all global dnsroots with latest data
o remove a patch from the IPv4 flavour and put it to the IPv6
  flavour, which I suspect had broken the IPv4 location code (%lo),
  and which was not existent in the IPv6 code, where it should have been
o bump package patchlevel

Yet untested.
@
text
@$MirBSD: patch-socket_h,v 1.1 2003/06/13 18:15:32 tg Exp $
--- socket.h.orig	2001-02-11 21:11:23.000000000 +0000
+++ socket.h	2003-09-11 13:47:06.000000000 +0000
@@@@ -2,21 +2,37 @@@@
 #define SOCKET_H
 
 #include "uint16.h"
+#include "uint32.h"
 
 extern int socket_tcp(void);
 extern int socket_udp(void);
+extern int socket_tcp6(void);
+extern int socket_udp6(void);
 
 extern int socket_connect4(int,const char *,uint16);
+extern int socket_connect6(int s,const char ip[16],uint16 port,uint32 scope_id);
 extern int socket_connected(int);
-extern int socket_bind4(int,char *,uint16);
+extern int socket_bind4(int,const char *,uint16);
 extern int socket_bind4_reuse(int,char *,uint16);
+extern int socket_bind6(int s,const char *ip,uint16 port,uint32 scope_id);
+extern int socket_bind6_reuse(int s,const char *ip,uint16 port,uint32 scope_id);
 extern int socket_listen(int,int);
 extern int socket_accept4(int,char *,uint16 *);
+extern int socket_accept6(int s,char *ip,uint16 *port,uint32 *scope_id);
 extern int socket_recv4(int,char *,int,char *,uint16 *);
 extern int socket_send4(int,const char *,int,const char *,uint16);
+extern int socket_recv6(int s,char *buf,unsigned int len,char *ip,uint16 *port,uint32 *scope_id);
+extern int socket_send6(int s,const char *buf,unsigned int len,const char *ip,uint16 port,uint32 scope_id);
 extern int socket_local4(int,char *,uint16 *);
 extern int socket_remote4(int,char *,uint16 *);
+extern int socket_local6(int s,char *ip,uint16 *port,uint32 *scope_id);
+extern int socket_remote6(int s,char *ip,uint16 *port,uint32 *scope_id);
 
 extern void socket_tryreservein(int,int);
 
+extern const char* socket_getifname(uint32 interface);
+extern uint32 socket_getifidx(const char *ifname);
+
+extern int noipv6;
+
 #endif
@


1.1
log
@add new djbdns ports
features:
 - one instead of three ports; selection done via FLAVOR
 - different flavours for ICANN, OpenNIC, ORSC and European-ORSN
   domain root servers (IPv4 and default only)
 -> the recent ICANN root name server move is integrated
 - Full integration (IPv6 only) of Felix von Leitners IPv6 patches
 - Partial integration (default only) of the IPv6 patches for
   IPv4 transport DNS servers
 -> http://www.fefe.de/dns/  patch revision: test19
 - consistent use of scripting, Makefile features and macroes
   leads to lean, readible port
 - tinydns installs to /usr/local/bin by default
 - home-grown diffs for more flexibility
 - all binaries are prefixed with a "6" (IPv6 transport only)
 - hand-edited diffs provide integral patch support
@
text
@d1 3
a3 3
$MirBSD$
--- socket.h.orig	Sun Feb 11 21:11:23 2001
+++ socket.h	Fri Jun 13 17:29:02 2003
d36 1
a36 1
+
d41 1
a41 1
 
@

