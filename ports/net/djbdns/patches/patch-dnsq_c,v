head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2003.06.13.18.15.31;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@add new djbdns ports
features:
 - one instead of three ports; selection done via FLAVOR
 - different flavours for ICANN, OpenNIC, ORSC and European-ORSN
   domain root servers (IPv4 and default only)
 -> the recent ICANN root name server move is integrated
 - Full integration (IPv6 only) of Felix von Leitners IPv6 patches
 - Partial integration (default only) of the IPv6 patches for
   IPv4 transport DNS servers
 -> http://www.fefe.de/dns/  patch revision: test19
 - consistent use of scripting, Makefile features and macroes
   leads to lean, readible port
 - tinydns installs to /usr/local/bin by default
 - home-grown diffs for more flexibility
 - all binaries are prefixed with a "6" (IPv6 transport only)
 - hand-edited diffs provide integral patch support
@
text
@$MirBSD$
--- dnsq.c.orig	Sun Feb 11 21:11:23 2001
+++ dnsq.c	Fri Jun 13 17:29:01 2003
@@@@ -10,6 +10,7 @@@@
 #include "printpacket.h"
 #include "parsetype.h"
 #include "dns.h"
+#include "ip6.h"
 
 #define FATAL "dnsq: fatal: "
 
@@@@ -24,14 +25,14 @@@@ void oops(void)
 
 static struct dns_transmit tx;
 
-int resolve(char *q,char qtype[2],char servers[64])
+int resolve(char *q,char qtype[2],char servers[256])
 {
   struct taia stamp;
   struct taia deadline;
   iopause_fd x[1];
   int r;
 
-  if (dns_transmit_start(&tx,servers,0,q,qtype,"\0\0\0\0") == -1) return -1;
+  if (dns_transmit_start(&tx,servers,0,q,qtype,V6any) == -1) return -1;
 
   for (;;) {
     taia_now(&stamp);
@@@@ -47,7 +48,7 @@@@ int resolve(char *q,char qtype[2],char s
   return 0;
 }
 
-char servers[64];
+char servers[256];
 static stralloc ip;
 static stralloc fqdn;
 
@@@@ -73,9 +74,9 @@@@ int main(int argc,char **argv)
 
   if (!*++argv) usage();
   if (!stralloc_copys(&out,*argv)) oops();
-  if (dns_ip4_qualify(&ip,&fqdn,&out) == -1) oops();
-  if (ip.len >= 64) ip.len = 64;
-  byte_zero(servers,64);
+  if (dns_ip6_qualify(&ip,&fqdn,&out) == -1) oops();
+  if (ip.len >= 256) ip.len = 256;
+  byte_zero(servers,256);
   byte_copy(servers,ip.len,ip.s);
 
   if (!stralloc_copys(&out,"")) oops();
@
