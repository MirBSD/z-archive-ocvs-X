head	1.2;
access;
symbols
	MIRBSD_5:1.1
	MIRBSD_4:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.06.13.18.08.12;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.23.14.43.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove all traces of the "old" djbdns port triplet
@
text
@$MirBSD: patch-tdlookup_c,v 1.1 2003/03/23 14:43:00 tg Exp $
--- tdlookup.c.orig	Sun Feb 11 21:11:23 2001
+++ tdlookup.c	Sat Aug 24 20:39:00 2002
@@@@ -119,8 +119,9 @@@@ static int doit(char *q,char qtype[2])
   char x[20];
   uint16 u16;
   char addr[8][4];
-  int addrnum;
-  uint32 addrttl;
+  char addr6[8][16];
+  int addrnum,addr6num;
+  uint32 addrttl,addr6ttl;
   int i;
 
   anpos = response_len;
@@@@ -152,8 +153,8 @@@@ static int doit(char *q,char qtype[2])
   wild = q;
 
   for (;;) {
-    addrnum = 0;
-    addrttl = 0;
+    addrnum = addr6num = 0;
+    addrttl = addr6ttl = 0;
     cdb_findstart(&c);
     while (r = find(wild,wild != q)) {
       if (r == -1) return 0;
@@@@ -171,6 +172,17 @@@@ static int doit(char *q,char qtype[2])
 	if (addrnum < 1000000) ++addrnum;
 	continue;
       }
+      if (byte_equal(type,2,DNS_T_AAAA) && (dlen - dpos == 16)) {
+	addr6ttl = ttl;
+	i = dns_random(addr6num + 1);
+	if (i < 8) {
+	  if ((i < addr6num) && (addr6num < 8))
+	    byte_copy(addr6[addr6num],16,addr6[i]);
+	  byte_copy(addr6[i],16,data + dpos);
+	}
+	if (addr6num < 1000000) ++addr6num;
+	continue;
+      }
       if (!response_rstart(q,type,ttl)) return 0;
       if (byte_equal(type,2,DNS_T_NS) || byte_equal(type,2,DNS_T_CNAME) || byte_equal(type,2,DNS_T_PTR)) {
 	if (!doname()) return 0;
@@@@ -195,6 +207,12 @@@@ static int doit(char *q,char qtype[2])
 	if (!response_addbytes(addr[i],4)) return 0;
 	response_rfinish(RESPONSE_ANSWER);
       }
+    for (i = 0;i < addr6num;++i)
+      if (i < 8) {
+	if (!response_rstart(q,DNS_T_AAAA,addr6ttl)) return 0;
+	if (!response_addbytes(addr6[i],16)) return 0;
+	response_rfinish(RESPONSE_ANSWER);
+      }
 
     if (flagfound) break;
     if (wild == control) break;
@@@@ -257,6 +275,11 @@@@ static int doit(char *q,char qtype[2])
 	  if (byte_equal(type,2,DNS_T_A)) {
             if (!response_rstart(d1,DNS_T_A,ttl)) return 0;
 	    if (!dobytes(4)) return 0;
+            response_rfinish(RESPONSE_ADDITIONAL);
+	  }
+	  else if (byte_equal(type,2,DNS_T_AAAA)) {
+            if (!response_rstart(d1,DNS_T_AAAA,ttl)) return 0;
+	    if (!dobytes(16)) return 0;
             response_rfinish(RESPONSE_ADDITIONAL);
 	  }
         }
@


1.1
log
@Add DJBDNS port and UCSPI-TCP (dependant)

DJBDNS (http://cr.yp.to/djbdns.hml) is a Domain Name Server.
We have three flavours:
 - stable
	The original.
 - djbdns
 - djbdns6
	The versions with IPv6 RR support. djbdns handles
	queries via IPv4 and djbdns6 handles queries via
	IPv6, but does not include manual pages and other
	supplementary files.
@
text
@d1 1
a1 1
$MirBSD: obsd.ports,v 1.62 2003/03/22 22:33:27 tg Exp $
@

