head	1.2;
access;
symbols
	MIRBSD_5:1.1
	MIRBSD_4:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.06.13.18.08.13;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.23.14.43.01;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove all traces of the "old" djbdns port triplet
@
text
@ * Patches by Felix von Leitner
$MirBSD: patch-socket_h,v 1.1 2003/03/23 14:43:01 tg Exp $
--- socket.h.orig	Sun Feb 11 21:11:23 2001
+++ socket.h	Thu Aug  8 13:26:46 2002
@@@@ -2,21 +2,37 @@@@
 #define SOCKET_H
 
 #include "uint16.h"
+#include "uint32.h"
 
 extern int socket_tcp(void);
 extern int socket_udp(void);
+extern int socket_tcp6(void);
+extern int socket_udp6(void);
 
 extern int socket_connect4(int,const char *,uint16);
+extern int socket_connect6(int s,const char ip[16],uint16 port,uint32 scope_id);
 extern int socket_connected(int);
-extern int socket_bind4(int,char *,uint16);
+extern int socket_bind4(int,const char *,uint16);
 extern int socket_bind4_reuse(int,char *,uint16);
+extern int socket_bind6(int s,const char *ip,uint16 port,uint32 scope_id);
+extern int socket_bind6_reuse(int s,const char *ip,uint16 port,uint32 scope_id);
 extern int socket_listen(int,int);
 extern int socket_accept4(int,char *,uint16 *);
+extern int socket_accept6(int s,char *ip,uint16 *port,uint32 *scope_id);
 extern int socket_recv4(int,char *,int,char *,uint16 *);
 extern int socket_send4(int,const char *,int,const char *,uint16);
+extern int socket_recv6(int s,char *buf,unsigned int len,char *ip,uint16 *port,uint32 *scope_id);
+extern int socket_send6(int s,const char *buf,unsigned int len,const char *ip,uint16 port,uint32 scope_id);
 extern int socket_local4(int,char *,uint16 *);
 extern int socket_remote4(int,char *,uint16 *);
+extern int socket_local6(int s,char *ip,uint16 *port,uint32 *scope_id);
+extern int socket_remote6(int s,char *ip,uint16 *port,uint32 *scope_id);
 
 extern void socket_tryreservein(int,int);
+
+extern const char* socket_getifname(uint32 interface);
+extern uint32 socket_getifidx(const char *ifname);
+
+extern int noipv6;
 
 #endif
@


1.1
log
@Add DJBDNS port and UCSPI-TCP (dependant)

DJBDNS (http://cr.yp.to/djbdns.hml) is a Domain Name Server.
We have three flavours:
 - stable
	The original.
 - djbdns
 - djbdns6
	The versions with IPv6 RR support. djbdns handles
	queries via IPv4 and djbdns6 handles queries via
	IPv6, but does not include manual pages and other
	supplementary files.
@
text
@d2 1
a2 1
$MirBSD: obsd.ports,v 1.62 2003/03/22 22:33:27 tg Exp $
@

