head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.30.21.33.34;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-etc_afpd_volume_c,v 1.2 2002/07/26 15:12:17 naddy Exp $
--- etc/afpd/volume.c.orig	Sat Feb 16 09:09:31 2002
+++ etc/afpd/volume.c	Wed Jul 24 16:59:53 2002
@@@@ -1050,7 +1050,7 @@@@ int 	ibuflen, *rbuflen;
     struct vol		*volume;
     char	*data;
     int			vcnt, len;
-
+    u_int32_t	secs;
 
     if (!volumes)
         load_volumes(obj);
@@@@ -1090,9 +1090,10 @@@@ int 	ibuflen, *rbuflen;
         *rbuflen = 0;
         return AFPERR_PARAM;
     }
-    tv.tv_sec = AD_DATE_FROM_UNIX(tv.tv_sec);
-    memcpy(data, &tv.tv_sec, sizeof( u_int32_t));
-    data += sizeof( u_int32_t);
+    secs = tv.tv_sec;
+    secs = htonl(secs);
+    memcpy(data, &secs, sizeof(secs));
+    data += sizeof(secs);
     *data = vcnt;
     return( AFP_OK );
 }
@@@@ -1177,11 +1178,11 @@@@ int		ibuflen, *rbuflen;
     bitmap = htons( bitmap );
     memcpy(rbuf, &bitmap, sizeof( bitmap ));
 
-    curdir = volume->v_dir;
     if ( chdir( volume->v_path ) < 0 ) {
         ret = AFPERR_PARAM;
         goto openvol_err;
     }
+    curdir = volume->v_dir;
 
 #ifdef CNID_DB
     if (volume->v_dbpath)
@@@@ -1231,9 +1232,8 @@@@ int		ibuflen, *rbuflen;
         }
     }
     if ( ovol != NULL ) {
+	if (chdir(ovol->v_path) == 0) {
         curdir = ovol->v_dir;
-        if ( chdir( ovol->v_path ) < 0 ) {
-            return( AFPERR_PARAM );
         }
     }
 
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 36
a36 4
$OpenBSD: patch-etc_afpd_volume_c,v 1.3 2003/08/22 11:18:19 naddy Exp $
--- etc/afpd/volume.c.orig	Mon Aug 18 14:32:40 2003
+++ etc/afpd/volume.c	Mon Aug 18 14:37:44 2003
@@@@ -385,11 +385,11 @@@@ static void volset(struct vol_option *op
d39 10
a48 47
     } else if (optionok(tmp, "dbpath:", val)) {
-	char t[MAXPATHLEN + 1];
+	char t[MAXPATHLEN];
         if (options[VOLOPT_DBPATH].c_value)
             free(options[VOLOPT_DBPATH].c_value);
 
-	volxlate(obj, t, MAXPATHLEN, val, pwd, NULL);
+	volxlate(obj, t, (MAXPATHLEN-1), val, pwd, NULL);
 	options[VOLOPT_DBPATH].c_value = strdup(t + 1);
 #endif /* CNID_DB */
     } else if (optionok(tmp, "umask:", val)) {
@@@@ -571,13 +571,13 @@@@ static int accessvol(args, name)
 const char *args;
 const char *name;
 {
-    char buf[MAXPATHLEN + 1], *p;
+    char buf[MAXPATHLEN], *p;
     struct group *gr;
 
     if (!args)
         return -1;
 
-    strncpy(buf, args, sizeof(buf));
+    (void)strlcpy(buf, args, sizeof(buf));
     if ((p = strtok(buf, ",")) == NULL) /* nothing, return okay */
         return -1;
 
@@@@ -688,7 +688,7 @@@@ int		user;
 struct passwd *pwent;
 {
     FILE		*fp;
-    char		path[ MAXPATHLEN + 1], tmp[ MAXPATHLEN + 1],
+    char		path[MAXPATHLEN], tmp[MAXPATHLEN],
     volname[ AFPVOL_NAMELEN + 1 ], buf[ BUFSIZ ],
     type[ 5 ], creator[ 5 ];
     char		*u, *p;
@@@@ -699,10 +699,10 @@@@ struct passwd *pwent;
     if (!p1)
         return -1;
 
-    strcpy( path, p1 );
+    (void)strlcpy(path, p1, sizeof(path));
     if ( p2 != NULL ) {
-        strcat( path, "/" );
-        strcat( path, p2 );
+        (void)strlcat(path, "/", sizeof(path));
+        (void)strlcat( path, p2, sizeof(path));
a50 1
     if (NULL == ( fp = fopen( path, "r" )) ) {
@

