head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.30.21.33.34;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-etc_afpd_unix_c,v 1.1 2002/07/26 15:12:17 naddy Exp $
--- etc/afpd/unix.c.orig	Wed Jul 24 16:22:55 2002
+++ etc/afpd/unix.c	Wed Jul 24 16:35:55 2002
@@@@ -132,11 +132,11 @@@@ struct maccess	*ma;
 
     if ( (uuid == stat->st_uid) || (uuid == 0)) {
         ma->ma_user = ma->ma_owner | AR_UOWN;
-    } else if ( gmem( stat->st_gid )) {
-        ma->ma_user = ma->ma_group;
-    } else {
-        ma->ma_user = ma->ma_world;
     }
+    if ( gmem( stat->st_gid )) {
+        ma->ma_user |= ma->ma_group;
+    }
+    ma->ma_user |= ma->ma_world;
 
     /*
      * There are certain things the mac won't try if you don't have
@@@@ -202,10 +202,10 @@@@ struct maccess	*ma;
     mode_t		mode;
 
     mode = 0;
-    mode |= mtoubits( ma->ma_owner );
+    mode |= mtoubits( ma->ma_owner | ma->ma_world);
     mode = mode << 3;
 
-    mode |= mtoubits( ma->ma_group );
+    mode |= mtoubits( ma->ma_group | ma->ma_world);
     mode = mode << 3;
 
     mode |= mtoubits( ma->ma_world );
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 11
a11 44
$OpenBSD: patch-etc_afpd_unix_c,v 1.2 2003/08/22 11:18:19 naddy Exp $
--- etc/afpd/unix.c.orig	Mon Aug 18 14:38:03 2003
+++ etc/afpd/unix.c	Mon Aug 18 14:47:24 2003
@@@@ -289,7 +289,7 @@@@ const int dropbox;
 int setdeskmode( mode )
 const mode_t	mode;
 {
-    char		wd[ MAXPATHLEN + 1];
+    char		wd[MAXPATHLEN];
     struct stat         st;
     char		modbuf[ 12 + 1], *m;
     struct dirent	*deskp, *subp;
@@@@ -312,8 +312,8 @@@@ const mode_t	mode;
                 strcmp( deskp->d_name, ".." ) == 0 || strlen( deskp->d_name ) > 2 ) {
             continue;
         }
-        strcpy( modbuf, deskp->d_name );
-        strcat( modbuf, "/" );
+        (void)strlcpy(modbuf, deskp->d_name, sizeof(modbuf));
+        (void)strlcat(modbuf, "/", sizeof(modbuf));
         m = strchr( modbuf, '\0' );
         if (( sub = opendir( deskp->d_name )) == NULL ) {
             continue;
@@@@ -324,7 +324,7 @@@@ const mode_t	mode;
                 continue;
             }
             *m = '\0';
-            strcat( modbuf, subp->d_name );
+            (void)strlcat( modbuf, subp->d_name, sizeof(modbuf));
             /* XXX: need to preserve special modes */
             if (stat(modbuf, &st) < 0) {
                 LOG(log_error, logtype_afpd, "setdeskmode: stat %s: %s",
@@@@ -388,7 +388,7 @@@@ const mode_t mode;
 const int noadouble;
 const int dropbox;
 {
-    char		buf[ MAXPATHLEN + 1];
+    char		buf[MAXPATHLEN];
     struct stat		st;
     char		*m;
     struct dirent	*dirp;
@@@@ -436,8 +436,8 @@@@ const int dropbox;
         LOG(log_error, logtype_afpd, "setdirmode: opendir .AppleDouble: %s", strerror(errno) );
         return( -1 );
d13 14
a26 13
-    strcpy( buf, ".AppleDouble" );
-    strcat( buf, "/" );
+    (void)strlcpy(buf, ".AppleDouble", sizeof(buf));
+    (void)strlcat(buf, "/" ,sizeof(buf));
     m = strchr( buf, '\0' );
     for ( dirp = readdir( dir ); dirp != NULL; dirp = readdir( dir )) {
         if ( strcmp( dirp->d_name, "." ) == 0 ||
@@@@ -445,7 +445,7 @@@@ const int dropbox;
             continue;
         }
         *m = '\0';
-        strcat( buf, dirp->d_name );
+        (void)strlcat(buf, dirp->d_name, sizeof(buf));
d28 5
a32 60
         if ( stat( buf, &st ) < 0 ) {
             LOG(log_error, logtype_afpd, "setdirmode: stat %s: %s", buf, strerror(errno) );
@@@@ -476,7 +476,7 @@@@ int setdeskowner( uid, gid )
 const uid_t	uid;
 const gid_t	gid;
 {
-    char		wd[ MAXPATHLEN + 1];
+    char		wd[MAXPATHLEN];
     char		modbuf[12 + 1], *m;
     struct dirent	*deskp, *subp;
     DIR			*desk, *sub;
@@@@ -499,8 +499,8 @@@@ const gid_t	gid;
                 strlen( deskp->d_name ) > 2 ) {
             continue;
         }
-        strcpy( modbuf, deskp->d_name );
-        strcat( modbuf, "/" );
+        (void)strlcpy(modbuf, deskp->d_name, sizeof(modbuf));
+        (void)strlcat(modbuf, "/", sizeof(modbuf));
         m = strchr( modbuf, '\0' );
         if (( sub = opendir( deskp->d_name )) == NULL ) {
             continue;
@@@@ -511,7 +511,7 @@@@ const gid_t	gid;
                 continue;
             }
             *m = '\0';
-            strcat( modbuf, subp->d_name );
+            (void)strlcat(modbuf, subp->d_name, sizeof(modbuf));
             /* XXX: add special any uid, ignore group bits */
             if ( chown( modbuf, uid, gid ) < 0 && errno != EPERM ) {
                 LOG(log_error, logtype_afpd, "setdeskown: chown %s: %s",
@@@@ -547,7 +547,7 @@@@ const uid_t	uid;
 const gid_t	gid;
 const int   noadouble;
 {
-    char		buf[ MAXPATHLEN + 1];
+    char		buf[MAXPATHLEN];
     struct stat		st;
     char		*m;
     struct dirent	*dirp;
@@@@ -579,8 +579,8 @@@@ const int   noadouble;
             goto setdirowner_noadouble;
         return( -1 );
     }
-    strcpy( buf, ".AppleDouble" );
-    strcat( buf, "/" );
+    (void)strlcpy(buf, ".AppleDouble", sizeof(buf));
+    (void)strlcat(buf, "/", sizeof(buf));
     m = strchr( buf, '\0' );
     for ( dirp = readdir( dir ); dirp != NULL; dirp = readdir( dir )) {
         if ( strcmp( dirp->d_name, "." ) == 0 ||
@@@@ -588,7 +588,7 @@@@ const int   noadouble;
             continue;
         }
         *m = '\0';
-        strcat( buf, dirp->d_name );
+        (void)strlcat(buf, dirp->d_name, sizeof(buf));
         if ( chown( buf, uid, gid ) < 0 && errno != EPERM ) {
             LOG(log_debug, logtype_afpd, "setdirowner: chown %d/%d %s: %s",
                 uid, gid, buf, strerror(errno) );
@

