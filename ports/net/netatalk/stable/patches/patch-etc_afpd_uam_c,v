head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.08.30.21.33.33;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.30.21.33.33;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-etc_afpd_uam_c,v 1.1 2003/08/22 11:18:19 naddy Exp $
--- etc/afpd/uam.c.orig	Mon Aug 18 15:09:58 2003
+++ etc/afpd/uam.c	Mon Aug 18 15:11:17 2003
@@@@ -68,7 +68,7 @@@@ char *strchr (), *strrchr ();
 /* uam_load. uams must have a uam_setup function. */
 struct uam_mod *uam_load(const char *path, const char *name)
 {
-    char buf[MAXPATHLEN + 1], *p;
+    char buf[MAXPATHLEN], *p;
     struct uam_mod *mod;
     void *module;
 
@@@@ -82,8 +82,7 @@@@ struct uam_mod *uam_load(const char *pat
         goto uam_load_fail;
     }
 
-    strncpy(buf, name, sizeof(buf));
-    buf[sizeof(buf) - 1] = '\0';
+    (void)strlcpy(buf, name, sizeof(buf));
     if ((p = strchr(buf, '.')))
         *p = '\0';
     if ((mod->uam_fcn = mod_symbol(module, buf)) == NULL) {
@


1.1.1.1
log
@Synchronize with OpenBSD 3.4-beta
@
text
@@
