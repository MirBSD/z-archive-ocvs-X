head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.08.30.21.33.35;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.30.21.33.35;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-bin_afppasswd_afppasswd_c,v 1.1 2003/08/22 11:18:19 naddy Exp $
--- bin/afppasswd/afppasswd.c.orig	Mon Aug 18 13:35:13 2003
+++ bin/afppasswd/afppasswd.c	Mon Aug 18 13:39:17 2003
@@@@ -78,7 +78,7 @@@@ char *strchr (), *strrchr ();
 #define HEXPASSWDLEN 16
 #define PASSWDLEN 8
 
-static char buf[MAXPATHLEN + 1];
+static char buf[MAXPATHLEN];
 
 /* if newpwd is null, convert buf from hex to binary. if newpwd isn't
  * null, convert newpwd to hex and save it in buf. */
@@@@ -142,9 +142,9 @@@@ static int update_passwd(const char *pat
   }
 
   /* open the key file if it exists */
-  strcpy(buf, path);
+  (void)strlcpy(buf, path, sizeof(buf));
   if (strlen(path) < sizeof(buf) - 5) {
-    strcat(buf, ".key");
+    (void)strlcat(buf, ".key", sizeof(buf));
     keyfd = open(buf, O_RDONLY);
   } 
 
@


1.1.1.1
log
@Synchronize with OpenBSD 3.4-beta
@
text
@@
