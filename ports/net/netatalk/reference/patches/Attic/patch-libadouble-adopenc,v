head	1.2;
access;
symbols
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.08.18.15.58.15;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge OpenBSD
@
text
@--- libatalk/adouble/ad_open.c.orig	Thu Jul  9 23:13:58 1998
+++ libatalk/adouble/ad_open.c	Wed Nov 10 15:10:13 1999
@@@@ -28,7 +28,7 @@@@
 #include <netatalk/endian.h>
 #include <sys/syslog.h>
 #include <atalk/adouble.h>
-#include <strings.h>
+#include <string.h>
 #include <fcntl.h>
 #include <unistd.h>
 
@@@@ -50,16 +50,16 @@@@
     char	c, *slash;
 
     if ( adflags & ADFLAGS_DIR ) {
-	strcpy( pathbuf, path );
+	(void)strlcpy( pathbuf, path, sizeof( pathbuf ) );
 	if ( *path != '\0' ) {
 	    strcat( pathbuf, "/" );
 	}
 	slash = ".Parent";
     } else {
-	if (( slash = rindex( path, '/' )) != NULL ) {
+	if (( slash = strrchr( path, '/' )) != NULL ) {
 	    c = *++slash;
 	    *slash = '\0';
-	    strcpy( pathbuf, path );
+	    (void)strlcpy( pathbuf, path, sizeof ( pathbuf ) );
 	    *slash = c;
 	} else {
 	    pathbuf[ 0 ] = '\0';
@@@@ -102,8 +102,8 @@@@
      * (path or subdirectory name) to get the name we want to stat.
      * For a path which is just a filename, use "." instead.
      */
-    strcpy( modebuf, path );
-    if (( slash = rindex( modebuf, '/' )) != NULL ) {
+    (void)strlcpy( modebuf, path, sizeof (modebuf) );
+    if (( slash = strrchr( modebuf, '/' )) != NULL ) {
 	*slash = '\0';		/* remove pathname component */
     } else {
 	modebuf[0] = '.';	/* use current directory */
@@@@ -132,6 +132,7 @@@@
  * It's not possible to open the header file O_RDONLY -- the read
  * will fail and return an error.
  */
+int
 ad_open( path, adflags, oflags, mode, ad )
     char		*path;
     int			adflags, oflags, mode;
@@@@ -171,7 +172,7 @@@@
 		     * mkdir it.
 		     */
 		    if ( errno == ENOENT ) {
-			if (( slash = rindex( ad_p, '/' )) == NULL ) {
+			if (( slash = strrchr( ad_p, '/' )) == NULL ) {
 			    ad_close( ad, adflags );
 			    return( -1 );
 			}
@@@@ -206,12 +207,12 @@@@
 	 * This is a new adouble header file. Initialize the structure,
 	 * instead of reading it.
 	 */
-	bzero( (char *)ad->ad_eid, sizeof( ad->ad_eid ));
+	memset( (char *)ad->ad_eid, 0, sizeof( ad->ad_eid ));
 	if ( ad->ad_hf.adf_flags & ( O_TRUNC | O_CREAT )) {
 	    ad->ad_magic = AD_MAGIC;
 	    ad->ad_version = AD_VERSION;
-	    bzero( ad->ad_homefs, sizeof( ad->ad_homefs ));
-	    bzero( ad->ad_data, sizeof( ad->ad_data ));
+	    memset( ad->ad_homefs, 0, sizeof( ad->ad_homefs ));
+	    memset( ad->ad_data, 0, sizeof( ad->ad_data ));
 
 	    ad->ad_eid[ ADEID_RFORK ].ade_off = ADEDOFF_RFORK;
 	    ad->ad_eid[ ADEID_RFORK ].ade_len = ADEDLEN_RFORK;
@@@@ -237,6 +238,7 @@@@
     return( 0 );
 }
 
+int
 ad_refresh( ad )
     struct adouble	*ad;
 {
@@@@ -271,15 +273,15 @@@@
      * we know that magic, version, homefs, and nentries are less
      * than data, so we don't check whether we exceed end.
      */
-    bcopy( buf, (char *)&ad->ad_magic, sizeof( ad->ad_magic ));
+    memcpy( (char *)&ad->ad_magic, buf, sizeof( ad->ad_magic ));
     ad->ad_magic = ntohl( ad->ad_magic );
     buf += sizeof( ad->ad_magic );
-    bcopy( buf, (char *)&ad->ad_version, sizeof( ad->ad_version ));
+    memcpy( (char *)&ad->ad_version, buf, sizeof( ad->ad_version ));
     ad->ad_version = ntohl( ad->ad_version );
     buf += sizeof( ad->ad_version );
-    bcopy( buf, ad->ad_homefs, sizeof( ad->ad_homefs ));
+    memcpy( ad->ad_homefs, buf, sizeof( ad->ad_homefs ));
     buf += sizeof( ad->ad_homefs );
-    bcopy( buf, (char *)&nentries, sizeof( nentries ));
+    memcpy( (char *)&nentries, buf, sizeof( nentries ));
     nentries = ntohs( nentries );
     buf += sizeof( nentries );
 
@@@@ -289,13 +291,13 @@@@
 	    return( -1 );
 	}
 
-	bcopy( buf, (char *)&eid, sizeof( eid ));
+	memcpy( (char *)&eid, buf, sizeof( eid ));
 	eid = ntohl( eid );
 	buf += sizeof( eid );
-	bcopy( buf, (char *)&off, sizeof( off ));
+	memcpy( (char *)&off, buf, sizeof( off ));
 	off = ntohl( off );
 	buf += sizeof( off );
-	bcopy( buf, (char *)&len, sizeof( len ));
+	memcpy( (char *)&len, buf, sizeof( len ));
 	len = ntohl( len );
 	buf += sizeof( len );
 
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
