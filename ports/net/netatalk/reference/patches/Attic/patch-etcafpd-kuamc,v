head	1.2;
access;
symbols
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.08.18.15.58.04;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.52.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge OpenBSD
@
text
@--- etc/afpd/kuam.c.orig	Thu Nov 17 09:04:23 1994
+++ etc/afpd/kuam.c	Thu Nov 11 15:20:18 1999
@@@@ -11,7 +11,7 @@@@
 #include <prot.h>
 
 #include <stdio.h>
-#include <strings.h>
+#include <string.h>
 #include <errno.h>
 
 /* use the bsd time.h struct defs for PC too! */
@@@@ -81,7 +81,7 @@@@
     int msg_byte_order;
     int kerror;
     struct timeval t_local;
-    unsigned long rep_err_code;
+    u_int32_t rep_err_code;
 
 
     /* BUILD REQUEST PACKET */
@@@@ -102,7 +102,7 @@@@
 
     (void) gettimeofday(&t_local,(struct timezone *) 0);
     /* timestamp */
-    bcopy((char *)&(t_local.tv_sec),(char *)(pkt->dat+pkt->length), 4);
+    memcpy((char *)(pkt->dat+pkt->length), (char *)&(t_local.tv_sec), 4);
     pkt->length += 4;
 
     *(pkt->dat+(pkt->length)++) = (char) life;
@@@@ -132,8 +132,8 @@@@
     case AUTH_MSG_KDC_REPLY:
         break;
     case AUTH_MSG_ERR_REPLY:
-        bcopy(pkt_err_code(rpkt),(char *) &rep_err_code,4);
-        if (swap_bytes) swap_u_long(rep_err_code);
+        memcpy((char *) &rep_err_code, pkt_err_code(rpkt), 4);
+        if (swap_bytes) rep_err_code = swap32(rep_err_code);
         return((int)rep_err_code);
     default:
         return(INTK_PROT);
@@@@ -149,25 +149,25 @@@@
     KTEXT		tkt = &tkt_st;
     struct timeval	t_local;
     int			lifetime, kvno, kerror;
-    u_long		kdc_time;
+    u_int32_t		kdc_time;
     C_Block		ses;
     char		s_name[ SNAME_SZ ], s_instance[ INST_SZ ];
     char		rlm[ REALM_SZ ];
 
     /* extract session key */
-    bcopy(ptr,(char *)ses,8);
+    memcpy((char *)ses, ptr, 8);
     ptr += 8;
 
     /* extract server's name */
-    (void) strcpy(s_name,ptr);
+    (void)strlcpy(s_name, ptr, sizeof(s_name));
     ptr += strlen(s_name) + 1;
 
     /* extract server's instance */
-    (void) strcpy(s_instance,ptr);
+    (void)strlcpy(s_instance, ptr, sizeof(s_instance) );
     ptr += strlen(s_instance) + 1;
 
     /* extract server's realm */
-    (void) strcpy(rlm,ptr);
+    (void)strlcpy(rlm, ptr, sizeof(rlm) );
     ptr += strlen(rlm) + 1;
 
     /* extract ticket lifetime, server key version, ticket length */
@@@@ -178,7 +178,7 @@@@
     ptr += 3;
 
     /* extract ticket itself */
-    bcopy(ptr,(char *)(tkt->dat),tkt->length);
+    memcpy((char *)(tkt->dat), ptr, tkt->length);
     ptr += tkt->length;
 
     if (strcmp(s_name, service) || strcmp(s_instance, sinstance) ||
@@@@ -186,8 +186,8 @@@@
 	return(INTK_ERR);	/* we need a better code here XXX */
 
     /* check KDC time stamp */
-    bcopy(ptr,(char *)&kdc_time,4); /* Time (coarse) */
-    if (swap_bytes) swap_u_long(kdc_time);
+    memcpy((char *)&kdc_time, ptr, 4); /* Time (coarse) */
+    if (swap_bytes) kdc_time = swap32(kdc_time);
 
     ptr += 4;
 
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
