head	1.2;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.01.14.19.35.49;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.01.14.15.30.03;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.14.15.30.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fearless and careful (at least in infrastructure/) attempt to merge [a-n]
of ports and take care of the changes.
expect _major_ breakage. porters, check your ports. I might have been tired.

The following things have not been updated:
* databases/db
* databases/openldap
* mail/mutt
* mail/p5-Mail-SpamAssassin
* net/irssi

Maintainers, to merge the conflicts, use
$ cd databases/openldap; cvs -d $CVSROOT up -PAd -jcvs-200312021610 -jcvs-200301141450
then find and fix conflicts.

Note: some files might have been added or "marked for deletion".
No need to restate that CVS sucks, this is already consensus.
So please check the "cvs up" output carefully (not only rcsmerge,
but also cvs and U ones - and M, you shouldn't include local mods).
@
text
@$OpenBSD: patch-tcl_tcl_mp_c,v 1.1 2004/01/10 08:36:28 sturm Exp $
--- tcl/tcl_mp.c.orig	2004-01-08 23:29:23.000000000 +0100
+++ tcl/tcl_mp.c	2004-01-08 23:29:58.000000000 +0100
@@@@ -187,7 +187,7 @@@@ tcl_Mp(interp, objc, objv, envp, envip)
 	memset(newname, 0, MSG_SIZE);
 	while (i < objc) {
 		if (Tcl_GetIndexFromObj(interp, objv[i],
-		    mpopts, "option", TCL_EXACT, &optindex) != TCL_OK) {
+		    (CONST84 char **)mpopts, "option", TCL_EXACT, &optindex) != TCL_OK) {
 			/*
 			 * Reset the result so we don't get an errant
 			 * error message if there is another error.
@@@@ -434,7 +434,7 @@@@ mp_Cmd(clientData, interp, objc, objv)
 	 * defined above.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], mpcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)mpcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	res = NULL;
@@@@ -506,7 +506,7 @@@@ tcl_MpGet(interp, objc, objv, mp, mpip)
 	flag = 0;
 	while (i < objc) {
 		if (Tcl_GetIndexFromObj(interp, objv[i],
-		    mpget, "option", TCL_EXACT, &optindex) != TCL_OK) {
+		    (CONST84 char **)mpget, "option", TCL_EXACT, &optindex) != TCL_OK) {
 			/*
 			 * Reset the result so we don't get an errant
 			 * error message if there is another error.
@@@@ -640,7 +640,7 @@@@ pg_Cmd(clientData, interp, objc, objv)
 	 * defined above.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], pgcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)pgcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	res = NULL;
@@@@ -697,7 +697,7 @@@@ tcl_Pg(interp, objc, objv, page, mp, pgi
 	flag = 0;
 	while (i < objc) {
 		if (Tcl_GetIndexFromObj(interp, objv[i],
-		    pgopt, "option", TCL_EXACT, &optindex) != TCL_OK)
+		    (CONST84 char **)pgopt, "option", TCL_EXACT, &optindex) != TCL_OK)
 			return (IS_HELP(objv[i]));
 		i++;
 		switch ((enum pgopt)optindex) {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@@
