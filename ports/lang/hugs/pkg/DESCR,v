head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.3
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308221505:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.51.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.51.41;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.01.14.15.42.47;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.28.16.29.26;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@Hugs 98 is a functional programming system which provides an almost
complete implementation of Haskell 98.

  o Lazy evaluation, higher order functions, and pattern matching.
  o A wide range of built-in types, from characters to bignums, and lists
    to functions, with comprehensive facilities for defining new datatypes
    and type synonyms.
  o A polymorphic type system with type and constructor class overloading.
  o All of the features of the Haskell 98 expression and pattern syntax.
  o An implementation of the main Haskell 98 primitives for monadic I/O,
    with support for simple interactive programs, access to text files,
    handle-based I/O, and exception handling.
  o An almost complete implementation of the Haskell module system.
    Hugs 98 also supports a number of experimental extensions including
    multi-parameter classes, extensible records, rank-2 polymorphism,
    existentials, scoped type variables, and restricted type synonyms. 

WWW: ${HOMEPAGE}
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d17 2
@


1.1.1.3
log
@Import OpenBSD ports tree checked out from anoncvs.ca.openbsd.org at
2004-05-28 15:30 UTC.

Lots of SECURITY fixes, at least:

 * databases/mysql: tmpfile issue
 * www/squid: acl bypass
 * games/xonix: privilege escalation
 * archivers/lha: buffer overflow
 * mail/exim: buffer overflows
 * net/rsync: path checking issue
 * net/icecast: buffer overflow
 * www/opera
@
text
@d1 2
a2 4
Hugs 98 is a functional programming system based on Haskell 98, the de
facto standard for non-strict functional programming languages. Hugs
98 provides an almost complete implementation of Haskell 98,
including:
d4 13
a16 18
    * Lazy evaluation, higher order functions, and pattern matching.                        
    * A wide range of built-in types, from characters to bignums, and
      lists to functions, with comprehensive facilities for defining
      new datatypes and type synonyms.
    * An advanced polymorphic type system with type and constructor
      class overloading.
    * All of the features of the Haskell 98 expression and pattern
      syntax including lambda, case, conditional and let expressions,
      list comprehensions, do-notation, operator sections, and
      wildcard, irrefutable and `as' patterns.
    * An implementation of the Haskell 98 primitives for monadic I/O,
      with support for simple interactive programs, access to text
      files, handle-based I/O, and exception handling.
    * An almost complete implementation of the Haskell module system.
      Hugs 98 also supports a number of advanced and experimental
      extensions including multi-parameter classes, extensible
      records, rank-2 polymorphism, existentials, scoped type
      variables, and restricted type synonyms.
@


