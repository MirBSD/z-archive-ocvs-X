head	1.6;
access;
symbols
	cvs-200405281530:1.1.1.9
	cvs-200402211630:1.1.1.8
	cvs-200401261625:1.1.1.7
	cvs-200401162142:1.1.1.7
	cvs-200301141450:1.1.1.7
	cvs-200312021610:1.1.1.6
	cvs-200311151930:1.1.1.6
	cvs-200310311830:1.1.1.6
	cvs-200310021000:1.1.1.6
	cvs-200309281111:1.1.1.6
	cvs-200309171515:1.1.1.6
	cvs-200308302005:1.1.1.5
	cvs-200308221505:1.1.1.5
	cvs-200308171200:1.1.1.4
	ctm-3449:1.1.1.3
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2004.05.28.20.44.50;	author bsiegert;	state Stab;
branches;
next	1.5;

1.5
date	2004.02.24.17.19.12;	author bsiegert;	state Exp;
branches;
next	1.4;

1.4
date	2004.01.14.19.37.59;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.05.18.28.18;	author bsiegert;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.01.00.40.48;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.05.16.44.03;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.05.16.44.03;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.07.06.13.28.50;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.07.26.13.41.24;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.17.13.21.26;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.08.22.15.25.44;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.09.17.16.03.35;	author tg;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.01.14.15.42.40;	author tg;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.02.21.17.04.57;	author bsiegert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.05.28.16.29.15;	author bsiegert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge graphics and lang.

lang/python/2.{2,3}: needs testing.
lang/tcl/8.4: needs testing.
@
text
@# $MirBSD: ports/lang/ghc/Makefile,v 1.5 2004/02/24 17:19:12 bsiegert Exp $
# $OpenBSD: Makefile,v 1.17 2004/05/20 00:08:22 dons Exp $
# 
# Based on Simon Marlow's port script for FreeBSD:
# $FreeBSD: ports/lang/ghc/Makefile,v 1.13 2002/08/22 12:53:38 obraun Exp $
# And on NetBSD's 5.04.3 .hc boot script

ONLY_FOR_ARCHS= i386 sparc amd64
 
# The general solution for other architectures will be to boot
# via unregisterised .hc files generated on openbsd-*-i386. See:
#
#  http://haskell.org/ghc/docs/latest/html/building/sec-porting-ghc.html
#
# The best bets are powerpc and alpha. sparc64, mips64 and amd64
# should work. hppa and mips have recently worked. m68k hasn't worked
# for a long time now, and on mac68k at least _ld_ dies with a malloc
# error when linking the ghc binary.
 
# The build process: we build a full GHC from C source. The C source
# needs to be generated once for each arch, for each version of GHC.

COMMENT=	"compiler for the functional language Haskell"
COMMENT-doc=	"documentation for the functional language Haskell"

V=		6.2.1

DISTNAME=	ghc-${V}
CATEGORIES=	lang
HOMEPAGE=	http://www.haskell.org/ghc/

LIB_DEPENDS=	gmp::devel/gmp

MULTI_PACKAGES=	-doc
SUBPACKAGE?=
FULLPKGNAME-doc=ghc-doc-${V}
.if defined(PACKAGING) && ${SUBPACKAGE} == "-doc"
PKG_ARCH=	*
.endif

HASKELL=	http://www.haskell.org
MASTER_SITES=	${HASKELL}/ghc/dist/${V}/
MASTER_SITES0=	${HASKELL}/ghc/docs/${V}/
MASTER_SITES1=	${HASKELL}/definition/
MASTER_SITES2=	ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${V}/

DIST_SUBDIR=	ghc-${V}
DOC_FILES=	users_guide hslibs building libraries
DOC_FILES1=	haskell98-report
DOC_DIR=	${PREFIX}/share/doc/ghc

DISTFILES=	ghc-${V}-src.tar.bz2 \
		${DOC_FILES:C/(.+)/\1.html.tar.gz:0/g} \
		${DOC_FILES1:C/(.+)/\1-html.tar.gz:1/g} \
		ghc-${V}-${ARCH}-unknown-openbsd-hc.tar.bz2:2 \
		ghc-regress-${V}.tar.bz2:2

# this tarball is the first step in porting to a new architecture
SUPDISTFILES=	ghc-${V}-i386-unknown-openbsd-hc.tar.bz2:2  \
		ghc-${V}-sparc-unknown-openbsd-hc.tar.bz2:2 \
		ghc-${V}-amd64-unknown-openbsd-hc.tar.bz2:2

# datasize around 130M on amd64
VMEM_WARNING=	Yes

USE_GMAKE=	Yes
CONFIGURE_STYLE=gnu dest
CONFIGURE_ENV+=	LOCALBASE="${LOCALBASE}"

# global register variable bug in gcc 3.3.2 screws up amd64. need gcc 3.4
# we bypass it by ignoring all platform dependent tweaks. 2x slowdown.
.if ${MACHINE_ARCH} == "amd64"
CONFIGURE_ARGS+=--enable-hc-boot-unregisterised
.endif

# distrib/hc-build is a wrapper around configure and the
# bootstrap make, with magic flags, vars and control flow
do-configure:
	: nothing here

do-build:
	@@(cd ${WRKSRC} ;\
	 ${CONFIGURE_ENV} distrib/hc-build ${CONFIGURE_ARGS})

# note: ghci not in PLIST since it doesnt work yet

FAKE_FLAGS+="stage=1"

post-install:
	${INSTALL_DATA_DIR} ${DOC_DIR}
.for i in ${DOC_FILES:C/(.+)/\1.html.tar.gz/g} \
	  ${DOC_FILES1:C/(.+)/\1-html.tar.gz/g}
	@@tar zxf ${FULLDISTDIR}/${i} -C ${DOC_DIR}
.endfor

REGRESS_DEPENDS=::lang/python/2.2
REGRESS_RESULT=	${WRKSRC}/actual.result
REGRESS_FLAGS=	TEST_HC="${WRKSRC}/ghc/compiler/stage1/ghc-inplace"
REGRESS_FLAGS+=	EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}" \
		PYTHON="${LOCALBASE}/bin/python2.2"

# BSD w/o advertising clause
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes

.include <bsd.port.mk>
@


1.5
log
@Merge lang/.

XXX tg, I have omitted the merge of lang/egcs. Please do that.
@
text
@d1 3
a3 2
# $MirBSD: Makefile,v 1.4 2004/01/14 19:37:59 tg Exp $
# $OpenBSD: Makefile,v 1.14 2004/02/04 07:39:18 sturm Exp $
a6 3
#
# The build process:
#       1) build a full ghc6 from pre-generated 6.0.1 C files
d8 2
a9 1
ONLY_FOR_ARCHS= i386 sparc
a13 1
#  http://cvs.haskell.org/cgi-bin/cvsweb.cgi/fptools/distrib/cross-port
d15 7
a21 4
# The best bets are powerpc and alpha. sparc64 and amd64 should
# work. hppa and mips have recently worked. m68k hasn't worked
# for a long time now, and on mac68k at least _ld_ dies with a
# malloc error when linking the ghc binary.
d26 1
a26 1
V=		6.0.1
a31 2
BROKEN=		patches need updating

d55 2
a56 2
		ghc-regress-${V}.1.tar.bz2:2 \
		ghc-${V}-${ARCH}-hc.tar.gz:2
a57 1
# only i386 and sparc .hc src exist at the moment. generating
d59 6
a64 1
SUPDISTFILES=	ghc-${V}-${ARCH}-hc.tar.gz:2
d70 6
d100 1
a100 1
		PYTHON="${LOCALBASE}/bin/python"
@


1.4
log
@fearless and careful (at least in infrastructure/) attempt to merge [a-n]
of ports and take care of the changes.
expect _major_ breakage. porters, check your ports. I might have been tired.

The following things have not been updated:
* databases/db
* databases/openldap
* mail/mutt
* mail/p5-Mail-SpamAssassin
* net/irssi

Maintainers, to merge the conflicts, use
$ cd databases/openldap; cvs -d $CVSROOT up -PAd -jcvs-200312021610 -jcvs-200301141450
then find and fix conflicts.

Note: some files might have been added or "marked for deletion".
No need to restate that CVS sucks, this is already consensus.
So please check the "cvs up" output carefully (not only rcsmerge,
but also cvs and U ones - and M, you shouldn't include local mods).
@
text
@d1 2
a2 2
# $MirBSD: Makefile,v 1.3 2004/01/05 18:28:18 bsiegert Exp $
# $OpenBSD: Makefile,v 1.13 2004/01/08 20:33:23 avsm Exp $
d38 3
@


1.3
log
@Mark as BROKEN, as the patches don't apply
@
text
@d1 2
a2 2
# $MirBSD$
# $OpenBSD: Makefile,v 1.12 2003/09/01 22:46:28 avsm Exp $
d10 3
a12 4
ONLY_FOR_ARCHS= i386
# The general solution for other architectures [alpha, powerpc,
# sparc64, hppa, mips, m68k at least] will be to boot via
# unregisterised .hc files generated on openbsd-*-i386. See:
d17 4
a20 6
# The best bets are powerpc, sparc, sparc64 and alpha, which are
# working, or have recently worked, on linux. m68k needs to have
# its asm format set in the mangler, before we can do any kind of
# build. sparc is in a slightly better position, as we have
# 4.08.2 .hc source, but the C-built ghc4 goes into an infinite
# loop, when I last tried -- dons
d53 1
a53 1
		ghc-regress-${V}.tar.bz2:2 \
d56 2
a57 1
# only i386 hc src exists at the moment
@


1.2
log
@it's over, people

--
Usually, the BSD community _never_ removes credits (the MirOS COPYRIGHT
file being a pretty good example for that fact). However, the OpenBSD
people required me to remove their names from the MirPorts framework,
where it got imported to from the OpenBSD ports tree, and declared as
contributor of the port to OpenBSD. I can understand their privacy is-
sues, but still am not easy with this decision. However, I have to obey.
@
text
@d1 1
d33 2
@


1.1
log
@Initial revision
@
text
@d1 1
d4 1
a4 2
#
# Last update : ported to ELF : Wed Apr 23 12:38:42 EST 2003
d7 1
a7 3
#       1) build a bootstrap ghc4 from C source
#       3) use this to make a bootstrap ghc5
#       4) and then, finally, a full ghc5 
d10 6
a15 2
# sparc: hacking needed
# Requires someone to handle the asm format in ghc/driver/mangler/*.lprl
d17 6
a22 3
# m68k, alpha and powerpc have the problem that we don't
# have .hc src to bootstrap from. We would need an "unregisterised"
# build... more work
d25 1
d27 1
a27 2
FULLVER=	5.04.3
BOOTVER=	4.08.2
d29 1
a29 1
DISTNAME=	ghc-${FULLVER}
a31 1
MAINTAINER=	Don Stewart <dons@@cse.unsw.edu.au>
d33 1
a33 5
# BSD w/o advertising clause
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes
d35 20
a54 1
NO_REGRESS=Yes
d56 2
a57 3
HASKELL=	http://www.haskell.org/
MASTER_SITES=	${HASKELL}ghc/dist/${FULLVER}/
MASTER_SITES0=	${HASKELL}ghc/dist/${BOOTVER}/
d59 3
a61 2
DISTFILES=	ghc-${FULLVER}-src.tar.bz2   \
		ghc-${BOOTVER}-src.tar.bz2:0
d63 8
a70 5
.if ${MACHINE_ARCH} == "i386"
    HCSRC=ghc-${BOOTVER}-x86-hc.tar.bz2:0
.elif ${MACHINE_ARCH} == "sparc"
    HCSRC=ghc-${BOOTVER}-sparc-hc.tar.bz2:0
.endif
d72 1
a72 1
DISTFILES+=	${HCSRC}
d74 1
a74 3
# where the first compilers will be built
STAGE0=		${WRKDIR}/ghc-${BOOTVER}
STAGE1=		${WRKDIR}/ghc-${FULLVER}-boot
d76 12
a87 4
YACC?=		/usr/bin/yacc
USE_GMAKE=	Yes
CONFIGURE_STYLE=gnu dest
CONFIGURE_ARGS=	--with-ghc=${STAGE1}/ghc/compiler/ghc-inplace
d89 5
a93 22
pre-configure:
# Build the GHC4 bootstrap compiler from C source
	@@echo "===>  Building GHC4 bootstrap compiler"
	@@(cd ${STAGE0} ; distrib/hc-build --prefix=${STAGE0})
# Now, we bootstrap GHC5 (as fast a build as possible)
	@@echo "===>  Building GHC5 bootstrap compiler"
	@@(mkdir ${STAGE1} ; cd ${STAGE1} ; lndir ${WRKSRC} ;\
	  ./configure --prefix=${STAGE1} \
                  --with-ghc=${STAGE0}/ghc/driver/ghc-inplace ;\
	  echo "GhcWithInterpreter=NO"        >mk/build.mk ;\
	  echo "GhcLibWays="                 >>mk/build.mk ;\
	  echo "GhcCompilerWays="            >>mk/build.mk ;\
	  echo "SplitObjs=NO"                >>mk/build.mk ;\
	  echo "FptoolsHcOpts=-H32m"         >>mk/build.mk ;\
	  ${GMAKE})
# And now, the whole thing
	@@echo "===>  Building GHC5 full version"
	@@(cd ${WRKSRC}; \
	  echo "GhcWithInterpreter=NO" >mk/build.mk ;\
	  echo "FptoolsHcOpts=-H32m"  >>mk/build.mk)

# note: ghci not in PLIST since it doesnt work yet
@


1.1.1.1
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree
@
text
@a19 1
COMMENT-doc=	"documentation for the functional language Haskell"
a28 4
MULTI_PACKAGES=	-doc
SUBPACKAGE?=
FULLPKGNAME-doc= ghc-doc-${FULLVER}

a39 5
MASTER_SITES1=	${HASKELL}ghc/docs/${FULLVER}/

DIST_SUBDIR=	ghc-${FULLVER}
DOC_FILES=	users_guide hslibs building libraries
DOC_DIR=	${PREFIX}/share/doc/ghc
d41 2
a42 2
DISTFILES=	ghc-${FULLVER}-src.tar.bz2  ghc-${BOOTVER}-src.tar.bz2:0 \
		${DOC_FILES:C/(.+)/\1.html.tar.gz:1/g}
a82 6

post-install:
	${INSTALL_DATA_DIR} ${DOC_DIR}
.for i in ${DOC_FILES:C/(.+)/\1.html.tar.gz/g}
	@@tar zxf ${FULLDISTDIR}/${i} -C ${DOC_DIR}
.endfor
@


1.1.1.3
log
@Import latest OpenBSD ports, XFree and source in sync
@
text
@d4 1
a4 2
# Last update : updated to 6.0: Fri Jul  4 10:16:53 EST 2003
#               ported to ELF : Wed Apr 23 12:38:42 EST 2003
d8 2
a9 2
#       2) use this to do an in-tree ghc6 bootstrap and build
#
d12 2
a13 1
# sparc : needs to handle the asm format in ghc/driver/mangler/*.lprl
d15 3
a17 4
# alpha and powerpc have the problem that we don't have .hc src
# to bootstrap from. We would need an "unregisterised" build...
# More work. m68k needs to have its asm format set in the
# mangler, before we can do any kind of build at all. 
d22 1
a22 1
FULLVER=	6.0
d40 2
a45 1
MASTER_SITES2=  ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${FULLVER}/
d52 1
a52 2
		${DOC_FILES:C/(.+)/\1.html.tar.gz:1/g} \
                ghc-regress-${FULLVER}.0.tar.bz2:2
a61 5
REGRESS_DEPENDS=::lang/python/2.2
REGRESS_RESULT=${WRKSRC}/${ARCH}.test.result
REGRESS_FLAGS=TEST_HC="${WRKSRC}/ghc/compiler/stage2/ghc-inplace"
REGRESS_FLAGS+=EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}"

d64 1
d66 1
d69 1
a69 1
CONFIGURE_ARGS=--with-ghc=${STAGE0}/ghc/driver/ghc-inplace
a70 1
# Build the GHC-4 bootstrap compiler from C source
d72 2
d75 16
@


1.1.1.4
log
@Import OpenBSD CVS repository (checked out) of roughly 12:00 UTC today,
retrieved from the canadian anoncvs server (due to CTM unavailability)
@
text
@a0 1
# $OpenBSD: Makefile,v 1.9 2003/08/14 21:38:36 avsm Exp $
d4 3
d10 1
d23 1
a23 1
FULLVER=	6.0.1
a30 2
LIB_DEPENDS=	gmp::devel/gmp

d33 7
a39 1
FULLPKGNAME-doc=ghc-doc-${FULLVER}
d45 1
a45 1
MASTER_SITES2=	ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${FULLVER}/
d53 1
a53 1
		ghc-regress-${FULLVER}.tar.bz2:2
d56 1
a56 1
A=x86
d58 1
a58 3
A=sparc
.else
A=unreg
d60 2
a61 2
DISTFILES+=	ghc-${BOOTVER}-${A}-hc.tar.bz2:0
SUPDISTFILES=	ghc-${BOOTVER}-x86-hc.tar.bz2:0 ghc-${BOOTVER}-sparc-hc.tar.bz2:0
d64 3
a66 3
REGRESS_RESULT=	${WRKSRC}/actual.result
REGRESS_FLAGS=	TEST_HC="${WRKSRC}/ghc/compiler/stage2/ghc-inplace"
REGRESS_FLAGS+=	EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}"
d73 1
a73 5
CONFIGURE_ARGS=	--with-ghc=${STAGE0}/ghc/driver/ghc-inplace

CONFIGURE_ENV+=	CPPFLAGS="-I${LOCALBASE}/include" \
		LDFLAGS="-L${LOCALBASE}/lib" \
		LOCALBASE="${LOCALBASE}"
d77 1
a77 2
	@@(cd ${STAGE0} ;\
	  ${CONFIGURE_ENV} distrib/hc-build --prefix=${STAGE0})
a85 6

# BSD w/o advertising clause
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes
@


1.1.1.5
log
@Pull in a bit of current OpenBSD, to the least
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2003/08/21 19:51:23 espie Exp $
a68 3

# XXX fiddle with this if the 4.08 compiler burps for you
MAKE_FLAGS=	TWEAKED_SIZE=80M
@


1.1.1.6
log
@Import OpenBSD 3.4-current ports tree.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2003/09/01 22:46:28 avsm Exp $
a3 1
# And on NetBSD's 5.04.3 .hc boot script
d6 2
a7 1
#       1) build a full ghc6 from pre-generated 6.0.1 C files
d10 1
a10 3
# The general solution for other architectures [alpha, powerpc,
# sparc64, hppa, mips, m68k at least] will be to boot via
# unregisterised .hc files generated on openbsd-*-i386. See:
d12 4
a15 9
#  http://haskell.org/ghc/docs/latest/html/building/sec-porting-ghc.html
#  http://cvs.haskell.org/cgi-bin/cvsweb.cgi/fptools/distrib/cross-port
#
# The best bets are powerpc, sparc, sparc64 and alpha, which are
# working, or have recently worked, on linux. m68k needs to have
# its asm format set in the mangler, before we can do any kind of
# build. sparc is in a slightly better position, as we have
# 4.08.2 .hc source, but the C-built ghc4 goes into an infinite
# loop, when I last tried -- dons
d20 2
a21 1
V=		6.0.1
d23 1
a23 1
DISTNAME=	ghc-${V}
d32 1
a32 1
FULLPKGNAME-doc=ghc-doc-${V}
d34 5
a38 5
HASKELL=	http://www.haskell.org
MASTER_SITES=	${HASKELL}/ghc/dist/${V}/
MASTER_SITES0=	${HASKELL}/ghc/docs/${V}/
MASTER_SITES1=	${HASKELL}/definition/
MASTER_SITES2=	ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${V}/
d40 1
a40 1
DIST_SUBDIR=	ghc-${V}
a41 1
DOC_FILES1=	haskell98-report
d44 13
a56 5
DISTFILES=	ghc-${V}-src.tar.bz2 \
		${DOC_FILES:C/(.+)/\1.html.tar.gz:0/g} \
		${DOC_FILES1:C/(.+)/\1-html.tar.gz:1/g} \
		ghc-regress-${V}.tar.bz2:2 \
		ghc-${V}-${ARCH}-hc.tar.gz:2
d58 7
a64 2
# only i386 hc src exists at the moment
SUPDISTFILES=	ghc-${V}-${ARCH}-hc.tar.gz:2
d68 4
a71 1
CONFIGURE_ENV+=	LOCALBASE="${LOCALBASE}"
d73 8
a80 8
# distrib/hc-build is a wrapper around configure and the
# bootstrap make, with magic flags, vars and control flow
do-configure:
	: nothing here

do-build:
	@@(cd ${WRKSRC} ;\
	 ${CONFIGURE_ENV} distrib/hc-build ${CONFIGURE_ARGS})
a83 2
FAKE_FLAGS+="stage=1"

d86 1
a86 2
.for i in ${DOC_FILES:C/(.+)/\1.html.tar.gz/g} \
	  ${DOC_FILES1:C/(.+)/\1-html.tar.gz/g}
a88 6

REGRESS_DEPENDS=::lang/python/2.2
REGRESS_RESULT=	${WRKSRC}/actual.result
REGRESS_FLAGS=	TEST_HC="${WRKSRC}/ghc/compiler/stage1/ghc-inplace"
REGRESS_FLAGS+=	EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}" \
		PYTHON="${LOCALBASE}/bin/python"
@


1.1.1.7
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2004/01/08 20:33:23 avsm Exp $
d9 4
a12 3
ONLY_FOR_ARCHS= i386 sparc
# The general solution for other architectures will be to boot
# via unregisterised .hc files generated on openbsd-*-i386. See:
d17 6
a22 4
# The best bets are powerpc and alpha. sparc64 and amd64 should
# work. hppa and mips have recently worked. m68k hasn't worked
# for a long time now, and on mac68k at least _ld_ dies with a
# malloc error when linking the ghc binary.
d54 1
a54 1
		ghc-regress-${V}.1.tar.bz2:2 \
d57 1
a57 2
# only i386 and sparc .hc src exist at the moment. generating
# this tarball is the first step in porting to a new architecture
@


1.1.1.8
log
@Import OpenBSD ports again. This will give us lots of new toys :).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2004/02/04 07:39:18 sturm Exp $
a35 3
.if defined(PACKAGING) && ${SUBPACKAGE} == "-doc"
PKG_ARCH=	*
.endif
@


1.1.1.9
log
@Import OpenBSD ports tree checked out from anoncvs.ca.openbsd.org at
2004-05-28 15:30 UTC.

Lots of SECURITY fixes, at least:

 * databases/mysql: tmpfile issue
 * www/squid: acl bypass
 * games/xonix: privilege escalation
 * archivers/lha: buffer overflow
 * mail/exim: buffer overflows
 * net/rsync: path checking issue
 * net/icecast: buffer overflow
 * www/opera
@
text
@d1 1
a1 2
# $OpenBSD: Makefile,v 1.17 2004/05/20 00:08:22 dons Exp $
# 
d5 3
d9 1
a9 2
ONLY_FOR_ARCHS= i386 sparc amd64
 
d14 1
d16 4
a19 7
# The best bets are powerpc and alpha. sparc64, mips64 and amd64
# should work. hppa and mips have recently worked. m68k hasn't worked
# for a long time now, and on mac68k at least _ld_ dies with a malloc
# error when linking the ghc binary.
 
# The build process: we build a full GHC from C source. The C source
# needs to be generated once for each arch, for each version of GHC.
d24 1
a24 1
V=		6.2.1
d29 1
a29 1
MAINTAINER=	Don Stewart <dons@@openbsd.org>
d54 2
a55 2
		ghc-${V}-${ARCH}-unknown-openbsd-hc.tar.bz2:2 \
		ghc-regress-${V}.tar.bz2:2
d57 1
d59 1
a59 6
SUPDISTFILES=	ghc-${V}-i386-unknown-openbsd-hc.tar.bz2:2  \
		ghc-${V}-sparc-unknown-openbsd-hc.tar.bz2:2 \
		ghc-${V}-amd64-unknown-openbsd-hc.tar.bz2:2

# datasize around 130M on amd64
VMEM_WARNING=	Yes
a64 6
# global register variable bug in gcc 3.3.2 screws up amd64. need gcc 3.4
# we bypass it by ignoring all platform dependent tweaks. 2x slowdown.
.if ${MACHINE_ARCH} == "amd64"
CONFIGURE_ARGS+=--enable-hc-boot-unregisterised
.endif

d89 1
a89 1
		PYTHON="${LOCALBASE}/bin/python2.2"
@


