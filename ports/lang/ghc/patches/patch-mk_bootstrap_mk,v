head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.09.17.16.03.35;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.09.17.16.03.35;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.28.16.29.19;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@This file controls bootstrapping from .hc files. It has been
slightly broken for a while. So fix it to work with 6.0.x
compilers: the library paths have changed since 5.04.x

--- mk/bootstrap.mk.orig	Fri Jul 25 00:08:25 2003
+++ mk/bootstrap.mk	Thu Aug 21 19:07:39 2003
@@@@ -17,11 +17,15 @@@@
 # Reset TOP
 TOP:=$(TOP_SAVED)
 
+include $(TOP)/mk/suffix.mk
+
 # -----------------------------------------------------------------------------
 # Set the platform-specific options to send to the C compiler.  These should
 # match the list in machdepCCOpts in ghc/compiler/DriverFlags.hs.
 #
 
+GhcCanonVersion=600
+
 PLATFORM_CC_OPTS =
 PLATFORM_HC_BOOT_CC_OPTS =
 
@@@@ -68,8 +72,9 @@@@
 
 HC_BOOT_CC_OPTS = $(PLATFORM_HC_BOOT_CC_OPTS) $(PLATFORM_CC_OPTS) $(CC_OPTS)
 
-SRC_CC_OPTS += -I$(FPTOOLS_TOP_ABS)/ghc/includes -I$(FPTOOLS_TOP_ABS)/libraries/base/include -I$(FPTOOLS_TOP_ABS)/libraries/unix/include
+SRC_CC_OPTS += -I$(FPTOOLS_TOP_ABS)/ghc/includes -I$(FPTOOLS_TOP_ABS)/libraries/base/include -I$(FPTOOLS_TOP_ABS)/libraries/unix/include -I$(FPTOOLS_TOP_ABS)/libraries/readline/include
 
+
 # -----------------------------------------------------------------------------
 # Linking: we have to give all the libraries explicitly.
 
@@@@ -89,6 +94,10 @@@@
    -L$(FPTOOLS_TOP_ABS)/libraries/base		\
    -L$(FPTOOLS_TOP_ABS)/libraries/base/cbits	\
    -L$(FPTOOLS_TOP_ABS)/libraries/haskell98	\
+   -L$(FPTOOLS_TOP_ABS)/libraries/haskell-src	\
+   -L$(FPTOOLS_TOP_ABS)/libraries/readline	\
+   -L$(FPTOOLS_TOP_ABS)/libraries/unix    	\
+   -L$(FPTOOLS_TOP_ABS)/libraries/unix/cbits	\
    -u "$(UNDERSCORE)GHCziBase_Izh_static_info" \
    -u "$(UNDERSCORE)GHCziBase_Czh_static_info" \
    -u "$(UNDERSCORE)GHCziFloat_Fzh_static_info" \
@@@@ -121,11 +130,7 @@@@
    -u "$(UNDERSCORE)GHCziWeak_runFinalizzerBatch_closure" \
    -u "$(UNDERSCORE)__stginit_Prelude"
 
-HC_BOOT_LIBS = -lHShaskell98 -lHSbase -lHSbase_cbits -lHSrts -lgmp -lm $(EXTRA_HC_BOOT_LIBS)
-
-ifeq "$(GhcLibsWithReadline)" "YES"
-HC_BOOT_LIBS += $(patsubst %, -l%, $(LibsReadline))
-endif
+HC_BOOT_LIBS = -lHShaskell98 -lHSreadline -lHShaskell-src -lHSunix -lHSunix_cbits -lHSbase -lHSbase_cbits -lHSrts -lgmp -lm -lreadline -lncurses $(EXTRA_HC_BOOT_LIBS)
 
 ifeq "$(HaveLibDL)" "YES"
 HC_BOOT_LIBS += -ldl
@


1.1.1.1
log
@Import OpenBSD 3.4-current ports tree.
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree checked out from anoncvs.ca.openbsd.org at
2004-05-28 15:30 UTC.

Lots of SECURITY fixes, at least:

 * databases/mysql: tmpfile issue
 * www/squid: acl bypass
 * games/xonix: privilege escalation
 * archivers/lha: buffer overflow
 * mail/exim: buffer overflows
 * net/rsync: path checking issue
 * net/icecast: buffer overflow
 * www/opera
@
text
@d1 3
a3 3
$OpenBSD: patch-mk_bootstrap_mk,v 1.3 2004/05/20 00:08:22 dons Exp $
Make sure we know how to build things. I don't know why this isn't
needed on, e.g. linux
d5 5
a9 5
--- mk/bootstrap.mk.orig	Wed Feb  4 21:05:04 2004
+++ mk/bootstrap.mk	Thu May 20 09:49:39 2004
@@@@ -8,6 +8,8 @@@@
 # compile the .hc files, so we have to duplicate that functionality here.
 # The result is unfortunately ugly, but we don't have another choice.
d13 4
a16 2
 TOP_SAVED := $(TOP)
 TOP:=$(TOP)/ghc
d18 40
@

