head	1.5;
branch	1.1.1;
access;
symbols
	ctm-3389:1.1.1.1
	openbsd:1.1.1
	MIRBSD_5:1.4
	MIRBSD_4:1.1;
locks; strict;
comment	@# @;


1.5
date	2003.08.31.20.52.57;	author tg;	state dead;
branches;
next	1.4;

1.4
date	2003.05.15.18.57.41;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.15.18.56.29;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.05.06.12.54.32;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.23.15.03.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.06.13.28.37;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge import of OpenBSD source, ports and XF4 tree.

While here,
o clean up differences where possible
o whitespace cleanup
o ifdef ./. if defined()
o '...' ./. "..."
o echo foo > bar ./. echo foo >bar
o `...` ./. $(...) ./. $$(...)
o `...' ./. '...'
o modernize "our" tree, e.g. WWW in ports
o fix some typos and brainos introduced when renaming OpenBSD to MirBSD
o use hardware 80387 by default
o migrate Apache 1.3.28 OpenBSD ./. MirBSD ./. KAME
o work around as many CVS bugs as possible (add back/delete files, ...)

Synchronize stuff, ready for ongoing changes.
@
text
@$MirBSD: patch-gcc_Makefile_in,v 1.4 2003/05/15 18:57:41 tg Exp $
--- gcc/Makefile.in.orig	Tue Apr 22 15:50:26 2003
+++ gcc/Makefile.in	Thu May 15 18:22:11 2003
@@@@ -65,9 +65,8 @@@@ BOOT_LANGUAGES = c @@all_boot_languages@@
 # TCFLAGS is used for compilations with the GCC just built.
 XCFLAGS =
 TCFLAGS =
-CFLAGS = -g
-STAGE1_CFLAGS = -g @@stage1_cflags@@
-BOOT_CFLAGS = -g -O2
+STAGE1_CFLAGS = $(CFLAGS) @@stage1_cflags@@
+BOOT_CFLAGS = $(CFLAGS)
 
 # Flags to determine code coverage. When coverage is disabled, this will
 # contain the optimization flags, as you normally want code coverage
@@@@ -384,8 +383,8 @@@@ INSTALL_LIBGCC = install-libgcc
 
 # Options to use when compiling libgcc2.a.
 #
-LIBGCC2_DEBUG_CFLAGS = -g
-LIBGCC2_CFLAGS = -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) $(TARGET_LIBGCC2_CFLAGS) $(LIBGCC2_DEBUG_CFLAGS) $(GTHREAD_FLAGS) -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED @@inhibit_libc@@
+LIBGCC2_DEBUG_CFLAGS = 
+LIBGCC2_CFLAGS = -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) $(TARGET_LIBGCC2_CFLAGS) $(LIBGCC2_DEBUG_CFLAGS) $(GTHREAD_FLAGS) -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED @@inhibit_libc@@ -fno-stack-protector
 
 # Additional options to use when compiling libgcc2.a.
 # Some targets override this to -isystem include
@@@@ -761,7 +760,7 @@@@ OBJS = alias.o bb-reorder.o bitmap.o bui
  sibcall.o simplify-rtx.o ssa.o ssa-ccp.o ssa-dce.o stmt.o		   \
  stor-layout.o stringpool.o timevar.o toplev.o tracer.o tree.o tree-dump.o \
  tree-inline.o unroll.o varasm.o varray.o version.o vmsdbgout.o xcoffout.o \
- et-forest.o $(GGC) $(out_object_file) $(EXTRA_OBJS)
+ et-forest.o protector.o $(GGC) $(out_object_file) $(EXTRA_OBJS)
 
 BACKEND = main.o libbackend.a
 
@@@@ -1407,7 +1406,7 @@@@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM
    ssa.h $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \
    langhooks.h insn-flags.h options.h cfglayout.h real.h
 	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
-	  -DTARGET_NAME=\"$(target_alias)\" \
+	  -DSTACK_PROTECTOR -DTARGET_NAME=\"$(target_alias)\" \
 	  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)
 main.o : main.c $(CONFIG_H) $(SYSTEM_H) toplev.h
 
@@@@ -1662,6 +1661,7 @@@@ ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H
    output.h except.h $(TM_P_H) real.h
 params.o : params.c $(CONFIG_H) $(SYSTEM_H) $(PARAMS_H) toplev.h
 hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) $(HOOKS_H)
+protector.o: protector.c $(CONFIG_H)
 
 $(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) $(GGC_H) \
    $(RTL_H) $(REGS_H) hard-reg-set.h real.h insn-config.h conditions.h \
@@@@ -3315,7 +3315,7 @@@@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_O
 # the context of the stage_x rule.
 STAGE2_FLAGS_TO_PASS = \
 	ADAC="\$$(CC)" \
-	CFLAGS="$(BOOT_CFLAGS)" \
+	CFLAGS="$(CFLAGS)" \
 	LDFLAGS="$(BOOT_LDFLAGS)" \
 	WARN_CFLAGS="\$$(GCC_WARN_CFLAGS)" \
 	STRICT_WARN="$(STRICT2_WARN)" \
@


1.4
log
@second round... hold your breath
cvs hates me
@
text
@d1 1
a1 1
$MirBSD$
@


1.3
log
@first round of gcc update, hold your breath
@
text
@d1 3
a3 3
$MirBSD: patch-gcc_Makefile_in,v 1.2 2003/05/06 12:54:32 tg Exp $
--- gcc/Makefile.in.orig	Tue Jan 28 21:53:45 2003
+++ gcc/Makefile.in	Tue May  6 12:48:15 2003
d14 3
a16 3
 # The warning flags are separate from BOOT_CFLAGS because people tend to
 # override optimization flags and we'd like them to still have warnings
@@@@ -357,8 +356,8 @@@@ INSTALL_LIBGCC = install-libgcc
d27 3
a29 3
@@@@ -728,7 +727,7 @@@@ OBJS = alias.o bb-reorder.o bitmap.o bui
  sibcall.o simplify-rtx.o ssa.o ssa-ccp.o ssa-dce.o stmt.o	\
  stor-layout.o stringpool.o timevar.o toplev.o tree.o tree-dump.o 	\
d31 2
a32 2
- $(GGC) $(out_object_file) $(EXTRA_OBJS)
+ protector.o $(GGC) $(out_object_file) $(EXTRA_OBJS)
d36 3
a38 3
@@@@ -1360,7 +1359,7 @@@@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM
    ssa.h $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) halfpic.h \
    langhooks.h insn-flags.h options.h
d45 2
a46 2
@@@@ -1592,6 +1591,7 @@@@ dependence.o : dependence.c $(CONFIG_H) 
    $(C_COMMON_H) flags.h varray.h $(EXPR_H)
d53 1
a53 2
@@@@ -2979,7 +2979,7 @@@@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_O
 # WARN_CFLAGS setting can't be to the expansion of GCC_WARN_CFLAGS in
d56 1
@


1.2
log
@bump a level, get new propolice, put MirBSD RCS Id string
into the binary built
@
text
@d1 1
a1 1
$MirBSD: patch-gcc_Makefile_in,v 1.1 2003/03/23 15:03:46 tg Exp $
@


1.1
log
@import gcc-3.2.2-propolice -system
This is a variant of GNU gcc 3.2 with integrated
propolice support, adaptions for i386-ELF and can
be used as system compiler.
@
text
@d1 1
a1 1
$MirBSD: obsd.ports,v 1.62 2003/03/22 22:33:27 tg Exp $
d3 1
a3 1
+++ gcc/Makefile.in	Mon Feb 17 20:32:13 2003
d45 9
a53 1
@@@@ -2979,7 +2978,7 @@@@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_O
@


1.1.1.1
log
@Import OpenBSD ports tree
@
text
@d1 3
a3 3
$MirBSD: patch-gcc_Makefile_in,v 1.4 2003/05/15 18:57:41 tg Exp $
--- gcc/Makefile.in.orig	Tue Apr 22 15:50:26 2003
+++ gcc/Makefile.in	Thu May 15 18:22:11 2003
d14 3
a16 3
 # Flags to determine code coverage. When coverage is disabled, this will
 # contain the optimization flags, as you normally want code coverage
@@@@ -384,8 +383,8 @@@@ INSTALL_LIBGCC = install-libgcc
d27 3
a29 3
@@@@ -761,7 +760,7 @@@@ OBJS = alias.o bb-reorder.o bitmap.o bui
  sibcall.o simplify-rtx.o ssa.o ssa-ccp.o ssa-dce.o stmt.o		   \
  stor-layout.o stringpool.o timevar.o toplev.o tracer.o tree.o tree-dump.o \
d31 2
a32 2
- et-forest.o $(GGC) $(out_object_file) $(EXTRA_OBJS)
+ et-forest.o protector.o $(GGC) $(out_object_file) $(EXTRA_OBJS)
d36 3
a38 3
@@@@ -1407,7 +1406,7 @@@@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM
    ssa.h $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \
    langhooks.h insn-flags.h options.h cfglayout.h real.h
d45 2
a46 9
@@@@ -1662,6 +1661,7 @@@@ ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H
    output.h except.h $(TM_P_H) real.h
 params.o : params.c $(CONFIG_H) $(SYSTEM_H) $(PARAMS_H) toplev.h
 hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) $(HOOKS_H)
+protector.o: protector.c $(CONFIG_H)
 
 $(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) $(GGC_H) \
    $(RTL_H) $(REGS_H) hard-reg-set.h real.h insn-config.h conditions.h \
@@@@ -3315,7 +3315,7 @@@@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_O
a48 1
 	ADAC="\$$(CC)" \
@


