head	1.16;
access;
symbols
	ctm-3389:1.1.1.1
	openbsd:1.1.1
	MIRBSD_5:1.11
	MIRBSD_4:1.6;
locks; strict;
comment	@# @;


1.16
date	2004.03.22.21.45.22;	author tg;	state Stab;
branches;
next	1.15;

1.15
date	2004.02.25.20.51.55;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2004.02.25.16.42.26;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.31.20.52.50;	author tg;	state dead;
branches;
next	1.12;

1.12
date	2003.07.20.18.36.12;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.15.19.30.04;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.15.19.10.54;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.13.18.51.43;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.07.19.55.30;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.06.12.54.30;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.16.20.20.37;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.14.17.11.39;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.30.12.56.02;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.24.19.05.25;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.24.15.23.57;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.23.15.03.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.06.13.28.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.16
log
@unbreak make index
@
text
@# $MirBSD: Makefile,v 1.15 2004/02/25 20:51:55 tg Exp $

BROKEN=		orphaned port
IGNORE+=	"If you use MirOS BSD 7, you *want* to use the binaries provided"
IGNORE+=	"If you use MirOS-current, you *do not* want to use an egcs port"
IGNORE+=	"If you use MirOS 7-stable, you are fucked up and get the package"

COMMENT=		"GNU Compiler Collection for the MirOS system"
CATEGORIES=		lang devel
PKGNAME=		gcc-3.3.3-system
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_FTP=	Yes
PERMIT_PACKAGE_CDROM=	Yes
PERMIT_DISTFILES_CDROM=	Yes

.include <bsd.port.mk>
@


1.15
log
@well... a clue for these who used to know better
@
text
@d1 1
a1 1
# $MirBSD$
d6 1
@


1.14
log
@mark these as broken - they are orphaned and not updated
agreed bsiegert@@
@
text
@d1 1
a1 1
BROKEN=	orphaned port - not updated
d3 11
a13 264
# $MirBSD: Makefile,v 1.1.1.1 2003/07/06 13:28:35 tg Exp $

BROKEN=	dunno why

PSEUDO_FLAVORS=	full	# build all possible compilers
FLAVOR?=		# build only system compilers (C/C++)
MAKE_ADA?=	No	# requires working ada compiler
MAKE_GXX?=	Yes	# seems to work

.if ${FLAVOR:L:Mfull}	# not tested yet!
MAKE_FORTRAN?=	Yes
MAKE_JAVA?=	Yes	# still broken (boehm-gc?)
MAKE_OBJC?=	Yes
.else
MAKE_FORTRAN?=	No
MAKE_JAVA?=	No
MAKE_OBJC?=	No
.endif

# This is a configuration file for gcc
# Propolice: protector-3.2.2-7.tar.gz (2003-04-24)

COM=		'GNU compiler collection'
COMMENT=	${COM}: core C compiler
COMMENT-c++ =	${COM}: C++ compiler
COMMENT-chill=	${COM}: Chill compiler
COMMENT-g77=	${COM}: FORTRAN 77 compiler
COMMENT-java=	${COM}: Java compiler
COMMENT-objc=	${COM}: Objective C compiler
COMMENT-ada=	${COM}: Ada compiler

VPATCH=

PKGNAME=	gcc-$V${VPATCH}
PKGNAME-c++ =	g++-$V${VPATCH}
PKGNAME-chill=	gchill-$V${VPATCH}
PKGNAME-g77=	g77-$V${VPATCH}
PKGNAME-java=	gcj-$V${VPATCH}
PKGNAME-objc=	gobjc-$V${VPATCH}
PKGNAME-ada=	gnat-$V${VPATCH}

BUILD_DEPENDS+=	::devel/autoconf/2.13
BUILD_DEPENDS+=	::devel/metaauto

.include <bsd.own.mk>

.if defined(MAKE_JAVA) && ${MAKE_JAVA:L} == "yes"
BUILD_DEPENDS+= :bison-*:devel/bison
MAKE_GXX=	Yes
.endif

CATEGORIES=	lang 

# GNU General Public License, Version 2
PERMIT_PACKAGE_FTP=Yes
PERMIT_DISTFILES_FTP=Yes
PERMIT_PACKAGE_CDROM=Yes
PERMIT_DISTFILES_CDROM=Yes

MULTI_PACKAGES=
# No sub packages description
DESCR=${PKGDIR}/DESCR
REGRESS_DEPENDS=::lang/egcs/dejagnu

#### fetch section

V=3.3
DIRECTORY=releases/${DISTNAME}/
DISTNAME=   gcc-$V

# getting the right archives where they should be
MASTER_SITE_SUBDIR=${LATEST_DATE}

DIST_SUBDIR=egcs
DISTFILES=  gcc-$V.tar.gz
SITES=	

SITES+= ftp://ftp.uvsq.fr/pub/gcc/${DIRECTORY}
SITES+= ftp://ftp.grolier.fr/pub/egcs/${DIRECTORY}
SITES+= ftp://gd.tuwien.ac.at/gnu/gcc/${DIRECTORY}
SITES+= ftp://chardonnay.elis.rug.ac.be/pub/mirrors/gcc.cygnus.com/pub/gcc/${DIRECTORY}
SITES+= ftp://gd.tuwien.ac.at/gnu/gcc/${DIRECTORY}
SITES+=	ftp://egcs.cygnus.com/pub/egcs/${DIRECTORY} 
SITES+= ftp://ftp.goof.com/pub/pcg/egcs/${DIRECTORY}
SITES+= ftp://go.cygnus.com/pub/ftp.cygnus.com/egcs/${DIRECTORY}
SITES+= ftp://cambridge.cygnus.com/pub/egcs/${DIRECTORY}
SITES+= ftp://sunsite.doc.ic.ac.uk/Mirrors/egcs.cygnus.com/pub/egcs/${DIRECTORY}

SITES+= ftp://ftp.gts.cz/pub/MIRRORS/ftp.cygnus.com/pub/egcs/${DIRECTORY}
SITES+= ftp://sunsite.auc.dk/pub/egcs/${DIRECTORY}
SITES+= ftp://ftp.fu-berlin.de/unix/languages/egcs/egcs/${DIRECTORY}
SITES+= ftp://ftp.gwdg.de/pub/cygnus/egcs/${DIRECTORY}
SITES+= ftp://ftp.mpi-sb.mpg.de/pub/gnu/mirror/egcs.cygnus.com/egcs/${DIRECTORY}
SITES+= ftp://ftp.uni-trier.de/pub/languages/c/implementation/egcs/${DIRECTORY}
SITES+= ftp://ftp.sunet.se/pub/gnu/egcs/${DIRECTORY}
SITES+= ftp://ftp.unicamp.br/pub/gnu/=EXTRA=/cygnus/egcs/${DIRECTORY}
SITES+= ftp://ftp.lbi.ro/mirrors/ftp.cygnus.com/pub/egcs/${DIRECTORY}
SITES+= ftp://ftp.ntua.gr/pub/gnu/egcs/${DIRECTORY}
SITES+= ftp://ftp.nluug.nl/pub/languages/egcs/${DIRECTORY}
SITES+= ftp://ftp.dti.ad.jp/pub/lang/egcs/${DIRECTORY}
SITES+= ftp://ftp.win.or.jp/pub/lang/egcs/${DIRECTORY}
SITES+= ftp://ftp.telewaynet.ad.jp/pub/lang/egcs/${DIRECTORY}
SITES+= ftp://ftp.lab.kdd.co.jp/lang/egcs/${DIRECTORY}
SITES+= ftp://ftp.crc.ca/pub/packages/egcs/${DIRECTORY}
SITES+= ftp://ftp.nc.orc.ru/pub/egcs/${DIRECTORY}
SITES+= ftp://ftp.u-aizu.ac.jp/pub/lang/C/pcg/egcs/${DIRECTORY}
SITES+= ftp://ftp.maisel.int-evry.fr/pub/linux/pentium/egcs/${DIRECTORY}
SITES+= ftp://ftp.yggdrasil.com/mirrors/site/egcs.cygnus.com/pub/egcs/${DIRECTORY}
SITES+= ftp://unix.hensa.ac.uk/mirrors/egcs.cygnus.com/pub/egcs/${DIRECTORY}

MASTER_SITES=${SITES:S/%DATE%/${LATEST_DATE}/}

#### 
# Patch section

ac_dirs=gcc libiberty libstdc++-v3 libf2c/libI77 libffi fastjar libjava
rm_dirs=zlib texinfo

# get openbsd configuration files where they should be
post-patch:
	cd ${WRKSRC} && contrib/gcc_update --touch
	cd ${WRKSRC}/libstdc++-v3 && PATH=${PORTPATH} AUTOCONF_VERSION=2.13 autoheader
.for ac_dir in ${ac_dirs}
	cd ${WRKSRC}/${ac_dir} && PATH=${PORTPATH} AUTOCONF_VERSION=2.13 autoconf
.endfor
	cd ${WRKSRC} && rm -rf ${rm_dirs}
	cp ${.CURDIR}/pkg/protector.{c,h} ${WRKSRC}/gcc/

####
# configure section

CONFIGURE_STYLE=		gnu
MODGNU_CONFIG_GUESS_DIRS=	${WRKSRC} ${WRKSRC}/gcc

COPTS+=	-DWANT_TARGET_MIRBSD
LANGS=c
.if defined(MAKE_GXX) && ${MAKE_GXX:L} == "yes"
LANGS:=${LANGS},c++
MULTI_PACKAGES+=-c++
.endif
.if defined(MAKE_FORTRAN) && ${MAKE_FORTRAN:L} == "yes"
LANGS:=${LANGS},f77
MULTI_PACKAGES+=-g77
.endif
.if defined(MAKE_OBJC) && ${MAKE_OBJC:L} == "yes"
LANGS:=${LANGS},objc
MULTI_PACKAGES+=-objc
.endif
.if defined(MAKE_JAVA) && ${MAKE_JAVA:L} == "yes"
LANGS:=${LANGS},java
MULTI_PACKAGES+=-java
CONFIGURE_ARGS+=--enable-java-gc=system-boehm
.endif
.if defined(MAKE_ADA) && ${MAKE_ADA:L} == "yes"
LANGS:=${LANGS},ada
MULTI_PACKAGES+=-ada
CONFIGURE_ENV+=	ADAC=${LOCALBASE}/bin/gcc GNATBIND=${LOCALBASE}/bin/gnatbind
MAKE_ENV+=	ADAC=${LOCALBASE}/bin/gcc GNATBIND=${LOCALBASE}/bin/gnatbind
CC=		${LOCALBASE}/bin/gcc
BUILD_DEPENDS+=	:gnat-*:lang/egcs/system,-ada
.endif

CONFIGURE_ENV+=	am_cv_func_iconv=no
CONFIGURE_ARGS+=--verbose --disable-nls --with-system-zlib
CONFIGURE_ARGS+=--enable-cpp
CONFIGURE_ARGS+=--enable-languages=${LANGS}

.if defined(MAKE_JAVA) && ${MAKE_JAVA:L} == "yes"
CONFIGURE_ARGS+=--enable-sjlj-exceptions
.endif

# if you wish to try your luck
#CONFIGURE_ARGS+=--enable-threads=posix

.if defined(AS_PATH)
CONFIGURE_ARGS+=--with-as=${AS_PATH}
.else
CONFIGURE_ARGS+=--with-gnu-as 
.endif
.if defined(LD_PATH)
CONFIGURE_ARGS+=--with-ld=${LD_PATH}
.else
CONFIGURE_ARGS+=--with-gnu-ld 
.endif

CONFIGURE_ARGS+=${CONFIGURE_SHARED}
SEPARATE_BUILD=concurrent

####
# build section
USE_GMAKE=yes

# you shouldn't skip bootstrap unless you know what you're doing
# use bootstrap-lean if you're pressed for space
ALL_TARGET=bootstrap
#ALL_TARGET=bootstrap3
#ALL_TARGET=bootstrap-lean
MAKE_FLAGS+=libstdc___la_LDFLAGS='-version-info 31:0:0 -lm'

# desactivate the fixincludes mechanism by supplying a script doing nothing
pre-build:
	sed -e s,@@WRKBUILD@@,${WRKBUILD}, -e s,@@FILESDIR@@,${FILESDIR}, \
	${FILESDIR}/fixinc.sh.m4 >${WRKSRC}/gcc/fixinc/openbsd-special
	chmod a+x ${WRKSRC}/gcc/fixinc/openbsd-special
	echo "cp ${WRKSRC}/gcc/fixinc/openbsd-special ${WRKBUILD}/gcc/fixinc.sh" >${WRKSRC}/gcc/fixinc/mkfixinc.sh

####
# Install & tests section 

post-build:
	find ${WRKBUILD} -name \*.orig|xargs rm
	mkdir -p ${WRKBUILD}/gcc/include/machine
	cp ${FILESDIR}/include/machine/ansi.h ${WRKBUILD}/gcc/include/machine
.if defined(MAKE_ADA) && ${MAKE_ADA:L} == "yes"
	cd ${WRKBUILD}/gcc && env ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} gnatlib_and_tools
.endif

post-install:
	-ldconfig -U ${PREFIX}/lib ${PREFIX}/lib/. ${PREFIX}/lib/fpic ${PREFIX}/lib/nof

# Tests still need to be performed at the end of install, I don't know why.
REGRESS_DEPENDS+=::lang/egcs/system
.if defined(MAKE_GXX) && ${MAKE_GXX:L} == "yes"
REGRESS_DEPENDS+=::lang/egcs/system,-c++
.endif
.if defined(MAKE_FORTRAN) && ${MAKE_FORTRAN:L} == "yes"
REGRESS_DEPENDS+=::lang/egcs/system,-g77
.endif
.if defined(MAKE_OBJC) && ${MAKE_OBJC:L} == "yes"
REGRESS_DEPENDS+=::lang/egcs/system,-objc
.endif
.if defined(MAKE_JAVA) && ${MAKE_JAVA:L} == "yes"
REGRESS_DEPENDS+=::lang/egcs/system,-java
.endif
.if defined(MAKE_ADA) && ${MAKE_ADA:L} == "yes"
REGRESS_DEPENDS+=::lang/egcs/system,-ada
.endif

TEST_RESULT=${WRKBUILD}/test.result

do-regress:
	@@cd ${WRKBUILD}; ulimit -c 0; \
	${MAKE_ENV} ${MAKE_PROGRAM} -k -f ${MAKE_FILE} check && \
	${WRKSRC}/contrib/test_summary >${TEST_RESULT}
	@@echo "Please send the tests results to the gcc project"
	@@echo "by invoking make send-results"

send-results: 
	[ -f ${TEST_RESULT} ] && sh ${TEST_RESULT}

.if defined(NO_SHARED_LIBS) && ${NO_SHARED_LIBS:L} == "yes"
SED_PLIST=|sed -e '/^IFPIC:/d'
.else
SED_PLIST=|sed -e '/^IFPIC:/s///'
.endif

GCC_NAME=${WRKBUILD}/gcc/xgcc

.if defined(PACKAGING) && defined(SUBPACKAGE) && !empty(SUBPACKAGE)
RUN_DEPENDS+=::lang/egcs/system
.endif

CONFIG=${MACHINE_ARCH}-unknown-openbsd${OSREV}
SUBST_VARS=CONFIG V
@


1.13
log
@Merge import of OpenBSD source, ports and XF4 tree.

While here,
o clean up differences where possible
o whitespace cleanup
o ifdef ./. if defined()
o '...' ./. "..."
o echo foo > bar ./. echo foo >bar
o `...` ./. $(...) ./. $$(...)
o `...' ./. '...'
o modernize "our" tree, e.g. WWW in ports
o fix some typos and brainos introduced when renaming OpenBSD to MirBSD
o use hardware 80387 by default
o migrate Apache 1.3.28 OpenBSD ./. MirBSD ./. KAME
o work around as many CVS bugs as possible (add back/delete files, ...)

Synchronize stuff, ready for ongoing changes.
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.12 2003/07/20 18:36:12 tg Exp $
d3 3
a5 1
COMES_WITH=3.4
a54 1
MAINTAINER=	Thorsten Glaser <x86@@ePost.de>
@


1.12
log
@gcc 3.x will be in base
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.11 2003/05/15 19:30:04 tg Exp $
@


1.11
log
@finish working on gcc 3.3
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.10 2003/05/15 19:10:54 tg Exp $
d3 1
a3 1
BROKEN=	dunno why
@


1.10
log
@upgrade to gcc 3.3
integrate propolice support again (the one from gcc 3.2.2...)

notes:
 - not tested
 - i'd feel safer if someone knowledgeable would check
   gcc/config/i386/openbsd{,elf}.h RIGHT NOW!
@
text
@d1 3
a3 1
# $MirBSD: Makefile,v 1.9 2003/05/13 18:51:43 tg Exp $
@


1.9
log
@break gcc ports until I fixed those
@
text
@d1 1
a1 4
# $MirBSD: Makefile,v 1.8 2003/05/07 19:55:30 tg Exp $

BROKEN=	dunno why, it's just broken
ONLY_FOR_ARCHS=	alpha i386 m68k sparc sparc64 powerpc
d5 2
a6 2
MAKE_ADA?=	No	# requires working ada compiler; untested
MAKE_GXX?=	Yes	# works, except that libstdc++.so is not built
d8 4
a11 4
.if ${FLAVOR:L:Mfull}
MAKE_FORTRAN?=	Yes	# don't need it; builds
MAKE_JAVA?=	No	# still broken?! (boehm-gc on ELF, maybe)
MAKE_OBJC?=	Yes	# don't need it; builds
d13 3
a15 3
MAKE_FORTRAN?=	No	# don't need it; builds
MAKE_JAVA?=	No	# still mostly broken (boehm-gc); builds
MAKE_OBJC?=	No	# don't need it; builds
d30 1
a30 1
VPATCH=p7-system
a58 3
# see ../stable/files/tests for precise testing procedure
FILESDIR=${.CURDIR}/../stable/files

d66 1
a66 1
V=3.2.2
d74 1
a74 1
DISTFILES=  gcc-$V.tar.bz2
a163 3

# This is needed, as internal cpp is no longer compatible with the
# visible beast
d250 1
a250 2
.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "sparc"
.  if defined(NO_SHARED_LIBS) && ${NO_SHARED_LIBS:L} == "yes"
d252 1
a252 1
.  else
a253 9
.  endif
.else
SED_PLIST=|sed -e '/^IFPIC:/d'
.endif

.if ${MACHINE_ARCH} == "powerpc"
SED_PLIST+=|sed -e '/^IFPPC:/s///'
.else
SED_PLIST+=|sed -e '/^IFPPC:/d'
@


1.8
log
@sync with gcc changes in the base system
- option to compile to OpenBSD/a.out target
  (preliminary, needs a change in config.gcc)
- MirBSD target is a compile-time option

UNTESTED!
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.7 2003/05/06 12:54:30 tg Exp $
d3 1
@


1.7
log
@bump a level, get new propolice, put MirBSD RCS Id string
into the binary built
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.6 2003/04/16 20:20:37 tg Exp $
d32 1
a32 1
VPATCH=p6-system
d55 1
a55 1
# GNU General Public License, Version 2 or later
d139 1
@


1.6
log
@hrmpf
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.5 2003/04/14 17:11:39 tg Exp $
d12 1
a12 1
MAKE_JAVA?=	No	# still broken?!
d21 1
a21 1
# Propolice: protector-3.2.2-5.tar.gz (2003-04-07)
d32 1
a32 1
VPATCH=p5-system
d53 1
a53 1
MAINTAINER=	Thorsten "mirabile" Glaser <x86@@ePost.de>
@


1.5
log
@merge import conflicts
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.4 2003/03/30 12:56:02 tg Exp $
d12 1
a12 1
MAKE_JAVA?=	Yes	# works, except that libgcj.so is not built
@


1.4
log
@bump propolice (stack protector) version
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.3 2003/03/24 19:05:25 tg Exp $
d21 1
a21 1
# Propolice: protector-3.2.2-4.tar.gz (2003-03-18)
@


1.3
log
@Enable java, fortran, objective-c on request (not by default)
make them build packages

still not done: testing them (make regress)
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.2 2003/03/24 15:23:57 tg Exp $
d21 1
a21 1
# Propolice: protector-3.2.2-3.tar.gz (2003-03-11)
a47 1
# No way around it, java wants a pure parser
a175 4

# For boehm-gc
#CONFIGURE_ENV+=	LDFLAGS="${LDFLAGS} -L/usr/local/lib -lgc"
#CONFIGURE_ENV+=	CPPFLAGS="${CPPFLAGS} -I/usr/local/include"
a227 1

@


1.2
log
@Update propolice for gcc to 3.2.2_3
Fix a minor sh compatibility script error
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.1 2003/03/23 15:03:46 tg Exp $
d5 14
a18 5
MAKE_ADA?=No		# requires working ada compiler; untested
MAKE_FORTRAN?=No	# don't need it; untested
MAKE_GXX?=Yes		# works, except that libstdc++.so is not built
MAKE_JAVA?=No		# still mostly broken (boehm-gc); untested
MAKE_OBJC?=No		# don't need it; untested
@


1.1
log
@import gcc-3.2.2-propolice -system
This is a variant of GNU gcc 3.2 with integrated
propolice support, adaptions for i386-ELF and can
be used as system compiler.
@
text
@d1 1
a1 1
# $MirBSD: obsd.ports,v 1.62 2003/03/22 22:33:27 tg Exp $
d12 1
a12 1
# Propolice: protector-3.2.2-2.tar.gz (2003-02-28)
d23 1
a23 1
VPATCH=p4-system
d278 1
@


1.1.1.1
log
@Import OpenBSD ports tree
@
text
@d1 1
a1 1
# $MirBSD: Makefile,v 1.11 2003/05/15 19:30:04 tg Exp $
d3 1
a3 1
BROKEN=	dunno why
d5 5
a9 14
PSEUDO_FLAVORS=	full	# build all possible compilers
FLAVOR?=		# build only system compilers (C/C++)
MAKE_ADA?=	No	# requires working ada compiler
MAKE_GXX?=	Yes	# seems to work

.if ${FLAVOR:L:Mfull}	# not tested yet!
MAKE_FORTRAN?=	Yes
MAKE_JAVA?=	Yes	# still broken (boehm-gc?)
MAKE_OBJC?=	Yes
.else
MAKE_FORTRAN?=	No
MAKE_JAVA?=	No
MAKE_OBJC?=	No
.endif
d12 1
a12 1
# Propolice: protector-3.2.2-7.tar.gz (2003-04-24)
d23 1
a23 1
VPATCH=
d39 1
d45 1
a45 1
MAINTAINER=	Thorsten Glaser <x86@@ePost.de>
d47 1
a47 1
# GNU General Public License, Version 2
d53 3
d63 1
a63 1
V=3.3
d71 1
a71 1
DISTFILES=  gcc-$V.tar.gz
a130 1
COPTS+=	-DWANT_TARGET_MIRBSD
d160 3
d168 4
d224 1
d254 2
a255 1
.if defined(NO_SHARED_LIBS) && ${NO_SHARED_LIBS:L} == "yes"
d257 3
d261 7
a267 1
SED_PLIST=|sed -e '/^IFPIC:/s///'
a277 1

@


