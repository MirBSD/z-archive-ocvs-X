head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.3
	cvs-200402211630:1.1.1.3
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308221505:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.2
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.06.19.13.28.56;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.19.13.28.56;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.28.23.56.14;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.02.21.17.04.56;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-gcc_toplev_c,v 1.3 2003/06/16 17:25:19 sturm Exp $
--- gcc/toplev.c.orig	Tue May 27 13:53:39 2003
+++ gcc/toplev.c	Tue May 27 13:56:27 2003
@@@@ -883,6 +883,9 @@@@ int align_functions_log;
    minimum function alignment.  Zero means no alignment is forced.  */
 int force_align_functions_log;
 
+/* Fake StackProtector option, does nothing. */
+int flag_propolice_protection = 0;
+
 /* Table of supported debugging formats.  */
 static const struct
 {
@@@@ -1154,6 +1157,8 @@@@ static const lang_independent_options f_
    N_("Report on permanent memory allocation at end of run") },
   { "trapv", &flag_trapv, 1,
    N_("Trap for signed overflow in addition / subtraction / multiplication") },
+  { "no-stack-protector", &flag_propolice_protection, 0,
+   N_("Fake disable stack protection") },
 };
 
 /* Table of language-specific options.  */
@


1.1.1.1
log
@sync Ports with OpenBSD CTM#3341 plus xpdf security fix
@
text
@@


1.1.1.2
log
@sync with the OpenBSD ports tree
note: this brings us new users (hint: /etc/master.passwd)
and other incompatibilities. Stay tuned.
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_toplev_c,v 1.4 2003/06/26 18:39:52 avsm Exp $
--- gcc/toplev.c.orig	Sat Nov  2 00:57:23 2002
+++ gcc/toplev.c	Thu Jun 26 18:51:53 2003
a22 10
@@@@ -1331,6 +1336,9 @@@@ documented_lang_options[] =
   { "-Wwrite-strings", 
     N_("Mark strings as 'const char *'") },
   { "-Wno-write-strings", "" },
+  { "-Wbounded",
+    N_("Fake bounds checking option") },
+  { "-Wno-bounded", "" },
 
 #define DEFINE_LANG_NAME(NAME) { NULL, NAME },
 
@


1.1.1.3
log
@Import OpenBSD ports again. This will give us lots of new toys :).
@
text
@d1 4
a4 16
$OpenBSD: patch-gcc_toplev_c,v 1.7 2004/02/10 20:14:25 sturm Exp $
--- gcc/toplev.c.orig	2003-10-09 14:53:35.000000000 -0600
+++ gcc/toplev.c	2004-02-08 01:47:51.000000000 -0700
@@@@ -852,7 +852,11 @@@@ int flag_instrument_function_entry_exit 
    On SVR4 targets, it also controls whether or not to emit a
    string identifying the compiler.  */
 
+#ifdef OPENBSD_NATIVE
+int flag_no_ident = 1;
+#else
 int flag_no_ident = 0;
+#endif
 
 /* This will perform a peephole pass before sched2.  */
 int flag_peephole2 = 0;
@@@@ -904,6 +908,9 @@@@ int align_functions_log;
d14 1
a14 1
@@@@ -1186,6 +1193,8 @@@@ static const lang_independent_options f_
a19 2
   { "new-ra", &flag_new_regalloc, 1,
    N_("Use graph coloring register allocation.") },
d21 4
a24 2
@@@@ -1362,6 +1371,9 @@@@ documented_lang_options[] =
   { "-Wwrite-strings",
a32 16
@@@@ -4898,7 +4910,6 @@@@ parse_options_and_default_flags (argc, a
       flag_schedule_insns_after_reload = 1;
 #endif
       flag_regmove = 1;
-      flag_strict_aliasing = 1;
       flag_delete_null_pointer_checks = 1;
       flag_reorder_blocks = 1;
       flag_reorder_functions = 1;
@@@@ -4906,6 +4917,7 @@@@ parse_options_and_default_flags (argc, a
 
   if (optimize >= 3)
     {
+      flag_strict_aliasing = 1;
       flag_inline_functions = 1;
       flag_rename_registers = 1;
     }
@


