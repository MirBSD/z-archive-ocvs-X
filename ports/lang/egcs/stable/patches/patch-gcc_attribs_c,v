head	1.2;
branch	1.1.1;
access;
symbols
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308221505:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.09.07.14.49.59;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.28.23.56.12;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.28.23.56.12;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@o crti.o / crtn.o
o CFLAGS
o make update-patches
@
text
@$OpenBSD: patch-gcc_attribs_c,v 1.3 2003/06/26 18:39:52 avsm Exp $
--- gcc/attribs.c.orig	2002-05-27 05:47:51.000000000 +0000
+++ gcc/attribs.c	2003-09-07 14:43:05.000000000 +0000
@@@@ -88,6 +88,8 @@@@ static tree handle_deprecated_attribute	
 						 bool *));
 static tree handle_vector_size_attribute PARAMS ((tree *, tree, tree, int,
 						  bool *));
+static tree handle_bounded_attribute    PARAMS ((tree *, tree, tree, int,
+						  bool *));
 static tree vector_size_helper PARAMS ((tree, tree));
 
 /* Table of machine-independent attributes common to all C-like languages.  */
@@@@ -148,6 +150,8 @@@@ static const struct attribute_spec c_com
 			      handle_deprecated_attribute },
   { "vector_size",	      1, 1, false, true, false,
 			      handle_vector_size_attribute },
+  { "bounded",		      3, 4, false, true, false,
+			      handle_bounded_attribute },
   { NULL,                     0, 0, false, false, false, NULL }
 };
 
@@@@ -1357,6 +1361,21 @@@@ vector_size_helper (type, bottom)
   return outer;
 }
 
+/* Handle a "bounded" attribute; arguments as in
+   struct attribute_spec.handler. 
+   Just a stub for now. */
+
+static tree
+handle_bounded_attribute (node, name, args, flags, no_add_attrs)
+     tree *node ATTRIBUTE_UNUSED;
+     tree name ATTRIBUTE_UNUSED;
+     tree args ATTRIBUTE_UNUSED;
+     int flags ATTRIBUTE_UNUSED;
+     bool *no_add_attrs ATTRIBUTE_UNUSED;
+{
+  return NULL_TREE;
+}
+
 /* Split SPECS_ATTRS, a list of declspecs and prefix attributes, into two
    lists.  SPECS_ATTRS may also be just a typespec (eg: RECORD_TYPE).
 
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
--- gcc/attribs.c.orig	Thu Jun 26 18:07:53 2003
+++ gcc/attribs.c	Thu Jun 26 18:19:35 2003
d22 3
a24 2
@@@@ -1355,6 +1359,21 @@@@ vector_size_helper (type, bottom)
   TREE_THIS_VOLATILE (outer) = TREE_THIS_VOLATILE (type);
a25 3
   return outer;
+}
+
d39 4
a42 1
 }
a43 1
 /* Split SPECS_ATTRS, a list of declspecs and prefix attributes, into two
@


1.1.1.1
log
@sync with the OpenBSD ports tree
note: this brings us new users (hint: /etc/master.passwd)
and other incompatibilities. Stay tuned.
@
text
@@
