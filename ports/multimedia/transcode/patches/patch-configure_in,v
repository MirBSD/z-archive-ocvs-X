head	1.3;
access;
symbols
	start:1.1.7.1 wbx:1.1.7;
locks; strict;
comment	@# @;


1.3
date	2004.08.26.21.21.26;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2004.08.26.19.27.01;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.26.19.19.26;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2004.08.26.19.19.26;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@This is as far as I get with this transcode something.
It needs C++ which wbx@@ did not declare.]

Furthermore, it looks like this port pulls in some libraries,
such as gtk+, when they are available. This *MUST* be fixed
by the port maintainer.
@
text
@$MirBSD: ports/multimedia/transcode/patches/patch-configure_in,v 1.2 2004/08/26 19:27:01 tg Exp $
$OpenBSD: patch-configure_in,v 1.2 2004/06/24 19:27:00 sturm Exp $
--- configure.in.orig	Tue Jan  6 20:37:41 2004
+++ configure.in	Thu Aug 26 20:53:26 2004
@@@@ -64,6 +64,7 @@@@ case "x${target_cpu}" in
   ;;
 esac
 
+no_opt_cflags="$CFLAGS"
 
 AM_CONDITIONAL([SYSTEM_DARWIN], test x"$is_osx" = x"true")
  
@@@@ -141,13 +142,23 @@@@ AC_FUNC_STAT
 AC_FUNC_STRCOLL
 AC_TYPE_SIGNAL
 AC_CHECK_FUNCS([strtol memalign ftruncate gettimeofday memset strerror strncasecmp stat floor atexit getpagesize memmove mkfifo vsscanf strptime])
+AC_CHECK_LIB(m, lrint, AC_DEFINE(HAVE_LIBM_LRINT, 1, [Define if the lrint() function is in libm on your system]))
 
+case "$host_os" in
+  freebsd*|openbsd*|ekkobsd*|mirbsd*|netbsd*|bsdi*|darwin*|rhapsody*)
+     AC_DEFINE([SYS_BSD], 1, [Define if your system is modern BSD])
+     ;;
+  *)
+     ;;
+esac
+
+
 dnl for libavcodec
 AC_CHECK_LIB(m, lrintf, AC_DEFINE([HAVE_LRINTF], 1, [define if you have the lrintf function]))
 
 dnl Replace `main' with a function in pthread libs:
  case "$host" in
-   *-*-freebsd*)
+   *-*-freebsd*|*-*-openbsd*|*-*-ekkobsd*|*-*-mirbsd*)
     pthread_cflags="-D_REENTRANT -D_THREAD_SAFE"
     pthread_lib="-pthread"
     ;;
@@@@ -188,7 +199,7 @@@@ dnl       code, not whether the host can
 dnl       at run time with the exception of the SSE code.
 dnl
 dnl 
-have_asm_mmx=false
+dnl have_asm_mmx=false this is later checked with AC_CACHE_CHECK()
 have_asm_sse=false
 have_asm_3dnow=false
 have_asm_nasm=false
@@@@ -350,7 +361,7 @@@@ if test x$have_x86cpu = xtrue ; then
  AC_MSG_CHECKING(for CMOV support)
  if test "$enable_cmov_extension" != "no" ; then
  case "$host" in
- *-*-freebsd*)
+ *-*-freebsd*|*-*-openbsd*|*-*-ekkobsd*|*-*-mirbsd*)
   cpu_features=`grep -l CMOV /var/run/dmesg.boot`
   if test X"$cpu_features" = X"/var/run/dmesg.boot" ; then
     have_cmov=true
@@@@ -479,6 +490,9 @@@@ if test x"$enable_warnings" = x"yes" -a 
     AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
 fi
 
+
+CFLAGS="$no_opt_cflags"
+
 AC_SUBST(CFLAGS)
 
 LTLIBOBJS=`echo "$AC_LIBOBJ" | sed 's,.o ,.lo ,g;s,.o$,.lo,'`
@@@@ -938,13 +952,17 @@@@ AM_CONDITIONAL(HAVE_GTK, test x"$have_gt
 dnl
 dnl LIBFAME support
 dnl
-
+AC_ARG_WITH(libfame,
+		AC_HELP_STRING([--with-libfame][use libfame (default is yes)]),
+		[], with_libfame=yes)
 have_libfame=no
+if test x$with_libfame = "x"yes ; then
 AM_PATH_LIBFAME(,
 [
 	AC_DEFINE([HAVE_LIBFAME], 1, [Have libfame support]) 
 	have_libfame=yes	
 ])
+fi
 AM_CONDITIONAL(HAVE_LIBFAME, test x"$have_libfame" = "xyes")
 
 dnl
@


1.2
log
@basic mirportsification
@
text
@d1 1
a1 1
$MirBSD$
d3 2
a4 2
--- configure.in.orig	2004-01-06 12:38:03.000000000 -0800
+++ configure.in	2004-05-20 20:07:20.000000000 -0700
d18 1
a18 1
+
d27 1
a27 1
 
@


1.1
log
@Initial revision
@
text
@d1 1
d20 1
a20 1
+  freebsd*|openbsd*|netbsd*|bsdi*|darwin*|rhapsody*)
d34 1
a34 1
+   *-*-freebsd*|*-*-openbsd*)
d52 1
a52 1
+ *-*-freebsd*|*-*-openbsd*)
@


1.1.7.1
log
@Import wbx@@'s preliminary transcode port
@
text
@@
