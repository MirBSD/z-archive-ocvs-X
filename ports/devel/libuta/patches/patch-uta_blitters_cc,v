head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308221505:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.50.01;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.50.01;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.01.14.15.33.05;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-uta_blitters_cc,v 1.2 2001/09/06 23:23:56 pvalchev Exp $
--- uta/blitters.cc.orig	Mon Apr  9 17:25:05 2001
+++ uta/blitters.cc	Wed Sep  5 16:45:59 2001
@@@@ -1,9 +1,12 @@@@
 #include "blitters.h"
-#include <uta/painter.h>
+#include <painter.h>
 
 namespace uta {
 
-#ifndef X86_ASSEMBLER
+#ifdef __OpenBSD__
+#undef X86_ASSEMBLER
+#endif
+#if !defined(X86_ASSEMBLER)
 
 /** Apply const gamma value.
     Blit just copies alpha value of the source to the destination surface.
@@@@ -1599,7 +1602,7 @@@@ void gammablit(Surface* dst, const Surfa
       gammablit_C(dst,src,g,srcRect,dstPoint);
     }
 #else
-  gammablit_C(dst,src,g,srcRect,dstPoint)
+  gammablit_C(dst,src,g,srcRect,dstPoint);
 #endif
 }
 
@@@@ -1626,7 +1629,7 @@@@ void gammablit(Surface* dst, const Surfa
       gammablit_C(dst,src,func,srcRect,dstPoint);
     }
 #else
-  gammablit_C(dst,src,func,srcRect,dstPoint)
+  gammablit_C(dst,src,func,srcRect,dstPoint);
 #endif
 }
 
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d1 4
a4 5
$OpenBSD: patch-uta_blitters_cc,v 1.3 2004/01/04 20:32:29 pvalchev Exp $
--- uta/blitters.cc.orig	2004-01-04 15:27:06.000000000 +0100
+++ uta/blitters.cc	2004-01-04 15:28:30.000000000 +0100
@@@@ -20,6 +20,7 @@@@
 
d6 2
a7 2
 #include <painter.h>
+#include <iosfwd>
d11 5
a15 16
@@@@ -35,7 +36,7 @@@@ void gammablit_RGBA8888_RGBA8888(Surface
 				 char g, 
 				 const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Convert RGBA8888 to RGB565 and apply const gamma value.
@@@@ -45,7 +46,7 @@@@ void gammablit_RGBA8888_RGB565(Surface* 
 			       char g, 
 			       const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
d18 17
a34 33
@@@@ -54,7 +55,7 @@@@ void gammablit_RGB565_RGB565(Surface* ds
 			     char g, 
 			     const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Apply per pixel gamma value.
@@@@ -64,7 +65,7 @@@@ void gammablit_RGBA8888_RGBA8888(Surface
 				 GammaFunction* func, 
 				 const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Convert RGBA8888 to RGB565 and apply per pixel gamma value.
@@@@ -74,7 +75,7 @@@@ void gammablit_RGBA8888_RGB565(Surface* 
 			       GammaFunction* func, 
 			       const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Apply per pixel gamma value.
@@@@ -83,7 +84,7 @@@@ void gammablit_RGB565_RGB565(Surface* ds
 			     GammaFunction* func, 
 			     const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
a36 1
 #else  // ! X86_ASSEMBLER
@

