head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.02.27.00.02.43;	author tyler;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update gmake to use snprintf, strlcat, and strlcpy
dirty dirty fsf code

take a shower stallman
@
text
@$MirBSD$
--- file.c.orig	Sat Feb 26 22:33:03 2005
+++ file.c	Sat Feb 26 22:34:17 2005
@@@@ -622,13 +622,13 @@@@ file_timestamp_sprintf (p, ts)
   struct tm *tm = localtime (&t);
 
   if (tm)
-    sprintf (p, "%04d-%02d-%02d %02d:%02d:%02d",
+    snprintf (p, sizeof(p), "%04d-%02d-%02d %02d:%02d:%02d",
 	     tm->tm_year + 1900, tm->tm_mon + 1, tm->tm_mday,
 	     tm->tm_hour, tm->tm_min, tm->tm_sec);
   else if (t < 0)
-    sprintf (p, "%ld", (long) t);
+    snprintf (p, sizeof(p), "%ld", (long) t);
   else
-    sprintf (p, "%lu", (unsigned long) t);
+    snprintf (p, sizeof(p), "%lu", (unsigned long) t);
   p += strlen (p);
 
   /* Append nanoseconds as a fraction, but remove trailing zeros.
@@@@ -636,7 +636,7 @@@@ file_timestamp_sprintf (p, ts)
      applies only to local times, whereas this timestamp might come
      from a remote filesystem.  So removing trailing zeros is the
      best guess that we can do.  */
-  sprintf (p, ".%09d", FILE_TIMESTAMP_NS (ts));
+  snprintf (p, sizeof(p), ".%09d", FILE_TIMESTAMP_NS (ts));
   p += strlen (p) - 1;
   while (*p == '0')
     p--;
@
