head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.02.27.00.02.43;	author tyler;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update gmake to use snprintf, strlcat, and strlcpy
dirty dirty fsf code

take a shower stallman
@
text
@$MirBSD$
--- variable.c.orig	Sat Feb 26 23:53:27 2005
+++ variable.c	Sat Feb 26 23:55:05 2005
@@@@ -568,10 +568,10 @@@@ define_automatic_variables ()
   register struct variable *v;
   char buf[200];
 
-  sprintf (buf, "%u", makelevel);
+  snprintf (buf, sizeof(buf), "%u", makelevel);
   (void) define_variable (MAKELEVEL_NAME, MAKELEVEL_LENGTH, buf, o_env, 0);
 
-  sprintf (buf, "%s%s%s",
+  snprintf (buf, sizeof(buf),  "%s%s%s",
 	   version_string,
 	   (remote_description == 0 || remote_description[0] == '\0')
 	   ? "" : "-",
@@@@ -782,7 +782,7 @@@@ target_environment (file)
       }
 
   *result = (char *) xmalloc (100);
-  (void) sprintf (*result, "%s=%u", MAKELEVEL_NAME, makelevel + 1);
+  (void) snprintf (*result, sizeof(*result), "%s=%u", MAKELEVEL_NAME, makelevel + 1);
   *++result = 0;
 
   hash_free (&table, 0);
@@@@ -944,7 +944,7 @@@@ do_variable_definition (flocp, varname, 
 	    pathlen = strlen (pathv->value);
 	  path_string = (char *)xmalloc (5 + pathlen + 2 + 1);
 	  /* On MSDOS, current directory is considered as part of $PATH.  */
-	  sprintf (path_string, "PATH=.;%s", pathv ? pathv->value : "");
+	  snprintf (path_string, sizeof(path_string), "PATH=.;%s", pathv ? pathv->value : "");
 	  fake_env[0] = path_string;
 	  fake_env[1] = (char *)0;
 	  if (__dosexec_find_on_path (shellbase, fake_env, shellpath))
@
