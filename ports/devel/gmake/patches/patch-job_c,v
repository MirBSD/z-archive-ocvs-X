head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.02.27.00.02.43;	author tyler;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update gmake to use snprintf, strlcat, and strlcpy
dirty dirty fsf code

take a shower stallman
@
text
@$MirBSD$
--- job.c.orig	Sat Feb 26 22:38:03 2005
+++ job.c	Sat Feb 26 22:42:01 2005
@@@@ -303,9 +303,9 @@@@ vms_redirect (desc, fname, ibuf)
   *ibuf = 0;
   if (strcmp (fptr, "/dev/null") != 0)
     {
-      strcpy (fname, vmsify (fptr, 0));
+      strlcpy (fname, vmsify (fptr, 0), sizeof(fname));
       if (strchr (fname, '.') == 0)
-	strcat (fname, ".");
+	strlcat (fname, ".", sizeof(fname));
     }
   desc->dsc$w_length = strlen(fname);
   desc->dsc$a_pointer = fname;
@@@@ -1457,7 +1457,7 @@@@ new_job (file)
       /* There are no more references in this line to worry about.
 	 Copy the remaining uninteresting text to the output.  */
       if (out != in)
-	strcpy (out, in);
+	strlcpy (out, in, sizeof(out));
 
       /* Finally, expand the line.  */
       lines[i] = allocated_variable_expand_for_file (cmds->command_lines[i],
@@@@ -1917,7 +1917,7 @@@@ child_execute_job (argv, child)
 		if (strncmp (p, ">&1", 3) == 0)
 		  {
 		    p += 3;
-		    strcpy (efile, "sys$output");
+		    strlcpy (efile, "sys$output", sizeof(efile));
 		    efiledsc.dsc$w_length = strlen(efile);
 		    efiledsc.dsc$a_pointer = efile;
 		    efiledsc.dsc$b_dtype = DSC$K_DTYPE_T;
@@@@ -2904,7 +2904,7 @@@@ construct_command_argv_internal (line, r
         else if (unixy_shell && strneq (p, "...", 3))
           {
             /* The case of `...' wildcard again.  */
-            strcpy (ap, "\\.\\.\\");
+            strlcpy (ap, "\\.\\.\\", sizeof(ap));
             ap += 5;
             p  += 2;
           }
@@@@ -2932,7 +2932,7 @@@@ construct_command_argv_internal (line, r
 
 	  /* create batch file name */
       *batch_filename_ptr = xmalloc(strlen(fname) + 5);
-      strcpy(*batch_filename_ptr, fname);
+      strlcpy(*batch_filename_ptr, fname, sizeof(*batch_filename_ptr));
 
       /* make sure path name is in DOS backslash format */
       if (!unixy_shell) {
@@@@ -2940,9 +2940,9 @@@@ construct_command_argv_internal (line, r
         for (i = 0; fname[i] != '\0'; ++i)
           if (fname[i] == '/')
             fname[i] = '\\';
-        strcat(*batch_filename_ptr, ".bat");
+        strlcat(*batch_filename_ptr, ".bat", sizeof(*batch_filename_ptr));
       } else {
-        strcat(*batch_filename_ptr, ".sh");
+        strlcat(*batch_filename_ptr, ".sh", sizeof(*batch_filename_ptr));
       }
 
       DB (DB_JOBS, (_("Creating temporary batch file %s\n"),
@@@@ -3073,7 +3073,7 @@@@ construct_command_argv (line, restp, fil
      */
     if (shell) {
       char *p = w32ify(shell, 0);
-      strcpy(shell, p);
+      strlcpy(shell, p, sizeof(shell));
     }
 #endif
     ifs = allocated_variable_expand_for_file ("$(IFS)", file);
@
