head	1.2;
access;
symbols
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308221505:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.10.31.21.52.41;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.06.05.16.39.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.05.16.39.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge 'cvs import'

* Please, everyone, make sure your ports still work.

  This includes:
  * gnome 2.4.1(sic!) - a few USE_CXX may have vanished by accident *oops*
  * centericq
  * pine

* The ports tree is still locked until ports/INDEX is committed
  with the unlock message
@
text
@$OpenBSD: patch-base_src_common_PtrArray_c,v 1.2 2003/05/28 13:27:48 todd Exp $
--- base/src/common/PtrArray.c.orig	Sat Mar 29 16:15:21 2003
+++ base/src/common/PtrArray.c	Wed May 28 08:14:56 2003
@@@@ -70,7 +70,7 @@@@ block_fetch(const ObVec* vec, uint32_t i
     if(((void**)ptr)[block_index] == 0 && h != 1)
     {
       uint32_t j;
-      ((void**)ptr)[block_index] = GC_MALLOC(sizeof(void*) * BLOCK_SIZE);
+      ((void**)ptr)[block_index] = calloc(1, sizeof(void*) * BLOCK_SIZE);
       for(j = 0; j != BLOCK_SIZE; j++)
         ((void***)ptr)[block_index][j] = 0;
     }
@@@@ -101,7 +101,7 @@@@ vec_MaybeGrow(ObVec *vec)
   if(vec->size == (1 << (L2BS * vec->height)))
   {
     uint32_t j;
-    const void** elem = GC_MALLOC(sizeof(void*) * BLOCK_SIZE);
+    const void** elem = calloc(1, sizeof(void*) * BLOCK_SIZE);
 
     for(j = 1; j != BLOCK_SIZE; j++)
       elem[j] = 0;
@@@@ -117,7 +117,7 @@@@ vvec_fetch(const ObVec* vec, uint32_t in
 {
   return block_fetch(vec, index, 0);
 }
-
+  
 void
 obvec_append(ObVec *vec, const void *vp)
 {
@@@@ -149,7 +149,7 @@@@ vec_sort_using(void *vec_ptr, int (*cmp)
     const uint32_t last_used   = vec_size(vec) % BLOCK_SIZE;
     const uint32_t total_blocks = full_blocks + (last_used ? 1 : 0);
 
-    uint32_t* leaf_index = GC_MALLOC_ATOMIC(sizeof(uint32_t) * total_blocks);
+    uint32_t* leaf_index = calloc(1, sizeof(uint32_t) * total_blocks);
 
     for(j = 0; j != total_blocks; j++)
       leaf_index[j] = 0;
@@@@ -336,7 +336,7 @@@@ init_vector(void *vec_ptr)
 StrVec *
 strvec_create(void)
 {
-  StrVec *vec = (StrVec *) GC_MALLOC(sizeof(StrVec));
+  StrVec *vec = (StrVec *) calloc(1, sizeof(StrVec));
 
   ser_init(vec, &StrVec_SerType, StrVec_SerType.ver);
   SER_MODIFIED(vec);
@@@@ -349,7 +349,7 @@@@ strvec_create(void)
 TnVec *
 tnvec_create(void)
 {
-  TnVec *vec = (TnVec *) GC_MALLOC(sizeof(TnVec));
+  TnVec *vec = (TnVec *) calloc(1, sizeof(TnVec));
 
   ser_init(vec, &TnVec_SerType, TnVec_SerType.ver);
   SER_MODIFIED(vec);
@@@@ -362,7 +362,7 @@@@ tnvec_create(void)
 ObVec *
 obvec_create()
 {
-  ObVec *vec = (ObVec *) GC_MALLOC(sizeof(ObVec));
+  ObVec *vec = (ObVec *) calloc(1, sizeof(ObVec));
 
   ser_init(vec, &ObVec_SerType, ObVec_SerType.ver);
   SER_MODIFIED(vec);
@@@@ -564,7 +564,7 @@@@ strvec_flatten(StrVec *vec)
 
   cumlen += 1;			/* for trailing null */
 
-  s = GC_MALLOC_ATOMIC(cumlen);
+  s = calloc(1, cumlen);
   cumlen = 0;
 
   for (i = 0; i < size; i++) {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.
@
text
@@
