head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.3
	cvs-200402211630:1.1.1.3
	cvs-200401261625:1.1.1.3
	cvs-200401162142:1.1.1.3
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308221505:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.07.26.13.38.13;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.26.13.38.13;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.17.12.56.44;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.16.22.09.15;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@Haddock is a tool for automatically generating documentation from
annotated Haskell source code. It is primary intended for documenting
libraries, but it should be useful for any kind of Haskell code.

Like other systems, Haddock lets you write documentation annotations
next to the definitions of functions and types in the source code, in
a syntax that is easy on the eye when writing the source code (no
heavyweight mark-up). The documentation generated by Haddock is fully
hyperlinked.

WWW: ${HOMEPAGE}
@


1.1.1.1
log
@Import latest OpenBSD ports, XFree and source in sync
@
text
@@


1.1.1.2
log
@Import OpenBSD CVS repository (checked out) of roughly 12:00 UTC today,
retrieved from the canadian anoncvs server (due to CTM unavailability)
@
text
@d10 2
@


1.1.1.3
log
@Another sync. Mostly for infrastructure fixes.
But I'm "just" at it, so...
@
text
@d2 1
a2 1
annotated Haskell source code. It is primarily intended for documenting
d6 2
a7 2
next to the definitions of functions and types in the source code, in a
syntax that is easy on the eye when writing the source code (no
d9 1
a9 3
hyperlinked - click on a type name in a type signature to go straight to
the definition, and documentation, for that type.

@


