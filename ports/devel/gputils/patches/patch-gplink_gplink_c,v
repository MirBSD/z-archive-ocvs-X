head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.11.15.19.59.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.15.19.59.46;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.02.21.17.02.08;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-gplink_gplink_c,v 1.1.1.1 2003/11/03 01:02:36 naddy Exp $
--- gplink/gplink.c.orig	2003-10-14 21:43:55.000000000 +1000
+++ gplink/gplink.c	2003-10-14 21:50:19.000000000 +1000
@@@@ -264,7 +264,7 @@@@ void gplink_open_coff(char *name)
   FILE *coff;
   char file_name[BUFSIZ];
   
-  strcpy(file_name, name);
+  strlcpy(file_name, name, sizeof(file_name));
   
   coff = fopen(file_name, "rb");
   if ((coff == NULL) && (strchr(file_name, PATH_CHAR) == 0)) { 
@@@@ -272,9 +272,9 @@@@ void gplink_open_coff(char *name)
     int i;
 
     for(i = 0; i < state.numpaths; i++) {
-      strcpy(file_name, state.paths[i]);
-      strcat(file_name, COPY_CHAR);
-      strcat(file_name, name);
+      strlcpy(file_name, state.paths[i], sizeof(file_name));
+      strlcat(file_name, COPY_CHAR, sizeof(file_name));
+      strlcat(file_name, name, sizeof(file_name));
       coff = fopen(file_name, "rb");
       if (coff != NULL) {
         break;
@@@@ -446,7 +446,7 @@@@ int main(int argc, char *argv[])
       state.mapfile = normal;
       break;
     case 'o':
-      strcpy(state.basefilename, optarg);
+      strlcpy(state.basefilename, optarg, sizeof(state.basefilename));
       pc = strrchr(state.basefilename, '.');
       if (pc)
         *pc = 0;
@@@@ -478,18 +478,18 @@@@ int main(int argc, char *argv[])
 
   if(state.basefilename[0] == '\0') {
     /* set default output filename to be a.o, a.hex, a.cod, a.map */
-    strcpy(state.basefilename, "a");
+    strlcpy(state.basefilename, "a", sizeof(state.basefilename));
   }
 
   /* setup output filenames */
-  strcpy(state.codfilename, state.basefilename);
-  strcat(state.codfilename, ".cod");  
-  strcpy(state.hexfilename, state.basefilename);
-  strcat(state.hexfilename, ".hex");  
-  strcpy(state.mapfilename, state.basefilename);
-  strcat(state.mapfilename, ".map");  
-  strcpy(state.objfilename, state.basefilename);
-  strcat(state.objfilename, ".cof");  
+  strlcpy(state.codfilename, state.basefilename, sizeof(state.codfilename));
+  strlcat(state.codfilename, ".cod", sizeof(state.codfilename));  
+  strlcpy(state.hexfilename, state.basefilename, sizeof(state.hexfilename));
+  strlcat(state.hexfilename, ".hex", sizeof(state.hexfilename));  
+  strlcpy(state.mapfilename, state.basefilename, sizeof(state.mapfilename));
+  strlcat(state.mapfilename, ".map", sizeof(state.mapfilename));  
+  strlcpy(state.objfilename, state.basefilename, sizeof(state.objfilename));
+  strlcat(state.objfilename, ".cof", sizeof(state.objfilename));  
 
   /* Open all objects and archives in the file list. */ 
   for ( ; optind < argc; optind++) {
@@@@ -514,12 +514,12 @@@@ int main(int argc, char *argv[])
       return EXIT_FAILURE; 
     }
     #ifdef HAVE_DOS_BASED_FILE_SYSTEM
-      strcpy(file_name, DOS_LKR_PATH);    
+      strlcpy(file_name, DOS_LKR_PATH, sizeof(file_name));
     #else
-      strcpy(file_name, GPLINK_LKR_PATH);
+      strlcpy(file_name, GPLINK_LKR_PATH, sizeof(file_name));
     #endif
-    strcat(file_name, COPY_CHAR);
-    strcat(file_name, script_name);
+    strlcat(file_name, COPY_CHAR, sizeof(file_name));
+    strlcat(file_name, script_name, sizeof(file_name));
     gp_message("using default linker script \"%s\"", file_name);
     open_src(file_name, 0);
     yyparse();
@


1.1.1.1
log
@Import the OpenBSD ports tree into the MirPorts Framework again, in order
to introduce recent security fixes.
@
text
@@


1.1.1.2
log
@Import OpenBSD ports again. This will give us lots of new toys :).
@
text
@d1 4
a4 4
$OpenBSD: patch-gplink_gplink_c,v 1.2 2004/01/30 01:01:11 naddy Exp $
--- gplink/gplink.c.orig	2004-01-17 13:33:51.000000000 +1100
+++ gplink/gplink.c	2004-01-25 20:51:41.000000000 +1100
@@@@ -265,7 +265,7 @@@@ void gplink_open_coff(char *name)
d13 1
a13 1
@@@@ -273,9 +273,9 @@@@ void gplink_open_coff(char *name)
d26 1
a26 10
@@@@ -387,7 +387,7 @@@@ int main(int argc, char *argv[])
   gp_init();
 
   /* initialize */
-  gp_date_string(state.startdate);
+  gp_date_string(state.startdate, sizeof(state.startdate));
   state.hex_format = inhx32;
   state.numpaths = 0;
   state.byte_addr = 0;
@@@@ -457,7 +457,7 @@@@ int main(int argc, char *argv[])
d35 1
a35 1
@@@@ -489,7 +489,7 @@@@ int main(int argc, char *argv[])
a42 4
   /* Add the library path to the include paths list last, so that the user
@@@@ -499,12 +499,12 @@@@ int main(int argc, char *argv[])
   }
 
d44 2
d52 2
d55 1
a55 1
+  strlcat(state.hexfilename, ".hex", sizeof(state.hexfilename));
d57 1
a57 1
+  strlcat(state.mapfilename, ".map", sizeof(state.mapfilename));
d59 1
a59 1
+  strlcat(state.objfilename, ".cof", sizeof(state.objfilename));
d63 1
a63 2
@@@@ -528,9 +528,9 @@@@ int main(int argc, char *argv[])
       gp_error("linker script not specified and can't determine default script");
d66 7
a72 1
-    strcpy(file_name, gp_lkr_path);    
a74 1
+    strlcpy(file_name, gp_lkr_path, sizeof(file_name));
@

