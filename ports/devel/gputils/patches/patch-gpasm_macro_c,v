head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.11.15.19.59.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.15.19.59.46;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.02.21.17.02.08;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-gpasm_macro_c,v 1.1.1.1 2003/11/03 01:02:35 naddy Exp $
--- gpasm/macro.c.orig	2003-10-14 21:24:34.000000000 +1000
+++ gpasm/macro.c	2003-10-14 21:27:13.000000000 +1000
@@@@ -59,15 +59,15 @@@@ void setup_macro(struct macro_head *h, i
         if (pToH->tag == symbol) {
           annotate_symbol(sym, strdup(pToH->value.symbol));
         } else if (pToH->tag == string) {
-          sprintf(buffer, "\"%s\"", pToH->value.string);
+          snprintf(buffer, sizeof(buffer), "\"%s\"", pToH->value.string);
           annotate_symbol(sym, strdup(buffer));
         } else {
           int value = maybe_evaluate(pToH);
 
 	  if (value < 0)
-	    sprintf(buffer, "-%#x", -value);
+	    snprintf(buffer, sizeof(buffer), "-%#x", -value);
           else
-	    sprintf(buffer, "%#x", value);	  
+	    snprintf(buffer, sizeof(buffer), "%#x", value);	  
 	  annotate_symbol(sym, strdup(buffer));
         }
     
@@@@ -83,12 +83,12 @@@@ void setup_macro(struct macro_head *h, i
 
 /* Copy the macro body to a buffer. */
 
-void copy_macro_body(struct macro_body *b, char *buffer)
+void copy_macro_body(struct macro_body *b, char *buffer, size_t sizeof_buffer)
 {
   while (b) {
     if (b->src_line != NULL) {
-      strcat(buffer, b->src_line);
-      strcat(buffer, "\n");
+      strlcat(buffer, b->src_line, sizeof_buffer);
+      strlcat(buffer, "\n", sizeof_buffer);
     }
     b = b->next;
   }
@@@@ -118,10 +118,10 @@@@ make_macro_buffer(struct macro_head *h)
 
   /* Allocate memory for the new buffer. yy_delete_buffer frees it */
   macro_src = (char *)calloc(sizeof(char), macro_src_size);
-  macro_src[0] = '\0';
-
-  /* build the string to be scanned */  
-  copy_macro_body(h->body, macro_src);
+  if (macro_src) {
+    /* build the string to be scanned */  
+    copy_macro_body(h->body, macro_src, macro_src_size);
+  }
 
   return macro_src;
 }
@


1.1.1.1
log
@Import the OpenBSD ports tree into the MirPorts Framework again, in order
to introduce recent security fixes.
@
text
@@


1.1.1.2
log
@Import OpenBSD ports again. This will give us lots of new toys :).
@
text
@d1 23
a23 16
$OpenBSD: patch-gpasm_macro_c,v 1.2 2004/01/30 01:01:11 naddy Exp $
--- gpasm/macro.c.orig	2004-01-21 17:17:52.000000000 +1100
+++ gpasm/macro.c	2004-01-25 20:43:22.000000000 +1100
@@@@ -150,9 +150,9 @@@@ node_to_string(struct pnode *p)
   switch(p->tag) {
   case constant:
     if (p->value.constant < 0) {
-      sprintf(constant_buffer, "-%#x", -p->value.constant);
+      snprintf(constant_buffer, sizeof(constant_buffer), "-%#x", -p->value.constant);
     } else {
-      sprintf(constant_buffer, "%#x", p->value.constant);
+      snprintf(constant_buffer, sizeof(constant_buffer), "%#x", p->value.constant);
     }
     cat_string(constant_buffer);
     break;
@@@@ -230,12 +230,12 @@@@ void setup_macro(struct macro_head *h, i
d39 1
a39 1
@@@@ -265,10 +265,10 @@@@ make_macro_buffer(struct macro_head *h)
@

