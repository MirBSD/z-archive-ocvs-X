head	1.2;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.10.07.17.52.29;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.17.16.04.19;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.09.17.16.04.19;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@move ports/mail/* and ports/news/* to ports/mailnews/*
@
text
@$OpenBSD: patch-src_plugins_spamassassin_libspamc_c,v 1.1 2003/08/31 02:32:03 avsm Exp $
--- src/plugins/spamassassin/libspamc.c.orig	2003-08-28 13:01:07.000000000 -0400
+++ src/plugins/spamassassin/libspamc.c	2003-08-28 13:04:07.000000000 -0400
@@@@ -595,7 +595,7 @@@@ static int
 _handle_spamd_header (struct message *m, int flags, char *buf, int len)
 {
     char is_spam[6];
-    char s_str[20], t_str[20];
+    char s_str[21], t_str[21];
 
     /* Feb 12 2003 jm: actually, I think sccanf is working fine here ;)
      * let's stick with it for this parser.
@@@@ -604,8 +604,8 @@@@ _handle_spamd_header (struct message *m,
      */
     if (sscanf(buf, "Spam: %5s ; %20s / %20s", is_spam, s_str, t_str) == 3)
     {
-	m->score = _locale_safe_string_to_float (s_str, 20);
-	m->threshold = _locale_safe_string_to_float (t_str, 20);
+	m->score = _locale_safe_string_to_float (s_str, 21);
+	m->threshold = _locale_safe_string_to_float (t_str, 21);
 
 	/* Format is "Spam: x; y / x" */
 	m->is_spam=strcasecmp("true", is_spam) == 0 ? EX_ISSPAM: EX_NOTSPAM;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.4-current ports tree.
@
text
@@
