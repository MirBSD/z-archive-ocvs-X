head	1.2;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.10.07.17.49.56;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.07.26.13.42.32;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.26.13.42.32;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.28.16.31.19;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.2
log
@move ports/mail/* and ports/news/* to ports/mailnews/*
@
text
@$OpenBSD: patch-src_lib-storage_index_mbox_mbox-storage_c,v 1.1 2003/07/23 06:03:01 jolan Exp $
--- src/lib-storage/index/mbox/mbox-storage.c.orig	Wed Jun 25 20:02:04 2003
+++ src/lib-storage/index/mbox/mbox-storage.c	Tue Jul 15 15:18:11 2003
@@@@ -317,7 +317,7 @@@@ static const char *mbox_get_path(struct 
 }
 
 static struct mailbox *mbox_open(struct mail_storage *storage, const char *name,
-				 int readonly, int fast)
+				 enum mailbox_open_flags flags)
 {
 	struct index_mailbox *ibox;
 	struct mail_index *index;
@@@@ -344,7 +344,7 @@@@ static struct mailbox *mbox_open(struct 
 	}
 
 	ibox = index_storage_init(storage, &mbox_mailbox, index,
-				  name, readonly, fast);
+				  name, flags);
 	if (ibox != NULL)
 		ibox->expunge_locked = mbox_expunge_locked;
 	return (struct mailbox *) ibox;
@@@@ -352,7 +352,7 @@@@ static struct mailbox *mbox_open(struct 
 
 static struct mailbox *
 mbox_open_mailbox(struct mail_storage *storage,
-		  const char *name, int readonly, int fast)
+		  const char *name, enum mailbox_open_flags flags)
 {
 	const char *path;
 	struct stat st;
@@@@ -364,7 +364,7 @@@@ mbox_open_mailbox(struct mail_storage *s
 		/* make sure inbox exists */
 		if (!verify_inbox(storage))
 			return FALSE;
-		return mbox_open(storage, "INBOX", readonly, fast);
+		return mbox_open(storage, "INBOX", flags);
 	}
 
 	if (!mbox_is_valid_existing_name(name)) {
@@@@ -384,7 +384,7 @@@@ mbox_open_mailbox(struct mail_storage *s
 		if (!create_mbox_index_dirs(storage, name))
 			return NULL;
 
-		return mbox_open(storage, name, readonly, fast);
+		return mbox_open(storage, name, flags);
 	}
 
 	if (ENOTFOUND(errno)) {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import latest OpenBSD ports, XFree and source in sync
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree checked out from anoncvs.ca.openbsd.org at
2004-05-28 15:30 UTC.

Lots of SECURITY fixes, at least:

 * databases/mysql: tmpfile issue
 * www/squid: acl bypass
 * games/xonix: privilege escalation
 * archivers/lha: buffer overflow
 * mail/exim: buffer overflows
 * net/rsync: path checking issue
 * net/icecast: buffer overflow
 * www/opera
@
text
@d1 4
a4 4
$OpenBSD: patch-src_lib-storage_index_mbox_mbox-storage_c,v 1.2 2004/05/10 00:06:47 brad Exp $
--- src/lib-storage/index/mbox/mbox-storage.c.orig	2003-11-08 09:54:54.000000000 -0500
+++ src/lib-storage/index/mbox/mbox-storage.c	2004-05-07 21:38:04.000000000 -0400
@@@@ -320,7 +320,7 @@@@ static const char *mbox_get_path(struct 
d13 1
a13 1
@@@@ -347,7 +347,7 @@@@ static struct mailbox *mbox_open(struct 
d16 3
a18 3
 	ibox = index_storage_mailbox_init(storage, &mbox_mailbox, index,
-					  name, readonly, fast);
+					  name, flags);
d22 1
a22 1
@@@@ -355,7 +355,7 @@@@ static struct mailbox *mbox_open(struct 
d31 1
a31 1
@@@@ -367,7 +367,7 @@@@ mbox_open_mailbox(struct mail_storage *s
d40 1
a40 1
@@@@ -387,7 +387,7 @@@@ mbox_open_mailbox(struct mail_storage *s
@

