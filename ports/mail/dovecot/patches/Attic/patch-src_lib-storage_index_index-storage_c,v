head	1.2;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.10.07.17.49.55;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.07.26.13.42.32;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.26.13.42.32;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.28.16.31.18;	author bsiegert;	state Stab;
branches;
next	;


desc
@@


1.2
log
@move ports/mail/* and ports/news/* to ports/mailnews/*
@
text
@$OpenBSD: patch-src_lib-storage_index_index-storage_c,v 1.1 2003/07/23 06:03:01 jolan Exp $
--- src/lib-storage/index/index-storage.c.orig	Sat Jun 14 22:43:05 2003
+++ src/lib-storage/index/index-storage.c	Tue Jul 15 15:18:00 2003
@@@@ -266,20 +266,28 @@@@ int index_storage_lock(struct index_mail
 struct index_mailbox *
 index_storage_init(struct mail_storage *storage, struct mailbox *box,
 		   struct mail_index *index, const char *name,
-		   int readonly, int fast)
+		   enum mailbox_open_flags flags)
 {
 	struct index_mailbox *ibox;
-	enum mail_index_open_flags flags;
+	enum mail_index_open_flags index_flags;
 
 	i_assert(name != NULL);
 
+	index_flags = MAIL_INDEX_OPEN_FLAG_CREATE;
+	if ((flags & MAILBOX_OPEN_FAST) != 0)
+		index_flags |= MAIL_INDEX_OPEN_FLAG_FAST;
+	if ((flags & MAILBOX_OPEN_READONLY) != 0)
+		index_flags |= MAIL_INDEX_OPEN_FLAG_UPDATE_RECENT;
+	if ((flags & MAILBOX_OPEN_MMAP_INVALIDATE) != 0)
+		index_flags |= MAIL_INDEX_OPEN_FLAG_MMAP_INVALIDATE;
+
 	do {
 		ibox = i_new(struct index_mailbox, 1);
 		ibox->box = *box;
 
 		ibox->box.storage = storage;
 		ibox->box.name = i_strdup(name);
-		ibox->box.readonly = readonly;
+		ibox->box.readonly = (flags & MAILBOX_OPEN_READONLY) != 0;
 
 		ibox->index = index;
 
@@@@ -293,13 +301,7 @@@@ index_storage_init(struct mail_storage *
 			index->never_cache_fields =
 				get_never_cache_fields();
 
-			flags = MAIL_INDEX_OPEN_FLAG_CREATE;
-			if (fast)
-				flags |= MAIL_INDEX_OPEN_FLAG_FAST;
-			if (!readonly)
-				flags |= MAIL_INDEX_OPEN_FLAG_UPDATE_RECENT;
-
-			if (!index->open(index, flags))
+			if (!index->open(index, index_flags))
 				break;
 
 			if (INDEX_IS_IN_MEMORY(index) &&
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import latest OpenBSD ports, XFree and source in sync
@
text
@@


1.1.1.2
log
@Import OpenBSD ports tree checked out from anoncvs.ca.openbsd.org at
2004-05-28 15:30 UTC.

Lots of SECURITY fixes, at least:

 * databases/mysql: tmpfile issue
 * www/squid: acl bypass
 * games/xonix: privilege escalation
 * archivers/lha: buffer overflow
 * mail/exim: buffer overflows
 * net/rsync: path checking issue
 * net/icecast: buffer overflow
 * www/opera
@
text
@d1 4
a4 4
$OpenBSD: patch-src_lib-storage_index_index-storage_c,v 1.2 2004/05/10 00:06:47 brad Exp $
--- src/lib-storage/index/index-storage.c.orig	2003-11-08 09:55:19.000000000 -0500
+++ src/lib-storage/index/index-storage.c	2004-05-07 21:29:40.000000000 -0400
@@@@ -302,20 +302,28 @@@@ int index_storage_lock(struct index_mail
d6 4
a9 4
 index_storage_mailbox_init(struct mail_storage *storage, struct mailbox *box,
 			   struct mail_index *index, const char *name,
-			   int readonly, int fast)
+			   enum mailbox_open_flags flags)
d36 1
a36 1
@@@@ -329,13 +337,7 @@@@ index_storage_mailbox_init(struct mail_s
@

