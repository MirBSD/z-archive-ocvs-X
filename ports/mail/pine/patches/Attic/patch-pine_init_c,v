head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2004.10.07.17.51.50;	author tg;	state dead;
branches;
next	1.5;

1.5
date	2004.09.18.23.03.53;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.25.13.02.12;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.07.25.09.37.47;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.25.09.13.52;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.05.11.18.28.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@move ports/mail/* and ports/news/* to ports/mailnews/*
@
text
@$MirBSD: ports/mail/pine/patches/patch-pine_init_c,v 1.5 2004/09/18 23:03:53 tg Exp $
--- pine/init.c.orig	Thu Jul 15 17:37:02 2004
+++ pine/init.c	Sat Sep 18 23:00:29 2004
@@@@ -1333,7 +1333,7 @@@@ init_pinerc(ps, debug_out)
     }
 
     if(!ps->pinerc){
-      build_path(buf, ps->home_dir, ".pinerc", sizeof(buf));
+      build_path(buf, ps->home_dir, ".etc/pinerc", sizeof(buf));
       ps->pinerc = cpystr(buf);
     }
 
@@@@ -3020,6 +3020,7 @@@@ process_feature_list(ps, list, old_growt
                              *lvalue[BM_SIZE * 8];
     int                       i,
                               yorn;
+    int                       bsm = 1;
     long                      l;
     FEATURE_S		     *feat;
 
@@@@ -3041,6 +3042,10 @@@@ process_feature_list(ps, list, old_growt
     if(old_growth)
         set_old_growth_bits(ps, 0);
 
+    /* standards compliance */
+    if(bsm)
+        F_TURN_ON(F_QUELL_FLOWED_TEXT, ps);
+
     /* now run through the list (global, user, and cmd_line lists are here) */
     if(list){
       for(p = list; (q = *p) != NULL; p++){
@@@@ -3103,7 +3108,7 @@@@ process_feature_list(ps, list, old_growt
       ps->orig_use_fkeys = 1;
 
     /* Will we have to build a new list? */
-    if(!(old_growth || hir || osr))
+    if(!(old_growth || hir || osr || bsm))
 	return;
 
     /*
@@@@ -3125,12 +3130,15 @@@@ process_feature_list(ps, list, old_growt
       }else if(old_growth && (strucmp(q, "old-growth") == 0 ||
                              strucmp(q, "no-old-growth") == 0)){
 	old_growth = 0;
+      }else if(bsm && (strucmp(q, "quell-flowed-text") == 0 ||
+                             strucmp(q, "no-quell-flowed-text") == 0)){
+	bsm = 0;
       }
       lvalue[i++] = cpystr(q);
     }
 
     /* check to see if we still need to build a new list */
-    if(!(old_growth || hir || osr))
+    if(!(old_growth || hir || osr || bsm))
 	return;
 
     if(hir)
@@@@ -3139,6 +3147,8 @@@@ process_feature_list(ps, list, old_growt
       lvalue[i++] = "signature-at-bottom";
     if(old_growth)
       lvalue[i++] = "old-growth";
+    if(bsm)
+      lvalue[i++] = "quell-flowed-text";
     lvalue[i] = NULL;
     set_variable_list(V_FEATURE_LIST, lvalue, TRUE, Main);
 }
@@@@ -5362,7 +5372,7 @@@@ read_pinerc(prc, vars, which_vars)
 	if(!prc->pinerc_written && prc->type == Loc){
 	    prc->pinerc_written = name_file_mtime(filename);
 	    dprint(5, (debugfile, "read_pinerc: time_pinerc_written = %ld\n",
-		       prc->pinerc_written));
+		       (long) prc->pinerc_written));
 	}
     }
 
@@@@ -5929,7 +5939,7 @@@@ write_pinerc(ps, which)
 		dprint(2, (debugfile,
 			   "write_pinerc: mtime mismatch: \"%s\": %ld != %ld\n",
 			   filename ? filename : "?",
-			   prc->pinerc_written, mtime));
+			   (long) prc->pinerc_written, (long) mtime));
 		return(-1);
 	    }
 	}
@@@@ -6214,7 +6224,7 @@@@ write_pinerc(ps, which)
     if(prc->type == Loc){
 	prc->pinerc_written = name_file_mtime(filename);
 	dprint(2, (debugfile, "wrote pinerc: %s: time_pinerc_written = %ld\n",
-		   pinrc ? pinrc : "?", prc->pinerc_written));
+		   pinrc ? pinrc : "?", (long) prc->pinerc_written));
     }
     else{
 	dprint(2, (debugfile, "wrote pinerc: %s\n", pinrc ? pinrc : "?"));
@@@@ -6504,7 +6514,7 @@@@ char *filename;
     }
 #else	/* !DOS */
     if(!ps_global->pinerc){
-	build_path(buf, ps_global->home_dir, ".pinerc", sizeof(buf));
+	build_path(buf, ps_global->home_dir, ".etc/pinerc", sizeof(buf));
 	p = buf;
     }
 #endif	/* !DOS */
@


1.5
log
@fix most (time_t 64 related) warnings
@
text
@d1 1
a1 1
$MirBSD: ports/mail/pine/patches/patch-pine_init_c,v 1.4 2004/07/25 13:02:12 tg Stab $
@


1.4
log
@correctly handle our default disabling of flawed text
@
text
@d1 1
a1 1
$MirBSD: ports/mail/pine/patches/patch-pine_init_c,v 1.3 2004/07/25 09:37:47 tg Exp $
d3 1
a3 1
+++ pine/init.c	Sun Jul 25 12:58:23 2004
d67 27
@


1.3
log
@* update to pine 4.61, imapd 2004.352, pico 4.8,
  ipop2d 2004.68, ipop3d 2004.88
* basic support for adhering to MirOS standards
  (.etc/ support, no flawed text by default)
@
text
@d1 1
a1 1
$MirBSD$
d3 1
a3 1
+++ pine/init.c	Sun Jul 25 09:33:04 2004
d13 9
a21 1
@@@@ -3041,6 +3041,9 @@@@ process_feature_list(ps, list, old_growt
d26 2
a27 1
+    F_TURN_ON(F_QUELL_FLOWED_TEXT, ps);
d32 36
a67 1
@@@@ -6504,7 +6507,7 @@@@ char *filename;
@


1.2
log
@make patches apply with pine 4.61
@
text
@d1 5
a5 6
$MirBSD: ports/mail/pine/patches/patch-pine_init_c,v 1.1 2004/05/11 18:28:05 tg Exp $
--- pine/init.c.orig	2004-05-11 15:33:20.000000000 +0000
+++ pine/init.c	2004-05-11 15:34:13.000000000 +0000
@@@@ -2998,6 +2998,8 @@@@ process_feature_list(ps, list, old_growt
     for(i = 0; (feat = feature_list(i)) != NULL; i++)
       F_SET(feat->id, ps, 0);
d7 5
a11 2
+    /* usenet standards compliance (MirOS) */
+	F_TURN_ON(F_QUELL_FLOWED_TEXT, ps);
d13 19
a31 2
     /* backwards compatibility */
     if(hir)
@


1.1
log
@* fix scripts; properly use mktemp
* update to 4.60
* mark as local version, as asked by the licence
* disable flawed format by default
* fix whitespace stripper to not strip trailing
  whitespaces from lines starting with a space
  or minus (for patches)
* mix imap-uw port including mailutil into pine port
  (pine port has a newer version, imapd-2004.*)
* enable IPv6 support
* dissolve imapd ./. mailutil conflict
* improved messages containing correct amount of whitespace
* tell user in message about PGP and S/MIME
* tell about which PGP versions work
@
text
@d1 1
a1 1
$MirBSD$
@

