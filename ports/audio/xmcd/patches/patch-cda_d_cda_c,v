head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.2
	cvs-200311151930:1.1.1.2
	cvs-200310311830:1.1.1.2
	cvs-200310021000:1.1.1.2
	cvs-200309281111:1.1.1.2
	cvs-200309171515:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3449:1.1.1.2
	cvs-200307191610:1.1.1.2
	ctm-3416:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291800:1.1.1.2
	ctm-3369:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	ctm-3258:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3200:1.1.1.2
	ctm-3188:1.1.1.2
	ctm-3155:1.1.1.2
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.49.16;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.49.16;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.03.29.20.08.04;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-cda_d_cda_c,v 1.1 2001/08/08 23:31:23 naddy Exp $
--- cda_d/cda.c.orig	Sat Feb  5 08:26:38 2000
+++ cda_d/cda.c	Wed Aug  8 01:32:14 2001
@@@@ -349,23 +349,52 @@@@ cda_init(curstat_t *s)
 STATIC void
 cda_start(curstat_t *s)
 {
+	struct stat	stbuf;
+
 	/* Start up libutil */
 	util_start();
 
 	/* Start up I/O interface */
 	di_start(s);
 
+  /*
+  ** NO_FOLLOW isn't supported by all flavours of Unix,
+  ** but at least by linux and openbsd.
+  ** thomas@@suse.de
+  */
 	/* Open FIFOs - daemon side */
-	if ((cda_sfd[0] = open(spipe, O_RDONLY)) < 0) {
+	if ((cda_sfd[0] = open(spipe, O_RDONLY | O_NOFOLLOW)) < 0) {
 		perror("CD audio daemon: cannot open send pipe");
 		cda_quit(s);
 		exit(4);
 	}
-	if ((cda_rfd[0] = open(rpipe, O_WRONLY)) < 0) {
+	if ((cda_rfd[0] = open(rpipe, O_WRONLY | O_NOFOLLOW)) < 0) {
 		perror("CD audio daemon: cannot open recv pipe");
 		cda_quit(s);
 		exit(5);
 	}
+
+	/* Check FIFOs */
+	if (stat(spipe, &stbuf) < 0 || !S_ISFIFO(stbuf.st_mode)) {
+		(void) fprintf(errfp,
+				"CD audio: Send pipe error (daemon): %s\n",
+				spipe);
+		di_halt(s);
+		/* Remove lock */
+		if (dlock[0] != '\0')
+			(void) UNLINK(dlock);
+		exit(6);
+	}
+	if (stat(rpipe, &stbuf) < 0 || !S_ISFIFO(stbuf.st_mode)) {
+		(void) fprintf(errfp,
+				"CD audio: Receive pipe error (daemon): %s\n",
+				rpipe);
+		di_halt(s);
+		/* Remove lock */
+		if (dlock[0] != '\0')
+			(void) UNLINK(dlock);
+		exit(6);
+	}
 }
 
 
@@@@ -396,7 +425,7 @@@@ cda_daemonlock(void)
 		fd = open(dlock, O_CREAT | O_EXCL | O_WRONLY);
 		if (fd < 0) {
 			if (errno == EEXIST) {
-				if ((fd = open(dlock, O_RDONLY)) < 0)
+				if ((fd = open(dlock, O_RDONLY | O_NOFOLLOW)) < 0)
 					return FALSE;
 
 				if (read(fd, buf, 12) > 0)
@@@@ -430,7 +459,7 @@@@ cda_daemonlock(void)
 			(void) write(fd, buf, strlen(buf));
 
 			(void) close(fd);
-			(void) chmod(dlock, 0644);
+			(void) chmod(dlock, 0644); /* woudln't 0622 suffice ? */
 
 			return TRUE;
 		}
@@@@ -3592,7 +3621,7 @@@@ cda_daemon_alive(void)
 
 	(void) sprintf(dlock, "%s/cdad.%x", TEMP_DIR, (int) cd_rdev);
 
-	if ((fd = open(dlock, O_RDONLY)) < 0)
+	if ((fd = open(dlock, O_RDONLY | O_NOFOLLOW)) < 0)
 		return FALSE;
 
 	if (read(fd, buf, 12) < 0) {
@@@@ -3644,7 +3673,7 @@@@ cda_daemon(curstat_t *s)
 	/* Make temporary directory, if needed */
 	(void) sprintf(emsgp, app_data.str_tmpdirerr, TEMP_DIR);
 	if (LSTAT(TEMP_DIR, &stbuf) < 0) {
-		if (!util_mkdir(TEMP_DIR, 0777)) {
+		if (!util_mkdir(TEMP_DIR, 0700)) {
 			(void) fprintf(errfp, "%s\n", emsgp);
 			return 1;
 		}
@@@@ -3817,12 +3846,14 @@@@ main(int argc, char **argv)
 	errfp = stderr;
 	s = &status;
 
+
 	/* Hack: Aside from stdin, stdout, stderr, there shouldn't
 	 * be any other files open, so force-close them.  This is
 	 * necessary in case xmcd was inheriting any open file
 	 * descriptors from a parent process which is for the
 	 * CD-ROM device, and violating exclusive-open requirements
 	 * on some platforms.
+   * thomas@@suse.de: not neccessary anymore on modern systems
 	 */
 	for (i = 3; i < 10; i++)
 		(void) close(i);
@@@@ -3941,7 +3972,7 @@@@ main(int argc, char **argv)
 	if (remote > 0)
 		app_data.cddb_rmtdsbl = (remote == 1) ? FALSE : TRUE;
 	(void) strcpy(cddb_cldata.prog, PROGNAME);
-	(void) strcpy(cddb_cldata.user, util_loginname());
+	(void) strcpy(cddb_cldata.user, util_loginname()); /* bufferoverflow with orig. code here thomas@@suse.de */
 	cddb_cldata.isdemo = di_isdemo;
 	cddb_cldata.curstat_addr = curstat_addr;
 	cddb_cldata.fatal_msg = cda_fatal_msg;
@@@@ -3981,24 +4012,30 @@@@ main(int argc, char **argv)
 	cda_parse_devlist(s);
 
 	/* Open FIFOs - command side */
-	if ((cda_sfd[1] = open(spipe, O_WRONLY)) < 0) {
+	if ((cda_sfd[1] = open(spipe, O_WRONLY | O_NOFOLLOW)) < 0) {
 		perror("CD audio: cannot open send pipe");
 		CDA_FATAL(
 			"Run \"cda on\" first to initialize CD audio daemon."
 		);
 	}
-	if ((cda_rfd[1] = open(rpipe, O_RDONLY)) < 0) {
+	if ((cda_rfd[1] = open(rpipe, O_RDONLY | O_NOFOLLOW)) < 0) {
 		perror("CD audio: cannot open recv pipe for reading");
 		CDA_FATAL(
 			"Run \"cda on\" first to initialize CD audio daemon."
 		);
 	}
-	if ((cda_rfd[0] = open(rpipe, O_WRONLY)) < 0) {
+	if ((cda_rfd[0] = open(rpipe, O_WRONLY | O_NOFOLLOW)) < 0) {
 		perror("CD audio: cannot open recv pipe for writing");
 		CDA_FATAL(
 			"Run \"cda on\" first to initialize CD audio daemon."
 		);
 	}
+
+	/* Check FIFOs */
+	if (stat(spipe, &stbuf) < 0 || !S_ISFIFO(stbuf.st_mode))
+		CDA_FATAL("Send pipe error");
+	if (stat(rpipe, &stbuf) < 0 || !S_ISFIFO(stbuf.st_mode))
+		CDA_FATAL("Receive pipe error");
 
 	/* Handle some signals */
 	(void) signal(SIGINT, onintr);
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import CTM #3155 ports tree from OpenBSD 3.3-current.
@
text
@d1 1
a1 1
$OpenBSD: patch-cda_d_cda_c,v 1.2 2003/03/28 22:39:10 david Exp $
d106 1
a106 1
+   * thomas@@suse.de: not necessary anymore on modern systems
@

