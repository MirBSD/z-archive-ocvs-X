head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.49.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.49.11;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-add_file_c,v 1.1 2002/08/10 01:14:04 naddy Exp $
--- add_file.c.orig	Sat Sep 29 00:21:51 2001
+++ add_file.c	Wed Oct 17 13:19:27 2001
@@@@ -233,6 +233,7 @@@@ sNewDatum (char *filename, char *hash)
 	FREE (info);
 	return 0;
     }
+    strlower (info->hash);
 #endif
     return info;
 }
@@@@ -248,8 +249,8 @@@@ sBitrateToMask (int bitrate, USER * user
 	if (bitrate <= BitRate[i])
 	    return i;
     }
-    log_message ("sBitrateToMask(): invalid bit rate %d (%s, \"%s\")", bitrate,
-		 user->nick, user->clientinfo);
+    log_message ("sBitrateToMask(): invalid bit rate %d (%s, \"%s\")",
+		 bitrate, user->nick, user->clientinfo);
     return 0;			/* invalid bitrate */
 }
 
@@@@ -287,6 +288,8 @@@@ HANDLER (add_file)
 
     if (!option (ON_ALLOW_SHARE))
 	return;
+    if(con->user->level==LEVEL_LEECH)
+	return;
 
     if (Max_Shared && con->user->shared >= Max_Shared)
     {
@@@@ -376,6 +379,8 @@@@ HANDLER (share_file)
 
     if (!option (ON_ALLOW_SHARE))
 	return;
+    if(con->user->level==LEVEL_LEECH)
+	return;
     if (Max_Shared && con->user->shared >= Max_Shared)
     {
 	log_message ("add_file(): %s is already sharing %d files",
@@@@ -466,6 +471,8 @@@@ HANDLER (add_directory)
     CHECK_USER_CLASS ("add_directory");
     if (!option (ON_ALLOW_SHARE))
 	return;
+    if(con->user->level==LEVEL_LEECH)
+	return;
     dir = next_arg (&pkt);	/* directory */
     if (!dir)
     {
@@@@ -653,8 +660,40 @@@@ HANDLER (user_sharing)
 		       user->libsize);
 }
 
+void
+unshare_all_internal (USER * user)
+{
+    if (user->shared)
+    {
+#ifndef ROUTING_ONLY
+	if (ISUSER (user->con))
+	{
+	    /* local user */
+	    free_hash (user->con->uopt->files);
+	    user->con->uopt->files = 0;
+	    ASSERT (Local_Files >= user->shared);
+	    Local_Files -= user->shared;
+	}
+#endif /* !ROUTING_ONLY */
+	if (user->libsize > Num_Gigs)
+	{
+	    log_message ("unshare_all: sender->libsize=%u Num_Gigs=%f",
+			 user->libsize, Num_Gigs);
+	    Num_Gigs = user->libsize;
+	}
+	ASSERT (Num_Gigs >= user->libsize);
+	Num_Gigs -= user->libsize;
+	ASSERT (Num_Files >= user->shared);
+	Num_Files -= user->shared;
+	user->libsize = 0;
+	user->shared = 0;
+    }
+}
+
 /* 110 [:sender]
- * unshare all files
+ * unshare all files.  this will handle the case of a remote server forcing
+ * a local client to unshare all files as well, so we can have the hub
+ * perform this action.
  */
 HANDLER (unshare_all)
 {
@@@@ -664,33 +703,18 @@@@ HANDLER (unshare_all)
     (void) len;
     if (pop_user_server (con, tag, &pkt, &sender_name, &sender))
 	return;
-    ASSERT (sender != 0);
-#ifndef ROUTING_ONLY
+    if (!sender)
+    {
+	log_message ("unshare_all: error: received unshare message from server %s",
+		     sender_name);
+	return;
+    }
     if (ISUSER (con))
     {
-	if (!con->uopt->files)
-	{
-	    ASSERT (sender->shared == 0);
-	    return;		/* nothing shared */
-	}
+	if (sender->shared == 0)
+	    return;		/* nothing to unshare */
 	send_cmd (con, tag, "%d", sender->shared);
-	free_hash (con->uopt->files);
-	con->uopt->files = 0;
-	ASSERT (Local_Files >= sender->shared);
-	Local_Files -= sender->shared;
     }
-#endif /* !ROUTING_ONLY */
-    if (sender->libsize > Num_Gigs)
-    {
-	log_message ("unshare_all: sender->libsize=%u Num_Gigs=%f",
-		     sender->libsize, Num_Gigs);
-	Num_Gigs = sender->libsize;
-    }
-    ASSERT (Num_Gigs >= sender->libsize);
-    Num_Gigs -= sender->libsize;
-    ASSERT (Num_Files >= sender->shared);
-    Num_Files -= sender->shared;
-    sender->libsize = 0;
-    sender->shared = 0;
+    unshare_all_internal (sender);
     pass_message_args (con, tag, ":%s", sender->nick);
 }
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
