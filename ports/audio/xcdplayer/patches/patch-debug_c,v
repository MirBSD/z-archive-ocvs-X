head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.2
	cvs-200402211630:1.1.1.2
	cvs-200401261625:1.1.1.2
	cvs-200401162142:1.1.1.2
	cvs-200301141450:1.1.1.2
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.08.30.21.06.14;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.30.21.06.14;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.01.14.15.28.07;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-debug_c,v 1.1 2003/08/24 22:15:56 naddy Exp $
--- debug.c.orig	1993-01-12 19:59:35.000000000 +0100
+++ debug.c	2003-08-24 23:07:38.000000000 +0200
@@@@ -20,6 +20,10 @@@@
 
 # include "debug.h"
 
+#include "app.h"
+
+extern AppData app_data;
+
 /* VARARGS */
 void
 debug_printf(va_alist)
@@@@ -33,7 +37,7 @@@@ debug_printf(va_alist)
 	/*
 	 * first arg is whether or not to print.
 	 */
-	if ((va_arg(args, int) == 0) || (debug == False))
+	if ((va_arg(args, int) == 0) || (app_data.debug == False))
 		return;
 
 	fmt = va_arg(args, char *);
@


1.1.1.1
log
@Synchronize with OpenBSD 3.4-beta
@
text
@@


1.1.1.2
log
@Now we can update MirPorts from OpenBSD ports tree again,
that we have fixed pkg_install tools accordingly in both
stable and current, and that these tools are compatible.

Consider MirPorts locked until next commit of ports/INDEX,v
@
text
@d1 1
a1 1
$OpenBSD: patch-debug_c,v 1.2 2003/12/29 21:38:34 espie Exp $
d3 2
a4 8
+++ debug.c	2003-12-29 22:34:24.000000000 +0100
@@@@ -15,28 +15,29 @@@@
 
 # include <X11/Intrinsic.h>
 
-# include <varargs.h>
+# include <stdarg.h>
 # include <stdio.h>
d14 2
a15 9
-debug_printf(va_alist)
-	va_dcl
+debug_printf(int p, const char *fmt, ...)
 {
 	va_list		args;
-	char		*fmt;
 
-	va_start(args);
 
d20 1
a20 1
+	if ((p == 0) || (app_data.debug == False))
d23 1
a23 5
-	fmt = va_arg(args, char *);
+	va_start(args, fmt);
 	vfprintf(stdout, fmt, args);
 
 	fflush(stdout);
@

