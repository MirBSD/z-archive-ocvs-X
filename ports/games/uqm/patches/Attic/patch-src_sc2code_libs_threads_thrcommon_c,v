head	1.2;
access;
symbols
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.09.28.15.05.48;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.14.15.23.16;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.04.14.15.23.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@mop up after cvs import
@
text
@$OpenBSD: patch-src_sc2code_libs_threads_thrcommon_c,v 1.1.1.1 2003/04/11 09:12:52 wilfried Exp $
--- src/sc2code/libs/threads/thrcommon.c.orig	Mon Feb  3 14:12:03 2003
+++ src/sc2code/libs/threads/thrcommon.c	Tue Mar  4 01:08:36 2003
@@@@ -553,6 +553,7 @@@@ ClearSemaphore (Semaphore sem)
 			sem_name = SemMon[i].Name;
 			if (SemMon[i].Thread && SemMon[i].Thread != NativeThreadID ())
 #if defined (THREAD_QUEUE) && defined (THREAD_NAMES)
+			{
 				if (ThreadNameNative (SemMon[i].Thread) == NULL)
 					fprintf( stderr, "Freeing %s Semaphore in '%s' set by defunct thread '%s'!\n",
 						sem_name, 
@@@@ -563,6 +564,7 @@@@ ClearSemaphore (Semaphore sem)
 						sem_name, 
 						ThreadNameNative (NativeThreadID ()),
 						ThreadNameNative (SemMon[i].Thread));
+			}
 			SemMon[i].ThreadName[0] = 0;
 #else
 				fprintf (stderr, "Freeing %s Semaphore that was set by a different thread\n",
@@@@ -606,27 +608,39 @@@@ CreateCondVar ()
 {
 	return NativeCreateCondVar ();
 }
-void DestroyCondVar (CondVar cv)
+
+void
+DestroyCondVar (CondVar cv)
 {
-	NativeDestroyCondVar (cv);
+	NativeDestroyCondVar ((CondVar)cv);
 }
 
-void WaitCondVar (CondVar cv)
+void
+WaitCondVar (CondVar cv)
 {
-	NativeWaitCondVar (cv);
+	NativeWaitCondVar ((NativeCondVar)cv);
 }
 
-void SignalCondVar (CondVar cv)
+void
+WaitProtectedCondVar (CondVar cv, Mutex m)
 {
-	NativeSignalCondVar (cv);
+	NativeWaitProtectedCondVar ((NativeCondVar)cv, (NativeMutex)m);
 }
 
-void BroadcastCondVar (CondVar cv)
+void
+SignalCondVar (CondVar cv)
+{
+	NativeSignalCondVar ((NativeCondVar)cv);
+}
+
+void
+BroadcastCondVar (CondVar cv)
 {
-	NativeBroadcastCondVar (cv);
+	NativeBroadcastCondVar ((NativeCondVar)cv);
 }
 
-DWORD CurrentThreadID ()
+DWORD
+CurrentThreadID ()
 {
 	return (DWORD)NativeThreadID ();
 }
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD ports tree as of CTM delta 3200,
this time with:
| tg@@n1:/usr/OBSD/ports $ cvs -qd /lcvs import -I ! -I CVS ports openbsd-ports ctm-3200 

This is necessary because of CVS shortcomings. The repository has been
manually prepared this time.

This is the last import to the ports tree before the release of
MirBSD#4 unless security issues appear.
@
text
@@
