head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.50.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.50.45;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-uquake_menu_c,v 1.1.1.1 2001/08/03 13:02:16 espie Exp $
--- uquake/menu.c.orig	Mon Jan 10 17:59:38 2000
+++ uquake/menu.c	Fri Aug  3 14:41:45 2001
@@@@ -316,6 +316,18 @@@@ void M_Main_Key (int key)
 			CL_NextDemo ();
 		break;
 
+	case K_HOME:
+	case KP_HOME:
+		S_LocalSound ("misc/menu1.wav");
+		m_main_cursor = 0;
+		break;
+
+	case K_END:
+	case KP_END:
+		S_LocalSound ("misc/menu1.wav");
+		m_main_cursor = MAIN_ITEMS-1;
+		break;
+		
 	case KP_DOWNARROW:
 	case K_DOWNARROW:
 		S_LocalSound ("misc/menu1.wav");
@@@@ -398,6 +410,18 @@@@ void M_SinglePlayer_Key (int key)
 		M_Menu_Main_f ();
 		break;
 
+	case K_HOME:
+	case KP_HOME:
+		S_LocalSound ("misc/menu1.wav");
+		m_singleplayer_cursor = 0;
+		break;
+
+	case K_END:
+	case KP_END:
+		S_LocalSound ("misc/menu1.wav");
+		m_singleplayer_cursor = SINGLEPLAYER_ITEMS-1;
+		break;
+		
 	case KP_DOWNARROW:
 	case K_DOWNARROW:
 		S_LocalSound ("misc/menu1.wav");
@@@@ -444,8 +468,9 @@@@ void M_SinglePlayer_Key (int key)
 /* LOAD/SAVE MENU */
 
 int		load_cursor;		// 0 < load_cursor < MAX_SAVEGAMES
+int		max_savegames;		// actual value
 
-#define	MAX_SAVEGAMES		12
+#define	MAX_SAVEGAMES		80
 char	m_filenames[MAX_SAVEGAMES][SAVEGAME_COMMENT_LENGTH+1];
 int		loadable[MAX_SAVEGAMES];
 
@@@@ -456,7 +481,11 @@@@ void M_ScanSaves (void)
 	FILE	*f;
 	int		version;
 
-	for (i=0 ; i<MAX_SAVEGAMES ; i++)
+	max_savegames = (vid.height - 48)/8;
+	if (max_savegames > MAX_SAVEGAMES)
+		max_savegames = MAX_SAVEGAMES;
+
+	for (i=0 ; i<max_savegames ; i++)
 	{
 		strcpy (m_filenames[i], "--- UNUSED SLOT ---");
 		loadable[i] = false;
@@@@ -509,7 +538,7 @@@@ void M_Load_Draw (void)
 	p = Draw_CachePic ("gfx/p_load.lmp");
 	M_DrawPic ( (320-p->width)/2, 4, p);
 
-	for (i=0 ; i< MAX_SAVEGAMES; i++)
+	for (i=0 ; i< max_savegames; i++)
 		M_Print (16, 32 + 8*i, m_filenames[i]);
 
 // line cursor
@@@@ -525,7 +554,7 @@@@ void M_Save_Draw (void)
 	p = Draw_CachePic ("gfx/p_save.lmp");
 	M_DrawPic ( (320-p->width)/2, 4, p);
 
-	for (i=0 ; i<MAX_SAVEGAMES ; i++)
+	for (i=0 ; i<max_savegames ; i++)
 		M_Print (16, 32 + 8*i, m_filenames[i]);
 
 // line cursor
@@@@ -557,6 +586,34 @@@@ void M_Load_Key (int k)
 		Cbuf_AddText (va ("load s%i\n", load_cursor) );
 		return;
 
+	case K_PGDN:
+	case KP_PGDN:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor+= 10;
+		if (load_cursor >= max_savegames)
+			load_cursor -= max_savegames;
+		break;
+
+	case K_PGUP:
+	case KP_PGUP:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor-= 10;
+		if (load_cursor < 0)
+			load_cursor += max_savegames;
+		break;
+
+	case K_HOME:
+	case KP_HOME:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor = 0;
+		break;
+
+	case K_END:
+	case KP_END:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor = max_savegames-1;
+		break;
+		
 	case KP_UPARROW:
 	case K_UPARROW:
 	case KP_LEFTARROW:
@@@@ -564,7 +621,7 @@@@ void M_Load_Key (int k)
 		S_LocalSound ("misc/menu1.wav");
 		load_cursor--;
 		if (load_cursor < 0)
-			load_cursor = MAX_SAVEGAMES-1;
+			load_cursor = max_savegames-1;
 		break;
 
 	case KP_DOWNARROW:
@@@@ -573,7 +630,7 @@@@ void M_Load_Key (int k)
 	case K_RIGHTARROW:
 		S_LocalSound ("misc/menu1.wav");
 		load_cursor++;
-		if (load_cursor >= MAX_SAVEGAMES)
+		if (load_cursor >= max_savegames)
 			load_cursor = 0;
 		break;
 	}
@@@@ -595,6 +652,34 @@@@ void M_Save_Key (int k)
 		Cbuf_AddText (va("save s%i\n", load_cursor));
 		return;
 
+	case K_PGDN:
+	case KP_PGDN:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor+= 10;
+		if (load_cursor >= max_savegames)
+			load_cursor -= max_savegames;
+		break;
+
+	case K_PGUP:
+	case KP_PGUP:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor-= 10;
+		if (load_cursor < 0)
+			load_cursor += max_savegames;
+		break;
+
+	case K_HOME:
+	case KP_HOME:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor = 0;
+		break;
+
+	case K_END:
+	case KP_END:
+		S_LocalSound ("misc/menu1.wav");
+		load_cursor = max_savegames-1;
+		break;
+		
 	case KP_UPARROW:
 	case K_UPARROW:
 	case KP_LEFTARROW:
@@@@ -602,7 +687,7 @@@@ void M_Save_Key (int k)
 		S_LocalSound ("misc/menu1.wav");
 		load_cursor--;
 		if (load_cursor < 0)
-			load_cursor = MAX_SAVEGAMES-1;
+			load_cursor = max_savegames-1;
 		break;
 
 	case KP_DOWNARROW:
@@@@ -611,7 +696,7 @@@@ void M_Save_Key (int k)
 	case K_RIGHTARROW:
 		S_LocalSound ("misc/menu1.wav");
 		load_cursor++;
-		if (load_cursor >= MAX_SAVEGAMES)
+		if (load_cursor >= max_savegames)
 			load_cursor = 0;
 		break;
 	}
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
