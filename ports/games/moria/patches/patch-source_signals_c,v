head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200405281530:1.1.1.1
	cvs-200402211630:1.1.1.1
	cvs-200401261625:1.1.1.1
	cvs-200401162142:1.1.1.1
	cvs-200301141450:1.1.1.1
	cvs-200312021610:1.1.1.1
	cvs-200311151930:1.1.1.1
	cvs-200310311830:1.1.1.1
	cvs-200310021000:1.1.1.1
	cvs-200309281111:1.1.1.1
	cvs-200309171515:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3449:1.1.1.1
	cvs-200307191610:1.1.1.1
	ctm-3416:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291800:1.1.1.1
	ctm-3369:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	ctm-3258:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3200:1.1.1.1
	ctm-3188:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.50.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.19.50.45;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD: patch-source_signals_c,v 1.1.1.1 2001/07/04 16:57:50 lebel Exp $
--- source/signals.c.orig	Thu Jul 21 21:47:23 1994
+++ source/signals.c	Wed Jul  4 11:44:57 2001
@@@@ -113,7 +113,7 @@@@ int sig;
   if(error_sig >= 0)	/* Ignore all second signals. */
     {
       if(++signal_count > 10)	/* Be safe. We will die if persistent enough. */
-	(void) signal(sig, SIG_DFL);
+	(void) signal(sig, (sig_t)SIG_DFL);
       return;
     }
   error_sig = sig;
@@@@ -126,7 +126,7 @@@@ int sig;
       )
     {
       if (death)
-	(void) signal(sig, SIG_IGN);		/* Can't quit after death. */
+	(void) signal(sig, (sig_t)SIG_IGN);		/* Can't quit after death. */
       else if (!character_saved && character_generated)
 	{
 	  if (!get_check("Really commit *Suicide*?"))
@@@@ -137,7 +137,7 @@@@ int sig;
 	      put_qio();
 	      error_sig = -1;
 #ifdef USG
-	      (void) signal(sig, signal_handler);/* Have to restore handler. */
+	      (void) signal(sig, (sig_t)signal_handler);/* Have to restore handler. */
 #else
 	      (void) sigsetmask(smask);
 #endif
@@@@ -179,7 +179,7 @@@@ int sig;
   restore_term();
 #if !defined(MSDOS) && !defined(AMIGA) && !defined(ATARIST_TC)
   /* always generate a core dump */
-  (void) signal(sig, SIG_DFL);
+  (void) signal(sig, (sig_t)SIG_DFL);
   (void) kill(getpid(), sig);
   (void) sleep(5);
 #endif
@@@@ -199,7 +199,7 @@@@ void nosignals()
 #if defined(atarist) && defined(__GNUC__)
   (void) signal(SIGTSTP, (__Sigfunc)SIG_IGN);
 #else
-  (void) signal(SIGTSTP, SIG_IGN);
+  (void) signal(SIGTSTP, (sig_t)SIG_IGN);
 #endif
 #ifndef USG
   mask = sigsetmask(0);
@@@@ -220,7 +220,7 @@@@ void signals()
 #ifdef  __386BSD__
   (void) signal(SIGTSTP, (sig_t)suspend);
 #else
-  (void) signal(SIGTSTP, suspend);
+  (void) signal(SIGTSTP, (sig_t)suspend);
 #endif
 #endif
 #ifndef USG
@@@@ -237,7 +237,7 @@@@ void init_signals()
 {
 #if !defined(ATARIST_MWC) && !defined(ATARIST_TC)
   /* No signals for Atari ST compiled with MWC or TC.  */
-  (void) signal(SIGINT, signal_handler);
+  (void) signal(SIGINT, (sig_t)signal_handler);
 
 #if defined(atarist) && defined(__GNUC__)
   /* Atari ST compiled with GNUC has most signals, but we need a cast
@@@@ -259,8 +259,8 @@@@ void init_signals()
 
 #else
   /* Everybody except the atari st.  */
-  (void) signal(SIGINT, signal_handler);
-  (void) signal(SIGFPE, signal_handler);
+  (void) signal(SIGINT, (sig_t)signal_handler);
+  (void) signal(SIGFPE, (sig_t)signal_handler);
 
 #if defined(MSDOS)
   /* many fewer signals under MSDOS */
@@@@ -278,27 +278,27 @@@@ void init_signals()
 
   /* Everybody except Atari, MSDOS, and Amiga.  */
   /* Ignore HANGUP, and let the EOF code take care of this case. */
-  (void) signal(SIGHUP, SIG_IGN);
-  (void) signal(SIGQUIT, signal_handler);
-  (void) signal(SIGILL, signal_handler);
-  (void) signal(SIGTRAP, signal_handler);
-  (void) signal(SIGIOT, signal_handler);
+  (void) signal(SIGHUP, (sig_t)SIG_IGN);
+  (void) signal(SIGQUIT, (sig_t)signal_handler);
+  (void) signal(SIGILL, (sig_t)signal_handler);
+  (void) signal(SIGTRAP, (sig_t)signal_handler);
+  (void) signal(SIGIOT, (sig_t)signal_handler);
 #ifdef SIGEMT  /* in BSD systems */
-  (void) signal(SIGEMT, signal_handler);
+  (void) signal(SIGEMT, (sig_t)signal_handler);
 #endif
 #ifdef SIGDANGER /* in SYSV systems */
   (void) signal(SIGDANGER, signal_handler);
 #endif
-  (void) signal(SIGKILL, signal_handler);
-  (void) signal(SIGBUS, signal_handler);
-  (void) signal(SIGSEGV, signal_handler);
+  (void) signal(SIGKILL, (sig_t)signal_handler);
+  (void) signal(SIGBUS, (sig_t)signal_handler);
+  (void) signal(SIGSEGV, (sig_t)signal_handler);
 #ifdef SIGSYS
-  (void) signal(SIGSYS, signal_handler);
+  (void) signal(SIGSYS, (sig_t)signal_handler);
 #endif
-  (void) signal(SIGTERM, signal_handler);
-  (void) signal(SIGPIPE, signal_handler);
+  (void) signal(SIGTERM, (sig_t)signal_handler);
+  (void) signal(SIGPIPE, (sig_t)signal_handler);
 #ifdef SIGXCPU	/* BSD */
-  (void) signal(SIGXCPU, signal_handler);
+  (void) signal(SIGXCPU, (sig_t)signal_handler);
 #endif
 #ifdef SIGPWR /* SYSV */
   (void) signal(SIGPWR, signal_handler);
@@@@ -312,9 +312,9 @@@@ void init_signals()
 void ignore_signals()
 {
 #if !defined(ATARIST_MWC)
-  (void) signal(SIGINT, SIG_IGN);
+  (void) signal(SIGINT, (sig_t)SIG_IGN);
 #ifdef SIGQUIT
-  (void) signal(SIGQUIT, SIG_IGN);
+  (void) signal(SIGQUIT, (sig_t)SIG_IGN);
 #endif
 #endif
 }
@@@@ -322,9 +322,9 @@@@ void ignore_signals()
 void default_signals()
 {
 #if !defined(ATARIST_MWC)
-  (void) signal(SIGINT, SIG_DFL);
+  (void) signal(SIGINT, (sig_t)SIG_DFL);
 #ifdef SIGQUIT
-  (void) signal(SIGQUIT, SIG_DFL);
+  (void) signal(SIGQUIT, (sig_t)SIG_DFL);
 #endif
 #endif
 }
@@@@ -335,13 +335,13 @@@@ void restore_signals()
 #if defined(atarist) && defined(__GNUC__)
   (void) signal(SIGINT, (__Sigfunc)signal_handler);
 #else
-  (void) signal(SIGINT, signal_handler);
+  (void) signal(SIGINT, (sig_t)signal_handler);
 #endif
 #ifdef SIGQUIT
 #if defined(atarist) && defined(__GNUC__)
   (void) signal(SIGQUIT, (__Sigfunc)signal_handler);
 #else
-  (void) signal(SIGQUIT, signal_handler);
+  (void) signal(SIGQUIT, (sig_t)signal_handler);
 #endif
 #endif
 #endif
@


1.1.1.1
log
@Import OpenBSD 3.3 ports repository from CTM 3132 the first time
This continues opening an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
