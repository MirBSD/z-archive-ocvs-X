head	1.14;
access;
symbols;
locks; strict;
comment	@# @;


1.14
date	2004.11.07.19.19.35;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.07.19.19.03;	author tg;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.07.18.43.32;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2004.11.07.17.47.56;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2004.11.07.13.51.31;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2004.11.07.13.49.38;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2004.11.07.13.31.08;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.07.13.15.45;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.06.23.46.38;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.06.21.46.17;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.06.21.35.35;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.06.21.34.12;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.06.21.32.52;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.06.19.26.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.14
log
@remove misleading statements about tunnel here
@
text
@#!/bin/ksh
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.13 2004/11/07 19:19:03 tg Exp $
#-
# Copyright (c) 2004
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of covered work, even if advised of the possibility of such damage.
#-
# Sample implementation for the Heartbeat protocol, originally desi-
# gned by the SixXS IPv6 tunnel provider. MirOS hbServer is not sup-
# ported or endorsed by SixXS.
# This is the client part of the implementation.
#
# Overview:
# This script is intended to be both usable as standalone command as
# well as a DJB-style "/service/*/run" script for supervision by djb
# daemontools. Configuration is at the top of the script; first end-
# user specific configuration such as passwords or interfaces; after
# that, machine class configuration (such as adaptions for the OS).
#
# The script ought to be chmod'd 0500 so no password leakage occurs.
#
# Installation for the MirDNS version of the script:
# Put this into /service/mirdns/run chmod 500. Create a subdirectory
# log/main, chown it to the log user (for example _dnslog). Create a
# /service/mirdns/log/run script (chmod 555) containing these lines:
#	#!/bin/sh
#	exec setuidgid _dnslog multilog t ./main
# Edit the configuration sections below and start the service.
#
# Invocation if not run via daemontools:
# hbclient &		- run as background process, beating
# hbclient down		- run once, tell the server the tunnel is down
# hbclient pass		- run once, ask server for password change
#			  (interactively asks for new password twice)


#=== per-user configuration (MirDNS mode) ===

#-- user preferences

# log to syslog (uncomment to enable)
#SYSLOG="MirDNSv2"			# syslog tag
# log to stdout (comment to disable)
STDOUT=1
# execute script with "set -x" (uncomment to enable)
#STDERR=1				# debug to stdout
#STDERR=log				# debug to file

#-- SixXS login

# my user name, a.k.a. login of the machine
MYUSER="MACHINE"
# my password
MYPASS="secret"
# IPv4 address of the MirDNS server
SERVER="1.2.3.4"

#-- machine specifics

# where do I get my IP address from?
EXT_IF="tun0"				# name of external interface
#SENDER=1				# use "sender" (DANGEROUS, see below)

#=== per-OS configuration (MirDNS mode) ===

# get IPv4 address of external interface
function getip
{
	if [[ -n $SENDER ]]; then
		print sender
	else
		ifconfig $EXT_IF \
		    | grep "^	inet " | head -1 \
		    | while read a b c; do
			print $b
		done
	fi
}

# set up tunnel interface
function setup
{
}

# throw the tunnel through IPv4 land
function throw
{
}

# clean up, remove interfaces and routes
function clean
{
}

#=== subroutines (not configurable) ===

#-- logging

# send a line to the log
function log
{
	if [[ -n $STDOUT ]]; then
		print "$@@"
	fi
	if [[ ${SYSLOG+set} = set ]]; then
		print "$@@" | logger -t "${SYSLOG:-hbClient}"
	fi
}

# send always; send to syslog if no stdout logging
function logall
{
	if [[ -n $STDOUT ]]; then
		log "$@@"
	else
		print "$@@" | logger -t "${SYSLOG:-hbClient}"
	fi
}

#-- server communication

# add date, password/hash and send to server
function tell
{
	line="$* $(date +%s)"
	cl="$line $MYPASS"
	sl="$line $(print -nr -- $cl | md5)"
	print -n -- $sl\\0 | nc -4nuw0 $SERVER 3740
}

# send DISABLE TUNNEL to server
function do_disable
{
	log disabling tunnel for $MYUSER
	tell DISABLE TUNNEL $MYUSER sender
}

# send HEARTBEAT TUNNEL to server
function do_heartbeat
{
	log beating tunnel for $MYUSER ${1+on} $1
	tell HEARTBEAT TUNNEL $MYUSER ${1:-sender}
}

# send change request for password to server
function do_passwd
{
	log changing password for $MYUSER
	tell PASSWD "$1" $MYUSER
}

#-- running the script

# clean up
function destruct
{
	logall received destruct
	[[ -n $GENPID ]] && rm -f /var/run/$TUNNEL.pid
	do_disable
	throw
	clean
	log bye
	exit ${1:-0}
}

pass=

# read password
function askpass
{
	set -o noglob
	stty -echo
	read pass?"$1 "
	stty echo
	set +o noglob
	print
}

# abort with error
function die
{
	print -- "${progname}:" "$@@"
	exit 1
}

#=== main programme ===

typeset -u parm="$1"

if [[ $parm = DOWN ]]; then
	do_disable
	exit 0
fi

if [[ $parm = PASS ]]; then
	print Changing password for $MYUSER
	pass=
	askpass "New password:"
	np1="$pass"
	askpass "Again please:"
	np2="$pass"
	[[ $np1 = $np2 ]] || die Passwords do not match
	[[ -n $np1 ]] || die New password is empty
	do_passwd "$np1"
	me="$(cd $(dirname "$0"); pwd)$(basename "$0")"
	print
	print Do not forget to edit $me
	print replacing the old password with the one just entered.
	exit 0
fi

[[ -n $parm ]] && die Unknown command: $parm


#-- we can run as hbClient now

# daemonise or run under supervision
exec 0<&-
[[ -n $STDOUT || $STDERR = 1 ]] || exec 1>&-
if [[ -z $STDERR ]]; then
	exec 2>&-
else
	if [[ $STDERR = 1 ]]; then
		exec 2>&1
	else
		eval "exec 2>>$STDERR"
	fi
	set -x
fi

# set up
log Entering setup for $MYUSER
[[ -n $GENPID ]] && print $$ >/var/run/$TUNNEL.pid
setup

# trap exits
trap 'destruct 0' HUP TERM
trap 'destruct 1' INT

# main loop
OLD_IP=sender
while : ; do
	NEW_IP=$(getip)
	if [[ $NEW_IP != $OLD_IP ]]; then
		# status change (never reached if SENDER)
		if [[ -n $NEW_IP ]]; then
			logall reconfiguring $MYUSER to $NEW_IP
		else
			logall ERROR: $MYUSER cannot find new IP, disabling
			do_disable
		fi
		throw $NEW_IP
		OLD_IP=$NEW_IP
	fi
	[[ -n $NEW_IP ]] && do_heartbeat $NEW_IP
	sleep 60 & wait
done
# NOTREACHED
@


1.13
log
@hbClient: SixXS insists on the trailing NUL byte
hbServer: log delta-t for heartbeats
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.12 2004/11/07 18:43:32 tg Exp $
a87 3
		# dangerous: changes to the IP address are never seen
		# by the rest of the script, so the tunnel is not
		# automatically configured
@


1.12
log
@fix sub tell
no structural difference, but executes differently
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.11 2004/11/07 17:47:56 tg Exp $
d149 1
a149 1
	print -nr -- $sl | nc -4nuw0 $SERVER 3740
@


1.11
log
@rewrite hbClient and hbServer, in a more structured way
fix typos and bugs in README and the backends
add support for password changing to the clients
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/hbclient,v 1.14 2004/11/07 13:51:31 tg Exp $
d147 3
a149 2
	print -n -- "$line $(print -n -- "$line $MYPASS" | md5)\0" \
	    | nc -4nuw0 $SERVER 3740
@


1.10
log
@message DOWN to server if normally killed, too
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.9 2004/11/07 13:49:38 tg Exp $
d26 42
a67 2
# Instructions:
# Put this as /service/mirdns/run and chmod 500 it.
d69 6
d76 1
a76 8
#--- Configuration
MYUSER="MACHINE"			# my own machine name
MYEXT4="tun0"				# outgoing master interface
MYPASS="hagelslag"			# tunnel password
YOURIP="1.2.3.4"			# IPv4 of heartbeat server
SYSLOG="MirDNS2"			# Syslog tag (empty for no log)
STDOUT=1				# log to stdout (comment for no)
#SENDER=1				# use 'sender' instead of getip
d78 7
a84 1
#--- Behaviour
d87 76
a162 6
	ifconfig $MYEXT4 \
	    | grep "^	inet " \
	    | head -1 \
	    | while read a b c; do
		print $b
	done
d165 10
d177 7
a183 2
	# message DISABLE to server
	$0 DOWN &
d186 22
a207 4
#--- Action (don't change)
exec 0</dev/null
[[ -n $STDOUT ]] || exec 1>/dev/null
exec 2>/dev/null
d209 1
d211 31
a241 2
	cmd=DISABLE
	SENDER=1
d243 6
a248 2
	cmd=HEARTBEAT
	trap "destruct; exit 0" HUP TERM
d250 24
a273 15
while true; do
	[[ -z $SENDER ]] && MYIPV4=$(getip)
	if [[ -z $MYIPV4 && -z $SENDER ]]; then
		[[ -n $SYSLOG || -z $STDOUT ]] \
		    && print -r -- "WARNING: no IPv4 found!" \
		    | logger -t "${SYSLOG:-hbClient}"
		[[ -n $STDOUT ]] \
		    && print -r -- "WARNING: no IPv4 found!"
		continue
	fi
	MYDATE="$(date +%s)"
	if [[ -z $SENDER ]]; then
		s="$cmd TUNNEL ${MYUSER} ${MYIPV4} ${MYDATE}"
	else
		s="$cmd TUNNEL ${MYUSER} sender ${MYDATE}"
d275 1
a275 6
	sc="${s} ${MYPASS}"
	sp="${s} $(print -nr -- $sc | md5)"
	print -n -- "${sp}\0" | nc -4nuw0 $YOURIP 3740
	[[ -n $SYSLOG ]] && print -r -- "Sending $sp" | logger -t "$SYSLOG"
	[[ -n $STDOUT ]] && print -r -- "Sending $sp"
	[[ $parm = DOWN ]] && exit 0
d278 1
@


1.9
log
@client-side support for sender
support for calling the scripts manually to "down" them
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.8 2004/11/07 13:31:08 tg Exp $
d50 6
d66 1
@


1.8
log
@sort nc(1) options for consistency
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.7 2004/11/07 13:15:45 tg Exp $
d37 1
d54 7
d62 2
a63 2
	MYIPV4=$(getip)
	if [[ -z $MYIPV4 ]]; then
d72 5
a76 1
	s="HEARTBEAT TUNNEL ${MYUSER} ${MYIPV4} ${MYDATE}"
d82 1
@


1.7
log
@issue warnings if no IP found
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.6 2004/11/06 23:46:38 tg Exp $
d67 1
a67 1
	print -n -- "${sp}\0" | nc -4unw0 $YOURIP 3740
@


1.6
log
@advice to chmod 500 these
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.5 2004/11/06 21:46:17 tg Exp $
d55 8
@


1.5
log
@oups. log to stdout, but _do_ it.
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.4 2004/11/06 21:35:35 tg Exp $
d27 1
a27 1
# Put this as /service/mirdns/run and chmod 555 it.
@


1.4
log
@another wording
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.3 2004/11/06 21:34:12 tg Exp $
d36 1
a36 1
STDERR=1				# log to stderr (comment for no)
d51 1
a51 1
exec 1>/dev/null
d61 1
a61 1
	[[ -n $STDERR ]] && print -r -- "Sending $sp" >&2
@


1.3
log
@tunnel broker -> heartbeat server
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.2 2004/11/06 21:32:52 tg Exp $
d35 1
a35 1
SYSLOG="MirDNS"				# Syslog tag (empty for no log)
@


1.2
log
@add facility for stderr logging
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.1 2004/11/06 19:26:48 tg Exp $
d34 1
a34 1
YOURIP="81.169.132.156"			# IPv4 of tunnel broker
@


1.1
log
@help with the paths
add hbclient tailored down for MirDNS #2
@
text
@d2 1
a2 1
# $MirBSD: contrib/code/heartbeat/hbclient,v 1.7 2004/11/06 18:23:18 tg Exp $
d36 1
d61 1
@

