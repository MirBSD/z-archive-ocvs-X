head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2004.11.07.17.47.55;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.07.13.26.32;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.06.18.23.18;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.05.20.11.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@rewrite hbClient and hbServer, in a more structured way
fix typos and bugs in README and the backends
add support for password changing to the clients
@
text
@$MirBSD: contrib/code/heartbeat/README,v 1.3 2004/11/07 13:26:32 tg Exp $

Notes for the heartbeat support
-------------------------------

The basics have been described in the draft by Jeroen Massar.
For the MirOS heartbeat implementation, the draft is extended
by the following comments:

1) From the draft command set, only the "HEARTBEAT TUNNEL" (and
   "DISABLE TUNNEL") commands are recognised. Unknown commands
   and the "HEARTBEAT HOST" command are silently discarded.

2) Instead of the outer-endpoint specifying the IPv6 address of
   the client, it is thought as the user ID, which is looked up
   in the database. Commands with unknown user IDs are silently
   discarded.
   The user id MUST be the third word in the command (ie. after
   the command and subcommand tokens) - this is a cause for not
   supporting "HEARTBEAT HOST".

3) Not receiving a valid "HEARTBEAT" command for 202 or more
   seconds is handled the same as receiving a "DISABLE" command.
   This is handled by the script called. (202 = 180 + utc-tai)

4) An additional command, "PASSWD <newpassword> <user>", is
   supported for automated password changes. The heartbeat server
   correctly updates the configuration file as well.

5) On each "HEARTBEAT" command, a command string is written into
   the pipe to the background script, one of these:
   - DOWN<nl>
   - IDLE<nl>
   - INIT<sp>username<sp>password<nl>
   - IP<x>.<x>.<x>.<x><nl>
   - PASS<sp>newpassword<nl>
   - QUIT<nl>

   INIT is issued only once, at startup. QUIT is issued only once
   as well, and should terminate the script cleanly. DOWN and IP
   are called on status changed, while IDLE is called if the status
   has not been changed (usually only in the UP state). PASS is
   called when the MirOS password change extension is used.

6) The time deviation can be as much as 82 (60 + utc-tai) seconds
   right now. Both 82 and 202 must be adapted if another leap
   second occurs in the future.

7) network I/O is done in a co-routine running concorrently, so
   the worries about packets going lost have been reduced.

8) draft-massar-v6ops-heartbeat-00.htm contains an error in the
   sample for the DISABLE command. Instead of
	DISABLE TUNNEL 192.0.2.2 2001:db8::2 409100400
   the correct order is
	DISABLE TUNNEL 2001:db8::2 192.0.2.2 409100400
   so that the username is the third token again.
@


1.3
log
@no need to worry about having more than a handfull of
clients any more, since network I/O is now a co-routine
thanks to the ksh features ;)
(it would have been IMPOSSIBLE with GNU bash)
@
text
@d1 1
a1 1
$MirBSD: contrib/code/heartbeat/README,v 1.2 2004/11/06 18:23:18 tg Exp $
d10 3
a12 3
1) Only the "HEARTBEAT TUNNEL" (and "DISABLE TUNNEL") commands
   are recognised. The "HEARTBEAT HOST" command is silently
   discarded, as are all unknown commands.
d33 1
a33 1
   - IDLE
@


1.2
log
@finish testing
now, the backends for IPv6-TSP and IPv4-MirDNSv2 have to be written
@
text
@d1 1
a1 1
$MirBSD: contrib/code/heartbeat/README,v 1.1 2004/10/05 20:11:40 tg Exp $
d49 2
a50 2
7) Due to time constraints, the server SHOULD not be used with
   too many clients, because packets could get lost.
@


1.1
log
@add first notes directly from /dev/brain
and a "maximum process execution time" study

jedi/sector one, seems your microbsd "human time ulimit" patch is shit
nm, this way it's more portable anyway...
@
text
@d1 1
a1 1
$MirBSD$
d18 3
d22 1
a22 1
3) Not receiving a valid "HEARTBEAT" command for 200 or more
d24 1
d26 22
a47 4
4) On each "HEARTBEAT" command, a command action is called in
   the background, with the following syntax:
   'action' 'user ID' 'new IP' 'old IP'
   Where IP refers to the inner endpoint address of the peer.
d49 2
a50 5
   The action is only performed if the new and old IP differ.
   For a "DISABLE" command, the new IP is "0.0.0.0".

   The action script is only called once at the same time,
   however it must not run for more than 30 seconds.
d52 6
a57 2
5) Due to time constraints, the server SHOULD not be used with
   too many clients, because packets could get lost.
@

