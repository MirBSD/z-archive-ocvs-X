head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2004.09.17.20.53.15;	author tg;	state dead;
branches;
next	1.5;

1.5
date	2004.08.28.14.28.48;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.19.22.44.51;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.31.03.10.52;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.26.10.29.05;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.16.20.21.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* the MirOS CA is pretty much gone (now if just the mail would work...)
* sync content with reality a bit more
* add wlog entry
@
text
@<?php $tg_noie="1"; require("vbegin.php"); ?>
 <title>MirOS Root CA</title>
 <meta name="RCSId" content="$MirBSD: www/ca.php,v 1.5 2004/08/28 14:28:48 tg Exp $" />
 <meta name="robots" content="index, follow" />
</head><body style="margin-bottom:64px;">
<p><a href="https://MirBSD.BSDadvocacy.org:8890/"><img
 src="/pics/logo-mirbsd.png" width="240" height="60" alt="Project" /></a></p>
<h1>The MirOS Root CA</h1>
<h3>Recent News</h3>
<p>The MirOS CA ceased operation in favour of <a href="https://cacert.org/">a
 publically accesible CA</a>, which limits the level of trust we
 can have in our own certificates, but helps to spread these to
 a broader audience.</p>
<h3>General</h3>
<p>In order to validate the identity of MirOS project affiliated
 servers and individuals to users of MirBSD and MirLinux, an X509
 Certification Authority is run by the MirOS head developer <a
 href="/?devel.tg">Thorsten Glaser</a>.</p>
<p>Chances are there will be a renewed certificate originating from
 the same, or even a different, private key in the future, when the
 CA sysop gets his own domain delegated and dedicate server (yes! for
 the first time...); this will be announced and signed as usually.</p>
<h3>Relation to MirBSD</h3>
<p>The CA Certificate is included in the MirOS #7 RELEASE and newer
 versions. - Users of older versions of MirBSD, as well as users of
 different operating systems, web browsers and MTAs, can download
 the certificate below.<br />The CRL is also available below.</p>
<h3>The CA Policy - Who gets a Certificate signed?</h3>
<p>The <a href="ca-pol.php">CA Policy</a> is publically browsable,
 however not everybody and his little brother gets a certificate.</p>
<p>To apply for a certificate, if you are affiliated with the MirOS
 project, <a href="mailto:mirabile@@bsdcow.net">send an email</a>.<br />
 If you are head developer of another small free operating system
 project such as ekkoBSD, dragonflyBSD or xope, and want a certificate,
 or if you think you have reasons why you should get one, contact me
 per email, but don't forget a lengthy description of who you are, how
 I can validate your identity (European citizens preferred), what you
 are going to do with the certificate and what computing devices you
 will use it on. Do not forget to explain security measures how you
 protect the secret key.</p>
<h3>Downloads</h3>
<h4>Get 'em!</h4>
<p><a href="ca.cer.asc" type="application/octet-stream">Download the
 CA Certificate</a> as PGP clearsigned X509 certificate in PEM format.
 <br />Due to popular demands, <a type="application/x-x509-ca-cert"
 href="ca.cer">the CA Certificate as plain PEM file</a>.</p>
<p><a href="ca.crl" type="application/x-x509-crl">Download the current
 CRL</a> for the MirOS Root CA in PEM format</p>
<h4>Apply 'em!</h4>
<h5>OpenSSL users</h5>
<p>To install the certificate, first find out where you need to install
 it to. Typical locations on MirBSD are <tt>/etc/ssl/certs/</tt> and
 <tt>/etc/mail/certs/</tt>, on other operating systems, sometimes it is
 <tt>/usr/local/ssl/certs/</tt> or something like that.</p>
<p>Then extract the PEM certificate using PGP 2.6.3in or compatible,
 after having retrieved the public key with the ID <a
 href="http://miros.66h.42h.de/tglaser/ca/"><tt>0x8F1F22ED</tt></a>,
 by applying the following command:</p><pre>

$ pgp ca.cer.asc</pre>
<p>Alternatively, strip the PGP transport armour and signature and the
 dash-space combination before the surrounding lines with your favourite
 text editor.</p>
<p>Now you should have a file <tt>ca.cer</tt> in your working directory.
 To install the file, apply the following command:</p><pre>

# openssl x509 -in ca.cer -out \
	/etc/ssl/certs/$(openssl x509 -in ca.cer -noout -hash).0</pre>
<p>Please check that the file you are trying to install does not already
 exist. If so, change the trailing &quot;.0&quot; to read &quot;.1&quot;
 and so forth, increasing the numbers. - On some GNU/Linux systems, you
 can use a script said to be called c_rehash to do the job instead.</p>
<h5>OpenSSL and the CRL</h5>
<p>I don't yet have researched how OpenSSL (lynx, sendmail) does cert
 revocation checking. Please send diffs for this file in which you can
 explain that.</p>
<h5>MS Internet Explorer users</h5>
<p>After downloading the <tt>ca.cer.asc</tt> file, extract it using
 PGP or your favourite text editor (notepad, gvim or <a
 href="http://miros.66h.42h.de/tglaser/pub/jdos16.exe">joe</a>) as
 described in the OpenSSL paragraph above. This will leave you with
 a file names <tt>ca.cer</tt>.</p>
<p>Double-click on the <tt>ca.cer</tt> file in the (Windows) Explorer.
 A window will open, asking you where you want to install the cert to.
 Just go with the defaults, and a MsgBox will pop up, showing you the
 fingerprint of the certificate, and asking whether you want to import
 the certificate into the root store. Compare the fingerprint if you
 did not extract the certificate with PGP, and answer with "yes".</p>
<h5>MS Internet Explorer and the CRL</h5>
<p>When you are online, the CRL gets automatically downloaded from the
 MirBSD server or Thorsten Glaser's homepage - unless you turned
 revocation checking off.</p>
<h5>KDE Konqueror users</h5>
<p>After clicking on the hRef to the certificate, you might want to
 either open it in KWrite (default suggestion) or save it and run pgp
 on it. If using KWrite, remove the PGP armour and the dash-space
 before the BEGIN/END lines.</p>
<p>In both cases, you will be left with a "ca.cer" file, which you can
 double-click in Konqueror. Then, choose Import All, and ACK the message
 box. The certificate is now accessible.</p>
<h5>Netscape / Bloatzilla users</h5>
<p>To the best of my knowledge, Netscape does not support the PEM
 encoding of X509 certificates. You will have to convert it to DER
 format using OpenSSL for Unix&reg; or Windows&reg; first.<br />No
 version of Netscape or Mozilla is officially supported by MirOS.</p>

<h1><a href="/?main">Back</a></h1>
<?php require("vend.php"); ?>
@


1.5
log
@* WDG validator
* W3C validator (few pages)
* W3C link-checker
* licence update (sync)
* MirOS CA ceased operation
* generate new MirWiki passwords
* fix InterWiki links to CVier
* add GoogleMsgID InterWiki link
* enhance and update content
* think about future
* fix HTML
* add indexes and manpage links
* ...
@
text
@d3 1
a3 1
 <meta name="RCSId" content="$MirBSD: www/ca.php,v 1.4 2004/03/19 22:44:51 tg Exp $" />
@


1.4
log
@the usual update and documentation improvements round
@
text
@d3 1
a3 1
 <meta name="RCSId" content="$MirBSD: ca.php,v 1.3 2004/01/31 03:10:52 tg Exp $" />
d9 6
@


1.3
log
@large update round
latest news
Root CA Cert in plain text
@
text
@d3 1
a3 1
 <meta name="RCSId" content="$MirBSD: ca.php,v 1.2 2004/01/26 10:29:05 tg Exp $" />
d13 4
@


1.2
log
@templeofhate.com -> miros.66h.42h.de (DNS changes(
@
text
@d3 1
a3 1
 <meta name="RCSId" content="$MirBSD: ca.php,v 1.1 2003/11/16 20:21:16 tg Exp $" />
d34 3
a36 1
 CA Certificate</a> as PGP clearsigned X509 certificate in PEM format.</p>
@


1.1
log
@* the head looks better that way
* add back the MirOS infrastructure certification authority
* fix its HTML
* add notes about Konqueror
* have it use the v*.php/inc framework
@
text
@d3 1
a3 1
 <meta name="RCSId" content="$MirBSD: ca.php,v 1.4 2003/09/13 16:04:35 tg Exp $" />
d45 1
a45 1
 href="http://templeofhate.com/tglaser/ca/"><tt>0x8F1F22ED</tt></a>,
d68 1
a68 1
 href="http://templeofhate.com/tglaser/pub/jdos16.exe">joe</a>) as
@

