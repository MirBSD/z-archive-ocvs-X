head	1.2;
access;
symbols
	tg-mergetmp-2:1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.11.02.21.23.20;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.19.59.29;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.17.25;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@start fixing X if /usr/bin/cc is non-existant
(honour $CC, damn it!)

I will change the value of $CC for every release
or so now, that these programmes learn it.

- cc/gcc (obsd)
- cc/pgcc (2.95)
- egcc (3.2.[12]
- gcc (3.2.3)
- cc (3.4.2)
@
text
@# $MirBSD$
# $Xorg: Makefile.ini,v 1.3 2000/08/17 19:41:50 cpqbld Exp $
#
#   WARNING    WARNING    WARNING    WARNING    WARNING    WARNING    WARNING
#
# This is NOT an automatically generated Makefile!  It is hand-crafted as a
# bootstrap, may need editing for your system.  The BOOTSTRAPCFLAGS variable
# may be given at the top of the build tree for systems that do not define
# any machine-specific preprocessor symbols.
#
# $XFree86: xc/config/imake/Makefile.ini,v 3.11 2002/04/04 14:05:34 eich Exp $

CROSSCOMPILEDIR =
CROSSCOMPILEFLAGS = -DCROSSCOMPILEDIR=\"$(CROSSCOMPILEDIR)\"
BOOTSTRAPCFLAGS =
CC = cc
PREPROCESS_CMD = cc -E
CDEBUGFLAGS = -O
INCLUDES = -I../../include -I../../imports/x11/include/X11
CFLAGS = -DDEFAULT_CC=\"$(CC)\" $(BOOTSTRAPCFLAGS) $(CDEBUGFLAGS) $(INCLUDES)
IMAKEMDEP_CROSSCOMPILE = -DCROSSCOMPILE_CPP
SHELL = /bin/sh
RM = rm -f
MV = mv
MAKE = make
RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
	 tags TAGS make.log
NPROC = 1

imake::
	@@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS) and CROSSCOMPILEFLAGS=$(CROSSCOMPILEFLAGS) in config/imake"

imake:: imake.o
	$(CC) -o imake $(CFLAGS) imake.o

imake.o: ccimake imake.c imakemdep_cpp.h
	$(CC) -c $(CFLAGS) `./ccimake` imake.c

ccimake: ccimake.c
	$(CC) -o ccimake $(CROSSCOMPILEFLAGS) $(CFLAGS) ccimake.c

imakemdep_cpp.h: ccimake imakemdep.h
	if [ -n "$(CROSSCOMPILEDIR)" ] ; then \
	$(CROSSCOMPILEDIR)/$(PREPROCESS_CMD) `./ccimake` \
	$(IMAKEMDEP_CROSSCOMPILE) imakemdep.h > imakemdep_cpp.h; \
	else touch imakemdep_cpp.h; fi

# a derived object erroneously would get shared across platforms by clearmake
.NO_CONFIG_REC: ccimake

bootstrap:
	-@@if [ -d bootstrap ]; then exit 0; else set -x; mkdir bootstrap; fi
	$(MV) *.o bootstrap
	@@if [ -f imake.exe ]; then set -x; $(MV) imake.exe bootstrap; \
	 elif [ -f imake ]; then set -x; $(MV) imake bootstrap; else exit 0; fi

relink:
	$(RM) imake
	$(MAKE) $(MFLAGS) imake

clean:
	$(RM) ccimake imake.o imake
	$(RM_CMD) \#*
	$(RM) -r Makefile.proto Makefile Makefile.dep bootstrap
	$(RM) imakemdep_cpp.h

depend:

imake.exe::
	@@echo making imake with BOOTSTRAPCFLAGS=-DWIN32

imake.exe:: imake.obj
	cl -nologo imake.obj libc.lib kernel32.lib

imake.obj: imake.c
	cl -nologo -W2 -D__STDC__ -c -DWIN32 $(CFLAGS) imake.c

clean.Win32:
	if exist imake.exe del imake.exe
	if exist imake.obj del imake.obj

clean.os2:
	imakesvc 4 imake imake.exe imake.o /imake.exe

imake.os2: imake.c
	$(CC) -DBSD43 $(CFLAGS) -o imake.exe imake.c
	copy imake.exe \\ 
@


1.1
log
@Initial revision
@
text
@d1 1
d6 1
a6 1
# This is NOT an automatically generated Makefile!  It is hand-crafted as a 
d11 1
a11 1
# $XFree86: xc/config/imake/Makefile.ini,v 3.10 2001/01/17 16:38:55 dawes Exp $
d13 3
a15 1
BOOTSTRAPCFLAGS = 
d17 1
d20 2
a21 1
CFLAGS = $(BOOTSTRAPCFLAGS) $(CDEBUGFLAGS) $(INCLUDES)
d31 1
a31 1
	@@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS) in config/imake"
d36 1
a36 1
imake.o: ccimake imake.c
d40 7
a46 1
	$(CC) -o ccimake $(CFLAGS) ccimake.c
d65 1
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d10 1
a10 1
# $XFree86: xc/config/imake/Makefile.ini,v 3.11 2002/04/04 14:05:34 eich Exp $
a11 2
CROSSCOMPILEDIR =
CROSSCOMPILEFLAGS = -DCROSSCOMPILEDIR=\"$(CROSSCOMPILEDIR)\"
a13 1
PREPROCESS_CMD = cc -E
a16 1
IMAKEMDEP_CROSSCOMPILE = -DCROSSCOMPILE_CPP
d26 1
a26 1
	@@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS) and CROSSCOMPILEFLAGS=$(CROSSCOMPILEFLAGS) in config/imake"
d31 1
a31 1
imake.o: ccimake imake.c imakemdep_cpp.h
d35 1
a35 7
	$(CC) -o ccimake $(CROSSCOMPILEFLAGS) $(CFLAGS) ccimake.c

imakemdep_cpp.h: ccimake imakemdep.h
	if [ -n "$(CROSSCOMPILEDIR)" ] ; then \
	$(CROSSCOMPILEDIR)/$(PREPROCESS_CMD) `./ccimake` \
	$(IMAKEMDEP_CROSSCOMPILE) imakemdep.h > imakemdep_cpp.h; \
	else touch imakemdep_cpp.h; fi
a53 1
	$(RM) imakemdep_cpp.h
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d10 1
a10 1
# $XFree86: xc/config/imake/Makefile.ini,v 3.11 2002/04/04 14:05:34 eich Exp $
a11 2
CROSSCOMPILEDIR =
CROSSCOMPILEFLAGS = -DCROSSCOMPILEDIR=\"$(CROSSCOMPILEDIR)\"
a13 1
PREPROCESS_CMD = cc -E
a16 1
IMAKEMDEP_CROSSCOMPILE = -DCROSSCOMPILE_CPP
d26 1
a26 1
	@@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS) and CROSSCOMPILEFLAGS=$(CROSSCOMPILEFLAGS) in config/imake"
d31 1
a31 1
imake.o: ccimake imake.c imakemdep_cpp.h
d35 1
a35 7
	$(CC) -o ccimake $(CROSSCOMPILEFLAGS) $(CFLAGS) ccimake.c

imakemdep_cpp.h: ccimake imakemdep.h
	if [ -n "$(CROSSCOMPILEDIR)" ] ; then \
	$(CROSSCOMPILEDIR)/$(PREPROCESS_CMD) `./ccimake` \
	$(IMAKEMDEP_CROSSCOMPILE) imakemdep.h > imakemdep_cpp.h; \
	else touch imakemdep_cpp.h; fi
a53 1
	$(RM) imakemdep_cpp.h
@

