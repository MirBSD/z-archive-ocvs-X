head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.20.00.26;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.26;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.03.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\" $Xorg: MenuButton,v 1.3 2000/08/17 19:42:27 cpqbld Exp $
.NH 2
MenuButton Widget
.XS
	MenuButton Widget
.XE
.IN "MenuButton widget" "" "@@DEF@@"
.sp
.Ds 0
.TA 2.0i
.ta 2.0i
Application Header file	<X11/Xaw/MenuButton.h>
.IN "MenuButton.h" ""
Class Header file	<X11/Xaw/MenuButtonP.h>
.IN "MenuButtonP.h" ""
Class		menuButtonWidgetClass
.IN "menuButtonWidgetClass" ""
Class Name	MenuButton
.IN "MenuButton widget" "class name"
Superclass	Command
.De
.LP
.sp
The MenuButton widget is an area, often rectangular,
that displays a graphic.  The graphic may be a text
string containing multiple lines of characters in an 8
bit or 16 bit character set (to be displayed with a
\fIfont\fP), or in a multi-byte encoding (for use with
a \fIfontset\fP).  The graphic may also be a bitmap or
pixmap.
.LP
When the pointer cursor is on a MenuButton widget, the
MenuButton becomes highlighted by drawing a rectangle
around its perimeter.  This highlighting indicates
that the MenuButton is ready for selection.  When a
pointer button is pressed, the MenuButton widget will
pop up the menu named in the \fBmenuName\fP resource.
.NH 3
Resources
.LP
When creating a MenuButton widget instance, 
the following resources are retrieved from the argument list
or from the resource database:
.LP
.IN "MenuButton widget" "resources"
.TS H
expand;
lw(1i) lw(1i) lw(1i) lw(.5i) lw(2i).
_
.sp 3p
.TB
Name	Class	Type	Notes	Default Value
.sp 3p
_
.TH
.R
.sp 3p
accelerators	Accelerators	AcceleratorTable		NULL
ancestorSensitive	AncestorSensitive	Boolean	D	True
background	Background	Pixel		XtDefaultBackground
backgroundPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
bitmap	Bitmap	Pixmap		None
borderColor	BorderColor	Pixel		XtDefaultForeground
borderPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
borderWidth	BorderWidth	Dimension		1
callback	Callback	XtCallbackList		NULL
colormap	Colormap	Colormap		Parent's Colormap
cornerRoundPercent	CornerRoundPercent	Dimension		25
cursor	Cursor	Cursor		None
cursorName	Cursor	String		None
depth	Depth	int	C	Parent's Depth
destroyCallback	Callback	XtCallbackList		NULL
encoding	Encoding	UnsignedChar		XawTextEncoding8bit
font	Font	XFontStruct		XtDefaultFont
fontSet	FontSet	XFontSet		XtDefaultFontSet
foreground	Foreground	Pixel		XtDefaultForeground
height	Height	Dimension	A	graphic height + 2 * \fBinternalHeight\fP
highlightThickness	Thickness	Dimension	A	2 (0 if Shaped)
insensitiveBorder	Insensitive	Pixmap		GreyPixmap
internalHeight	Height	Dimension		2
internalWidth	Width	Dimension		4
international	International	Boolean	C	False
justify	Justify	Justify		XtJustifyCenter (center)
label	Label	String		name of widget
leftBitmap	LeftBitmap	Bitmap		None
mappedWhenManaged	MappedWhenManaged	Boolean		True
menuName	MenuName	String		"menu"
pointerColor	Foreground	Pixel		XtDefaultForeground
pointerColorBackground	Background	Pixel		XtDefaultBackground
resize	Resize	Boolean		True
screen	Screen	Screen	R	Parent's Screen
sensitive	Sensitive	Boolean		True
shapeStype	ShapeStyle	ShapeStyle		Rectangle
translations	Translations	TranslationTable		See below
width	Width	Dimension	A	graphic width + 2 * \fBinternalWidth\fP
x	Position	Position		0
y	Position	Position		0
.sp 3p
_
.TE
.Ac
.As
.Bg
.Gp
.Bm
.Bc
.Bp
.Bw
.Cb
.Cm
.Cr
.Cu
.Cn
.Dp
.Dc
.Lf
.Ls
.Lg
.Hw
.Ht
.Ib
.Ih
.In
.Ju
.La
.Mm
.IP \fBmenuName\fP 1.5i
The name of a popup shell to popup as a menu.  The MenuButton
will search for this name using \fBXtNameToWidget\fP starting
with itself as the reference widget.  If the search is
unsuccessful the widget will continue up the widget tree using
each of its ancestors as the reference widget passed to
\fBXtNameToWidget\fP.  If no widget of called \fBmenuName\fP is
found by this algorithm, the widget will print a warning message
and give up.  When the menu is found it will be popped up
exclusive and spring_loaded.  The MenuButton widget does not
copy the value of this resource into newly allocated memory. The
application programmer must pass the resource value in
nonvolatile memory.
.Pf
.Pb
.Re
.Sc
.Se
.Ss
.Tr
.Xy
.NH 3
MenuButton Actions
.IN "MenuButton widget" "actions"
.LP
The MenuButton widget supports the following actions:
.IP \(bu 5
Switching the button between the foreground and background
colors with \fBset\fP and \fBunset\fP
.IP \(bu 5
Processing application callbacks with \fBnotify\fP
.IP \(bu 5
Switching the internal border between highlighted
and unhighlighted states with \fBhighlight\fP and \fBunhighlight\fP
.IP \(bu 5
Popping up a menu with \fBPopupMenu\fP
.LP
The following are the default translation bindings used by the
MenuButton widget: 
.LP
.sp
.Ds 0
.TA .5i 2.25i
.ta .5i 2.25i
	<EnterWindow>:	highlight(\|)
	<LeaveWindow>:	reset(\|)
	<BtnDown>:	reset(\|) PopupMenu(\)
.De
.NH 3
MenuButton Actions
.LP
The full list of actions supported by MenuButton is:
.IP \fBhighlight\fP(\fIcondition\fP) 1.5i
Displays the internal highlight border in the color (\fBforeground\fP
or \fBbackground\fP ) that contrasts with the interior color of the
Command widget.  The conditions \fBWhenUnset\fP and \fBAlways\fP are
understood by this action procedure.  If no argument is passed,
\fBWhenUnset\fP is assumed.
.IP \fBunhighlight\fP(\|) 1.5i
Displays the internal highlight border in the color (\fBXtNforeground\fP
or \fBbackground\fP ) that matches the interior color of the
MenuButton widget.  
.IP \fBset\fP(\|) 1.5i
Enters the \fIset\fP state, in which \fBnotify\fP is possible.  This
action causes the button to display its interior in the
\fBforeground\fP color.  The label or bitmap is displayed in the
\fBbackground\fP color. 
.IP \fBunset\fP(\|) 1.5i
Cancels the \fIset\fP state and displays the interior of the button in the
\fBbackground\fP color.  The label or bitmap is displayed in the
\fBforeground\fP color.
.IP \fBreset\fP(\|) 1.5i
Cancels any \fBset\fP or \fBhighlight\fP and displays the interior of the
button in the \fBbackground\fP color, with the label displayed in the 
\fBforeground\fP color.
.IP \fBnotify\fP(\|) 1.5i
When the button is in the \fBset\fP state this action calls all functions in
the callback list named by the \fBcallback\fP resource.  The value of
the call_data argument in these callback functions is undefined. 
.IP \fBPopupMenu\fP(\|) 1.5i
Pops up the menu specified by the \fBmenuName\fP resource.
.LP
The MenuButton widget does not place a server grab on itself.
Instead, PopupMenu is registered as a grab action.
As a result, clients which popup menus without using XtMenuPopup
or MenuPopup or PopupMenu in translations will fail to have a grab active.
They should make a call to XtRegisterGrabAction on the appropriate action
in the application initialization routine, or use a different translation.
.bp
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
