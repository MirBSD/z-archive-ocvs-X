head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.20.00.26;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.26;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.03.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\" $Xorg: Grip,v 1.3 2000/08/17 19:42:26 cpqbld Exp $
.NH 2
Grip Widget
.XS
	Grip Widget
.XE
.IN "Grip widget" "" "@@DEF@@"
.Ds 0
.TA 2.0i
.ta 2.0i
.sp
Application header file	<X11/Xaw/Grip.h>
.IN "Grip.h" ""
Class header file	<X11/Xaw/GripP.h>
.IN "GripP.h" ""
Class	gripWidgetClass
.IN "gripWidgetClass" ""
Class Name	Grip
.IN "Grip widget" "class name"
Superclass	Simple
.sp
.De
.LP
The Grip widget provides a small rectangular region in which user input
events (such as ButtonPress or ButtonRelease) may be handled.  The most
common use for the Grip widget is as an attachment point for visually
repositioning an object, such as the pane border in a Paned widget.
.NH 3
Resources
.LP
When creating a Grip widget instance, the following resources are
retrieved from the argument list or from the resource database:
.LP
.IN "Grip widget" "resources"
.TS H
expand;
lw(1i) lw(1i) lw(1i) lw(.5i) lw(2i).
_
.sp 3p
.TB
Name	Class	Type	Notes	Default Value
.sp 3p
_
.TH
.R
.sp 3p
accelerators	Accelerators	AcceleratorTable		NULL
ancestorSensitive	AncestorSensitive	Boolean	D	True
background	Background	Pixel		XtDefaultBackground
backgroundPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
borderColor	BorderColor	Pixel		XtDefaultForeground
borderPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
borderWidth	BorderWidth	Dimension		0
callback	Callback	Callback		NULL
colormap	Colormap	Colormap		Parent's Colormap
cursor	Cursor	Cursor		None
cursorName	Cursor	String		NULL
depth	Depth	int	C	Parent's Depth
destroyCallback	Callback	XtCallbackList		NULL
foreground	Foreground	Pixel		XtDefaultForeground
height	Height	Dimension		8
insensitiveBorder	Insensitive	Pixmap		GreyPixmap
international	International	Boolean	C	False
mappedWhenManaged	MappedWhenManaged	Boolean		True
pointerColor	Foreground	Pixel		XtDefaultForeground
pointerColorBackground	Background	Pixel		XtDefaultBackground
screen	Screen	Screen	R	Parent's Screen
sensitive	Sensitive	Boolean		True
translations	Translations	TranslationTable		NULL
width	Width	Dimension		8
x	Position	Position		0
y	Position	Position		0
.sp 3p
_
.TE
.Ac
.As
.Bg
.Gp
.Bc
.Bp
.Bw
.IP \fBcallback\fP 1.5i
All routines on this list are called whenever the \fBGripAction\fP
action routine is invoked.  The \fIcall_data\fP contains all
information passed to the action routine.  A detailed description
is given below in the \fBGrip Actions\fP section.
.Cm
.Cu
.Cn
.Dp
.Dc
.IP \fBforeground\fP 1.5i
A pixel value which indexes the widget's colormap to derive the color
used to flood fill the entire Grip widget.
.Hw
.Ib
.Ix
.Mm
.Pf
.Pb
.Sc
.Se
.Tr
.Xy
.NH 3
Grip Actions
.IN "Grip widget" "actions"
.LP
The Grip widget does not declare any default event translation bindings,
but it does declare a single action routine named \fBGripAction\fP.  The
.IN "Grip widget" "GripAction routine"
client specifies an arbitrary event translation table, optionally giving
parameters to the \fBGripAction\fP routine.
.LP
The \fBGripAction\fP routine executes the callbacks on the
\fBcallback\fP list, passing as \fIcall_data\fP a pointer to a
\fBXawGripCallData\fP structure, defined in the Grip widget's application
header file.
.LP
.Ds 0
.TA .5i 2.25i
.ta .5i 2.25i
.IN "XawGripCallData" "" "@@DEF@@"
.IN "XawGripCallDataRec" "" "@@DEF@@"
.sp
typedef struct _XawGripCallData {
	XEvent *event;
	String *params;
	Cardinal num_params;
} XawGripCallDataRec, *XawGripCallData,
  GripCallDataRec, *GripCallData; /* supported for R4 compatibility */
.IN "XawGripCallDataRec" ""
.IN "XawGripCallData" ""
.IN "GripCallData" ""
.sp
.De
.LP
In this structure, the \fIevent\fP is a pointer to the input event that
triggered the action.  \fIparams\fP and \fInum_params\fP give the string
parameters specified in the translation table for the particular event
binding.
.IN "Grip widget" "GripAction table"
.LP
The following is an example of a translation table that uses the GripAction:
.LP
.Ds 0
.TA .5i 2.5i
.ta .5i 2.5i
.sp
	<Btn1Down>:	GripAction(press)
	<Btn1Motion>:	GripAction(move)
	<Btn1Up>:	GripAction(release)
.sp
.De
For a complete description of the format of translation tables, see the
\fI\*(xT\fP.
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
