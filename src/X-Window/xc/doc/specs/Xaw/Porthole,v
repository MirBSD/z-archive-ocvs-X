head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.20.00.29;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.29;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.03.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\" $Xorg: Porthole,v 1.3 2000/08/17 19:42:27 cpqbld Exp $
.NH 2
Porthole Widget
.LP
.XS
	Porthole Widget
.XE
.IN "Porthole widget" "" "@@DEF@@"
.Ds 0
.TA 2.0i
.ta 2.0i
.sp
Application Header file	<X11/Xaw/Porthole.h>
.IN "Porthole.h" ""
Class Header file	<X11/Xaw/PortholeP.h>
.IN "PortholeP.h" ""
Class		portholeWidgetClass
.IN "portholeWidgetClass" ""
Class Name	Porthole
.IN "Porthole widget" "class name"
Superclass	Composite
.sp
.De
.LP
The Porthole widget provides geometry management of a list of arbitrary
widgets, only one of which may be managed at any particular time.
The managed child widget is reparented within the porthole and is moved around
by the application (typically under the control of a Panner widget).
.NH 3
Resources
.LP
When creating a Porthole widget instance, the following resources are
retrieved from the argument list or from the resource database:
.LP
.IN "Porthole widget" "resources"
.TS H
expand;
lw(1i) lw(1i) lw(1i) lw(.5i) lw(2i).
_
.sp 3p
.TB
Name	Class	Type	Notes	Default Value
.sp 3p
_
.TH
.R
.sp 3p
accelerators	Accelerators	AcceleratorTable		NULL
ancestorSensitive	AncestorSensitive	Boolean	D	True
background	Background	Pixel		XtDefaultBackground
backgroundPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
borderColor	BorderColor	Pixel		XtDefaultForeground
borderPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
borderWidth	BorderWidth	Dimension		1
children	ReadOnly	WidgetList	R	NULL
colormap	Colormap	Colormap		Parent's Colormap
depth	Depth	int	C	Parent's Depth
destroyCallback	Callback	XtCallbackList		NULL
height	Height	Dimension	A	see \fBLayout Semantics\fP
mappedWhenManaged	MappedWhenManaged	Boolean		True
numChildren	ReadOnly	Cardinal	R	0
reportCallback	ReportCallback	Callback		NULL
screen	Screen	Screen	R	Parent's Screen
sensitive	Sensitive	Boolean		True
translations	Translations	TranslationTable		NULL
width	Width	Dimension	A	see \fBLayout Semantics\fP
x	Position	Position		0
y	Position	Position		0
.sp 3p
_
.TE
.Ac
.As
.Bg
.Gp
.Bc
.Bp
.Bw
.Ch
.Cm
.Dp
.Dc
.Hw
.Mm
.Nc
.IP \fBreportCallback\fP 1.5i
A list of functions to invoke whenever the managed child widget changes 
size or position.
.Sc
.Se
.Tr
.Xy
.NH 3
Layout Semantics
.IN "Porthole widget" "layout semantics"
.LP
The Porthole widget allows its managed child to request any size
that is as large
or larger than the Porthole itself and any location so long as the child
still obscures all of the Porthole.  This widget typically is used with a
Panner widget.
.NH 3
Porthole Callbacks
.IN "Porthole widget" "callbacks"
.LP
The functions registered on the \fBreportCallback\fP list are invoked whenever
the managed child changes size or position:
.IN "ReportProc" "" "@@DEF@@"
.FD 0
void ReportProc(\fIporthole\fP, \fIclient_data\fP, \fIreport\fP)
.br
	Widget \fIporthole\fP;
.br
	XtPointer \fIclient_data\fP;
.br
	XtPointer \fIreport\fP;    /* (XawPannerReport *) */
.FN
.IP \fIporthole\fP 1i
Specifies the Porthole widget.
.IP \fIclient_data\fP 1i
Specifies the client data.
.IP \fIreport\fP 1i
Specifies a pointer to an \fBXawPannerReport\fP structure containing
the location and size of the slider and the size of the canvas.

@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
