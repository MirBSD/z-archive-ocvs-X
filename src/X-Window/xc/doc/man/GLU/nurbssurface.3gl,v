head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.37;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.37;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp May 02 11:53
.ds Dm 37 nurbssurf
.ds Xs 28728 6 nurbssurface.gl
.TH GLUNURBSSURFACE 3G
.SH NAME
.B "gluNurbsSurface
\- define the shape of a NURBS surface

.SH C SPECIFICATION
void \f3gluNurbsSurface\fP(
GLUnurbs* \fInurb\fP,
.nf
.ta \w'\f3void \fPgluNurbsSurface( 'u
	GLint \fIsKnotCount\fP,
	GLfloat* \fIsKnots\fP,
	GLint \fItKnotCount\fP,
	GLfloat* \fItKnots\fP,
	GLint \fIsStride\fP,
	GLint \fItStride\fP,
	GLfloat* \fIcontrol\fP,
	GLint \fIsOrder\fP,
	GLint \fItOrder\fP,
	GLenum \fItype\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIsKnotCount\fP\ \ 'u 
\f2nurb\fP
Specifies the NURBS object (created with \%\f3gluNewNurbsRenderer\fP).
.TP
\f2sKnotCount\fP
Specifies the number of knots in the parametric \f2u\fP direction.
.TP
\f2sKnots\fP
Specifies an array of \f2sKnotCount\fP nondecreasing knot values in the parametric
\f2u\fP direction.
.TP
\f2tKnotCount\fP
Specifies the number of knots in the parametric \f2v\fP direction.
.TP
\f2tKnots\fP
Specifies an array of \f2tKnotCount\fP nondecreasing knot values in the parametric
\f2v\fP direction.
.TP
\f2sStride\fP
Specifies the offset (as a number of single-precision floating point values)
between successive control points in the parametric \f2u\fP direction
in \f2control\fP.
.TP
\f2tStride\fP
Specifies the offset (in single-precision floating-point values)
between successive control points in the parametric \f2v\fP direction
in \f2control\fP.
.TP
\f2control\fP
Specifies an array containing control points for the NURBS surface.
The offsets between successive control points in the parametric \f2u\fP
and \f2v\fP directions are given by \f2sStride\fP and \f2tStride\fP.
.TP
\f2sOrder\fP
Specifies the order of the NURBS surface in the parametric \f2u\fP 
direction. The order is one more than the degree, hence
a surface that is cubic in \f2u\fP has a \f2u\fP order of 4.
.TP
\f2tOrder\fP
Specifies the order of the NURBS surface in the parametric \f2v\fP 
direction. The order is one more than the degree, hence
a surface that is cubic in \f2v\fP has a \f2v\fP order of 4.
.TP
\f2type\fP
Specifies type of the surface. \f2type\fP can be any of the valid
two-dimensional evaluator types (such as \%\f3GL_MAP2_VERTEX_3\fP or 
\%\f3GL_MAP2_COLOR_4\fP).
.SH DESCRIPTION
Use \%\f3gluNurbsSurface\fP within a NURBS (Non-Uniform Rational B-Spline) surface
definition to describe the shape of a NURBS surface (before
any trimming). To mark the beginning of 
a NURBS surface definition, use the \%\f3gluBeginSurface\fP command.
To mark the end of a NURBS surface definition, use the 
\%\f3gluEndSurface\fP command. Call \%\f3gluNurbsSurface\fP within a NURBS
surface definition only.
.P
Positional, texture, and color coordinates are associated
with a surface by presenting each as a separate \%\f3gluNurbsSurface\fP between a 
\%\f3gluBeginSurface\fP/\%\f3gluEndSurface\fP pair. No more than
one call to \%\f3gluNurbsSurface\fP for each of color, position, and texture
data can be made within a single \%\f3gluBeginSurface\fP/\%\f3gluEndSurface\fP
pair. Exactly one call must be made to describe the position of the 
surface (a \f2type\fP of \%\f3GL_MAP2_VERTEX_3\fP or \%\f3GL_MAP2_VERTEX_4\fP).
.P
A NURBS surface can be trimmed by using the commands 
\%\f3gluNurbsCurve\fP and \%\f3gluPwlCurve\fP between calls to
\%\f3gluBeginTrim\fP and \%\f3gluEndTrim\fP.
.P
Note that a \%\f3gluNurbsSurface\fP with \f2sKnotCount\fP knots in the \f2u\fP direction
and \f2tKnotCount\fP knots in the \f2v\fP direction with orders 
\f2sOrder\fP and \f2tOrder\fP must have 
(\f2sKnotCount\fP - \f2sOrder\fP) $times$ (\f2tKnotCount\fP - \f2tOrder\fP) control points.
.SH EXAMPLE
The following commands render a textured NURBS surface with normals;
the texture coordinates and normals are also NURBS surfaces:
.sp
.Ex
gluBeginSurface(nobj);
   gluNurbsSurface(nobj, ..., GL_MAP2_TEXTURE_COORD_2);
   gluNurbsSurface(nobj, ..., GL_MAP2_NORMAL);
   gluNurbsSurface(nobj, ..., GL_MAP2_VERTEX_4);
gluEndSurface(nobj);
.Ee
.sp
.SH SEE ALSO
\%\f3gluBeginSurface(3G)\fP, \%\f3gluBeginTrim(3G)\fP, \%\f3gluNewNurbsRenderer(3G)\fP, 
\%\f3gluNurbsCurve(3G)\fP,
\%\f3gluPwlCurve(3G)\fP

@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
