head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 hint.gl -
.ds Xs 8452 5 hint.gl
.TH GLHINT 3G
.SH NAME
.B "glHint
\- specify implementation-specific hints

.SH C SPECIFICATION
void \f3glHint\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglHint( 'u
	GLenum \fImode\fP )
.fi

.SH PARAMETERS
.TP \w'\f2target\fP\ \ 'u 
\f2target\fP
Specifies a symbolic constant indicating the behavior to be controlled.
\%\f3GL_FOG_HINT\fP,	
\%\f3GL_LINE_SMOOTH_HINT\fP,
\%\f3GL_PERSPECTIVE_CORRECTION_HINT\fP,
\%\f3GL_POINT_SMOOTH_HINT\fP, and
\%\f3GL_POLYGON_SMOOTH_HINT\fP are accepted. 
.TP
\f2mode\fP
Specifies a symbolic constant indicating the desired behavior.
\%\f3GL_FASTEST\fP, 
\%\f3GL_NICEST\fP, and 
\%\f3GL_DONT_CARE\fP are accepted. 
.SH DESCRIPTION
Certain aspects of GL behavior,
when there is room for interpretation,
can be controlled with hints.
A hint is specified with two arguments.
\f2target\fP is a symbolic 
constant indicating the behavior to be controlled,
and \f2mode\fP is another symbolic constant indicating the desired
behavior. The initial value for each \f2target\fP is \%\f3GL_DONT_CARE\fP. 
\f2mode\fP can be one of the following:
.TP 20
\%\f3GL_FASTEST\fP
The most efficient option should be chosen.
.TP
\%\f3GL_NICEST\fP
The most correct,
or highest quality,
option should be chosen.
.TP 
\%\f3GL_DONT_CARE\fP
No preference.
.P
Though the implementation aspects that can be hinted are well defined,
the interpretation of the hints depends on the implementation.
The hint aspects that can be specified with \f2target\fP,
along with suggested semantics,
are as follows:
.TP 20
\%\f3GL_FOG_HINT\fP
Indicates the accuracy of fog calculation.
If per-pixel fog calculation is not efficiently supported
by the GL implementation,
hinting \%\f3GL_DONT_CARE\fP or \%\f3GL_FASTEST\fP can result in per-vertex
calculation of fog effects.
.TP
\%\f3GL_LINE_SMOOTH_HINT\fP
Indicates the sampling quality of antialiased lines.
If a larger filter function is applied, hinting \%\f3GL_NICEST\fP can
result in more pixel fragments being generated during rasterization,
.TP
\%\f3GL_PERSPECTIVE_CORRECTION_HINT\fP
Indicates the quality of color and texture coordinate interpolation.
If perspective-corrected parameter interpolation is not efficiently supported
by the GL implementation,
hinting \%\f3GL_DONT_CARE\fP or \%\f3GL_FASTEST\fP can result in simple linear
interpolation of colors and/or texture coordinates.
.TP
\%\f3GL_POINT_SMOOTH_HINT\fP
Indicates the sampling quality of antialiased points.
If a larger filter function is applied, hinting \%\f3GL_NICEST\fP can
result in more pixel fragments being generated during rasterization, 
.TP
\%\f3GL_POLYGON_SMOOTH_HINT\fP
Indicates the sampling quality of antialiased polygons.
Hinting \%\f3GL_NICEST\fP can result in more pixel fragments being generated
during rasterization,
if a larger filter function is applied.
.SH NOTES
The interpretation of hints depends on the implementation.
Some implementations ignore \%\f3glHint\fP settings.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if either \f2target\fP or \f2mode\fP is not
an accepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glHint\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
