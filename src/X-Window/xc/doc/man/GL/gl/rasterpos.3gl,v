head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.21.45;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 rasterpos
.ds Xs 20383 7 rasterpos.gl
.TH GLRASTERPOS 3G
.SH NAME
.B "glRasterPos2d, glRasterPos2f, glRasterPos2i, glRasterPos2s, glRasterPos3d, glRasterPos3f, glRasterPos3i, glRasterPos3s, glRasterPos4d, glRasterPos4f, glRasterPos4i, glRasterPos4s, glRasterPos2dv, glRasterPos2fv, glRasterPos2iv, glRasterPos2sv, glRasterPos3dv, glRasterPos3fv, glRasterPos3iv, glRasterPos3sv, glRasterPos4dv, glRasterPos4fv, glRasterPos4iv, glRasterPos4sv
\- specify the raster position for pixel operations

.SH C SPECIFICATION
void \f3glRasterPos2d\fP(
GLdouble \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos2d( 'u
	GLdouble \fIy\fP )
.fi
void \f3glRasterPos2f\fP(
GLfloat \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos2f( 'u
	GLfloat \fIy\fP )
.fi
void \f3glRasterPos2i\fP(
GLint \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos2i( 'u
	GLint \fIy\fP )
.fi
void \f3glRasterPos2s\fP(
GLshort \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos2s( 'u
	GLshort \fIy\fP )
.fi
void \f3glRasterPos3d\fP(
GLdouble \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos3d( 'u
	GLdouble \fIy\fP,
	GLdouble \fIz\fP )
.fi
void \f3glRasterPos3f\fP(
GLfloat \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos3f( 'u
	GLfloat \fIy\fP,
	GLfloat \fIz\fP )
.fi
void \f3glRasterPos3i\fP(
GLint \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos3i( 'u
	GLint \fIy\fP,
	GLint \fIz\fP )
.fi
void \f3glRasterPos3s\fP(
GLshort \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos3s( 'u
	GLshort \fIy\fP,
	GLshort \fIz\fP )
.fi
void \f3glRasterPos4d\fP(
GLdouble \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos4d( 'u
	GLdouble \fIy\fP,
	GLdouble \fIz\fP,
	GLdouble \fIw\fP )
.fi
void \f3glRasterPos4f\fP(
GLfloat \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos4f( 'u
	GLfloat \fIy\fP,
	GLfloat \fIz\fP,
	GLfloat \fIw\fP )
.fi
void \f3glRasterPos4i\fP(
GLint \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos4i( 'u
	GLint \fIy\fP,
	GLint \fIz\fP,
	GLint \fIw\fP )
.fi
void \f3glRasterPos4s\fP(
GLshort \fIx\fP,
.nf
.ta \w'\f3void \fPglRasterPos4s( 'u
	GLshort \fIy\fP,
	GLshort \fIz\fP,
	GLshort \fIw\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2x\fP\ \f2y\fP\ \f2z\fP\ \f2w\fP\ \ 'u 
\f2x\fP, \f2y\fP, \f2z\fP, \f2w\fP
Specify the $x$, $y$, $z$, and $w$ object coordinates
(if present)
for the raster position.
.SH C SPECIFICATION
void \f3glRasterPos2dv\fP(
const GLdouble \fI*v\fP )
.nf
.fi
void \f3glRasterPos2fv\fP(
const GLfloat \fI*v\fP )
.nf
.fi
void \f3glRasterPos2iv\fP(
const GLint \fI*v\fP )
.nf
.fi
void \f3glRasterPos2sv\fP(
const GLshort \fI*v\fP )
.nf
.fi
void \f3glRasterPos3dv\fP(
const GLdouble \fI*v\fP )
.nf
.fi
void \f3glRasterPos3fv\fP(
const GLfloat \fI*v\fP )
.nf
.fi
void \f3glRasterPos3iv\fP(
const GLint \fI*v\fP )
.nf
.fi
void \f3glRasterPos3sv\fP(
const GLshort \fI*v\fP )
.nf
.fi
void \f3glRasterPos4dv\fP(
const GLdouble \fI*v\fP )
.nf
.fi
void \f3glRasterPos4fv\fP(
const GLfloat \fI*v\fP )
.nf
.fi
void \f3glRasterPos4iv\fP(
const GLint \fI*v\fP )
.nf
.fi
void \f3glRasterPos4sv\fP(
const GLshort \fI*v\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f2v\fP
Specifies a pointer to an array of two,
three,
or four elements,
specifying $x$, $y$, $z$, and $w$ coordinates, respectively.
.SH DESCRIPTION
The GL maintains a 3D position in window coordinates.
This position,
called the raster position,
is used to position pixel and bitmap write operations. It is
maintained with subpixel accuracy.
See \%\f3glBitmap\fP, \%\f3glDrawPixels\fP, and \%\f3glCopyPixels\fP.
.P
The current raster position consists of three window coordinates
($x$, $y$, $z$),
a clip coordinate value ($w$),
an eye coordinate distance,
a valid bit,
and associated color data and texture coordinates.
The $w$ coordinate is a clip coordinate,
because $w$ is not projected to window coordinates.
\%\f3glRasterPos4\fP specifies object coordinates $x$, $y$, $z$, and $w$
explicitly.
\%\f3glRasterPos3\fP specifies object coordinate $x$, $y$, and $z$ explicitly,
while $w$ is implicitly set to 1.
\%\f3glRasterPos2\fP uses the argument values for $x$ and $y$ while
implicitly setting $z$ and $w$ to 0 and 1.  
.P
The object coordinates presented by \%\f3glRasterPos\fP are treated just like those
of a \%\f3glVertex\fP command:
They are transformed by the current modelview and projection matrices
and passed to the clipping stage.
If the vertex is not culled,
then it is projected and scaled to window coordinates,
which become the new current raster position,
and the \%\f3GL_CURRENT_RASTER_POSITION_VALID\fP flag is set.
If the vertex 
.I is
culled,
then the valid bit is cleared and the current raster position
and associated color and texture coordinates are undefined.
.P
The current raster position also includes some associated color data
and texture coordinates.
If lighting is enabled,
then \%\f3GL_CURRENT_RASTER_COLOR\fP
(in RGBA mode)
or \%\f3GL_CURRENT_RASTER_INDEX\fP
(in color index mode)
is set to the color produced by the lighting calculation
(see \%\f3glLight\fP, \%\f3glLightModel\fP, and 
.br
\%\f3glShadeModel\fP).
If lighting is disabled, 
current color
(in RGBA mode, state variable \%\f3GL_CURRENT_COLOR\fP)
or color index
(in color index mode, state variable \%\f3GL_CURRENT_INDEX\fP)
is used to update the current raster color.
.P
Likewise,
\%\f3GL_CURRENT_RASTER_TEXTURE_COORDS\fP is updated as a function
of \%\f3GL_CURRENT_TEXTURE_COORDS\fP,
based on the texture matrix and the texture generation functions
(see \%\f3glTexGen\fP).
Finally,
the distance from the origin of the eye coordinate system to the
vertex as transformed by only the modelview matrix replaces
\%\f3GL_CURRENT_RASTER_DISTANCE\fP.
.P
Initially, the current raster position is (0, 0, 0, 1),
the current raster distance is 0,
the valid bit is set,
the associated RGBA color is (1, 1, 1, 1),
the associated color index is 1,
and the associated texture coordinates are (0, 0, 0, 1).
In RGBA mode,
\%\f3GL_CURRENT_RASTER_INDEX\fP is always 1;
in color index mode,
the current raster RGBA color always maintains its initial value.
.SH NOTES
The raster position is modified both by \%\f3glRasterPos\fP and by \%\f3glBitmap\fP. 
.P
When the raster position coordinates are invalid,
drawing commands that are based on the raster position are
ignored (that is, they do not result in changes to GL state).
.P
Calling \%\f3glDrawElements\fP, or \%\f3glDrawRangeElements\fP may leave the
current color or index indeterminate.
If \%\f3glRasterPos\fP is executed while the current color or index is indeterminate, the
current raster color or current raster index remains indeterminate.
.P
To set a valid raster position outside the viewport, first set a valid
raster position, then call \%\f3glBitmap\fP with NULL as the \f2bitmap\fP
parameter.
.P
When the \%\f3GL_ARB_imaging\fP extension is supported, there are distinct
raster texture coordinates for each texture unit. Each texture unit's
current ratster texture coordinates are updated by \%\f3glRasterPos\fP.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glRasterPos\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_POSITION\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_POSITION_VALID\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_DISTANCE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_COLOR\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_INDEX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_TEXTURE_COORDS\fP
.SH SEE ALSO
\%\f3glBitmap(3G)\fP,
\%\f3glCopyPixels(3G)\fP,
\%\f3glDrawArrays(3G)\fP,
\%\f3glDrawElements(3G)\fP,
\%\f3glDrawRangeElements(3G)\fP,
\%\f3glDrawPixels(3G)\fP,
\%\f3glTexCoord(3G)\fP,
\%\f3glTexGen(3G)\fP,
\%\f3glVertex(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@a0 1
.\" $XFree86: xc/doc/man/GL/gl/rasterpos.3gl,v 1.4 2003/10/22 20:36:31 tsi Exp $
d260 1
a260 1
current raster texture coordinates are updated by \%\f3glRasterPos\fP.
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@a0 1
.\" $XFree86: xc/doc/man/GL/gl/rasterpos.3gl,v 1.4 2003/10/22 20:36:31 tsi Exp $
d260 1
a260 1
current raster texture coordinates are updated by \%\f3glRasterPos\fP.
@

