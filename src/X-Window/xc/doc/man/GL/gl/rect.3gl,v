head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 rect.gl -
.ds Xs 25554 4 rect.gl
.TH GLRECT 3G
.SH NAME
.B "glRectd, glRectf, glRecti, glRects, glRectdv, glRectfv, glRectiv, glRectsv
\- draw a rectangle

.SH C SPECIFICATION
void \f3glRectd\fP(
GLdouble \fIx1\fP,
.nf
.ta \w'\f3void \fPglRectd( 'u
	GLdouble \fIy1\fP,
	GLdouble \fIx2\fP,
	GLdouble \fIy2\fP )
.fi
void \f3glRectf\fP(
GLfloat \fIx1\fP,
.nf
.ta \w'\f3void \fPglRectf( 'u
	GLfloat \fIy1\fP,
	GLfloat \fIx2\fP,
	GLfloat \fIy2\fP )
.fi
void \f3glRecti\fP(
GLint \fIx1\fP,
.nf
.ta \w'\f3void \fPglRecti( 'u
	GLint \fIy1\fP,
	GLint \fIx2\fP,
	GLint \fIy2\fP )
.fi
void \f3glRects\fP(
GLshort \fIx1\fP,
.nf
.ta \w'\f3void \fPglRects( 'u
	GLshort \fIy1\fP,
	GLshort \fIx2\fP,
	GLshort \fIy2\fP )
.fi

.SH PARAMETERS
.TP \w'\f2x1\fP\ \f2y1\fP\ \ 'u 
\f2x1\fP, \f2y1\fP
Specify one vertex of a rectangle.
.TP
\f2x2\fP, \f2y2\fP
Specify the opposite vertex of the rectangle.
.SH C SPECIFICATION
void \f3glRectdv\fP(
const GLdouble \fI*v1\fP,
.nf
.ta \w'\f3void \fPglRectdv( 'u
	const GLdouble \fI*v2\fP )
.fi
void \f3glRectfv\fP(
const GLfloat \fI*v1\fP,
.nf
.ta \w'\f3void \fPglRectfv( 'u
	const GLfloat \fI*v2\fP )
.fi
void \f3glRectiv\fP(
const GLint \fI*v1\fP,
.nf
.ta \w'\f3void \fPglRectiv( 'u
	const GLint \fI*v2\fP )
.fi
void \f3glRectsv\fP(
const GLshort \fI*v1\fP,
.nf
.ta \w'\f3void \fPglRectsv( 'u
	const GLshort \fI*v2\fP )
.fi

.BP
.SH PARAMETERS
.TP
\f2v1\fP
Specifies a pointer to one vertex of a rectangle.
.TP
\f2v2\fP
Specifies a pointer to the opposite vertex of the rectangle.
.SH DESCRIPTION
\%\f3glRect\fP supports efficient specification of rectangles as two corner points.
Each 
rectangle command takes four arguments,
organized either as two consecutive pairs of (\f2x\fP,\f2y\fP) coordinates,
or as two pointers to arrays,
each containing an (\f2x\fP,\f2y\fP) pair.
The resulting rectangle is defined in the \f2z\fP = 0 plane.
.P
\%\f3glRect\fP(\f2x1\fP, \f2y1\fP, \f2x2\fP, \f2y2\fP)
is exactly equivalent to the following sequence:
.Ex 6
glBegin(\%\f3GL_POLYGON\fP);
glVertex2(\f2x1\fP, \f2y1\fP);
glVertex2(\f2x2\fP, \f2y1\fP);
glVertex2(\f2x2\fP, \f2y2\fP);
glVertex2(\f2x1\fP, \f2y2\fP);
glEnd();
.Ee
Note that if the second vertex is above and to the right of the first vertex,
the rectangle is constructed with a counterclockwise winding.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glRect\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH SEE ALSO
\%\f3glBegin(3G)\fP,
\%\f3glVertex(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
