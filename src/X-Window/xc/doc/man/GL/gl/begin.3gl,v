head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.51;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" te
'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 begin.gl 
.ds Xs 5437 8 begin.gl
.TH GLBEGIN 3G
.SH NAME
.B "glBegin, glEnd
\- delimit the vertices of a primitive or a group of like primitives

.SH C SPECIFICATION
void \f3glBegin\fP(
GLenum \fImode\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2mode\fP\ \ 'u 
\f2mode\fP
Specifies the primitive or primitives that will be created from vertices
presented between \%\f3glBegin\fP and the subsequent \%\f3glEnd\fP.
Ten symbolic constants are accepted:
\%\f3GL_POINTS\fP,
\%\f3GL_LINES\fP,
\%\f3GL_LINE_STRIP\fP,
\%\f3GL_LINE_LOOP\fP,
\%\f3GL_TRIANGLES\fP,
\%\f3GL_TRIANGLE_STRIP\fP,
\%\f3GL_TRIANGLE_FAN\fP,
\%\f3GL_QUADS\fP,
\%\f3GL_QUAD_STRIP\fP, and
\%\f3GL_POLYGON\fP.
.SH C SPECIFICATION
void \f3glEnd\fP( void )
.nf
.fi

.SH DESCRIPTION
\%\f3glBegin\fP and \%\f3glEnd\fP delimit the vertices that define a primitive or
a group of like primitives.
\%\f3glBegin\fP accepts a single argument that specifies in which of ten ways the
vertices are interpreted.
Taking $n$ as an integer count starting at one,
and $N$ as the total number of vertices specified,
the interpretations are as follows:
.TP 23
\%\f3GL_POINTS\fP
Treats each vertex as a single point.
Vertex $n$ defines point $n$.
$N$ points are drawn.
.TP
\%\f3GL_LINES\fP
Treats each pair of vertices as an independent line segment.
Vertices $2n^-^1$ and $2n$ define line $n$.
$N/2$ lines are drawn.
.TP
\%\f3GL_LINE_STRIP\fP
Draws a connected group of line segments from the first vertex
to the last.
Vertices $n$ and $n~+~1$ define line $n$.
$N^-^1$ lines are drawn.
.TP
\%\f3GL_LINE_LOOP\fP
Draws a connected group of line segments from the first vertex
to the last,
then back to the first.
Vertices $n$ and $n~+~1$ define line $n$.
The last line, however, is defined by vertices $N$ and $1$.
$N$ lines are drawn.
.TP
\%\f3GL_TRIANGLES\fP
Treats each triplet of vertices as an independent triangle.
Vertices $3n^-^2$, $3n^-^1$, and $3n$ define triangle $n$.
$N/3$ triangles are drawn.
.BP
.TP
\%\f3GL_TRIANGLE_STRIP\fP
Draws a connected group of triangles.  One triangle is defined for each
vertex presented after the first two vertices.  For odd $n$, vertices
$n$, $n~+~1$, and $n~+~2$ define triangle $n$.  For even $n$, vertices
$n~+~1$, $n$, and $n~+~2$ define triangle $n$.  $N^-^2$ triangles are
drawn.
.TP
\%\f3GL_TRIANGLE_FAN\fP
Draws a connected group of triangles.
One triangle is defined for each vertex presented after the first two vertices.
Vertices $1$,
$n~+~1$,
and $n~+~2$ define triangle $n$.
$N^-^2$ triangles are drawn.
.TP
\%\f3GL_QUADS\fP
Treats each group of four vertices as an independent quadrilateral.
Vertices $4n^-^3$, $4n^-^2$, $4n^-^1$, and $4n$
define quadrilateral $n$.
$N/4$ quadrilaterals are drawn.
.TP
\%\f3GL_QUAD_STRIP\fP
Draws a connected group of quadrilaterals.
One quadrilateral is defined for each pair of vertices presented
after the first pair.
Vertices $2n^-^1$, $2n$, $2n~+~2$, and $2n~+~1$ define quadrilateral $n$.
$N/2^-^1$ quadrilaterals are drawn.
Note that the order in which vertices are used to construct a quadrilateral
from strip data is different from that used with independent data.
.TP
\%\f3GL_POLYGON\fP
Draws a single,
convex polygon.
Vertices $1$ through $N$ define this polygon.
.P
Only a subset of GL commands can be used between \%\f3glBegin\fP and \%\f3glEnd\fP.
The commands are
\%\f3glVertex\fP,
\%\f3glColor\fP,
\%\f3glIndex\fP,
\%\f3glNormal\fP,
\%\f3glTexCoord\fP,
\%\f3glEvalCoord\fP,
\%\f3glEvalPoint\fP,
\%\f3glArrayElement\fP,
\%\f3glMaterial\fP, and
\%\f3glEdgeFlag\fP.
Also,
it is acceptable to use
\%\f3glCallList\fP or
\%\f3glCallLists\fP to execute
display lists that include only the preceding commands.
If any other GL command is executed between \%\f3glBegin\fP and \%\f3glEnd\fP,
the error flag is set and the command is ignored.
.P
Regardless of the value chosen for \f2mode\fP,
there is no limit to the number of vertices that can be defined
between \%\f3glBegin\fP and \%\f3glEnd\fP.
Lines,
triangles,
quadrilaterals,
and polygons that are incompletely specified are not drawn.
Incomplete specification results when either too few vertices are
provided to specify even a single primitive or when an incorrect multiple 
of vertices is specified. The incomplete primitive is ignored; the rest are drawn.
.P
The minimum specification of vertices
for each primitive is as follows:
1 for a point,
2 for a line,
3 for a triangle,
4 for a quadrilateral,
and 3 for a polygon.
Modes that require a certain multiple of vertices are
\%\f3GL_LINES\fP (2),
\%\f3GL_TRIANGLES\fP (3),
\%\f3GL_QUADS\fP (4),
and \%\f3GL_QUAD_STRIP\fP (2).
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2mode\fP is set to an unaccepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glBegin\fP is executed between a 
\%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glEnd\fP is executed without being
preceded by a \%\f3glBegin\fP.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if a command other than
\%\f3glVertex\fP,
\%\f3glColor\fP,
\%\f3glIndex\fP,
\%\f3glNormal\fP,
\%\f3glTexCoord\fP,
\%\f3glEvalCoord\fP,
\%\f3glEvalPoint\fP,
\%\f3glArrayElement\fP,
\%\f3glMaterial\fP,
\%\f3glEdgeFlag\fP,
\%\f3glCallList\fP, or
\%\f3glCallLists\fP is executed between
the execution of \%\f3glBegin\fP and the corresponding
execution \%\f3glEnd\fP.
.P
Execution of 
\%\f3glEnableClientState\fP,
\%\f3glDisableClientState\fP,
\%\f3glEdgeFlagPointer\fP,
\%\f3glTexCoordPointer\fP,
\%\f3glColorPointer\fP,
\%\f3glIndexPointer\fP,
\%\f3glNormalPointer\fP,
.br
\%\f3glVertexPointer\fP,
\%\f3glInterleavedArrays\fP, or
\%\f3glPixelStore\fP is not allowed after a call to \%\f3glBegin\fP and before
the corresponding call to \%\f3glEnd\fP,
but an error may or may not be generated.
.SH SEE ALSO
\%\f3glArrayElement(3G)\fP,
\%\f3glCallList(3G)\fP,
\%\f3glCallLists(3G)\fP,
\%\f3glColor(3G)\fP,
\%\f3glEdgeFlag(3G)\fP,
\%\f3glEvalCoord(3G)\fP,
.br
\%\f3glEvalPoint(3G)\fP,
\%\f3glIndex(3G)\fP,
\%\f3glMaterial(3G)\fP,
\%\f3glNormal(3G)\fP,
\%\f3glTexCoord(3G)\fP,
\%\f3glVertex(3G)\fP


@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
