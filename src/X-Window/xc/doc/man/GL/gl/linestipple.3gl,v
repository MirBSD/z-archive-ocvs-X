head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.21.38;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 linestipp
.ds Xs 10486 5 linestipple.gl
.TH GLLINESTIPPLE 3G
.SH NAME
.B "glLineStipple
\- specify the line stipple pattern

.SH C SPECIFICATION
void \f3glLineStipple\fP(
GLint \fIfactor\fP,
.nf
.ta \w'\f3void \fPglLineStipple( 'u
	GLushort \fIpattern\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIpattern\fP\ \ 'u 
\f2factor\fP
Specifies a multiplier for each bit in the line stipple pattern.
If \f2factor\fP is 3,
for example,
each bit in the pattern is used three times
before the next bit in the pattern is used.
\f2factor\fP is clamped to the range [1, 256] and defaults to 1.
.TP
\f2pattern\fP
Specifies a 16-bit integer whose bit pattern determines
which fragments of a line will be drawn when the line is rasterized.
Bit zero is used first; the default pattern is all 1's.
.SH DESCRIPTION
Line stippling masks out certain fragments produced by rasterization;
those fragments will not be drawn.
The masking is achieved by using three parameters:
the 16-bit line stipple pattern \f2pattern\fP,
the repeat count \f2factor\fP,
and an integer stipple counter $s$. 
.P
Counter $s$ is reset to 0 whenever \%\f3glBegin\fP is called,
and before each line segment of a \%\f3glBegin\fP(\%\f3GL_LINES\fP)/\%\f3glEnd\fP
sequence is generated.
It is incremented after each fragment of a unit width aliased line segment is generated,
or after each $i$ fragments of an $i$ width line segment are generated.
The $i$ fragments associated with count $s$ are masked out if
.sp
.ce
\f2pattern\fP bit $(s ~/~ "factor") ~roman mod~ 16$ 
.sp
is 0, otherwise these fragments are sent to the frame buffer.
Bit zero of \f2pattern\fP is the least significant bit.
.P
Antialiased lines are treated as a sequence of $1 times width$ rectangles
for purposes of stippling.
Whether rectagle $s$ is rasterized or not depends on the fragment rule
described for aliased lines,
counting rectangles rather than groups of fragments.
.P
To enable and disable line stippling, call \%\f3glEnable\fP and \%\f3glDisable\fP
with argument \%\f3GL_LINE_STIPPLE\fP.
When enabled,
the line stipple pattern is applied as described above.
When disabled,
it is as if the pattern were all 1's.
Initially, line stippling is disabled.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glLineStipple\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_LINE_STIPPLE_PATTERN\fP
.br
\%\f3glGet\fP with argument \%\f3GL_LINE_STIPPLE_REPEAT\fP
.br
\%\f3glIsEnabled\fP with argument \%\f3GL_LINE_STIPPLE\fP
.SH SEE ALSO
\%\f3glLineWidth(3G)\fP,
\%\f3glPolygonStipple(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@a0 1
.\" $XFree86: xc/doc/man/GL/gl/linestipple.3gl,v 1.4 2003/10/22 20:36:31 tsi Exp $
d63 1
a63 1
Whether rectangle $s$ is rasterized or not depends on the fragment rule
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@a0 1
.\" $XFree86: xc/doc/man/GL/gl/linestipple.3gl,v 1.4 2003/10/22 20:36:31 tsi Exp $
d63 1
a63 1
Whether rectangle $s$ is rasterized or not depends on the fragment rule
@

