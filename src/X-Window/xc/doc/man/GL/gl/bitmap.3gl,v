head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.52;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" te
'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 bitmap.gl
.ds Xs 23189 6 bitmap.gl
.TH GLBITMAP 3G
.SH NAME
.B "glBitmap
\- draw a bitmap

.SH C SPECIFICATION
void \f3glBitmap\fP(
GLsizei \fIwidth\fP,
.nf
.ta \w'\f3void \fPglBitmap( 'u
	GLsizei \fIheight\fP,
	GLfloat \fIxorig\fP,
	GLfloat \fIyorig\fP,
	GLfloat \fIxmove\fP,
	GLfloat \fIymove\fP,
	const GLubyte \fI*bitmap\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2width\fP\ \f2height\fP\ \ 'u 
\f2width\fP, \f2height\fP
Specify the pixel width and height of the bitmap image.
.TP
\f2xorig\fP, \f2yorig\fP
Specify the location of the origin in the bitmap image.
The origin is measured from the lower left corner of the bitmap,
with right and up being the positive axes.
.TP
\f2xmove\fP, \f2ymove\fP
Specify the \f2x\fP and \f2y\fP offsets to be added to the current raster position
after the bitmap is drawn.
.TP
\f2bitmap\fP
Specifies the address of the bitmap image.
.SH DESCRIPTION
A bitmap is a binary image.
When drawn,
the bitmap is positioned relative to the current raster position,
and frame buffer pixels corresponding to 1's in the bitmap are
written using the current raster color or index.
Frame buffer pixels corresponding to 0's in the bitmap are not modified.
.P
\%\f3glBitmap\fP takes seven arguments.
The first pair specifies the width and height of the bitmap image.
The second pair specifies the location of the bitmap origin relative
to the lower left corner of the bitmap image.
The third pair of arguments specifies \f2x\fP and \f2y\fP offsets to be added
to the current raster position after the bitmap has been drawn.
The final argument is a pointer to the bitmap image itself.
.P
The bitmap image is interpreted like image data for the \%\f3glDrawPixels\fP
command,
with \f2width\fP and \f2height\fP corresponding to the width and height arguments
of that command,
and with \f2type\fP set to \%\f3GL_BITMAP\fP
and \f2format\fP set to \%\f3GL_COLOR_INDEX\fP.
.BP
Modes specified using \%\f3glPixelStore\fP affect the
interpretation of bitmap image data;
modes specified using \%\f3glPixelTransfer\fP do not.
.P
If the current raster position is invalid, \%\f3glBitmap\fP is ignored.
Otherwise,
the lower left corner of the bitmap image is positioned at the window coordinates
.ce
.sp
$ x sub w ~=~ \(lf ~ x sub r ~-~ x sub o ~ \(rf $
.br
.sp
.ce
$ y sub w ~=~ \(lf ~ y sub r ~-~ y sub o ~ \(rf $
.sp
where $ ( x sub r , y sub r ) $ is the raster position
and $ ( x sub o , y sub o ) $ is the bitmap origin.
Fragments are then generated for each pixel corresponding to a 1 (one)
in the bitmap image.
These fragments are generated using the current raster \f2z\fP coordinate,
color or color index, and current raster texture coordinates.
They are then treated just as if they had been generated
by a point, line, or polygon,
including texture mapping,
.br
fogging,
and all per-fragment operations such as alpha and depth testing.
.P
After the bitmap has been drawn,
the \f2x\fP and \f2y\fP coordinates of the current raster position are offset by
\f2xmove\fP and \f2ymove\fP.
No change is made to the \f2z\fP coordinate of the current raster position,
or to the current raster color, texture coordinates, or index.
.SH NOTES
To set a valid raster position outside the viewport, first set a valid
raster position inside the viewport, then call \%\f3glBitmap\fP with NULL
as the \f2bitmap\fP parameter and with \f2xmove\fP and \f2ymove\fP set to
the offsets of the new raster position. This technique is useful when
panning an image around the viewport. 
.SH ERRORS
\%\f3GL_INVALID_VALUE\fP is generated if \f2width\fP or \f2height\fP is negative.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glBitmap\fP
is executed between the execution of \%\f3glBegin\fP and the corresponding execution of
\%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_POSITION\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_COLOR\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_DISTANCE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_INDEX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_TEXTURE_COORDS\fP
.br
\%\f3glGet\fP with argument \%\f3GL_CURRENT_RASTER_POSITION_VALID\fP
.SH SEE ALSO
\%\f3glDrawPixels(3G)\fP,
\%\f3glPixelStore(3G)\fP,
\%\f3glPixelTransfer(3G)\fP,
\%\f3glRasterPos(3G)\fP

@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
