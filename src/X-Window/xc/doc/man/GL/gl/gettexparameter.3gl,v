head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 gettexpar
.ds Xs 10274 6 gettexparameter.gl
.TH GLGETTEXPARAMETER 3G
.SH NAME
.B "glGetTexParameterfv, glGetTexParameteriv
\- return texture parameter values

.SH C SPECIFICATION
void \f3glGetTexParameterfv\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglGetTexParameterfv( 'u
	GLenum \fIpname\fP,
	GLfloat \fI*params\fP )
.fi
void \f3glGetTexParameteriv\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglGetTexParameteriv( 'u
	GLenum \fIpname\fP,
	GLint \fI*params\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2target\fP\ \ 'u 
\f2target\fP
Specifies the symbolic name of the target texture.
\%\f3GL_TEXTURE_1D\fP,\%\f3GL_TEXTURE_2D\fP, and \%\f3GL_TEXTURE_3D\fP  are accepted.
.TP
\f2pname\fP
Specifies the symbolic name of a texture parameter.
\%\f3GL_TEXTURE_MAG_FILTER\fP,
\%\f3GL_TEXTURE_MIN_FILTER\fP,
\%\f3GL_TEXTURE_MIN_LOD\fP,
\%\f3GL_TEXTURE_MAX_LOD\fP,
\%\f3GL_TEXTURE_BASE_LEVEL\fP,
\%\f3GL_TEXTURE_MAX_LEVEL\fP,
\%\f3GL_TEXTURE_WRAP_S\fP,
\%\f3GL_TEXTURE_WRAP_T\fP,
\%\f3GL_TEXTURE_WRAP_R\fP,
\%\f3GL_TEXTURE_BORDER_COLOR\fP,
\%\f3GL_TEXTURE_PRIORITY\fP, and
\%\f3GL_TEXTURE_RESIDENT\fP are accepted.
.TP
\f2params\fP
Returns the texture parameters.
.SH DESCRIPTION
\%\f3glGetTexParameter\fP returns in \f2params\fP the value or values of the texture parameter
specified as \f2pname\fP.
\f2target\fP defines the target texture,
either \%\f3GL_TEXTURE_1D\fP, \%\f3GL_TEXTURE_2D\fP, or \%\f3GL_TEXTURE_3D\fP
to specify one-, two-, or three-dimensional texturing.
\f2pname\fP accepts the same symbols as \%\f3glTexParameter\fP,
with the same interpretations:
.TP 35
\%\f3GL_TEXTURE_MAG_FILTER\fP
Returns the single-valued texture magnification filter,
a symbolic constant. The initial value is \%\f3GL_LINEAR\fP.
.TP
\%\f3GL_TEXTURE_MIN_FILTER\fP
Returns the single-valued texture minification filter,
a symbolic constant. The initial value is \%\f3GL_NEAREST_MIPMAP_LINEAR\fP.
.TP
\%\f3GL_TEXTURE_MIN_LOD\fP
Returns the single-valued texture minimum level-of-detail value.  The
initial value is $-1000$.
.TP
\%\f3GL_TEXTURE_MAX_LOD\fP
Returns the single-valued texture maximum level-of-detail value. The
initial value is 1000.
.TP
\%\f3GL_TEXTURE_BASE_LEVEL\fP
Returns the single-valued base texture mipmap level.  The initial value is 0.
.TP
\%\f3GL_TEXTURE_MAX_LEVEL\fP
Returns the single-valued maximum texture mipmap array level.  The initial
value is 1000.
.TP
\%\f3GL_TEXTURE_WRAP_S\fP
Returns the single-valued wrapping function for texture coordinate $s$,
a symbolic constant. The initial value is \%\f3GL_REPEAT\fP.
.TP
\%\f3GL_TEXTURE_WRAP_T\fP
Returns the single-valued wrapping function for texture coordinate $t$,
a symbolic constant. The initial value is \%\f3GL_REPEAT\fP.
.TP
\%\f3GL_TEXTURE_WRAP_R\fP
Returns the single-valued wrapping function for texture coordinate $r$,
a symbolic constant. The initial value is \%\f3GL_REPEAT\fP.
.BP
.TP
\%\f3GL_TEXTURE_BORDER_COLOR\fP
Returns four integer or floating-point numbers that comprise the RGBA color
of the texture border.
Floating-point values are returned in the range [0, 1].
Integer values are returned as a linear mapping of the internal floating-point 
representation such that 1.0 maps to the most positive representable
integer and \-1.0 maps to the most negative representable
integer. The initial value is (0, 0, 0, 0). 
.TP
\%\f3GL_TEXTURE_PRIORITY\fP
Returns the residence priority of the target texture (or the named
texture bound to it). The initial value is 1. 
See \%\f3glPrioritizeTextures\fP.
.TP
\%\f3GL_TEXTURE_RESIDENT\fP
Returns the residence status of the target texture.
If the value returned in \f2params\fP is \%\f3GL_TRUE\fP, the texture is
resident in texture memory.
See \%\f3glAreTexturesResident\fP.
.SH NOTES
\%\f3GL_TEXTURE_PRIORITY\fP and \%\f3GL_TEXTURE_RESIDENT\fP are
available only if the GL version is 1.1 or greater.
.P
\%\f3GL_TEXTURE_3D\fP, 
\%\f3GL_TEXTURE_MIN_LOD\fP, \%\f3GL_TEXTURE_MAX_LOD\fP, \%\f3GL_TEXTURE_BASE_LEVEL\fP,
\%\f3GL_TEXTURE_MAX_LEVEL\fP, and \%\f3GL_TEXTURE_WRAP_R\fP are available only
if the GL version is 1.2 or greater.
.P
If an error is generated,
no change is made to the contents of \f2params\fP.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2target\fP or \f2pname\fP is not an
accepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glGetTexParameter\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH SEE ALSO
\%\f3glAreTexturesResident(3G)\fP,
\%\f3glPrioritizeTextures(3G)\fP,
\%\f3glTexParameter(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
