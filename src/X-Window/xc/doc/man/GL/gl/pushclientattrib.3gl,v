head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.21.44;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" et
'\"! eqn|tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 pushclien
.ds Xs 42589 5 pushclientattrib.gl
.TH GLPUSHCLIENTATTRIB 3G
.SH NAME
.B "glPushClientAttrib, glPopClientAttrib
\- push and pop the client attribute stack

.SH C SPECIFICATION
void \f3glPushClientAttrib\fP(
GLbitfield mask);  /* \fI1.1\fP )
.nf
.fi

.SH PARAMETERS
.TP \w'\f21.1\fP\ \ 'u 
\f21.1\fP
Specifies a mask that indicates which attributes to save.  Values for
\f21.1\fP are listed below.
.SH C SPECIFICATION
void \f3glPopClientAttrib\fP(
void);  /* \fI1.1\fP )
.nf
.fi

.SH DESCRIPTION
\%\f3glPushClientAttrib\fP takes one argument,
a mask that indicates which groups of client-state variables
to save on the client attribute stack. 
Symbolic constants are used to set bits in the mask.
\f21.1\fP
is typically constructed by OR'ing several of these constants together.
The special mask
\%\f3GL_CLIENT_ALL_ATTRIB_BITS\fP
can be used to save all stackable client state.
.P
The symbolic mask constants and their associated GL client state are as follows
(the second column lists which attributes are saved):
.P
\%\f3GL_CLIENT_PIXEL_STORE_BIT\fP	Pixel storage modes
.br
\%\f3GL_CLIENT_VERTEX_ARRAY_BIT\fP	Vertex arrays (and enables)
.P
\%\f3glPopClientAttrib\fP restores the values of the client-state variables 
saved with the last \%\f3glPushClientAttrib\fP.
Those not saved are left unchanged.
.P
It is an error to push attributes onto a full client attribute stack,
or to pop attributes off an empty stack.
In either case, the error flag is set,
and no other change is made to GL state.
.P
Initially, the client attribute stack is empty.
.SH NOTES
\%\f3glPushClientAttrib\fP is available only if the GL version is 1.1 or greater.
.P
Not all values for GL client state can be saved on the attribute stack.
For example, select and feedback state cannot be saved.
.P
The depth of the attribute stack depends on the implementation,
but it must be at least 16.
.P 
Use \%\f3glPushAttrib\fP and \%\f3glPopAttrib\fP to push and restore
state which is kept on the server. Only pixel storage modes and
vertex array state may be pushed and popped with 
\%\f3glPushClientAttrib\fP and \%\f3glPopClientAttrib\fP.
.P
When the \%\f3GL_ARB_multitexture\fP extension is supported, pushing and
popping client vertex array state apples to all supported texture units, 
and the active client texture state.
.SH ERRORS
\%\f3GL_STACK_OVERFLOW\fP is generated if \%\f3glPushClientAttrib\fP is called while
the attribute stack is full.
.P
\%\f3GL_STACK_UNDERFLOW\fP is generated if \%\f3glPopClientAttrib\fP is called while
the attribute stack is empty.
.SH ASSOCIATED GETS 
\%\f3glGet\fP with argument \%\f3GL_ATTRIB_STACK_DEPTH\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\fP 
.SH SEE ALSO
\%\f3glColorPointer(3G)\fP,
\%\f3glDisableClientState(3G)\fP,
\%\f3glEdgeFlagPointer(3G)\fP,
\%\f3glEnableClientState(3G)\fP,
\%\f3glGet(3G)\fP,
\%\f3glGetError(3G)\fP,
\%\f3glIndexPointer(3G)\fP,
\%\f3glNormalPointer(3G)\fP,
\%\f3glNewList(3G)\fP,
\%\f3glPixelStore(3G)\fP,
\%\f3glPushAttrib(3G)\fP,
\%\f3glTexCoordPointer(3G)\fP,
\%\f3glVertexPointer(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@a0 1
.\" $XFree86: xc/doc/man/GL/gl/pushclientattrib.3gl,v 1.3 2003/10/21 17:44:33 tsi Exp $
d17 1
a17 1
GLbitfield mask);  \fI1.1\fP )
d22 1
a22 1
.TP \w'\f21.1\fP\ \ 'u
d28 1
a28 1
void);  \fI1.1\fP )
d35 1
a35 1
to save on the client attribute stack.
d50 1
a50 1
\%\f3glPopClientAttrib\fP restores the values of the client-state variables
d68 1
a68 1
.P
d71 1
a71 1
vertex array state may be pushed and popped with
d75 1
a75 1
popping client vertex array state apples to all supported texture units,
d83 1
a83 1
.SH ASSOCIATED GETS
d86 1
a86 1
\%\f3glGet\fP with argument \%\f3GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\fP
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@a0 1
.\" $XFree86: xc/doc/man/GL/gl/pushclientattrib.3gl,v 1.3 2003/10/21 17:44:33 tsi Exp $
d17 1
a17 1
GLbitfield mask);  \fI1.1\fP )
d22 1
a22 1
.TP \w'\f21.1\fP\ \ 'u
d28 1
a28 1
void);  \fI1.1\fP )
d35 1
a35 1
to save on the client attribute stack.
d50 1
a50 1
\%\f3glPopClientAttrib\fP restores the values of the client-state variables
d68 1
a68 1
.P
d71 1
a71 1
vertex array state may be pushed and popped with
d75 1
a75 1
popping client vertex array state apples to all supported texture units,
d83 1
a83 1
.SH ASSOCIATED GETS
d86 1
a86 1
\%\f3glGet\fP with argument \%\f3GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\fP
@

