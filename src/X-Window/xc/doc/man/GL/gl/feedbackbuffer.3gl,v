head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" te
'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 feedbackb
.ds Xs 26060 9 feedbackbuffer.gl
.TH GLFEEDBACKBUFFER 3G
.SH NAME
.B "glFeedbackBuffer
\- controls feedback mode

.SH C SPECIFICATION
void \f3glFeedbackBuffer\fP(
GLsizei \fIsize\fP,
.nf
.ta \w'\f3void \fPglFeedbackBuffer( 'u
	GLenum \fItype\fP,
	GLfloat \fI*buffer\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIbuffer\fP\ \ 'u 
\f2size\fP
Specifies the maximum number of values that can be written into \f2buffer\fP.
.TP
\f2type\fP 
Specifies a symbolic constant that describes the information
that will be returned for each vertex.
\%\f3GL_2D\fP,
\%\f3GL_3D\fP,
\%\f3GL_3D_COLOR\fP,
\%\f3GL_3D_COLOR_TEXTURE\fP, and
\%\f3GL_4D_COLOR_TEXTURE\fP are accepted.
.TP
\f2buffer\fP
Returns the feedback data.
.SH DESCRIPTION
The \%\f3glFeedbackBuffer\fP function controls feedback.
Feedback, like selection, is a GL mode.
The mode is selected by calling
\%\f3glRenderMode\fP with \%\f3GL_FEEDBACK\fP.
When the GL is in feedback mode,
no pixels are produced by rasterization.
Instead, information about primitives that would have been
rasterized is fed back to the application using the GL.
.P
\%\f3glFeedbackBuffer\fP has three arguments:
\f2buffer\fP is a pointer to an array of floating-point values
into which feedback information is placed.
\f2size\fP indicates the size of the array.
\f2type\fP is a symbolic constant describing the information
that is fed back for each vertex.
\%\f3glFeedbackBuffer\fP must be issued before feedback mode is enabled
(by calling \%\f3glRenderMode\fP with argument \%\f3GL_FEEDBACK\fP).
Setting \%\f3GL_FEEDBACK\fP without establishing the feedback buffer,
or calling \%\f3glFeedbackBuffer\fP while the GL is in feedback mode,
is an error.
.P
When \%\f3glRenderMode\fP is called while in feedback mode, it returns the number of entries
placed in the feedback array, and resets the feedback array pointer to the base
of the feedback buffer. The returned value never exceeds \f2size\fP. If the feedback
data required more room than was available in \f2buffer\fP, 
\%\f3glRenderMode\fP returns a negative value.
To take the GL out of feedback mode, call
\%\f3glRenderMode\fP with a parameter value other than \%\f3GL_FEEDBACK\fP.
.P
While in feedback mode,
each primitive, bitmap, or pixel rectangle that would be rasterized
generates a block of values that are copied into the feedback array.
If doing so would cause the number of entries to exceed the maximum,
the block is partially written so as to fill the array
(if there is any room left at all),
and an overflow flag is set.
Each block begins with a code indicating the primitive type,
followed by values that describe the primitive's vertices and
associated data.
Entries are also written for bitmaps and pixel rectangles.
Feedback occurs after polygon culling and \%\f3glPolygonMode\fP interpretation
of polygons has taken place,
so polygons that are culled are not returned in the feedback buffer.
It can also occur after polygons with more than three edges are broken up
into triangles,
if the GL implementation renders polygons by performing this decomposition.
.P
The \%\f3glPassThrough\fP command can be used to insert a marker
into the feedback buffer.
See \%\f3glPassThrough\fP.
.P
Following is the grammar for the blocks of values written
into the feedback buffer.
Each primitive is indicated with a unique identifying value
followed by some number of vertices.
Polygon entries include an integer value indicating how many vertices follow.
A vertex is fed back as some number of floating-point values,
as determined by \f2type\fP.
Colors are fed back as four values in RGBA mode and one value
in color index mode. 
.RS
.na
.sp
feedbackList \(<- feedbackItem feedbackList | feedbackItem
.sp
feedbackItem \(<- point | lineSegment | polygon | bitmap | pixelRectangle | passThru
.sp
point \(<- \%\f3GL_POINT_TOKEN\fP vertex
.sp
lineSegment \(<- \%\f3GL_LINE_TOKEN\fP vertex vertex | \%\f3GL_LINE_RESET_TOKEN\fP vertex vertex
.sp
polygon \(<- \%\f3GL_POLYGON_TOKEN\fP n polySpec
.sp
polySpec \(<- polySpec vertex | vertex vertex vertex
.sp
bitmap \(<- \%\f3GL_BITMAP_TOKEN\fP vertex 
.sp
pixelRectangle \(<- \%\f3GL_DRAW_PIXEL_TOKEN\fP vertex | \%\f3GL_COPY_PIXEL_TOKEN\fP vertex
.sp
passThru \(<- \%\f3GL_PASS_THROUGH_TOKEN\fP value
.sp
vertex \(<- 2d | 3d | 3dColor | 3dColorTexture | 4dColorTexture
.sp
2d \(<- value value
.sp
3d \(<- value value value
.sp
3dColor  \(<- value value value color
.sp
3dColorTexture \(<- value value value color tex
.sp
4dColorTexture \(<- value value value value color tex
.sp
color \(<- rgba | index
.sp
rgba \(<- value value value value
.sp
index \(<- value
.sp
tex \(<- value value value value
.sp
.RE
.P
.I value
is a floating-point number, 
and
.I n
is a floating-point integer giving the number of vertices in the polygon.
\%\f3GL_POINT_TOKEN\fP, 
\%\f3GL_LINE_TOKEN\fP,
\%\f3GL_LINE_RESET_TOKEN\fP,
\%\f3GL_POLYGON_TOKEN\fP,
\%\f3GL_BITMAP_TOKEN\fP,
\%\f3GL_DRAW_PIXEL_TOKEN\fP,
\%\f3GL_COPY_PIXEL_TOKEN\fP and
\%\f3GL_PASS_THROUGH_TOKEN\fP are symbolic floating-point constants.
\%\f3GL_LINE_RESET_TOKEN\fP is returned whenever the line stipple pattern
is reset.
The data returned as a vertex depends on the feedback \f2type\fP.
.P
The following table gives the correspondence between \f2type\fP
and the number of values per vertex.
\f2k\fP is 1 in color index mode and 4 in RGBA mode.
.sp
.ne
.TS
center tab(:);
lb lb cb cb cb
l l c c c.
_
Type:Coordinates:Color:Texture:Total Number of Values
_
\%\f3GL_2D\fP:\f2x\fP, \f2y\fP:::2
\%\f3GL_3D\fP:\f2x\fP, \f2y\fP, \f2z\fP:::3
\%\f3GL_3D_COLOR\fP:\f2x\fP, \f2y\fP, \f2z\fP:$k$::$3 ~+~ k$
\%\f3GL_3D_COLOR_TEXTURE\fP:\f2x\fP, \f2y\fP, \f2z\fP,:$k$:4:$7 ~+~ k$
\%\f3GL_4D_COLOR_TEXTURE\fP:\f2x\fP, \f2y\fP, \f2z\fP, \f2w\fP:$k$:4:$8 ~+~ k$
_
.TE

.P
Feedback vertex coordinates are in window coordinates,
except \f2w\fP,
which is in clip coordinates.
Feedback colors are lighted, if lighting is enabled.
Feedback texture coordinates are generated,
if texture coordinate generation is enabled.
They are always transformed by the texture matrix.
.SH NOTES
\%\f3glFeedbackBuffer\fP, when used in a display list, is not compiled into the display list 
but is executed immediately. 
.P
When the \%\f3GL_ARB_multitexture\fP extension is supported, \%\f3glFeedbackBuffer\fP
returns only the texture coordinates of texture unit \%\f3GL_TEXTURE0_ARB\fP.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2type\fP is not an accepted value.
.P
\%\f3GL_INVALID_VALUE\fP is generated if \f2size\fP is negative.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glFeedbackBuffer\fP is called while the
render mode is \%\f3GL_FEEDBACK\fP,
or if \%\f3glRenderMode\fP is called with argument \%\f3GL_FEEDBACK\fP before
\%\f3glFeedbackBuffer\fP is called at least once.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glFeedbackBuffer\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_RENDER_MODE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_FEEDBACK_BUFFER_POINTER\fP
.br
\%\f3glGet\fP with argument \%\f3GL_FEEDBACK_BUFFER_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_FEEDBACK_BUFFER_TYPE\fP
.SH SEE ALSO
\%\f3glBegin(3G)\fP,
\%\f3glLineStipple(3G)\fP,
\%\f3glPassThrough(3G)\fP,
\%\f3glPolygonMode(3G)\fP,
\%\f3glRenderMode(3G)\fP,
\%\f3glSelectBuffer(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
