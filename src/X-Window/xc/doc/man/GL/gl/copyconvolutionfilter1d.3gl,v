head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.53;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" t
'\"! tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 001 copyconv
.ds Xs 33614 7 copyconvolutionfilter1d.gl
.TH GLCOPYCONVOLUTIONFILTER1D 3G
.SH NAME
.B "glCopyConvolutionFilter1D
\- copy pixels into a one-dimensional convolution filter

.SH C SPECIFICATION
void \f3glCopyConvolutionFilter1D\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglCopyConvolutionFilter1D( 'u
	GLenum \fIinternalformat\fP,
	GLint \fIx\fP,
	GLint \fIy\fP,
	GLsizei \fIwidth\fP )
.fi

.SH PARAMETERS
.TP \w'\fIinternalformat\fP\ \ 'u 
\f2target\fP
Must be \%\f3GL_CONVOLUTION_1D\fP.
.TP
\f2internalformat\fP
The internal  of the convolution filter kernel.
The allowable values are
\%\f3GL_ALPHA\fP,
\%\f3GL_ALPHA4\fP,
\%\f3GL_ALPHA8\fP,
\%\f3GL_ALPHA12\fP,
\%\f3GL_ALPHA16\fP,
\%\f3GL_LUMINANCE\fP,
\%\f3GL_LUMINANCE4\fP,
\%\f3GL_LUMINANCE8\fP,
\%\f3GL_LUMINANCE12\fP,
\%\f3GL_LUMINANCE16\fP,
\%\f3GL_LUMINANCE_ALPHA\fP,
\%\f3GL_LUMINANCE4_ALPHA4\fP,
\%\f3GL_LUMINANCE6_ALPHA2\fP,
\%\f3GL_LUMINANCE8_ALPHA8\fP,
\%\f3GL_LUMINANCE12_ALPHA4\fP,
\%\f3GL_LUMINANCE12_ALPHA12\fP,
\%\f3GL_LUMINANCE16_ALPHA16\fP,
\%\f3GL_INTENSITY\fP,
\%\f3GL_INTENSITY4\fP,
\%\f3GL_INTENSITY8\fP,
\%\f3GL_INTENSITY12\fP,
\%\f3GL_INTENSITY16\fP,
\%\f3GL_R3_G3_B2\fP,
\%\f3GL_RGB\fP,
\%\f3GL_RGB4\fP,
\%\f3GL_RGB5\fP,
\%\f3GL_RGB8\fP,
\%\f3GL_RGB10\fP,
\%\f3GL_RGB12\fP,
\%\f3GL_RGB16\fP,
\%\f3GL_RGBA\fP,
\%\f3GL_RGBA2\fP,
\%\f3GL_RGBA4\fP,
\%\f3GL_RGB5_A1\fP,
\%\f3GL_RGBA8\fP,
\%\f3GL_RGB10_A2\fP,
\%\f3GL_RGBA12\fP, or
\%\f3GL_RGBA16\fP.
.TP
\f2x\fP, \f2y\fP
The window space coordinates of the lower-left coordinate of the
pixel array to copy.
.TP
\f2width\fP
The width of the pixel array to copy.
.SH DESCRIPTION
\%\f3glCopyConvolutionFilter1D\fP defines a one-dimensional convolution filter kernel with pixels
from the current \%\f3GL_READ_BUFFER\fP (rather than from main memory, 
as is the case for \%\f3glConvolutionFilter1D\fP).
.sp
The screen-aligned pixel rectangle with lower-left corner at (\f2x\fP,\ \f2y\fP),
width \f2width\fP and height 1 is used to define
the convolution filter.  If any pixels within this region are 
outside the window that is associated with the GL context, the 
values obtained for those pixels are undefined.
.sp
The pixels in the rectangle are processed exactly as if \%\f3glReadPixels\fP 
had been called with \f2format\fP
set to RGBA, but the process stops just before final conversion.  
The R, G, B, and A components of each pixel are next scaled by the four
1D \%\f3GL_CONVOLUTION_FILTER_SCALE\fP parameters and biased by the
four 1D \%\f3GL_CONVOLUTION_FILTER_BIAS\fP parameters.
(The scale and bias parameters are set by \%\f3glConvolutionParameter\fP
using the \%\f3GL_CONVOLUTION_1D\fP target and the names
\%\f3GL_CONVOLUTION_FILTER_SCALE\fP and \%\f3GL_CONVOLUTION_FILTER_BIAS\fP.
The parameters themselves are vectors of four values that are applied to red,
green, blue, and alpha, in that order.)
The R, G, B, and A values are not clamped to [0,1] at any time during this
process.
.sp
Each pixel is then converted to the internal  specified by
\f2internalformat\fP.
This conversion simply maps the component values of the pixel (R, G, B,
and A) to the values included in the internal  (red, green, blue,
alpha, luminance, and intensity).  The mapping is as follows:
.sp
.TS
center;
lb cb cb cb cb cb cb
l c c c c c c.
_
Internal Format	Red	Green	Blue	Alpha	Luminance	Intensity
_
\%\f3GL_ALPHA\fP				A
\%\f3GL_LUMINANCE\fP				R
\%\f3GL_LUMINANCE_ALPHA\fP			A	R
\%\f3GL_INTENSITY\fP						R
\%\f3GL_RGB\fP	R	G	B
\%\f3GL_RGBA\fP	R	G	B	A
_
.TE
.sp
The red, green, blue, alpha, luminance, and/or intensity components of
the resulting pixels are stored in floating-point rather than integer
.
.sp
Pixel ordering is such that lower x screen coordinates correspond to 
lower \f2i\fP filter image coordinates.
.PP
Note that after a convolution is performed, the resulting color
components are also scaled by their corresponding
\%\f3GL_POST_CONVOLUTION_c_SCALE\fP parameters and biased by their
corresponding \%\f3GL_POST_CONVOLUTION_c_BIAS\fP parameters (where
\f2c\fP takes on the values \f3RED\fP, \f3GREEN\fP, \f3BLUE\fP, and
\f3ALPHA\fP).
These parameters are set by \%\f3glPixelTransfer\fP.
.SH NOTES
\%\f3glCopyConvolutionFilter1D\fP is present only if \%\f3GL_ARB_imaging\fP is returned when \%\f3glGetString\fP
is called with an argument of \%\f3GL_EXTENSIONS\fP.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2target\fP is not
\%\f3GL_CONVOLUTION_1D\fP.
.P
\%\f3GL_INVALID_ENUM\fP is generated if \f2internalformat\fP is not one of the
allowable values.
.P
\%\f3GL_INVALID_VALUE\fP is generated if \f2width\fP is less than zero or greater
than the maximum supported value.
This value may be queried with \%\f3glGetConvolutionParameter\fP
using target \%\f3GL_CONVOLUTION_1D\fP and name
\%\f3GL_MAX_CONVOLUTION_WIDTH\fP.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glCopyConvolutionFilter1D\fP is executed
between the execution of \%\f3glBegin\fP and the corresponding
execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGetConvolutionParameter\fP, \%\f3glGetConvolutionFilter\fP
.SH SEE ALSO
\%\f3glConvolutionFilter1D(3G)\fP,
\%\f3glConvolutionParameter(3G)\fP,
\%\f3glPixelTransfer(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
