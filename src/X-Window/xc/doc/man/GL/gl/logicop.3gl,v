head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.01.59;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" et
'\"! eqn|tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 logicop.g
.ds Xs 60568 5 logicop.gl
.TH GLLOGICOP 3G
.SH NAME
.B "glLogicOp
\- specify a logical pixel operation for color index rendering

.SH C SPECIFICATION
void \f3glLogicOp\fP(
GLenum \fIopcode\fP )
.nf
.fi

.SH PARAMETERS
.TP \w'\f2opcode\fP\ \ 'u 
\f2opcode\fP
Specifies a symbolic constant that selects a logical operation.
The following symbols are accepted:
\%\f3GL_CLEAR\fP,
\%\f3GL_SET\fP,
\%\f3GL_COPY\fP,
\%\f3GL_COPY_INVERTED\fP,
\%\f3GL_NOOP\fP,
\%\f3GL_INVERT\fP,
\%\f3GL_AND\fP,
\%\f3GL_NAND\fP,
\%\f3GL_OR\fP,
\%\f3GL_NOR\fP,
\%\f3GL_XOR\fP,
\%\f3GL_EQUIV\fP,
\%\f3GL_AND_REVERSE\fP,
\%\f3GL_AND_INVERTED\fP,
\%\f3GL_OR_REVERSE\fP, and
\%\f3GL_OR_INVERTED\fP. The initial value is \%\f3GL_COPY\fP.
.SH DESCRIPTION
\%\f3glLogicOp\fP specifies a logical operation that,
when enabled,
is applied between the incoming color index or RGBA color
and the color index or RGBA color at the corresponding location in the
frame buffer. 
To enable or disable the logical operation, call
\%\f3glEnable\fP and \%\f3glDisable\fP
using the symbolic constant \%\f3GL_COLOR_LOGIC_OP\fP for RGBA mode or
\%\f3GL_INDEX_LOGIC_OP\fP for color index mode. The initial value is
disabled for both operations.
.P
.ne
.TS
center;
lb lb
l c.
_
Opcode	Resulting Operation
_
\%\f3GL_CLEAR\fP	0
\%\f3GL_SET\fP	1
\%\f3GL_COPY\fP	s
\%\f3GL_COPY_INVERTED\fP	~s
\%\f3GL_NOOP\fP	d
\%\f3GL_INVERT\fP	~d
\%\f3GL_AND\fP	s & d
\%\f3GL_NAND\fP	~(s & d)
\%\f3GL_OR\fP	s | d
\%\f3GL_NOR\fP	~(s | d)
\%\f3GL_XOR\fP	s ^ d
\%\f3GL_EQUIV\fP	~(s ^ d)
\%\f3GL_AND_REVERSE\fP	s & ~d
\%\f3GL_AND_INVERTED\fP	~s & d
\%\f3GL_OR_REVERSE\fP	s | ~d
\%\f3GL_OR_INVERTED\fP	~s | d
_
.TE

\f2opcode\fP is a symbolic constant chosen from the list above.
In the explanation of the logical operations,
\f2s\fP represents the incoming color index and
\f2d\fP represents the index in the frame buffer.
Standard C-language operators are used.
As these bitwise operators suggest,
the logical operation is applied independently to each bit pair of the
source and destination indices or colors.
.SH NOTES
Color index logical operations are always supported. RGBA logical
operations are supported only if the GL version is 1.1 or greater.  
.P
When more than one RGBA color or index buffer is enabled for drawing,
logical operations are performed separately for each enabled buffer,
using for the destination value the contents of that buffer
(see \%\f3glDrawBuffer\fP).
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2opcode\fP is not an accepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glLogicOp\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_LOGIC_OP_MODE\fP.
.br
\%\f3glIsEnabled\fP with argument \%\f3GL_COLOR_LOGIC_OP\fP or \%\f3GL_INDEX_LOGIC_OP\fP.
.SH SEE ALSO
\%\f3glAlphaFunc(3G)\fP,
\%\f3glBlendFunc(3G)\fP,
\%\f3glDrawBuffer(3G)\fP,
\%\f3glEnable(3G)\fP,
\%\f3glStencilOp(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
