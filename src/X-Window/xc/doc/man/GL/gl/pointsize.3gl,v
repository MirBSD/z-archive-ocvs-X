head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.33;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 pointsize
.ds Xs 46128 6 pointsize.gl
.TH GLPOINTSIZE 3G
.SH NAME
.B "glPointSize
\- specify the diameter of rasterized points

.SH C SPECIFICATION
void \f3glPointSize\fP(
GLfloat \fIsize\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2size\fP\ \ 'u 
\f2size\fP
Specifies the diameter of rasterized points.
The initial value is 1.
.SH DESCRIPTION
\%\f3glPointSize\fP specifies the rasterized diameter of both aliased and antialiased
points.
Using a point size other than 1 has different effects,
depending on whether point antialiasing is enabled.
To enable and disable point antialiasing, call 
\%\f3glEnable\fP and \%\f3glDisable\fP
with argument \%\f3GL_POINT_SMOOTH\fP. Point antialiasing is initially disabled.
.P
If point antialiasing is disabled,
the actual size is determined by rounding the supplied size
to the nearest integer.
(If the rounding results in the value 0,
it is as if the point size were 1.)
If the rounded size is odd,
then the center point
($ x $, $ y $)
of the pixel fragment that represents the point is computed as
.sp
.ce
( $ \(lf ~ x sub w ~ \(rf ~+~ .5 $, $ \(lf ~ y sub w ~ \(rf ~+~ .5 $)
.sp
where $w$ subscripts indicate window coordinates.
All pixels that lie within the square grid of the rounded size centered at
($ x $, $ y $)
make up the fragment.
If the size is even,
the center point is
.sp
.ce
( $ \(lf ~ x sub w ~+~ .5 ~ \(rf$, $ \(lf ~ y sub w ~+~ .5 ~ \(rf $)
.sp
and the rasterized fragment's centers are the half-integer window coordinates
within the square of the rounded size centered at
($ x $, $ y $).
All pixel fragments produced in rasterizing a nonantialiased point are
assigned the same associated data,
that of the vertex corresponding to the point.
.P
If antialiasing is enabled,
then point rasterization produces a fragment for each pixel square
that intersects the region lying within the circle having diameter
equal to the current point size and centered at the point's
($ x sub w $, $ y sub w $).
The coverage value for each fragment is the window coordinate area
of the intersection of the circular region with the corresponding pixel square.
This value is saved and used in the final rasterization step. 
The data associated with each fragment is the data associated with 
the point being rasterized.
.P
Not all sizes are supported when point antialiasing is enabled. 
If an unsupported size is requested,
the nearest supported size is used.
Only size 1 is guaranteed to be supported;
others depend on the implementation.
To query the range of supported sizes and the size difference between
supported sizes within the range, call
\%\f3glGet\fP with arguments
\%\f3GL_SMOOTH_POINT_SIZE_RANGE\fP and
\%\f3GL_SMOOTH_POINT_SIZE_GRANULARITY\fP.
For aliased points, query the supported ranges and granularity with
\%\f3glGet\fP with arguments
\%\f3GL_ALIASED_POINT_SIZE_RANGE\fP and
\%\f3GL_ALIASED_POINT_SIZE_GRANULARITY\fP.
.SH NOTES
The point size specified by \%\f3glPointSize\fP is always returned when \%\f3GL_POINT_SIZE\fP
is queried.
Clamping and rounding for aliased and antialiased points have no effect
on the specified value.
.P
A non-antialiased point size may be clamped to an implementation-dependent
maximum.
Although this maximum cannot be queried,
it must be no less than the maximum value for antialiased points,
rounded to the nearest integer value.
.P
\%\f3GL_POINT_SIZE_RANGE\fP and \%\f3GL_POINT_SIZE_GRANULARITY\fP are
deprecated in GL versions 1.2 and greater.  Their functionality has been 
replaced by \%\f3GL_SMOOTH_POINT_SIZE_RANGE\fP and 
\%\f3GL_SMOOTH_POINT_SIZE_GRANULARITY\fP.
.SH ERRORS
\%\f3GL_INVALID_VALUE\fP is generated if \f2size\fP is less than or equal to 0.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glPointSize\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_POINT_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_ALIASED_POINT_SIZE_RANGE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_ALIASED_POINT_SIZE_GRANULARITY\fP
.br
\%\f3glGet\fP with argument \%\f3GL_SMOOTH_POINT_SIZE_RANGE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_SMOOTH_POINT_SIZE_GRANULARITY\fP
.br
\%\f3glIsEnabled\fP with argument \%\f3GL_POINT_SMOOTH\fP
.SH SEE ALSO
\%\f3glEnable(3G)\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
