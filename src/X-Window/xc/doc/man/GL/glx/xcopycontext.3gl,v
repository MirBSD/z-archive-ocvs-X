head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.19.59.37;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.37;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp Feb 16 02:56
.ds Dm  Feb 10 17:2
.ds Xs 49166 6 xcopycontext.gl
.TH GLXCOPYCONTEXT
.SH NAME
glXCopyContext
\- copy state from one rendering context to another

.SH C SPECIFICATION
void \f3glXCopyContext\fP(
Display \fI*dpy\fP,
.nf
.ta \w'\f3void \fPglXCopyContext( 'u
	GLXContext \fIsrc\fP,
	GLXContext \fIdst\fP,
	unsigned long \fImask\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fImask\fP\ \ 'u 
\f2dpy\fP
Specifies the connection to the X server.
.TP
\f2src\fP
Specifies the source context.
.TP
\f2dst\fP
Specifies the destination context.
.TP
\f2mask\fP
Specifies which portions of \f2src\fP state are to be copied to \f2dst\fP.
.SH DESCRIPTION
\f3glXCopyContext\fP copies selected groups of state variables from \f2src\fP to \f2dst\fP.
\f2mask\fP indicates which groups of state variables are to be copied.
\f2mask\fP contains the bitwise OR of the same symbolic names that are
passed to the GL command \f3glPushAttrib\fP.
The single symbolic constant \f3GL_ALL_ATTRIB_BITS\fP can be used to
copy the maximum possible portion of rendering state.
.P
The copy can be done only if the renderers named by \f2src\fP and \f2dst\fP
share an address space.
Two rendering contexts share an address space if both are nondirect
using the same server,
or if both are direct and owned by a single process.
Note that in the nondirect case it is not necessary for the calling
threads to share an address space,
only for their related rendering contexts to share an address space.
.P
Not all values for GL state can be copied.
For example,
pixel pack and unpack state,
render mode state,
and select and feedback state are not copied.
The state that can be copied is exactly the state that is manipulated
by the GL command 
.br
\f3glPushAttrib\fP.
.P
An implicit \f3glFlush\fP is done by \f3glXCopyContext\fP if \f2src\fP is the current
context for the calling thread.
.SH NOTES
.P
A \f2process\fP is a single execution environment,
implemented in a single address space,
consisting of one or more threads.
.P
A \f2thread\fP is one of a set of subprocesses that share
a single address space,
but maintain separate program counters,
stack spaces,
and other related global data.
A \f2thread\fP that is the only member of its subprocess group
is equivalent to a \f2process\fP.
.SH ERRORS
\f3BadMatch\fP is generated if rendering contexts \f2src\fP and \f2dst\fP
do not share an address space
or were not created with respect to the same screen.
.P
\f3BadAccess\fP is generated if \f2dst\fP is current to any thread
(including the calling thread) at the time \f3glXCopyContext\fP is called.
.P
\f3GLXBadCurrentWindow\fP is generated if \f2src\fP is the current
context and the current drawable is a window that is no longer valid.
.P
\f3GLXBadContext\fP is generated if either \f2src\fP or \f2dst\fP is not
a valid GLX context.
.SH SEE ALSO
\f3glPushAttrib\fP,
\f3glXCreateContext\fP,
\f3glXIsDirect\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
