head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.19.59.42;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.42;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.23.31;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"
.\" $XFree86: xc/doc/man/Xi/XChMMap.man,v 1.2 2001/01/27 18:20:21 dawes Exp $
.\"
.\"
.\" Copyright ([\d,\s]*) by Hewlett-Packard Company, Ardent Computer, 
.\" 
.\" Permission to use, copy, modify, distribute, and sell this documentation 
.\" for any purpose and without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" Ardent, and Hewlett-Packard make no representations about the 
.\" suitability for any purpose of the information in this document.  It is 
.\" provided \`\`as is'' without express or implied warranty.
.\" 
.\" $Xorg: XChMMap.man,v 1.3 2000/08/17 19:41:56 cpqbld Exp $
.ds xL Programming With Xlib
.TH XGetDeviceModifierMapping 3X11 __xorgversion__  "X FUNCTIONS"
.SH NAME
XGetDeviceModifierMapping, XSetDeviceModifierMapping \- query or change device modifier mappings
.SH SYNTAX
\fB
XSetDeviceModifierMapping(\^\fIdisplay\fP, \fIdevice\fP, \fImodmap\fP\^)
.nf
      Display *\fIdisplay\fP\^;
      XDevice *\fIdevice\fP\^;
      XModifierKeymap  *\fImodmap\fP\^;

XModifierKeymap *XGetDeviceModifierMapping(\^\fIdisplay\fP, \fIdevice\fP\^)
      Display *\fIdisplay\fP\^;
      XDevice *\fIdevice\fP\^;
.fi
\fP
.SH ARGUMENTS
.TP 12
.I display
Specifies the connection to the X server.
.TP 12
.I device
Specifies the device whose modifier mapping is to be queried or modified.
.TP 12
.I modmap
Specifies a pointer to the \fIXModifierKeymap\fP structure.
.SH DESCRIPTION
The \fIXSetDeviceModifierMapping\fP
request specifies the KeyCodes of the keys (if any) that are to be used 
as modifiers for the specified device.
If it succeeds, the X server generates a \fIDeviceMappingNotify\fP
event, and \fIXSetDeviceModifierMapping\fP returns \fIMappingSuccess\fP.
X permits at most eight modifier keys.
If more than eight are specified in the
\fIXModifierKeymap\fP structure, a \fIBadLength\fP
error results.
.LP
The modifiermap member of the \fIXModifierKeymap\fP
structure contains eight sets of max_keypermod KeyCodes, 
one for each modifier in the order 
\fIShift\fP,
\fILock\fP,
\fIControl\fP,
\fIMod1\fP,
\fIMod2\fP,
\fIMod3\fP,
\fIMod4\fP,
and 
\fIMod5\fP.
Only nonzero KeyCodes have meaning in each set, 
and zero KeyCodes are ignored.
In addition, all of the nonzero KeyCodes must be in the range specified by 
min_keycode and max_keycode as returned by
\fIXListInputDevices\fP, or a \fIBadValue\fP
error results.
No KeyCode may appear twice in the entire map,
or a
\fIBadValue\fP
error results.
.LP
An X server can impose restrictions on how modifiers can be changed, 
for example,
if certain keys do not generate up transitions in hardware,
if auto-repeat cannot be disabled on certain keys,
or if multiple modifier keys are not supported.  
If some such restriction is violated, 
the status reply is
\fIMappingFailed\fP,
and none of the modifiers are changed.
If the new KeyCodes specified for a modifier differ from those
currently defined and any (current or new) keys for that modifier are
in the logically down state, 
\fIXSetDeviceModifierMapping\fP
returns \fIMappingBusy\fP,
and none of the modifiers is changed.
.LP
\fIXSetDeviceModifierMapping\fP
can generate \fIBadLength\P, \fIBadDevice\fP, \fIBadMatch\fP, \fIBadAlloc\fP,
and \fIBadValue\fP errors.
.LP
The
\fIXGetDeviceModifierMapping\fP
request returns a pointer to a newly created
\fIXModifierKeymap\fP
structure that contains the keys being used as modifiers.
The structure should be freed after use by calling
\fIXFreeModifierMapping \fP.
If only zero values appear in the set for any modifier, 
that modifier is disabled.
.LP
\fIXGetDeviceModifierMapping\fP
can generate \fIBadDevice\fP and \fIBadMatch\fP errors.
.SH STRUCTURES
The \fIXModifierKeymap\fP structure contains:
.LP
.nf
typedef struct {
	int max_keypermod;
	KeyCode *modifiermap;
} XModifierKeymap;
.fi
.LP
.SH DIAGNOSTICS
.TP 12
\fIBadLength\fP
More than eight keys were specified in the
\fIXModifierKeymap\fP structure.
.TP 12
\fIBadAlloc\fP
The server failed to allocate the requested resource or server memory.
.TP 12
\fIBadDevice\fP
An invalid device was specified.  The specified device does not exist or has 
not been opened by this client via \fIXOpenInputDevice\fP.  This error may
also occur if the specified device is the X keyboard or X pointer device.
.TP 12
\fIBadMatch\fP
This error may occur if an \fIXGetDeviceModifierMapping\fP 
or \fIXChangeDeviceModifierMapping\fP request was made 
specifying
a device that has no keys.
.TP 12
\fIBadValue\fP
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.SH "SEE ALSO"
XSetDeviceKeyMapping(3X11) 
.br
XSetDeviceButtonMapping(3X11) 
.br
\fI\*(xL\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d2 1
a2 1
.\" $XFree86: xc/doc/man/Xi/XChMMap.man,v 1.3 2003/04/28 22:18:14 herrb Exp $
d21 9
a29 6
.HP
int XSetDeviceModifierMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, XModifierKeymap  *\fImodmap\fP\^); 
.HP
XModifierKeymap *XGetDeviceModifierMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^);
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d2 1
a2 1
.\" $XFree86: xc/doc/man/Xi/XChMMap.man,v 1.3 2003/04/28 22:18:14 herrb Exp $
d21 9
a29 6
.HP
int XSetDeviceModifierMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, XModifierKeymap  *\fImodmap\fP\^); 
.HP
XModifierKeymap *XGetDeviceModifierMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^);
@

