head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.19.59.46;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.46;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"
.\" $XFree86: xc/doc/man/Xi/XSeDvFoc.man,v 1.2 2001/01/27 18:20:21 dawes Exp $
.\"
.\"
.\" Copyright ([\d,\s]*) by Hewlett-Packard Company, Ardent Computer, 
.\" 
.\" Permission to use, copy, modify, distribute, and sell this documentation 
.\" for any purpose and without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" Ardent, and Hewlett-Packard make no representations about the 
.\" suitability for any purpose of the information in this document.  It is 
.\" provided \`\`as is'' without express or implied warranty.
.\" 
.\" $Xorg: XSeDvFoc.man,v 1.3 2000/08/17 19:41:57 cpqbld Exp $
.ds xL Programming with Xlib
.TH XSetDeviceFocus 3X11 __xorgversion__ "X FUNCTIONS"
.SH NAME
XSetDeviceFocus, XGetDeviceFocus \- control extension input device focus
.SH SYNTAX
XSetDeviceFocus\^(\^\fIdisplay\fP, \fIdevice\fP\^, \fIfocus\fP\^, \fIrevert_to\fP\^, \fItime\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Display *\fIdevice\fP\^;
.br
      Window \fIfocus\fP\^;
.br
      int \fIrevert_to\fP\^; 
.br
      Time \fItime\fP\^; 
.sp
XGetDeviceFocus\^(\^\fIdisplay\fP, \fIdevice\fP\^, \fIfocus_return\fP\^, 
\fIrevert_to_return\fP, \fItime_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Display *\fIdevice\fP\^;
.br
      Window *\fIfocus_return\fP\^;
.br
      int *\fIrevert_to_return\fP\^;
.br
      int *\fItime_return\fP\^;
.SH ARGUMENTS
.TP 12
.I display
Specifies the connection to the X server.
.TP 12
.I device
Specifies the device whose focus is to be queried or changed.
.TP 12
.I focus
Specifies the window,
\fIPointerRoot\fP,
\fIFollowKeyboard\fP,
or
\fINone\fP.
.TP 12
.I focus_return
Returns the focus window,
\fIPointerRoot\fP,
\fIFollowKeyboard\fP,
or 
\fINone\fP.
.TP 12
.I revert_to
Specifies where the input focus reverts to if the window becomes not
viewable.
You can pass 
\fIRevertToParent\fP, 
\fIRevertToPointerRoot\fP, 
\fIRevertToFollowKeyboard\fP, 
or 
\fIRevertToNone\fP.
.TP 12
.I revert_to_return
Returns the current focus state
\fIRevertToParent\fP, 
\fIRevertToPointerRoot\fP, 
\fIRevertToFollowKeyboard\fP, 
or 
\fIRevertToNone\fP.
.TP 12
.I time_return
Returns the last_focus_time for the device.
.TP 12
.I time
Specifies the time.
You can pass either a timestamp or
\fICurrentTime\fP.
.SH DESCRIPTION
The \fIXSetDeviceFocus\fP
request changes the focus of the specified device and its last-focus-change 
time.
It has no effect if the specified time is earlier than the current
last-focus-change time or is later than the current X server time.
Otherwise, the last-focus-change time is set to the specified time
\fICurrentTime\fP
is replaced by the current X server time).
\fIXSetDeviceFocus\fP
causes the X server to generate
\fIDeviceFocusIn\fP
and 
\fIDeviceFocusOut\fP
events.
.LP
Depending on the focus argument,
the following occurs: 
.IP \(bu 5
If focus is
\fINone\fP ,
all device events are discarded until a new focus window is set,
and the revert_to argument is ignored.
.IP \(bu 5
If focus is a window, 
it becomes the device's focus window.
If a generated device event would normally be reported to this window
or one of its inferiors, the event is reported as usual. 
Otherwise, the event is reported relative to the focus window.
.IP \(bu 5
If focus is
\fIPointerRoot\fP,
the focus window is dynamically taken to be the root window of whatever screen 
the pointer is on at each event from the specified device.  
In this case, the revert_to argument is ignored.
.IP \(bu 5
If focus is
\fIFollowKeyboard\fP,
the focus window is dynamically taken to be the window to which the X keyboard
focus is set at each input event.
.LP
The specified focus window must be viewable at the time 
\fIXSetDeviceFocus\fP
is called,
or a
\fIBadMatch\fP
error results.
If the focus window later becomes not viewable, 
the X server
evaluates the revert_to argument to determine the new focus window as follows: 
.IP \(bu 5
If revert_to is
\fIRevertToParent\fP,
the focus reverts to the parent (or the closest viewable ancestor), 
and the new revert_to value is taken to be
\fIRevertToNone\fP.  
.IP \(bu 5
If revert_to is
\fIRevertToPointerRoot\fP,
\fIRevertToFollowKeyboard\fP,
or 
\fIRevertToNone\fP,
the focus reverts to
\fIPointerRoot\fP,
\fIFollowKeyboard\fP,
or
\fINone\fP,
respectively.
.LP
When the focus reverts,
the X server generates
\fIDeviceFocusIn\fP
and
\fIDeviceFocusOut\fP
events, but the last-focus-change time is not affected.
.LP
Input extension devices are not required to support the ability to be focused.
Attempting to set the focus of a device that does not support this request
will result in a \fIBadMatch\fP error.  Whether or not given device can
support this request can be determined by the information returned by
\fIXOpenDevice\fP.
For those devices that
support focus, \fIXOpenDevice\fP will return an
\fIXInputClassInfo\fP structure with the input_class field
equal to the constant \fIFocusClass\fP (defined in the file \fIXI.h\fP).
.LP
\fIXSetDeviceFocus\fP
can generate
\fIBadDevice\fP,
\fIBadMatch\fP,
\fIBadValue\fP,
and
\fIBadWindow\fP
errors.
.LP
The
\fIXGetDeviceFocus\fP
request returns the focus window and the current focus state.
.LP
Not all input extension devices can be focused.  Attempting to query the
focus state of a device that can't be focused results in a \fIBadMatch\fP
error.  A device that can be focused returns information for input Class
Focus when an \fIXOpenDevice\fP request is made.
.LP
\fIXGetDeviceFocus\fP can generate \fIBadDevice\fP,
and \fIBadMatch\fP errors.
.SH DIAGNOSTICS
.TP 12
\fIBadDevice\fP
An invalid device was specified.  The specified device does not exist or has 
not been opened by this client via \fIXOpenInputDevice\fP.  This error may
also occur if the specified device is the X keyboard or X pointer device.
.TP 12
\fIBadValue\fP
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.TP 12
\fIBadWindow\fP
A value for a Window argument does not name a defined Window.
.TP 12
\fIBadMatch\fP
This error may occur if an \fIXGetDeviceFocus\fP or \fIXSetDeviceFocus\fP
request was made specifying a device that the server implementation does not 
allow to be focused.
.SH "SEE ALSO"
.br
\fI\*(xL\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
