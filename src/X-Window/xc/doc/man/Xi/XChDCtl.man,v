head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.19.59.42;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.42;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.23.29;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"
.\" $XFree86: xc/doc/man/Xi/XChDCtl.man,v 1.2 2001/01/27 18:20:20 dawes Exp $
.\"
.\"
.\" Copyright ([\d,\s]*) by Hewlett-Packard Company, Ardent Computer, 
.\" 
.\" Permission to use, copy, modify, distribute, and sell this documentation 
.\" for any purpose and without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" Ardent, and Hewlett-Packard make no representations about the 
.\" suitability for any purpose of the information in this document.  It is 
.\" provided \`\`as is'' without express or implied warranty.
.\" 
.\" $Xorg: XChDCtl.man,v 1.3 2000/08/17 19:41:56 cpqbld Exp $
.ds xL Programming With Xlib
.TH XGetDeviceControl 3X11 __xorgversion__ "X FUNCTIONS"
.SH NAME
XGetDeviceControl, XChangeDeviceControl \- query and change input device controls
.SH SYNTAX
XDeviceControl *
XGetDeviceControl\^(\^\fIdisplay\fP, \fIdevice\fP\^, \fIcontrol\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      XDevice *\fIdevice\fP\^; 
.br
      int *\fIcontrolType\fP\^; 
.br
.sp 
int XChangeDeviceControl\^(\^\fIdisplay\fP, \fIdevice\fP\^, \fIcontrolType\fP\^, \fIcontrol\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      XDevice *\fIdevice\fP\^; 
.br
      int \fIcontrolType\fP\^; 
.br
      XDeviceControl *\fIcontrol\fP\^; 
.SH ARGUMENTS
.TP 15
.I display
Specifies the connection to the X server.
.TP 15
.I device
Specifies the device whose control is to be interrogated or modified.
.TP 15
.I controlType
Specifies the type of control to be interrogated or changed.
.TP 15 
.I control
Specifies the address of an \fIXDeviceControl\fP structure that contains
the new values for the Device.
.SH DESCRIPTION
These requests are provided to manipulate those input devices that
support device control.  A \fIBadMatch\fP error will be generated if the
requested device does not support any device controls.
.LP
Valid device control types that can be used with these requests include the
following:
.TP 20
DEVICE_RESOLUTION
Queries or changes the resolution of valuators on input devices.
.LP
The \fIXGetDeviceControl\fP request returns a pointer to an
\fIXDeviceControl\fP structure. 
.LP
\fIXGetDeviceControl\fP can generate a \fIBadDevice\fP or
\fIBadMatch\fP error.
.LP
The \fIXChangeDeviceControl\fP request modifies the values of one 
control on the specified device.  The control is identified by the id
field of the \fIXDeviceControl\fP structure that is passed with the
request.
.LP
\fIXChangeDeviceControl\fP can generate a \fIBadDevice\fP,
\fIBadMatch\fP, or \fIBadValue\fP  error.
.SH STRUCTURES
Each control is described by a structure specific to that control.
These structures are defined in the file \fIXInput.h\fP.
.LP
\fIXDeviceControl\fP is a generic 
structure that contains two fields that are at the beginning of each class
of control:
.LP
.DS
.nf
typedef struct {
.br
	XID class;                         
.br
	int length;                                      
.br
} XDeviceControl;
.fi
.DE
.LP
The \fIXDeviceResolutionState\fP structure defines the information that is
returned for device resolution for devices with valuators.
.LP
.DS
.nf
typedef struct {
	XID     control;
	int     length;
	int     num_valuators;
	int     *resolutions;
	int     *min_resolutions;
	int     *max_resolutions;
} XDeviceResolutionState;
.fi
.DE
.LP
The \fIXDeviceResolutionControl\fP structure defines the attributes that can be
controlled for keyboard Devices.
.LP
.DS
.nf
typedef struct {
	XID     control;
	int     length;
	int     first_valuator;
	int     num_valuators;
	int     *resolutions;
} XDeviceResolutionControl;
.fi
.DE
.SH DIAGNOSTICS
.TP 12
\fIBadDevice\fP
An invalid device was specified.  The specified device does not exist or has 
not been opened by this client via \fIXOpenInputDevice\fP.  This error may
also occur if some other client has caused the specified device to become
the X keyboard or X pointer device via the \fIXChangeKeyboardDevice\fP or
\fIXChangePointerDevice\fP requests.
.TP 12
\fIBadMatch\fP
This error may occur if an \fIXGetDeviceControl\fP request was made specifying
a device that has no controls or an \fIXChangeDeviceControl\fP request was
made with an \fIXDeviceControl\fP structure that contains an invalid Device
type.  It may also occur if an invalid combination of mask bits is specified
(\fIDvKey\fP but no \fIDvAutoRepeatMode\fP for keyboard Devices), or if an 
invalid KeySym is specified for a string Device.
.TP 12
\fIBadValue\fP
Some numeric value falls outside the range of values accepted by the 
\fIXChangeDeviceControl\fP request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.SH "SEE ALSO"
.br
\fI\*(xL\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d2 1
a2 1
.\" $XFree86: xc/doc/man/Xi/XChDCtl.man,v 1.3 2003/04/28 22:18:14 herrb Exp $
d20 19
a38 6
.HP
XDeviceControl *XGetDeviceControl\^(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, int *\fIcontrolType\fP\^); 
.HP
int XChangeDeviceControl\^(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, int \fIcontrolType\fP\^, XDeviceControl *\fIcontrol\fP\^); 
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d2 1
a2 1
.\" $XFree86: xc/doc/man/Xi/XChDCtl.man,v 1.3 2003/04/28 22:18:14 herrb Exp $
d20 19
a38 6
.HP
XDeviceControl *XGetDeviceControl\^(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, int *\fIcontrolType\fP\^); 
.HP
int XChangeDeviceControl\^(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, int \fIcontrolType\fP\^, XDeviceControl *\fIcontrol\fP\^); 
@

