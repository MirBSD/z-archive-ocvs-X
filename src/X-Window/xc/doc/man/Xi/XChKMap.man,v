head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.19.59.42;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.19.59.42;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.23.30;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.02.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"
.\" $XFree86: xc/doc/man/Xi/XChKMap.man,v 1.2 2001/01/27 18:20:20 dawes Exp $
.\"
.\"
.\" Copyright ([\d,\s]*) by Hewlett-Packard Company, Ardent Computer, 
.\" 
.\" Permission to use, copy, modify, distribute, and sell this documentation 
.\" for any purpose and without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" Ardent, and Hewlett-Packard make no representations about the 
.\" suitability for any purpose of the information in this document.  It is 
.\" provided \`\`as is'' without express or implied warranty.
.\" 
.\" $Xorg: XChKMap.man,v 1.3 2000/08/17 19:41:56 cpqbld Exp $
.ds xL Programming with Xlib
.TH XGetDeviceKeyMapping 3X11 __xorgversion__ "X FUNCTIONS"
.SH NAME
XGetDeviceKeyMapping, XChangeDeviceKeyMapping \- query or change device key mappings
.SH SYNTAX
\fB
XChangeDeviceKeyMapping(\^\fIdisplay\fP, \fIdevice\fP, \fIfirst_keycode\fP, 
\fIkeysyms_per_keycode\fP, \fIkeysyms\fP, \fIkeycode_count\fP\^)
.nf
      Display *\fIdisplay\fP\^;
      XDevice *\fIdevice\fP\^;
      int \fIfirst_keycode\fP\^;
      int \fIkeysyms_per_keycode\fP\^;
      KeySym *\fIkeysyms\fP\^;
      int \fIkeycode_count\fP\^;

KeySym *XGetDeviceKeyMapping(\^\fIdisplay\fP, \fIdevice\fP, \fIfirst_keycode\fP, \fIkeycode_count\fP,
\fIkeysyms_per_keycode_return\fP\^)
      Display *\fIdisplay\fP\^;
      XDevice *\fIdevice\fP\^;
      KeyCode \fIfirst_keycode\fP\^;
      int \fIkeycode_count\fP\^;
      int *\fIkeysyms_per_keycode_return\fP\^;
.fi
\fP
.SH ARGUMENTS
.TP 12
.I display
Specifies the connection to the X server.
.TP 12
.I device
Specifies the device whose key mapping is to be queried or modified.
.TP 12
.I first_keycode
Specifies the first KeyCode to be returned.
.TP 12
.I keycode_count
Specifies the number of KeyCodes to be returned or modified.
.TP 12
.I keysyms_per_keycode
Specifies the number of KeySyms per KeyCode.
.TP 12
.I keysyms_per_keycode_return
Specifies the address of a variable into which the number of KeySyms per KeyCode
will be returned.
.TP 12
.I keysyms
Specifies the address of an array of KeySyms.
.SH DESCRIPTION
For the specified device,
the \fIXGetDeviceKeyMapping\fP request returns
the symbols for the specified number of KeyCodes
starting with first_keycode.
The value specified in first_keycode must be greater than 
or equal to min_keycode as returned by
\fIXListInputDevices\fP, 
or a
\fIBadValue\fP
error results.
In addition, the following expression must be less than or equal 
to max_keycode as returned by
\fIXListInputDevices\fP:
.LP
.DS 
first_keycode + keycode_count \- 1
.DE
.LP
If this is not the case, a 
\fIBadValue\fP
error results. 
The number of elements in the KeySyms list is:
.LP
.DS 
keycode_count * keysyms_per_keycode_return
.DE
.LP
KeySym number N, counting from zero, for KeyCode K has the following index
in the list, counting from zero: 
.DS
(K \- first_code) * keysyms_per_code_return + N
.DE
.LP
The X server arbitrarily chooses the keysyms_per_keycode_return value 
to be large enough to report all requested symbols. 
A special KeySym value of 
\fINoSymbol\fP
is used to fill in unused elements for
individual KeyCodes.
To free the storage returned by 
\fIXGetDeviceKeyMapping\fP,
use
\fIXFree\fP.
.LP
If the specified device does not support input class keys, a \fIBadMatch\fP
error will result.
.LP
\fIXGetDeviceKeyMapping\fP
can generate a \fIBadDevice\fP, \fIBadMatch\fP, or \fIBadValue\fP
error.
.LP
For the specified device, the \fIXChangeDeviceKeyMapping\fP
request defines the symbols for the specified number of KeyCodes
starting with first_keycode.
The symbols for KeyCodes outside this range remain unchanged.  
The number of elements in keysyms must be:
.LP
.DS
num_codes * keysyms_per_keycode
.DE
.LP
The specified first_keycode must be greater than or equal to min_keycode 
returned by \fIXListInputDevices\fP, or a \fIBadValue\fP error results.
In addition, the following expression must be less than or equal to 
max_keycode as returned by
\fIXListInputDevices\fP, or a \fIBadValue\fP error results:
.LP
.DS
first_keycode + num_codes \- 1
.DE
.LP
KeySym number N, counting from zero, for KeyCode K has the following index
in keysyms, counting from zero: 
.LP
.DS 
(K \- first_keycode) * keysyms_per_keycode + N
.DE
.LP
The specified keysyms_per_keycode can be chosen arbitrarily by the client
to be large enough to hold all desired symbols. 
A special KeySym value of 
\fINoSymbol\fP
should be used to fill in unused elements 
for individual KeyCodes.  
It is legal for 
\fINoSymbol\fP 
to appear in nontrailing positions
of the effective list for a KeyCode.
\fIXChangeDeviceKeyMapping\fP generates a \fIDeviceMappingNotify\fP
event that is sent to all clients that have selected that type of event.
.LP
There is no requirement that the X server interpret this mapping. 
It is merely stored for reading and writing by clients.
.LP
If the specified device does not support input class keys, a \fIBadMatch\fP
error results.
.LP
\fIXChangeDeviceKeyMapping\fP can generate a \fIBadDevice\fP,
\fIBadMatch\fP, \fIBadAlloc\fP, or \fIBadValue\fP  error.
.LP
.SH DIAGNOSTICS
.TP 12
\fIBadDevice\fP
An invalid device was specified.  The specified device does not exist or has 
not been opened by this client via \fIXOpenInputDevice\fP.  This error may
also occur if the specified device is the X keyboard or X pointer device.
.TP 12
\fIBadMatch\fP
This error may occur if an \fIXGetDeviceKeyMapping\fP or 
\fIXChangeDeviceKeyMapping\fP request was made 
specifying
a device that has no keys.
.TP 12
\fIBadValue\fP
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.TP 12
\fIBadAlloc\fP
The server failed to allocate the requested resource or server memory.
.SH "SEE ALSO"
XSetDeviceButtonMapping(3X11) 
.br
XSetDeviceModifierMapping(3X11) 
.br
\fI\*(xL\fP
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d2 1
a2 1
.\" $XFree86: xc/doc/man/Xi/XChKMap.man,v 1.3 2003/04/28 22:18:14 herrb Exp $
d21 17
a37 7
int XChangeDeviceKeyMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, int \fIfirst_keycode\fP\^, int \fIkeysyms_per_keycode\fP\^,
KeySym *\fIkeysyms\fP\^, int \fIkeycode_count\fP\^); 
.HP
KeySym *XGetDeviceKeyMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, KeyCode \fIfirst_keycode\fP\^, int \fIkeycode_count\fP\^, int
*\fIkeysyms_per_keycode_return\fP\^); 
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d2 1
a2 1
.\" $XFree86: xc/doc/man/Xi/XChKMap.man,v 1.3 2003/04/28 22:18:14 herrb Exp $
d21 17
a37 7
int XChangeDeviceKeyMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, int \fIfirst_keycode\fP\^, int \fIkeysyms_per_keycode\fP\^,
KeySym *\fIkeysyms\fP\^, int \fIkeycode_count\fP\^); 
.HP
KeySym *XGetDeviceKeyMapping(\^Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, KeyCode \fIfirst_keycode\fP\^, int \fIkeycode_count\fP\^, int
*\fIkeysyms_per_keycode_return\fP\^); 
@

