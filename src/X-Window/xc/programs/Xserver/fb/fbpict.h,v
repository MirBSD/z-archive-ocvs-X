head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.06.22;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.06.22;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.35.05;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.21.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 * $XFree86: xc/programs/Xserver/fb/fbpict.h,v 1.8 2001/08/16 08:03:25 keithp Exp $
 *
 * Copyright © 2000 Keith Packard, member of The XFree86 Project, Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Keith Packard not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Keith Packard makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _FBPICT_H_
#define _FBPICT_H_

#define FbIntMult(a,b,t) ( (t) = (a) * (b) + 0x80, ( ( ( (t)>>8 ) + (t) )>>8 ) )
#define FbIntDiv(a,b)	 (((CARD16) (a) * 255) / (b))

#define FbGet8(v,i)   ((CARD16) (CARD8) ((v) >> i))

/*
 * There are two ways of handling alpha -- either as a single unified value or
 * a separate value for each component, hence each macro must have two
 * versions.  The unified alpha version has a 'U' at the end of the name,
 * the component version has a 'C'.  Similarly, functions which deal with
 * this difference will have two versions using the same convention.
 */

#define FbOverU(x,y,i,a,t) ((t) = FbIntMult(FbGet8(y,i),(a),(t)) + FbGet8(x,i),\
			   (CARD32) ((CARD8) ((t) | (0 - ((t) >> 8)))) << (i))

#define FbOverC(x,y,i,a,t) ((t) = FbIntMult(FbGet8(y,i),FbGet8(a,i),(t)) + FbGet8(x,i),\
			    (CARD32) ((CARD8) ((t) | (0 - ((t) >> 8)))) << (i))

#define FbInU(x,i,a,t) ((CARD32) FbIntMult(FbGet8(x,i),(a),(t)) << (i))

#define FbInC(x,i,a,t) ((CARD32) FbIntMult(FbGet8(x,i),FbGet8(a,i),(t)) << (i))

#define FbGen(x,y,i,ax,ay,t,u,v) ((t) = (FbIntMult(FbGet8(y,i),ay,(u)) + \
					 FbIntMult(FbGet8(x,i),ax,(v))),\
				  (CARD32) ((CARD8) ((t) | \
						     (0 - ((t) >> 8)))) << (i))

#define FbAdd(x,y,i,t)	((t) = FbGet8(x,i) + FbGet8(y,i), \
			 (CARD32) ((CARD8) ((t) | (0 - ((t) >> 8)))) << (i))


typedef void	(*CompositeFunc) (CARD8      op,
				  PicturePtr pSrc,
				  PicturePtr pMask,
				  PicturePtr pDst,
				  INT16      xSrc,
				  INT16      ySrc,
				  INT16      xMask,
				  INT16      yMask,
				  INT16      xDst,
				  INT16      yDst,
				  CARD16     width,
				  CARD16     height);

typedef struct _FbCompositeOperand FbCompositeOperand;

typedef CARD32 (*FbCompositeFetch)(FbCompositeOperand *op);
typedef void (*FbCompositeStore) (FbCompositeOperand *op, CARD32 value);

struct _FbCompositeOperand {
    FbBits		*line;
    CARD32		offset;
    FbStride		stride;
    int			xoff;
    int			yoff;
    int			bpp;
    FbCompositeFetch	fetch;
    FbCompositeFetch	fetcha;
    FbCompositeStore	store;
    miIndexedPtr	indexed;
};

typedef void (*FbCombineFunc) (FbCompositeOperand	*src,
			       FbCompositeOperand	*msk,
			       FbCompositeOperand	*dst);

/*
 * indexed by op
 */
extern FbCombineFunc	fbCombineFunc[];

typedef struct _FbAccessMap {
    CARD32		format;
    FbCompositeFetch	fetch;
    FbCompositeFetch	fetcha;
    FbCompositeStore	store;
} FbAccessMap;

/*
 * search on format
 */
extern FbAccessMap  fbAccessMap[];

/* fbcompose.c */

typedef struct _fbCompSrc {
    CARD32	value;
    CARD32	alpha;
} FbCompSrc;

/*
 * All compositing operators *
 */

CARD32
fbCombineMaskU (FbCompositeOperand   *src,
		FbCompositeOperand   *msk);

FbCompSrc
fbCombineMaskC (FbCompositeOperand   *src,
		FbCompositeOperand   *msk);

CARD32
fbCombineMaskValueC (FbCompositeOperand   *src,
		     FbCompositeOperand   *msk);

CARD32
fbCombineMaskAlphaU (FbCompositeOperand   *src,
		     FbCompositeOperand   *msk);

CARD32
fbCombineMaskAlphaC (FbCompositeOperand   *src,
		     FbCompositeOperand   *msk);


#if 0
CARD32
FbCombineMask (FbCompositeOperand   *src,
	       FbCompositeOperand   *msk);
#endif

void
fbCombineClear (FbCompositeOperand   *src,
		FbCompositeOperand   *msk,
		FbCompositeOperand   *dst);

void
fbCombineSrcU (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineSrcC (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineDst (FbCompositeOperand    *src,
	      FbCompositeOperand    *msk,
	      FbCompositeOperand    *dst);

void
fbCombineOverU (FbCompositeOperand   *src,
		FbCompositeOperand   *msk,
		FbCompositeOperand   *dst);

void
fbCombineOverC (FbCompositeOperand   *src,
		FbCompositeOperand   *msk,
		FbCompositeOperand   *dst);

void
fbCombineOverReverseU (FbCompositeOperand    *src,
		       FbCompositeOperand    *msk,
		       FbCompositeOperand    *dst);

void
fbCombineOverReverseC (FbCompositeOperand    *src,
		       FbCompositeOperand    *msk,
		       FbCompositeOperand    *dst);

void
fbCombineInU (FbCompositeOperand	    *src,
	      FbCompositeOperand	    *msk,
	      FbCompositeOperand	    *dst);

void
fbCombineInC (FbCompositeOperand	    *src,
	      FbCompositeOperand	    *msk,
	      FbCompositeOperand	    *dst);

void
fbCombineInReverseU (FbCompositeOperand  *src,
		     FbCompositeOperand  *msk,
		     FbCompositeOperand  *dst);

void
fbCombineInReverseC (FbCompositeOperand  *src,
		     FbCompositeOperand  *msk,
		     FbCompositeOperand  *dst);

void
fbCombineOutU (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineOutC (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineOutReverseU (FbCompositeOperand *src,
		      FbCompositeOperand *msk,
		      FbCompositeOperand *dst);

void
fbCombineOutReverseC (FbCompositeOperand *src,
		      FbCompositeOperand *msk,
		      FbCompositeOperand *dst);

void
fbCombineAtopU (FbCompositeOperand   *src,
		FbCompositeOperand   *msk,
		FbCompositeOperand   *dst);


void
fbCombineAtopC (FbCompositeOperand   *src,
		FbCompositeOperand   *msk,
		FbCompositeOperand   *dst);

void
fbCombineAtopReverseU (FbCompositeOperand    *src,
		       FbCompositeOperand    *msk,
		       FbCompositeOperand    *dst);

void
fbCombineAtopReverseC (FbCompositeOperand    *src,
		       FbCompositeOperand    *msk,
		       FbCompositeOperand    *dst);

void
fbCombineXorU (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineXorC (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);


void
fbCombineAddU (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineAddC (FbCompositeOperand    *src,
	       FbCompositeOperand    *msk,
	       FbCompositeOperand    *dst);

void
fbCombineSaturateU (FbCompositeOperand   *src,
		    FbCompositeOperand   *msk,
		    FbCompositeOperand   *dst);

void
fbCombineSaturateC (FbCompositeOperand   *src,
		    FbCompositeOperand   *msk,
		    FbCompositeOperand   *dst);

/*
 * All fetch functions
 */

CARD32
fbFetch_a8r8g8b8 (FbCompositeOperand *op);

CARD32
fbFetch_x8r8g8b8 (FbCompositeOperand *op);

CARD32
fbFetch_a8b8g8r8 (FbCompositeOperand *op);

CARD32
fbFetch_x8b8g8r8 (FbCompositeOperand *op);

CARD32
fbFetch_r8g8b8 (FbCompositeOperand *op);

CARD32
fbFetch_b8g8r8 (FbCompositeOperand *op);

CARD32
fbFetch_r5g6b5 (FbCompositeOperand *op);

CARD32
fbFetch_b5g6r5 (FbCompositeOperand *op);

CARD32
fbFetch_a1r5g5b5 (FbCompositeOperand *op);

CARD32
fbFetch_x1r5g5b5 (FbCompositeOperand *op);

CARD32
fbFetch_a1b5g5r5 (FbCompositeOperand *op);

CARD32
fbFetch_x1b5g5r5 (FbCompositeOperand *op);

CARD32
fbFetch_a8 (FbCompositeOperand *op);

CARD32
fbFetcha_a8 (FbCompositeOperand *op);

CARD32
fbFetch_r3g3b2 (FbCompositeOperand *op);

CARD32
fbFetch_b2g3r3 (FbCompositeOperand *op);

CARD32
fbFetch_a2r2g2b2 (FbCompositeOperand *op);

CARD32
fbFetch_a2b2g2r2 (FbCompositeOperand *op);

CARD32
fbFetch_a4 (FbCompositeOperand *op);

CARD32
fbFetcha_a4 (FbCompositeOperand *op);

CARD32
fbFetch_r1g2b1 (FbCompositeOperand *op);

CARD32
fbFetch_b1g2r1 (FbCompositeOperand *op);

CARD32
fbFetch_a1r1g1b1 (FbCompositeOperand *op);

CARD32
fbFetch_a1b1g1r1 (FbCompositeOperand *op);

CARD32
fbFetch_a1 (FbCompositeOperand *op);

CARD32
fbFetcha_a1 (FbCompositeOperand *op);

void
fbStore_a8r8g8b8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x8r8g8b8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a8b8g8r8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x8b8g8r8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_r8g8b8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_b8g8r8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_r5g6b5 (FbCompositeOperand *op, CARD32 value);

void
fbStore_b5g6r5 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a1r5g5b5 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x1r5g5b5 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a1b5g5r5 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x1b5g5r5 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_r3g3b2 (FbCompositeOperand *op, CARD32 value);

void
fbStore_b2g3r3 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a2r2g2b2 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_r1g2b1 (FbCompositeOperand *op, CARD32 value);

void
fbStore_b1g2r1 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a1r1g1b1 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a1b1g1r1 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a1 (FbCompositeOperand *op, CARD32 value);

CARD32
fbFetch_external (FbCompositeOperand *op);

CARD32
fbFetcha_external (FbCompositeOperand *op);

void
fbStore_external (FbCompositeOperand *op, CARD32 value);

Bool
fbBuildOneCompositeOperand (PicturePtr		pPict,
			    FbCompositeOperand	*op,
			    INT16		x,
			    INT16		y);

Bool
fbBuildCompositeOperand (PicturePtr	    pPict,
			 FbCompositeOperand *op,
			 INT16		    x,
			 INT16		    y);
void
fbCompositeGeneral (CARD8	op,
		    PicturePtr	pSrc,
		    PicturePtr	pMask,
		    PicturePtr	pDst,
		    INT16	xSrc,
		    INT16	ySrc,
		    INT16	xMask,
		    INT16	yMask,
		    INT16	xDst,
		    INT16	yDst,
		    CARD16	width,
		    CARD16	height);


/* fbpict.c */
CARD32
fbOver (CARD32 x, CARD32 y);

CARD32
fbOver24 (CARD32 x, CARD32 y);

CARD32
fbIn (CARD32 x, CARD8 y);

void
fbCompositeSolidMask_nx8x8888 (CARD8      op,
			       PicturePtr pSrc,
			       PicturePtr pMask,
			       PicturePtr pDst,
			       INT16      xSrc,
			       INT16      ySrc,
			       INT16      xMask,
			       INT16      yMask,
			       INT16      xDst,
			       INT16      yDst,
			       CARD16     width,
			       CARD16     height);

void
fbCompositeSolidMask_nx8x0888 (CARD8      op,
			       PicturePtr pSrc,
			       PicturePtr pMask,
			       PicturePtr pDst,
			       INT16      xSrc,
			       INT16      ySrc,
			       INT16      xMask,
			       INT16      yMask,
			       INT16      xDst,
			       INT16      yDst,
			       CARD16     width,
			       CARD16     height);

void
fbCompositeSolidMask_nx8888x8888C (CARD8      op,
				   PicturePtr pSrc,
				   PicturePtr pMask,
				   PicturePtr pDst,
				   INT16      xSrc,
				   INT16      ySrc,
				   INT16      xMask,
				   INT16      yMask,
				   INT16      xDst,
				   INT16      yDst,
				   CARD16     width,
				   CARD16     height);

void
fbCompositeSolidMask_nx8x0565 (CARD8      op,
			       PicturePtr pSrc,
			       PicturePtr pMask,
			       PicturePtr pDst,
			       INT16      xSrc,
			       INT16      ySrc,
			       INT16      xMask,
			       INT16      yMask,
			       INT16      xDst,
			       INT16      yDst,
			       CARD16     width,
			       CARD16     height);

void
fbCompositeSolidMask_nx8888x0565C (CARD8      op,
				   PicturePtr pSrc,
				   PicturePtr pMask,
				   PicturePtr pDst,
				   INT16      xSrc,
				   INT16      ySrc,
				   INT16      xMask,
				   INT16      yMask,
				   INT16      xDst,
				   INT16      yDst,
				   CARD16     width,
				   CARD16     height);

void
fbCompositeSrc_8888x8888 (CARD8      op,
			  PicturePtr pSrc,
			  PicturePtr pMask,
			  PicturePtr pDst,
			  INT16      xSrc,
			  INT16      ySrc,
			  INT16      xMask,
			  INT16      yMask,
			  INT16      xDst,
			  INT16      yDst,
			  CARD16     width,
			  CARD16     height);

void
fbCompositeSrc_8888x0888 (CARD8      op,
			 PicturePtr pSrc,
			 PicturePtr pMask,
			 PicturePtr pDst,
			 INT16      xSrc,
			 INT16      ySrc,
			 INT16      xMask,
			 INT16      yMask,
			 INT16      xDst,
			 INT16      yDst,
			 CARD16     width,
			 CARD16     height);

void
fbCompositeSrc_8888x0565 (CARD8      op,
			  PicturePtr pSrc,
			  PicturePtr pMask,
			  PicturePtr pDst,
			  INT16      xSrc,
			  INT16      ySrc,
			  INT16      xMask,
			  INT16      yMask,
			  INT16      xDst,
			  INT16      yDst,
			  CARD16     width,
			  CARD16     height);

void
fbCompositeSrc_0565x0565 (CARD8      op,
			  PicturePtr pSrc,
			  PicturePtr pMask,
			  PicturePtr pDst,
			  INT16      xSrc,
			  INT16      ySrc,
			  INT16      xMask,
			  INT16      yMask,
			  INT16      xDst,
			  INT16      yDst,
			  CARD16     width,
			  CARD16     height);

void
fbCompositeSrcAdd_8000x8000 (CARD8	op,
			     PicturePtr pSrc,
			     PicturePtr pMask,
			     PicturePtr pDst,
			     INT16      xSrc,
			     INT16      ySrc,
			     INT16      xMask,
			     INT16      yMask,
			     INT16      xDst,
			     INT16      yDst,
			     CARD16     width,
			     CARD16     height);

void
fbCompositeSrcAdd_8888x8888 (CARD8	op,
			     PicturePtr pSrc,
			     PicturePtr pMask,
			     PicturePtr pDst,
			     INT16      xSrc,
			     INT16      ySrc,
			     INT16      xMask,
			     INT16      yMask,
			     INT16      xDst,
			     INT16      yDst,
			     CARD16     width,
			     CARD16     height);

void
fbCompositeSrcAdd_1000x1000 (CARD8	op,
			     PicturePtr pSrc,
			     PicturePtr pMask,
			     PicturePtr pDst,
			     INT16      xSrc,
			     INT16      ySrc,
			     INT16      xMask,
			     INT16      yMask,
			     INT16      xDst,
			     INT16      yDst,
			     CARD16     width,
			     CARD16     height);

void
fbCompositeSolidMask_nx1xn (CARD8      op,
			    PicturePtr pSrc,
			    PicturePtr pMask,
			    PicturePtr pDst,
			    INT16      xSrc,
			    INT16      ySrc,
			    INT16      xMask,
			    INT16      yMask,
			    INT16      xDst,
			    INT16      yDst,
			    CARD16     width,
			    CARD16     height);

void
fbComposite (CARD8      op,
	     PicturePtr pSrc,
	     PicturePtr pMask,
	     PicturePtr pDst,
	     INT16      xSrc,
	     INT16      ySrc,
	     INT16      xMask,
	     INT16      yMask,
	     INT16      xDst,
	     INT16      yDst,
	     CARD16     width,
	     CARD16     height);

#endif /* _FBPICT_H_ */
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d2 1
a2 1
 * $XFree86: xc/programs/Xserver/fb/fbpict.h,v 1.11 2002/09/26 02:56:48 keithp Exp $
a77 3
typedef void (*FbCompositeStep) (FbCompositeOperand *op);
typedef void (*FbCompositeSet) (FbCompositeOperand *op, int x, int y);

d79 6
a84 25
    union {
	struct {
	    FbBits		*top_line;
	    int			left_offset;
	    
	    int			start_offset;
	    FbBits		*line;
	    CARD32		offset;
	    FbStride		stride;
	    int			bpp;
	} drawable;
	struct {
	    int			alpha_dx;
	    int			alpha_dy;
	} external;
	struct {
	    int			top_y;
	    int			left_x;
	    int			start_x;
	    int			x;
	    int			y;
	    PictTransformPtr	transform;
	    int			filter;
	} transform;
    } u;
a87 3
    FbCompositeStep	over;
    FbCompositeStep	down;
    FbCompositeSet	set;
a88 1
    RegionPtr		clip;
a281 215
CARD8
fbCombineDisjointOutPart (CARD8 a, CARD8 b);

CARD8
fbCombineDisjointInPart (CARD8 a, CARD8 b);

void
fbCombineDisjointGeneralU (FbCompositeOperand   *src,
			   FbCompositeOperand   *msk,
			   FbCompositeOperand   *dst,
			   CARD8		combine);

void
fbCombineDisjointGeneralC (FbCompositeOperand   *src,
			   FbCompositeOperand   *msk,
			   FbCompositeOperand   *dst,
			   CARD8		combine);

void
fbCombineDisjointOverU (FbCompositeOperand   *src,
			FbCompositeOperand   *msk,
			FbCompositeOperand   *dst);

void
fbCombineDisjointOverC (FbCompositeOperand   *src,
			FbCompositeOperand   *msk,
			FbCompositeOperand   *dst);

void
fbCombineDisjointOverReverseU (FbCompositeOperand    *src,
			       FbCompositeOperand    *msk,
			       FbCompositeOperand    *dst);

void
fbCombineDisjointOverReverseC (FbCompositeOperand    *src,
			       FbCompositeOperand    *msk,
			       FbCompositeOperand    *dst);

void
fbCombineDisjointInU (FbCompositeOperand	    *src,
		      FbCompositeOperand	    *msk,
		      FbCompositeOperand	    *dst);

void
fbCombineDisjointInC (FbCompositeOperand	    *src,
		      FbCompositeOperand	    *msk,
		      FbCompositeOperand	    *dst);

void
fbCombineDisjointInReverseU (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);

void
fbCombineDisjointInReverseC (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);

void
fbCombineDisjointOutU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineDisjointOutC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);
void
fbCombineDisjointOutReverseU (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineDisjointOutReverseC (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineDisjointAtopU (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineDisjointAtopC (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineDisjointAtopReverseU (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineDisjointAtopReverseC (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineDisjointXorU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineDisjointXorC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

CARD8
fbCombineConjointOutPart (CARD8 a, CARD8 b);

CARD8
fbCombineConjointInPart (CARD8 a, CARD8 b);


void
fbCombineConjointGeneralU (FbCompositeOperand   *src,
                           FbCompositeOperand   *msk,
                           FbCompositeOperand   *dst,
                           CARD8                combine);

void
fbCombineConjointGeneralC (FbCompositeOperand   *src,
                           FbCompositeOperand   *msk,
                           FbCompositeOperand   *dst,
                           CARD8                combine);

void
fbCombineConjointOverU (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineConjointOverC (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);
void
fbCombineConjointOverReverseU (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineConjointOverReverseC (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineConjointInU (FbCompositeOperand            *src,
                      FbCompositeOperand            *msk,
                      FbCompositeOperand            *dst);

void
fbCombineConjointInC (FbCompositeOperand            *src,
                      FbCompositeOperand            *msk,
                      FbCompositeOperand            *dst);

void
fbCombineConjointInReverseU (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);


void
fbCombineConjointInReverseC (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);

void
fbCombineConjointOutU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineConjointOutC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineConjointOutReverseU (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineConjointOutReverseC (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineConjointAtopU (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineConjointAtopC (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineConjointAtopReverseU (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);
void
fbCombineConjointAtopReverseC (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineConjointXorU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineConjointXorC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

a322 12
fbFetch_a4r4g4b4 (FbCompositeOperand *op);

CARD32
fbFetch_x4r4g4b4 (FbCompositeOperand *op);

CARD32
fbFetch_a4b4g4r4 (FbCompositeOperand *op);

CARD32
fbFetch_x4b4g4r4 (FbCompositeOperand *op);

CARD32
a340 3
fbFetch_c8 (FbCompositeOperand *op);

CARD32
a358 3
fbFetch_c4 (FbCompositeOperand *op);

CARD32
a363 3
CARD32
fbFetch_g1 (FbCompositeOperand *op);

a400 12
fbStore_a4r4g4b4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x4r4g4b4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a4b4g4r4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x4b4g4r4 (FbCompositeOperand *op, CARD32 value);

void
a412 7
fbStore_c8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_g8 (FbCompositeOperand *op, CARD32 value);


void
a427 6
fbStore_c4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_g4 (FbCompositeOperand *op, CARD32 value);

void
a429 3
void
fbStore_g1 (FbCompositeOperand *op, CARD32 value);

a433 6
fbFetch_transform (FbCompositeOperand *op);

CARD32
fbFetcha_transform (FbCompositeOperand *op);

CARD32
d449 1
a449 3
			 INT16		    y,
			 Bool		    transform,
			 Bool		    alpha);
a669 7

/* fbtrap.c */
void
fbRasterizeTrapezoid (PicturePtr    alpha,
		      xTrapezoid    *trap,
		      int	    x_off,
		      int	    y_off);
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d2 1
a2 1
 * $XFree86: xc/programs/Xserver/fb/fbpict.h,v 1.11 2002/09/26 02:56:48 keithp Exp $
a77 3
typedef void (*FbCompositeStep) (FbCompositeOperand *op);
typedef void (*FbCompositeSet) (FbCompositeOperand *op, int x, int y);

d79 6
a84 25
    union {
	struct {
	    FbBits		*top_line;
	    int			left_offset;
	    
	    int			start_offset;
	    FbBits		*line;
	    CARD32		offset;
	    FbStride		stride;
	    int			bpp;
	} drawable;
	struct {
	    int			alpha_dx;
	    int			alpha_dy;
	} external;
	struct {
	    int			top_y;
	    int			left_x;
	    int			start_x;
	    int			x;
	    int			y;
	    PictTransformPtr	transform;
	    int			filter;
	} transform;
    } u;
a87 3
    FbCompositeStep	over;
    FbCompositeStep	down;
    FbCompositeSet	set;
a88 1
    RegionPtr		clip;
a281 215
CARD8
fbCombineDisjointOutPart (CARD8 a, CARD8 b);

CARD8
fbCombineDisjointInPart (CARD8 a, CARD8 b);

void
fbCombineDisjointGeneralU (FbCompositeOperand   *src,
			   FbCompositeOperand   *msk,
			   FbCompositeOperand   *dst,
			   CARD8		combine);

void
fbCombineDisjointGeneralC (FbCompositeOperand   *src,
			   FbCompositeOperand   *msk,
			   FbCompositeOperand   *dst,
			   CARD8		combine);

void
fbCombineDisjointOverU (FbCompositeOperand   *src,
			FbCompositeOperand   *msk,
			FbCompositeOperand   *dst);

void
fbCombineDisjointOverC (FbCompositeOperand   *src,
			FbCompositeOperand   *msk,
			FbCompositeOperand   *dst);

void
fbCombineDisjointOverReverseU (FbCompositeOperand    *src,
			       FbCompositeOperand    *msk,
			       FbCompositeOperand    *dst);

void
fbCombineDisjointOverReverseC (FbCompositeOperand    *src,
			       FbCompositeOperand    *msk,
			       FbCompositeOperand    *dst);

void
fbCombineDisjointInU (FbCompositeOperand	    *src,
		      FbCompositeOperand	    *msk,
		      FbCompositeOperand	    *dst);

void
fbCombineDisjointInC (FbCompositeOperand	    *src,
		      FbCompositeOperand	    *msk,
		      FbCompositeOperand	    *dst);

void
fbCombineDisjointInReverseU (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);

void
fbCombineDisjointInReverseC (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);

void
fbCombineDisjointOutU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineDisjointOutC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);
void
fbCombineDisjointOutReverseU (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineDisjointOutReverseC (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineDisjointAtopU (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineDisjointAtopC (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineDisjointAtopReverseU (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineDisjointAtopReverseC (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineDisjointXorU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineDisjointXorC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

CARD8
fbCombineConjointOutPart (CARD8 a, CARD8 b);

CARD8
fbCombineConjointInPart (CARD8 a, CARD8 b);


void
fbCombineConjointGeneralU (FbCompositeOperand   *src,
                           FbCompositeOperand   *msk,
                           FbCompositeOperand   *dst,
                           CARD8                combine);

void
fbCombineConjointGeneralC (FbCompositeOperand   *src,
                           FbCompositeOperand   *msk,
                           FbCompositeOperand   *dst,
                           CARD8                combine);

void
fbCombineConjointOverU (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineConjointOverC (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);
void
fbCombineConjointOverReverseU (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineConjointOverReverseC (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineConjointInU (FbCompositeOperand            *src,
                      FbCompositeOperand            *msk,
                      FbCompositeOperand            *dst);

void
fbCombineConjointInC (FbCompositeOperand            *src,
                      FbCompositeOperand            *msk,
                      FbCompositeOperand            *dst);

void
fbCombineConjointInReverseU (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);


void
fbCombineConjointInReverseC (FbCompositeOperand  *src,
                             FbCompositeOperand  *msk,
                             FbCompositeOperand  *dst);

void
fbCombineConjointOutU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineConjointOutC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineConjointOutReverseU (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineConjointOutReverseC (FbCompositeOperand *src,
                              FbCompositeOperand *msk,
                              FbCompositeOperand *dst);

void
fbCombineConjointAtopU (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineConjointAtopC (FbCompositeOperand   *src,
                        FbCompositeOperand   *msk,
                        FbCompositeOperand   *dst);

void
fbCombineConjointAtopReverseU (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);
void
fbCombineConjointAtopReverseC (FbCompositeOperand    *src,
                               FbCompositeOperand    *msk,
                               FbCompositeOperand    *dst);

void
fbCombineConjointXorU (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

void
fbCombineConjointXorC (FbCompositeOperand    *src,
                       FbCompositeOperand    *msk,
                       FbCompositeOperand    *dst);

a322 12
fbFetch_a4r4g4b4 (FbCompositeOperand *op);

CARD32
fbFetch_x4r4g4b4 (FbCompositeOperand *op);

CARD32
fbFetch_a4b4g4r4 (FbCompositeOperand *op);

CARD32
fbFetch_x4b4g4r4 (FbCompositeOperand *op);

CARD32
a340 3
fbFetch_c8 (FbCompositeOperand *op);

CARD32
a358 3
fbFetch_c4 (FbCompositeOperand *op);

CARD32
a363 3
CARD32
fbFetch_g1 (FbCompositeOperand *op);

a400 12
fbStore_a4r4g4b4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x4r4g4b4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_a4b4g4r4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_x4b4g4r4 (FbCompositeOperand *op, CARD32 value);

void
a412 7
fbStore_c8 (FbCompositeOperand *op, CARD32 value);

void
fbStore_g8 (FbCompositeOperand *op, CARD32 value);


void
a427 6
fbStore_c4 (FbCompositeOperand *op, CARD32 value);

void
fbStore_g4 (FbCompositeOperand *op, CARD32 value);

void
a429 3
void
fbStore_g1 (FbCompositeOperand *op, CARD32 value);

a433 6
fbFetch_transform (FbCompositeOperand *op);

CARD32
fbFetcha_transform (FbCompositeOperand *op);

CARD32
d449 1
a449 3
			 INT16		    y,
			 Bool		    transform,
			 Bool		    alpha);
a669 7

/* fbtrap.c */
void
fbRasterizeTrapezoid (PicturePtr    alpha,
		      xTrapezoid    *trap,
		      int	    x_off,
		      int	    y_off);
@

