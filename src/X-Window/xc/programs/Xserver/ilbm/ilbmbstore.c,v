head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.09.26;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.09.26;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.26.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $XFree86: xc/programs/Xserver/ilbm/ilbmbstore.c,v 3.0 1996/08/18 01:53:43 dawes Exp $ */
/* $XConsortium: ilbmbstore.c,v 5.7 94/04/17 20:28:18 dpw Exp $ */
/* Combined Purdue/PurduePlus patches, level 2.0, 1/17/89 */
/*

Copyright (c) 1987  X Consortium

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of the X Consortium shall
not be used in advertising or otherwise to promote the sale, use or
other dealings in this Software without prior written authorization
from the X Consortium.

*/

/* Modified jun 95 by Geert Uytterhoeven (Geert.Uytterhoeven@@cs.kuleuven.ac.be)
   to use interleaved bitplanes instead of normal bitplanes */

#include	"ilbm.h"
#include	"X.h"
#include	"mibstore.h"
#include	"regionstr.h"
#include	"scrnintstr.h"
#include	"pixmapstr.h"
#include	"windowstr.h"

/*-
 *-----------------------------------------------------------------------
 * ilbmSaveAreas --
 *		Function called by miSaveAreas to actually fetch the areas to be
 *		saved into the backing pixmap. This is very simple to do, since
 *		ilbmDoBitblt is designed for this very thing. The region to save is
 *		already destination-relative and we're given the offset to the
 *		window origin, so we have only to create an array of points of the
 *		u.l. corners of the boxes in the region translated to the screen
 *		coordinate system and fetch the screen pixmap out of its devPrivate
 *		field....
 *
 * Results:
 *		None.
 *
 * Side Effects:
 *		Data are copied from the screen into the pixmap.
 *
 *-----------------------------------------------------------------------
 */
void
ilbmSaveAreas(pPixmap, prgnSave, xorg, yorg, pWin)
	PixmapPtr		  		pPixmap;  		/* Backing pixmap */
	RegionPtr		  		prgnSave; 		/* Region to save (pixmap-relative) */
	int					  		xorg;					/* X origin of region */
	int					  		yorg;					/* Y origin of region */
	WindowPtr				pWin;
{
	register DDXPointPtr pPt;
	DDXPointPtr				pPtsInit;
	register BoxPtr		pBox;
	register int		numRects;

	numRects = REGION_NUM_RECTS(prgnSave);
	pPtsInit = (DDXPointPtr)ALLOCATE_LOCAL(numRects * sizeof(DDXPointRec));
	if (!pPtsInit)
		return;

	pBox = REGION_RECTS(prgnSave);
	pPt = pPtsInit;
	while (numRects--) {
		pPt->x = pBox->x1 + xorg;
 		pPt->y = pBox->y1 + yorg;
 		pPt++;
 		pBox++;
	}

	ilbmDoBitblt((DrawablePtr)pPixmap->drawable.pScreen->devPrivates[ilbmScreenPrivateIndex].ptr,
				(DrawablePtr)pPixmap,
				GXcopy,
				prgnSave,
				pPtsInit, wBackingBitPlanes (pWin));

	DEALLOCATE_LOCAL(pPtsInit);
}

/*-
 *-----------------------------------------------------------------------
 * ilbmRestoreAreas --
 *		Function called by miRestoreAreas to actually fetch the areas to be
 *		restored from the backing pixmap. This is very simple to do, since
 *		ilbmDoBitblt is designed for this very thing. The region to restore is
 *		already destination-relative and we're given the offset to the
 *		window origin, so we have only to create an array of points of the
 *		u.l. corners of the boxes in the region translated to the pixmap
 *		coordinate system and fetch the screen pixmap out of its devPrivate
 *		field....
 *
 * Results:
 *		None.
 *
 * Side Effects:
 *		Data are copied from the pixmap into the screen.
 *
 *-----------------------------------------------------------------------
 */
void
ilbmRestoreAreas(pPixmap, prgnRestore, xorg, yorg, pWin)
	PixmapPtr		  		pPixmap;  		/* Backing pixmap */
	RegionPtr		  		prgnRestore; 		/* Region to restore (screen-relative)*/
	int					  		xorg;					/* X origin of window */
	int					  		yorg;					/* Y origin of window */
	WindowPtr				pWin;
{
	register DDXPointPtr pPt;
	DDXPointPtr				pPtsInit;
	register BoxPtr		pBox;
	register int		numRects;

	numRects = REGION_NUM_RECTS(prgnRestore);
	pPtsInit = (DDXPointPtr)ALLOCATE_LOCAL(numRects*sizeof(DDXPointRec));
	if (!pPtsInit)
		return;

	pBox = REGION_RECTS(prgnRestore);
	pPt = pPtsInit;
	while (numRects--) {
		pPt->x = pBox->x1 - xorg;
 		pPt->y = pBox->y1 - yorg;
 		pPt++;
 		pBox++;
	}

	ilbmDoBitblt((DrawablePtr)pPixmap,
				(DrawablePtr)pPixmap->drawable.pScreen->devPrivates[ilbmScreenPrivateIndex].ptr,
				GXcopy,
				prgnRestore,
				pPtsInit, wBackingBitPlanes (pWin));

	DEALLOCATE_LOCAL(pPtsInit);
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
