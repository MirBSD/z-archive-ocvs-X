head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407221130:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.08.52;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.08.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.37.36;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.25.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $XFree86: xc/programs/Xserver/hw/xfree86/os-support/lynxos/lynx_noinline.c,v 3.5 2000/07/31 23:25:18 tsi Exp $ */
/*
 * Copyright 1998 by Metro Link Incorporated
 *
 * Permission to use, copy, modify, distribute, and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and that
 * both that copyright notice and this permission notice appear in
 * supporting documentation, and that the name of Metro Link
 * Incorporated not be used in advertising or publicity pertaining to
 * distribution of the software without specific, written prior
 * permission.  Metro Link Incorporated makes no representations
 * about the suitability of this software for any purpose.  It is
 * provided "as is" without express or implied warranty.
 *
 * METRO LINK INCORPORATED DISCLAIMS ALL WARRANTIES WITH REGARD
 * TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL METRO LINK INCORPORATED BE
 * LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
 * DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
 * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 */

#if /* NO_INLINE && */ defined(__powerpc__)

extern volatile unsigned char *ioBase;

void
eieio()
{
	__asm__ __volatile__ ("eieio");
}

unsigned long
ldl_brx(volatile unsigned char *base, int ndx)
{
	register unsigned long tmp = *(volatile unsigned long *)(base+ndx);
	return( ((tmp & 0x000000ff) << 24) |
		((tmp & 0x0000ff00) << 8) |
		((tmp & 0x00ff0000) >> 8) |
		((tmp & 0xff000000) >> 24) );
}

unsigned short
ldw_brx(volatile unsigned char *base, int ndx)
{
	register unsigned short tmp = *(volatile unsigned short *)(base+ndx);
	return((tmp << 8) | (tmp >> 8));
}

void
stl_brx(unsigned long val, volatile unsigned char *base, int ndx)
{
   unsigned char *p = (unsigned char *)&val;
   unsigned long tmp = (p[3] << 24) | (p[2] << 16) | (p[1] << 8) | (p[0] << 0);
   *(volatile unsigned long *)(base+ndx) = tmp;
}

void
stw_brx(unsigned short val, volatile unsigned char *base, int ndx)
{
  unsigned char *p = (unsigned char *)&val;
  unsigned short tmp = (p[1] << 8) | p[0];
  *(volatile unsigned short *)(base+ndx) = tmp;
}

void
outb(unsigned short port, unsigned char value)
{
	*((volatile unsigned char *)(ioBase + port)) = value; eieio();
}

void
outw(unsigned short port, unsigned short value)
{
	stw_brx(value, ioBase, port); eieio();
}

void
outl(unsigned short port, unsigned int value)
{
	stl_brx(value, ioBase, port); eieio();
}

unsigned char
inb(unsigned short port)
{
	unsigned char val;

	val = *((volatile unsigned char *)(ioBase + port)); eieio();
	return(val);
}

unsigned short
inw(unsigned short port)
{
	unsigned short val;

	val = ldw_brx(ioBase, port); eieio();
	return(val);
}

unsigned int
inl(unsigned short port)
{
	unsigned int val;

	val = ldl_brx(ioBase, port); eieio();
	return(val);
}

unsigned long 
ldl_u(void *p)
{
	return (((*(unsigned char *)(p)) |
	 	 (*((unsigned char *)(p)+1)<<8)	|
		 (*((unsigned char *)(p)+2)<<16) |
		 (*((unsigned char *)(p)+3)<<24)));
}

unsigned long 
ldq_u(void *p)
{
	return ldl_u(p);
}

unsigned short
ldw_u(void *p)
{
	return(((*(unsigned char *)(p)) |
	       (*((unsigned char *)(p)+1)<<8)));
}

void
stl_u(unsigned long v, void *p)
{

	(*(unsigned char *)(p)) = (v);
	(*((unsigned char *)(p)+1)) = ((v) >> 8);
	(*((unsigned char *)(p)+2)) = ((v) >> 16);
	(*((unsigned char *)(p)+3)) = ((v) >> 24);
}

void
stq_u(unsigned long v, void *p)
{
	stl_u(v,p);
}

void
stw_u(unsigned short v, void *p)
{
	(*(unsigned char *)(p)) = (v);
	(*((unsigned char *)(p)+1)) = ((v) >> 8);
}


void
mem_barrier(void)
{
   __asm__ __volatile__("eieio");
}

void
write_mem_barrier(void)
{
   __asm__ __volatile__("eieio");
}


/*
 * rdinx - read the indexed byte port 'port', index 'ind', and return its value
 */
unsigned char 
rdinx(unsigned short int port, unsigned char ind)
{
	if (port == 0x3C0)		/* reset attribute flip-flop */
		(void) inb(0x3DA);
	outb(port, ind);
	return(inb(port+1));
}

/*
 * wrinx - write 'val' to port 'port', index 'ind'
 */
void 
wrinx(unsigned short int port, unsigned char ind, unsigned char val)
{
	outb(port, ind);
	outb(port+1, val);
}

/*
 * modinx - in register 'port', index 'ind', set the bits in 'mask' as in 'new';
 *	    the other bits are unchanged.
 */
void
modinx(unsigned short int port, unsigned char ind, 
       unsigned char mask, unsigned char new)
{
	unsigned char tmp;

	tmp = (rdinx(port, ind) & ~mask) | (new & mask);
	wrinx(port, ind, tmp);
}

/*
 * tstrg - returns true iff the bits in 'mask' of register 'port' are
 *	   readable & writable.
 */
int
testrg(unsigned short int port, unsigned char mask)
{
	unsigned char old, new1, new2;

	old = inb(port);
	outb(port, old & ~mask);
	new1 = inb(port) & mask;
	outb(port, old | mask);
	new2 = inb(port) & mask;
	outb(port, old);
	return((new1 == 0) && (new2 == mask));
}

/*
 * testinx2 - returns true iff the bits in 'mask' of register 'port', index
 *	      'ind' are readable & writable.
 */
int
testinx2(unsigned short int port, unsigned char ind, unsigned char mask)
{
	unsigned char old, new1, new2;

	old = rdinx(port, ind);
	wrinx(port, ind, old & ~mask);
	new1 = rdinx(port, ind) & mask;
	wrinx(port, ind, old | mask);
	new2 = rdinx(port, ind) & mask;
	wrinx(port, ind, old);
	return((new1 == 0) && (new2 == mask));
}

/*
 * testinx - returns true iff all bits of register 'port', index 'ind' are 
 *     	     readable & writable.
 */
int
testinx(unsigned short int port, unsigned char ind)
{
	return(testinx2(port, ind, 0xFF));
}

#endif /* NO_INLINE && __powerpc__ */
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d1 1
a1 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/os-support/lynxos/lynx_noinline.c,v 3.6 2002/01/25 21:56:20 tsi Exp $ */
a27 2
#include "xf86Pci.h"

d70 1
a70 1
outb(IOADDRESS port, unsigned char value)
d76 1
a76 1
outw(IOADDRESS port, unsigned short value)
d82 1
a82 1
outl(IOADDRESS port, unsigned int value)
d88 1
a88 1
inb(IOADDRESS port)
d97 1
a97 1
inw(IOADDRESS port)
d106 1
a106 1
inl(IOADDRESS port)
d170 83
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d1 1
a1 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/os-support/lynxos/lynx_noinline.c,v 3.6 2002/01/25 21:56:20 tsi Exp $ */
a27 2
#include "xf86Pci.h"

d70 1
a70 1
outb(IOADDRESS port, unsigned char value)
d76 1
a76 1
outw(IOADDRESS port, unsigned short value)
d82 1
a82 1
outl(IOADDRESS port, unsigned int value)
d88 1
a88 1
inb(IOADDRESS port)
d97 1
a97 1
inw(IOADDRESS port)
d106 1
a106 1
inl(IOADDRESS port)
d170 83
@

