head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407221130:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.04.08.18.36.08;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.36.08;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.23.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@
MediaGX Fun
-----------

This tries to document the "gotcha's" associated with the Cyrix
hardware and also the SoftVGA (SMM BIOS emulation of video) implementation. 

o	Palette Handling

	In theory 8bit modes can use the VGA colour control. In practice
	this doesn't work at least on some 5530 based systems with LCD
	displays.

	Some 5510 based systems need special handling for external LCD
	RAMDAC. We don't currently do this.

o	Mode Switches

	If you load unsuitable data into the Soft VGA mode switching
	registers or forgot to set the ModeSwitch disable before you
	load the registers up mode switches may fail. In a few cases
	you get bogus illegal instructions reported

o	BIOS Versions

	The VSA1/VSA2 firmware that does all the magic on the Cyrix
	processors is an SMM mode software block in the BIOS. This means
	the Cyrix is one system where different BIOSes have different bugs
	instead of just having to fight the hardware

	The BIOS is just plain unusable in a few systems. Code exists to
	do some mode switches the hard way without VSA getting involved.

o	Compression Buffer

	To cut down on the memory usage the display scan checks dirty
	bits on each scan line (per frame in some situations) and if the
	line is dirty it scans it from the original buffer and writes back
	a compressed line if it can do so. If it does this it clears the
	dirty bit. We have to handle dirty bits ourselves and getting it
	wrong produces interesting visuals.

o	Memory Layout

	When you use VSA to do mode set up it makes certain assumptions 
	about memory layout. Typically it lays out the frame buffer
	with the compression buffer at the end. When there is enough
	space between the lines (the chip only handles 1024/2048 bytes
	stride) it will hide them in the gaps



To Do
-----
-	Add bare-metal setup option for the BIOS afflicted
-	Add 5510 external ics5432 RAMDAC support
-	Restore hardware cursor support
-	DDC/EDID and friends
-	RandR would be nice for the tablet pc systems
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@
