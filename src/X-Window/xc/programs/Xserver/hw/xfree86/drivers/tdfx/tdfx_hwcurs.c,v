head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407221130:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.07.47;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.07.47;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.24.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/tdfx/tdfx_hwcurs.c,v 1.5 2001/10/28 03:33:50 tsi Exp $ */
/*
   Voodoo Banshee driver version 1.0.2

   Author: Daryll Strauss

   Copyright: 1998,1999
*/

#include "xf86.h"
#include "xf86_OSproc.h"
#include "xf86_ansic.h"
#include "xf86fbman.h"

#include "tdfx.h"

static void TDFXLoadCursorImage(ScrnInfoPtr pScrn, unsigned char *src);
static void TDFXShowCursor(ScrnInfoPtr pScrn);
static void TDFXHideCursor(ScrnInfoPtr pScrn);
static void TDFXSetCursorPosition(ScrnInfoPtr pScrn, int x, int y);
static void TDFXSetCursorColors(ScrnInfoPtr pScrn, int bg, int fg);
static Bool TDFXUseHWCursor(ScreenPtr pScreen, CursorPtr pCurs);

Bool
TDFXCursorInit(ScreenPtr pScreen)
{
  ScrnInfoPtr pScrn;
  TDFXPtr pTDFX;
  xf86CursorInfoPtr infoPtr;

  TDFXTRACECURS("TDFXCursorInit start\n");
  pScrn = xf86Screens[pScreen->myNum];
  pTDFX = TDFXPTR(pScrn);
  pTDFX->CursorInfoRec = infoPtr = xf86CreateCursorInfoRec();
  if (!infoPtr) return FALSE;

  infoPtr->MaxWidth = 64;
  infoPtr->MaxHeight = 64;

  infoPtr->Flags = 
#if X_BYTE_ORDER == X_LITTLE_ENDIAN
HARDWARE_CURSOR_BIT_ORDER_MSBFIRST |
#endif
    HARDWARE_CURSOR_SWAP_SOURCE_AND_MASK|
    HARDWARE_CURSOR_SOURCE_MASK_INTERLEAVE_64 |
    HARDWARE_CURSOR_TRUECOLOR_AT_8BPP;
  infoPtr->SetCursorColors = TDFXSetCursorColors;
  infoPtr->SetCursorPosition = TDFXSetCursorPosition;
  infoPtr->LoadCursorImage = TDFXLoadCursorImage;
  infoPtr->HideCursor = TDFXHideCursor;
  infoPtr->ShowCursor = TDFXShowCursor;
  infoPtr->UseHWCursor = TDFXUseHWCursor;

  pTDFX->ModeReg.cursloc = pTDFX->cursorOffset;
  pTDFX->writeLong(pTDFX, HWCURPATADDR, pTDFX->cursorOffset);

  return xf86InitCursor(pScreen, infoPtr);
}

#if X_BYTE_ORDER == X_BIG_ENDIAN
static unsigned int TDFXSwap(TDFXPtr pTDFX, unsigned int val) {
  switch (pTDFX->cpp) {
  default:
    return val;
  case 2:
    return ((val & 0x00ff00ff) << 8) |
	    ((val & 0xff00ff00) >> 8);
  case 3:
  case 4:
    return BE_BSWAP32(val);
  }
}
#endif

static void 
TDFXLoadCursorImage(ScrnInfoPtr pScrn, unsigned char *src)
{
  TDFXPtr pTDFX;

  TDFXTRACECURS("TDFXLoadCursorImage start\n");
  pTDFX = TDFXPTR(pScrn);
#if X_BYTE_ORDER == X_BIG_ENDIAN
  {
    int i;
    unsigned int *ptr=(unsigned int *)(pTDFX->FbBase+pTDFX->cursorOffset);

    for (i=0; i<256; i++) {
      unsigned int val = ((unsigned int *)src)[i];
      *ptr++ = TDFXSwap(pTDFX, val);
    }
  }
#else
  memcpy(pTDFX->FbBase+pTDFX->cursorOffset, src, 1024);
#endif
}

static void
TDFXShowCursor(ScrnInfoPtr pScrn)
{
  TDFXPtr pTDFX;

  TDFXTRACECURS("TDFXShowCursor start\n");
  pTDFX = TDFXPTR(pScrn);
  pTDFX->ModeReg.vidcfg|=BIT(27);
  pTDFX->writeLong(pTDFX, VIDPROCCFG, pTDFX->ModeReg.vidcfg);
}

void
TDFXHideCursor(ScrnInfoPtr pScrn)
{
  TDFXPtr pTDFX;

  TDFXTRACECURS("TDFXHideCursor start\n");
  pTDFX = TDFXPTR(pScrn);
  pTDFX->ModeReg.vidcfg&=~BIT(27);
  pTDFX->writeLong(pTDFX, VIDPROCCFG, pTDFX->ModeReg.vidcfg);
}

static void
TDFXSetCursorPosition(ScrnInfoPtr pScrn, int x, int y)
{
  TDFXPtr pTDFX;

  /* TDFXTRACECURS("TDFXSetCursorPosition start\n"); */
  pTDFX = TDFXPTR(pScrn);
  pTDFX->writeLong(pTDFX, HWCURLOC, ((y+64)<<16)|(x+64));
}

static void
TDFXSetCursorColors(ScrnInfoPtr pScrn, int bg, int fg)
{
  TDFXPtr pTDFX;

  TDFXTRACECURS("TDFXSetCursorColors start\n");
  pTDFX = TDFXPTR(pScrn);
  pTDFX->writeLong(pTDFX, HWCURC0, bg);
  pTDFX->writeLong(pTDFX, HWCURC1, fg);
}

static Bool
TDFXUseHWCursor(ScreenPtr pScreen, CursorPtr pCurs) 
{
  ScrnInfoPtr pScrn;
  TDFXPtr pTDFX;

  TDFXTRACECURS("TDFXUseHWCursor start\n");
  pScrn = xf86Screens[pScreen->myNum];
  pTDFX = TDFXPTR(pScrn);
  if (pScrn->currentMode->Flags&V_DBLSCAN)
    return FALSE;
  if (!pTDFX->CursorInfoRec) return FALSE;
  return TRUE;
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
