head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407221130:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.06.57;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.06.57;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.36.01;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.18.16.06;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.22.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/ati/atiload.c,v 1.8 2002/01/16 16:22:26 tsi Exp $ */
/*
 * Copyright 2000 through 2002 by Marc Aurele La France (TSI @@ UQV), tsi@@xfree86.org
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting documentation, and
 * that the name of Marc Aurele La France not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  Marc Aurele La France makes no representations
 * about the suitability of this software for any purpose.  It is provided
 * "as-is" without express or implied warranty.
 *
 * MARC AURELE LA FRANCE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO
 * EVENT SHALL MARC AURELE LA FRANCE BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifdef XFree86LOADER

#include "ati.h"
#include "aticursor.h"
#include "atiload.h"
#include "atistruct.h"

/*
 * ATILoadModule --
 *
 * Load a specific module and register its main entry with the loader.
 */
static Bool
ATILoadModule
(
    ScrnInfoPtr pScreenInfo,
    const char *Module,
    const char *Symbol
)
{
    if (!xf86LoadSubModule(pScreenInfo, Module))
        return FALSE;

    xf86LoaderReqSymbols(Symbol, NULL);

    return TRUE;
}

/*
 * ATILoadModules --
 *
 * This function loads other modules required for a screen.
 */
Bool
ATILoadModules
(
    ScrnInfoPtr pScreenInfo,
    ATIPtr      pATI
)
{
    /*
     * Tell loader about symbols from other modules that this module might
     * refer to.
     */
    LoaderRefSymbols(

#ifndef AVOID_CPIO

        "xf1bppScreenInit",
        "xf4bppScreenInit",

#endif /* AVOID_CPIO */

        "fbScreenInit",
        "fbPictureInit",
        "ShadowFBInit",
        "XAACreateInfoRec",
        "XAADestroyInfoRec",
        "XAAInit",
        "xf86InitCursor",
        "xf86CreateCursorInfoRec",
        "xf86DestroyCursorInfoRec",
        NULL);

    /* Load shadow frame buffer code if needed */
    if (pATI->OptionShadowFB &&
        !ATILoadModule(pScreenInfo, "shadowfb", "ShadowFBInit"))
        return FALSE;

    /* Load XAA if needed */
    if (pATI->OptionAccel)
    {
        if (!ATILoadModule(pScreenInfo, "xaa", "XAAInit"))
            return FALSE;

        /* Require more XAA symbols */
        xf86LoaderReqSymbols("XAACreateInfoRec", "XAADestroyInfoRec", NULL);
    }

    /* Load ramdac module if needed */
    if (pATI->Cursor > ATI_CURSOR_SOFTWARE)
    {
        if (!ATILoadModule(pScreenInfo, "ramdac", "xf86InitCursor"))
            return FALSE;

        /* Require more ramdac symbols */
        xf86LoaderReqSymbols(
            "xf86CreateCursorInfoRec",
            "xf86DestroyCursorInfoRec",
            NULL);
    }

    /* Load depth-specific entry points */
    switch (pATI->bitsPerPixel)
    {

#ifndef AVOID_CPIO

        case 1:
            return ATILoadModule(pScreenInfo, "xf1bpp", "xf1bppScreenInit");

        case 4:
            return ATILoadModule(pScreenInfo, "xf4bpp", "xf4bppScreenInit");

#endif /* AVOID_CPIO */

        case 8:
        case 16:
        case 24:
        case 32:
            if (!ATILoadModule(pScreenInfo, "fb", "fbScreenInit"))
                return FALSE;

            /* Require more fb symbols */
            xf86LoaderReqSymbols("fbPictureInit", NULL);
            return TRUE;

        default:
            return FALSE;
    }
}

#endif /* XFree86LOADER */
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d1 1
a1 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/ati/atiload.c,v 1.16 2004/01/05 16:42:02 tsi Exp $ */
d3 1
a3 1
 * Copyright 2000 through 2004 by Marc Aurele La France (TSI @@ UQV), tsi@@xfree86.org
a31 84
 * All symbol lists belong here.  They are externalised so that they can be
 * referenced elsewhere.  Note the naming convention for these things...
 */

const char *ATIint10Symbols[] =
{
    "xf86FreeInt10",
    "xf86InitInt10",
    "xf86int10Addr",
    NULL
};

const char *ATIddcSymbols[] =
{
    "xf86PrintEDID",
    "xf86SetDDCProperties",
    NULL
};

const char *ATIvbeSymbols[] =
{
    "VBEInit",
    "vbeDoEDID",
    "vbeFree",
    NULL
};

#ifndef AVOID_CPIO

const char *ATIxf1bppSymbols[] =
{
    "xf1bppScreenInit",
    NULL
};

const char *ATIxf4bppSymbols[] =
{
    "xf4bppScreenInit",
    NULL
};

#endif /* AVOID_CPIO */

const char *ATIfbSymbols[] =
{
    "fbPictureInit",
    "fbScreenInit",
    NULL
};

const char *ATIshadowfbSymbols[] =
{
    "ShadowFBInit",
    NULL
};

const char *ATIxaaSymbols[] =
{
    "XAACreateInfoRec",
    "XAADestroyInfoRec",
    "XAAInit",
    NULL
};

const char *ATIramdacSymbols[] =
{
    "xf86CreateCursorInfoRec",
    "xf86DestroyCursorInfoRec",
    "xf86InitCursor",
    NULL
};

const char *ATIi2cSymbols[] =
{
    "xf86CreateI2CBusRec",
    "xf86DestroyI2CBusRec",
    "xf86I2CBusInit",
    "xf86I2CDevInit",
    "xf86I2CFindDev",
    "xf86I2CGetScreenBuses",
    NULL
};

/*
d34 1
a34 2
 * Load a specific module and register with the loader those of its entry
 * points that are referenced by this driver.
d36 1
a36 1
pointer
d39 3
a41 3
    ScrnInfoPtr  pScreenInfo,
    const char  *Module,
    const char **SymbolList
d44 2
a45 1
    pointer pModule = xf86LoadSubModule(pScreenInfo, Module);
d47 1
a47 2
    if (pModule)
        xf86LoaderReqSymLists(SymbolList, NULL);
d49 1
a49 1
    return pModule;
d57 1
a57 1
pointer
d64 24
d90 2
a91 2
        !ATILoadModule(pScreenInfo, "shadowfb", ATIshadowfbSymbols))
        return NULL;
d94 8
a101 3
    if (pATI->OptionAccel &&
        !ATILoadModule(pScreenInfo, "xaa", ATIxaaSymbols))
        return NULL;
d104 11
a114 3
    if ((pATI->Cursor > ATI_CURSOR_SOFTWARE) &&
        !ATILoadModule(pScreenInfo, "ramdac", ATIramdacSymbols))
        return NULL;
d123 1
a123 1
            return ATILoadModule(pScreenInfo, "xf1bpp", ATIxf1bppSymbols);
d126 1
a126 1
            return ATILoadModule(pScreenInfo, "xf4bpp", ATIxf4bppSymbols);
d134 6
a139 1
            return ATILoadModule(pScreenInfo, "fb", ATIfbSymbols);
d142 1
a142 1
            return NULL;
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d1 1
a1 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/ati/atiload.c,v 1.12 2003/01/01 19:16:32 tsi Exp $ */
d3 1
a3 1
 * Copyright 2000 through 2003 by Marc Aurele La France (TSI @@ UQV), tsi@@xfree86.org
a31 74
 * All symbol lists belong here.  They are externalised so that they can be
 * referenced elsewhere.  Note the naming convention for these things...
 */

const char *ATIint10Symbols[] =
{
    "xf86FreeInt10",
    "xf86InitInt10",
    "xf86int10Addr",
    NULL
};

const char *ATIddcSymbols[] =
{
    "xf86PrintEDID",
    "xf86SetDDCProperties",
    NULL
};

const char *ATIvbeSymbols[] =
{
    "VBEInit",
    "vbeDoEDID",
    "vbeFree",
    NULL
};

#ifndef AVOID_CPIO

const char *ATIxf1bppSymbols[] =
{
    "xf1bppScreenInit",
    NULL
};

const char *ATIxf4bppSymbols[] =
{
    "xf4bppScreenInit",
    NULL
};

#endif /* AVOID_CPIO */

const char *ATIfbSymbols[] =
{
    "fbPictureInit",
    "fbScreenInit",
    NULL
};

const char *ATIshadowfbSymbols[] =
{
    "ShadowFBInit",
    NULL
};

const char *ATIxaaSymbols[] =
{
    "XAACreateInfoRec",
    "XAADestroyInfoRec",
    "XAAInit",
    NULL
};

const char *ATIramdacSymbols[] =
{
    "xf86CreateCursorInfoRec",
    "xf86DestroyCursorInfoRec",
    "xf86InitCursor",
    "xf86ForceHWCursor",
    NULL
};

/*
d34 1
a34 2
 * Load a specific module and register with the loader those of its entry
 * points that are referenced by this driver.
d36 1
a36 1
pointer
d39 3
a41 3
    ScrnInfoPtr  pScreenInfo,
    const char  *Module,
    const char **SymbolList
d44 2
a45 1
    pointer pModule = xf86LoadSubModule(pScreenInfo, Module);
d47 1
a47 2
    if (pModule)
        xf86LoaderReqSymLists(SymbolList, NULL);
d49 1
a49 1
    return pModule;
d57 1
a57 1
pointer
d64 24
d90 2
a91 2
        !ATILoadModule(pScreenInfo, "shadowfb", ATIshadowfbSymbols))
        return NULL;
d94 8
a101 3
    if (pATI->OptionAccel &&
        !ATILoadModule(pScreenInfo, "xaa", ATIxaaSymbols))
        return NULL;
d104 11
a114 3
    if ((pATI->Cursor > ATI_CURSOR_SOFTWARE) &&
        !ATILoadModule(pScreenInfo, "ramdac", ATIramdacSymbols))
        return NULL;
d123 1
a123 1
            return ATILoadModule(pScreenInfo, "xf1bpp", ATIxf1bppSymbols);
d126 1
a126 1
            return ATILoadModule(pScreenInfo, "xf4bpp", ATIxf4bppSymbols);
d134 6
a139 1
            return ATILoadModule(pScreenInfo, "fb", ATIfbSymbols);
d142 1
a142 1
            return NULL;
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d1 1
a1 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/ati/atiload.c,v 1.16 2004/01/05 16:42:02 tsi Exp $ */
d3 1
a3 1
 * Copyright 2000 through 2004 by Marc Aurele La France (TSI @@ UQV), tsi@@xfree86.org
d101 1
a101 11
    NULL
};

const char *ATIi2cSymbols[] =
{
    "xf86CreateI2CBusRec",
    "xf86DestroyI2CBusRec",
    "xf86I2CBusInit",
    "xf86I2CDevInit",
    "xf86I2CFindDev",
    "xf86I2CGetScreenBuses",
@


