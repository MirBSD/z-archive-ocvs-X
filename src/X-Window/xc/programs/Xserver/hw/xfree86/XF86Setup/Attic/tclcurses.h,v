head	1.2;
access;
symbols
	cvs-200401291925:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.13.27;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.06.39;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.06.39;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@get rid of XF86Setup here, too - nobody updates it for XF4
@
text
@/* $XFree86: xc/programs/Xserver/hw/xfree86/XF86Setup/tclcurses.h,v 1.1 1999/04/05 07:13:02 dawes Exp $ */

#include <tcl.h>
#ifdef NCURSES
#include <ncurses.h>
#else
#include <curses.h>
#endif

#define MAXBUTTONS	8

#define BORDER_NONE	0
#define BORDER_BLANK	1
#define BORDER_LINE	2

#define TYPE_NONE	0
#define TYPE_MENU	1
#define TYPE_RADIO	2
#define TYPE_CHECK	3

#define PAIR_SCREEN		1, COLOR_CYAN,  COLOR_BLUE
#define PAIR_ULBORD		2, COLOR_WHITE, COLOR_WHITE
#define PAIR_LRBORD		3, COLOR_BLACK, COLOR_WHITE
#define PAIR_TEXT		4, COLOR_WHITE, COLOR_WHITE
#define PAIR_TITLE		5, COLOR_BLUE,  COLOR_WHITE
#define PAIR_SELECT		6, COLOR_BLUE,  COLOR_WHITE

#define ATTR_SCREEN		COLOR_PAIR(1)
#define ATTR_ULBORD		(COLOR_PAIR(2)|A_BOLD)
#define ATTR_LRBORD		COLOR_PAIR(3)
#define ATTR_TEXT		ATTR_LRBORD
#define ATTR_TITLE		(COLOR_PAIR(5)|A_BOLD)
#define ATTR_SELECT		(COLOR_PAIR(6)|A_REVERSE)

#define KEY_ESC	27

#define SCROLL_LINE	0
#define SCROLL_PAGE	1
#define SCROLL_ALL	2

struct windata {
	WINDOW		*win;
	short		width;
	short		height;
	char		*title;
	short		border;			/* border type */
	short		shadow;			/* Add shadow? */

	struct {
		short		type;
		short		lines;
		int		items;
		int		topline;
		int		current;
		int		rsel;
		int		*chkd;
		WINDOW		*win;
		char		**data;
	} menu;

	struct {
		int		items;		/* lines of text */
		int		topline; 	/* top text line */
		char		*buffer;	/* text area contents */
		char		**data;		/* text lines */
	} text;

	short		butsel;			/* which button is selected */
	char		*button[MAXBUTTONS];	/* button text labels */
};

#define DEBUG1(s)		  if (curs_debug) fprintf(stderr, s)
#define DEBUG2(s,a)		  if (curs_debug) fprintf(stderr, s,a)
#define DEBUG3(s,a,b)		  if (curs_debug) fprintf(stderr, s,a,b)
#define DEBUG4(s,a,b,c)		  if (curs_debug) fprintf(stderr, s,a,b,c)
#define DEBUG5(s,a,b,c,d)	  if (curs_debug) fprintf(stderr, s,a,b,c,d)
#define DEBUG6(s,a,b,c,d,e)	  if (curs_debug) fprintf(stderr, s,a,b,c,d,e)
#define DEBUG7(s,a,b,c,d,e,f)	  if (curs_debug) fprintf(stderr, s,a,b,c,d,e,f)
#define DEBUG8(s,a,b,c,d,e,f,g)	  if (curs_debug) fprintf(stderr, s,a,b,c,d,e,f,g)
#define DEBUG9(s,a,b,c,d,e,f,g,h) if (curs_debug) fprintf(stderr, s,a,b,c,d,e,f,g,h)

#define when	break; case

int TCL_Curses(
#if NeedNestedPrototypes
    ClientData	clientData,
    Tcl_Interp	*interp,
    int		argc,
    char	**argv
#endif
);

void TCL_WinDelete(
#if NeedNestedPrototypes
    ClientData	clientData
#endif
);

int TCL_WinProc(
#if NeedNestedPrototypes
    ClientData	clientData,
    Tcl_Interp	*interp,
    int		argc,
    char	**argv
#endif
);

static int settext(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp,
    char		*text
#endif
);

static int updatetext(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp,
    char		*text
#endif
);

static int textlines(
#if NeedNestedPrototypes
    struct windata	winPtr
#endif
);

static int setbuttons(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp,
    int			argc,
    char		**argv
#endif
);

static int setmenu(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp,
    int			argc,
    char		**argv
#endif
);

static int winconfig(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp,
    int			argc,
    char		**argv
#endif
);

static int processinput(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp
#endif
);

static int updatemenu(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp
#endif
);

static void updatebuttons(
#if NeedNestedPrototypes
    struct windata	winPtr
#endif
);

static int updatepos(
#if NeedNestedPrototypes
    struct windata	winPtr,
    Tcl_Interp		*interp,
    int			dir;
    int			amt;
#endif
);

static struct windata * initwinPtr(
#if NeedNestedPrototypes
    WINDOW	*win
#endif
);

static void drawbox(
#if NeedNestedPrototypes
    struct windata	winPtr,
    int			begrow,
    int			begcol,
    int			rows,
    int			cols,
    int			lchar,
    chtype		ulattr,
    chtype		lrattr
#endif
);

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
