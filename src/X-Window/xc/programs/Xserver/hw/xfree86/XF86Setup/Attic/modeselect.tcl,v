head	1.2;
access;
symbols
	cvs-200401291925:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.13.27;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.06.36;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.06.36;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@get rid of XF86Setup here, too - nobody updates it for XF4
@
text
@# 
#
#
#
#
# $XFree86: xc/programs/Xserver/hw/xfree86/XF86Setup/modeselect.tcl,v 3.2 1998/04/05 16:15:50 robin Exp $
#
# Copyright 1996 by Joseph V. Moss <joe@@XFree86.Org>
#           1997 by Dirk H Hohndel <hohndel@@XFree86.Org>
#
# See the file "LICENSE" for information regarding redistribution terms,
# and for a DISCLAIMER OF ALL WARRANTIES.
#

#
# routines to select the modes that the user actually wants to use
#

proc Modeselect_create_widgets { win } {
	global MonitorIDs monDevNum monCanvas MonitorDescriptions
	global pc98_EGC messages

	set w [winpathprefix $win]

	if !$pc98_EGC {
		frame $w.modesel -width 640 -height 420 \
			-relief ridge -borderwidth 5
	} else {
		frame $w.modesel -width 640 -height 400 \
			-relief ridge -borderwidth 5
	}
	frame $w.modesel.top
	frame $w.modesel.mid -relief sunken -borderwidth 3
	frame $w.modesel.bot
	pack $w.modesel.top -side top
	pack $w.modesel.mid -side top -expand yes
	pack $w.modesel.bot -side top

	label $w.modesel.top.title -text "Select the modes you want to use"
	frame $w.modesel.type
	pack $w.modesel.top.title $w.modesel.type -in $w.modesel.top -side top
	set canv [canvas $w.modesel.buttons]

	checkbutton $w.modesel.buttons.m640x480 \
		-text $messages(modeselect.2) \
		-indicatoron no -variable m640x480 \
		-command [list modesel_enable $win " 640x480*"]
	lappend lbuttons $w.modesel.buttons.m640x480
	checkbutton $w.modesel.buttons.m800x600 \
		-text $messages(modeselect.3) \
		-indicatoron no -variable m800x600 \
		-command [list modesel_enable $win " 800x600*"]
	lappend lbuttons $w.modesel.buttons.m800x600
	checkbutton $w.modesel.buttons.m1024x768 \
		-text $messages(modeselect.4) \
		-indicatoron no -variable m1024x768 \
		-command [list modesel_enable $win "1024x768*"]
	lappend lbuttons $w.modesel.buttons.m1024x768
	checkbutton $w.modesel.buttons.m1152x864 \
		-text $messages(modeselect.5) \
		-indicatoron no -variable m1152x864 \
		-command [list modesel_enable $win "1152x864*"]
	lappend lbuttons $w.modesel.buttons.m1152x864
	checkbutton $w.modesel.buttons.m1280x1024 \
		-text $messages(modeselect.6) \
  		-indicatoron no -variable m1280x1024 \
		-command [list modesel_enable $win "1280x1024*"]
	lappend lbuttons $w.modesel.buttons.m1280x1024
	checkbutton $w.modesel.buttons.m1600x1200 \
		-text $messages(modeselect.7) \
		-indicatoron no -variable m1600x1200 \
		-command [list modesel_enable $win "1600x1200*"]
	lappend lbuttons $w.modesel.buttons.m1600x1200
	checkbutton $w.modesel.buttons.m640x400 \
		-text $messages(modeselect.8) \
		-indicatoron no -variable m640x400 \
		-command [list modesel_enable $win " 640x400*"]
	lappend lbuttons $w.modesel.buttons.m640x400
	checkbutton $w.modesel.buttons.m320x200 \
		-text $messages(modeselect.9) \
		-indicatoron no -variable m320x200 \
		-command [list modesel_enable $win " 320x200*"]
	lappend lbuttons $w.modesel.buttons.m320x200
	checkbutton $w.modesel.buttons.m320x240 \
		-text $messages(modeselect.10) \
		-indicatoron no -variable m320x240 \
		-command [list modesel_enable $win " 320x240*"]
	lappend lbuttons $w.modesel.buttons.m320x240
	checkbutton $w.modesel.buttons.m400x300 \
		-text $messages(modeselect.11) \
		-indicatoron no -variable m400x300 \
		-command [list modesel_enable $win " 400x300*"]
	lappend lbuttons $w.modesel.buttons.m400x300
	checkbutton $w.modesel.buttons.m480x300 \
		-text $messages(modeselect.12) \
		-indicatoron no -variable m480x300 \
		-command [list modesel_enable $win " 480x300*"]
	lappend lbuttons $w.modesel.buttons.m480x300
	checkbutton $w.modesel.buttons.m512x384 \
		-text $messages(modeselect.13) \
		-indicatoron no -variable m512x384 \
		-command [list modesel_enable $win " 512x384*"]
	lappend lbuttons $w.modesel.buttons.m512x384
	set ht 0
	set wd 0
	foreach wb $lbuttons {
		set bwd [winfo reqwidth $wb]
		if {$wd < $bwd} {set wd $bwd}
	}
	foreach wb $lbuttons {
		$canv create window \
			[expr ($wd-[winfo reqwidth $wb])/2] $ht \
			-anchor nw -window $wb
		set ht [expr $ht + [winfo reqheight $wb]]
	}
	$canv configure -yscrollcommand [list $w.modesel.sb set] \
		-scrollregion [list 0 0 $wd $ht] \
			-width $wd
	scrollbar $w.modesel.sb \
		-command [list $canv yview]
	pack $canv -in $w.modesel.mid \
		-side left -fill both -expand yes -pady 2m
	pack $w.modesel.sb -in $w.modesel.mid -side right \
		-fill y -expand yes
	frame $w.modesel.dcd
	label $w.modesel.dcd.title -text $messages(modeselect.14)
	radiobutton $w.modesel.8bpp -text $messages(modeselect.15) \
		-indicatoron false -variable ColorDepth \
		-value "depth8" -underline 19 \
		-command [list modesel_color_select $w 8]
	radiobutton $w.modesel.16bpp -text $messages(modeselect.16) \
		-indicatoron false -variable ColorDepth \
		-value "depth16" -underline 19 \
		-command [list modesel_color_select $w 16]
	radiobutton $w.modesel.24bpp -text $messages(modeselect.17) \
		-indicatoron false -variable ColorDepth \
		-value "depth24" -underline 19 \
		-command [list modesel_color_select $w 24]
	radiobutton $w.modesel.32bpp -text $messages(modeselect.18) \
		-indicatoron false -variable ColorDepth \
		-value "depth32" -underline 19 \
		-command [list modesel_color_select $w 32]
	pack $w.modesel.8bpp $w.modesel.16bpp $w.modesel.24bpp \
		$w.modesel.32bpp -side left -fill x -expand yes \
		-in $w.modesel.dcd
	pack $w.modesel.dcd.title $w.modesel.dcd -side left -fill y -expand yes
}

proc Modeselection_activate { win } {
	set w [winpathprefix $win]
	pack $w.modesel -side top -fill both -expand yes
}

proc Modeselection_deactivate { win } {
	set w [winpathprefix $win]
	pack forget $w.modesel

}

proc modesel_color_select { win val } {
    global DefaultColorDepth

    set w [winpathprefix $win]

    set DefaultColorDepth $val
}

proc modesel_enable { win val } {
    global MonitorStdModes SelectedMonitorModes haveSelectedModes

    set w [winpathprefix $win]

    set haveSelectedModes 1

    # we need to handle the fact that these are toggle buttons, so every
    # other time this is selected, the user actually wants to deselect
    # the entries
    # this would be much easier if I have a way to remove pairs from an array...
    if { [array get SelectedMonitorModes $val] != "" } {
#	puts stderr "$val already existed"
	# 
	foreach desc [array names SelectedMonitorModes $val] {
	    if [string match \#removed $SelectedMonitorModes($desc)] {
                # ok, we're enabling again
		set SelectedMonitorModes($desc) $MonitorStdModes($desc)
            } else {
#	        puts stderr "invalidating for $desc"
	        set SelectedMonitorModes($desc) "#removed"
	    }
	}	
    } else {
#	puts stderr "add $val to selected modes"
	foreach desc [array names MonitorStdModes $val] {
	    set modeline $MonitorStdModes($desc)
#	    puts stderr "$desc :: $modeline"
	    set SelectedMonitorModes($desc) $modeline
	}
    }
#    foreach desc [array names SelectedMonitorModes] {
#	puts stderr "$desc -> $SelectedMonitorModes($desc)"
#    }
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
