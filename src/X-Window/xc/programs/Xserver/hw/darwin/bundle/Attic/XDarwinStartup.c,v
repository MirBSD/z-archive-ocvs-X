head	1.2;
access;
symbols
	ctm-0349:1.1.1.1 openbsd-xf4:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.08.19.33.10;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.06.23;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.06.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge conflicts
@
text
@/**************************************************************
 *
 * Startup program for Darwin X servers
 *
 * This program selects the appropriate X server to launch:
 *  XDarwin         IOKit X server (default)
 *  XDarwinQuartz   A soft link to the Quartz X server
 *                  executable (-quartz option)
 *
 * If told to idle, the program will simply pause and not
 * launch any X server. This is to support startx being
 * run by XDarwin.app.
 *
 **************************************************************/
/* $XFree86: xc/programs/Xserver/hw/darwin/bundle/XDarwinStartup.c,v 1.5 2001/12/30 03:50:15 torrey Exp $ */

#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/syslimits.h>

extern int errno;

// Macros to build the path name
#ifndef XBINDIR
#define XBINDIR /usr/X11R6/bin
#endif
#define STR(s) #s
#define XSTRPATH(s) STR(s) "/"
#define XPATH(file) XSTRPATH(XBINDIR) STR(file)

int main(
    int         argc,
    char        *argv[] )
{
    int         i, j;
    char        **newargv;

    // Check if we are going to run in Quartz mode or idle
    // to support startx from the Quartz server. The last
    // parameter in the list is the one used.
    for (i = argc-1; i; i--) {
        if (!strcmp(argv[i], "-idle")) {
            pause();
            return 0;

        } else if (!strcmp(argv[i], "-quartz") ||
                   !strcmp(argv[i], "-rootless") ||
                   !strcmp(argv[i], "-fullscreen"))
        {
            char quartzPath[PATH_MAX+1];
            int pathLength;

            // Find the path to the Quartz executable
            pathLength = readlink(XPATH(XDarwinQuartz), quartzPath, PATH_MAX);
            if (pathLength == -1) {
                fprintf(stderr, "The symbolic link " XPATH(XDarwinQuartz)
                        " is not valid.\n");
                return errno;
            }
            quartzPath[pathLength] = '\0';

            // Build the new argument list
            newargv = (char **) malloc((argc+2) * sizeof(char *));
            for (j = argc; j; j--)
                newargv[j] = argv[j];
            newargv[0] = quartzPath;
            newargv[argc] = "-nostartx";
            newargv[argc+1] = NULL;

            execv(newargv[0], newargv);
            fprintf(stderr,
                    "Could not start XDarwin Quartz X server at %s.\n",
                    quartzPath);
            return errno;
        }
    }

    // Build the new argument list
    newargv = (char **) malloc((argc+1) * sizeof(char *));
    for (j = argc; j; j--)
        newargv[j] = argv[j];
    newargv[0] = XPATH(XDarwin);
    newargv[argc] = NULL;

    // Launch the IOKit X server
    execv(newargv[0], newargv);
    fprintf(stderr, "Could not start XDarwin IOKit X server.\n");
    return errno;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
