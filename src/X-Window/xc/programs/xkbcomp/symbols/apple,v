head	1.1;
branch	1.1.9;
access;
symbols
	tg-mergetmp-2:1.1.9.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	openbsd:1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9;
locks; strict;
comment	@# @;


1.1
date	2004.02.14.19.29.01;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2004.03.02.18.41.37;	author tg;	state Exp;
branches;
next	;

1.1.9.1
date	2004.02.14.19.29.01;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@//
// Keyboard modification for Apple keyboards
//
// $XFree86: xc/programs/xkbcomp/symbols/apple,v 1.2 2003/10/24 20:38:20 tsi Exp $

partial default modifier_keys
xkb_symbols "extended" {

    key <KPEQ> { [ KP_Equal ] }; 

// The key in the PC's Insert position is sometimes engraved Help (at least
// in Switzerland and Great Britain), with Insert sometimes above. But in the
// US and Canada, it remains Insert. So this should probably be an XkbOption,
// but I have to do more research.
// Perhaps Help should be the primary symbol with Insert in the 1st shift-level
//    key  <INS> { [ Help, Insert ] };
// The keys next to F12, labeled F13, F14, & F15 generate codes that XFree86
// claims not to generate. I think they should be equivalent to the PC keys
// Print Screen / SysRq, Scroll Lock, and Pause. Linux kernel bug?
//    key <PRSC> { [ F13 ] }; // should be keycode 93 or
//    key <FK13> { [ F13 ] }; // should be keycode 118
//    key <SCLK> { [ F14 ] }; // should be keycode 123 or
//    key <FK14> { [ F14 ] }; // should be keycode 119
//    key <PAUS> { [ F15 ] }; // should be keycode 127 or
//    key <FK15> { [ F15 ] }; // should be keycode 120
};

partial modifier_keys
xkb_symbols "laptop" {

    include "apple(extended)"

    // The real numlock key on the iBook (shared with F5) works internally to
    // the keyboard. It illuminates the Num_Lock led and locks the fn-key to
    // type only the keypad keys on the letter keys (U=4, I=5, O=6, P=*, etc.).
    // The key in the Num_lock position is engraved with Clear.
    override key <NMLK> { [ Clear ] };
    // The key engraved Delete sends BKSP. To get Delete, use Shift-Delete
    override key <BKSP> { [ BackSpace, Delete ] };
    // These keyboards only generate a <RALT> when pressing fn+Alt. This makes
    // it impossible to get to the third shift level on keys that are on
    // the fn-keypad, so use the Enter key (right of <SPC>) for Mode_switch,
    // and use fn+Enter (Apple's code for Menu) for KP_Enter.
    replace key <KPEN> { [ ISO_Level3_Shift ] };
    modifier_map Mod2  { ISO_Level3_Shift };	
    // Linux kernel bug with Menu on macs means this doesn't work yet
//    replace key <MENU> { [ KP_Enter ] }; // should be keycode 117
};

partial modifier_keys
xkb_symbols "laptop_bad_switch" {
    include "apple(laptop)"

    // Before XFree86 4.3, most keymaps were configured to generate the 
    // third-level shift from the second group as opposed to the third-level
    // of the first group. These keymaps require this mapping to work as
    // expected.
    replace key <KPEN> { [ Mode_switch ] };
    modifier_map Mod2  { Mode_switch };	
};
@


1.1.1.1
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@
