head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.04.08.18.40.23;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.40.23;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.18.42.06;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.29.13;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@
// based on
// Turkish keyboard symbols for PC and xkb
// This file distributed without any expressed or implied warranty
// Nilgün Belma Bugüner <nilgun@@superonline.com>, 2002
//
// $XFree86: xc/programs/xkbcomp/symbols/pc/tr,v 1.4 2003/01/04 02:55:20 dawes Exp $

//Default Layout (Turkish Q)
default partial
xkb_symbols "basic" {

    include "pc/latin"

    name[Group1]="Turkish";

    key <AE01>	{ type[group1] = "FOUR_LEVEL", [         1,    exclam,    onesuperior,    exclamdown ]	};
    key <AE02>	{ type[group1] = "FOUR_LEVEL", [         2, apostrophe,      sterling,   twosuperior ]	};
    key <AE03>	{ type[group1] = "FOUR_LEVEL", [        3, asciicircum,    numbersign, threesuperior ]  };
    key <AE04>	{ type[group1] = "FOUR_LEVEL", [         4,       plus,        dollar,    onequarter ]	};
    key <AE06>	{ type[group1] = "FOUR_LEVEL", [         6,  ampersand, threequarters,    VoidSymbol ]	};
    key <AE07>	{ type[group1] = "FOUR_LEVEL", [         7,      slash,     braceleft,    VoidSymbol ]	};
    key <AE08>	{ type[group1] = "FOUR_LEVEL", [         8,  parenleft,   bracketleft,    VoidSymbol ]	};
    key <AE09>	{ type[group1] = "FOUR_LEVEL", [         9, parenright,  bracketright,     plusminus ]	};
    key <AE10>	{ type[group1] = "FOUR_LEVEL", [         0,      equal,    braceright,        degree ]	};
    key <AE11>	{ type[group1] = "FOUR_LEVEL", [  asterisk,   question,     backslash,  questiondown ]	};
    key <AE12>	{ type[group1] = "FOUR_LEVEL", [     minus, underscore,      division,    VoidSymbol ]	};

    key <AD02>	{ [         w,          W,   VoidSymbol,   VoidSymbol ]	};
    key <AD03>	{ [         e,          E,     EuroSign,   VoidSymbol ]	};
    key <AD05>	{ [         t,          T,    trademark,   VoidSymbol ]	};
    key <AD07>	{ [         u,          U,  ucircumflex,  Ucircumflex ]	};
    key <AD08>	{ [  idotless,          I,  icircumflex,  Icircumflex ]	};
    key <AD09>	{ [         o,          O,  ocircumflex,  Ocircumflex ]	};
    key <AD10>	{ [         p,          P,   VoidSymbol,   VoidSymbol ]	};
    key <AD11>	{ [    gbreve,     Gbreve ] };
    key <AD12>	{ [udiaeresis, Udiaeresis,   asciitilde,  dead_macron ]	};

    key <AC01>	{ [         a,          A,  acircumflex,  Acircumflex ]	};
    key <AC02>	{ [         s,          S,      section,   VoidSymbol ]	};
    key <AC03>	{ [         d,          D,   VoidSymbol,   VoidSymbol ]	};
    key <AC04>	{ [         f,          F,  ordfeminine,   VoidSymbol ]	};
    key <AC05>	{ [         g,          G,   VoidSymbol,   VoidSymbol ]	};
    key <AC06>	{ [         h,          H,   VoidSymbol,   VoidSymbol ]	};
    key <AC08>	{ [         k,          K,   VoidSymbol,   VoidSymbol ]	};
    key <AC09>	{ [         l,          L,   VoidSymbol,   VoidSymbol ]	};
    key <AC10>	{ [  scedilla,   Scedilla,        acute,   dead_acute ]	};
    key <AC11>	{ [         i,  Iabovedot,   apostrophe,   dead_caron ]	};
    key <TLDE>	{ type[group1] = "FOUR_LEVEL",[  quotedbl,  backslash,    plusminus,       degree ]	};

    key <BKSL>	{ type[group1] = "FOUR_LEVEL",[     comma,  semicolon,        grave,   dead_grave ]	};
    key <LSGT>	{ type[group1] = "FOUR_LEVEL",[     less,     greater,          bar,    brokenbar ]	};
    key <AB08>	{ [odiaeresis, Odiaeresis,     multiply,   VoidSymbol ]	};
    key <AB09>	{ [  ccedilla,   Ccedilla, periodcentered,     division ] };
    key <AB10>	{ type[group1] = "FOUR_LEVEL",[    period,      colon, dead_abovedot, dead_abovedot ] };
    key <SPCE>	{ type[group1] = "FOUR_LEVEL", [    space,  space, nobreakspace, nobreakspace ]	};
    key <RALT>  { type[Group1]="TWO_LEVEL",
                  [ ISO_Level3_Shift, Multi_key ]   };
    modifier_map Mod5   { <RALT> };
};


// Turkish F Layout
partial
xkb_symbols "tr_f" {

    include "pc/latin"

    name[Group1]="Turkish";

    key <AE01>	{ type[group1] = "FOUR_LEVEL", [         1,     exclam,  onesuperior,   exclamdown ]	};
    key <AE02>	{ type[group1] = "FOUR_LEVEL", [         2,   quotedbl,  twosuperior,   VoidSymbol ]	};
    key <AE03>	{ type[group1] = "FOUR_LEVEL", [         3, asciicircum, numbersign, threesuperior ]    };
    key <AE04>	{ type[group1] = "FOUR_LEVEL", [         4,     dollar,   onequarter,   VoidSymbol ]	};
    key <AE06>	{ type[group1] = "FOUR_LEVEL", [         6,  ampersand, threequarters,  VoidSymbol ]	};
    key <AE07>	{ type[group1] = "FOUR_LEVEL", [         7, apostrophe,    braceleft,   VoidSymbol ]	};
    key <AE08>	{ type[group1] = "FOUR_LEVEL", [         8,  parenleft,  bracketleft,   VoidSymbol ]	};
    key <AE09>	{ type[group1] = "FOUR_LEVEL", [         9, parenright, bracketright,    plusminus ]	};
    key <AE10>	{ type[group1] = "FOUR_LEVEL", [         0,      equal,   braceright,       degree ]	};
    key <AE11>	{ type[group1] = "FOUR_LEVEL", [     slash,   question,    backslash, questiondown ]	};
    key <AE12>	{ type[group1] = "FOUR_LEVEL", [     minus, underscore,     division,   VoidSymbol ]	};

    key <AD01>	{ [         f,          F,           at,   VoidSymbol ]	};
    key <AD02>	{ [         g,          G,   VoidSymbol,   VoidSymbol ]	};
    key <AD03>	{ [    gbreve,     Gbreve,   VoidSymbol,   VoidSymbol ]	};
    key <AD04>	{ [  idotless,          I,    paragraph,   VoidSymbol ]	};
    key <AD05>	{ [         o,          O,  ocircumflex,  Ocircumflex ]	};
    key <AD06>	{ [         d,          D,          yen,   VoidSymbol ]	};
    key <AD07>	{ [         r,          R,   registered,   VoidSymbol ]	};
    key <AD08>	{ [         n,          N,   VoidSymbol,   VoidSymbol ]	};
    key <AD09>	{ [         h,          H,       degree,   VoidSymbol ]	};
    key <AD10>	{ [         p,          P,     sterling,   VoidSymbol ]	};
    key <AD11>	{ [         q,          Q, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [         w,          W,   asciitilde,   dead_breve ]	};

    key <AC01>	{ [         u,          U,  ucircumflex,  Ucircumflex ]	};
    key <AC02>	{ [         i,  Iabovedot,  icircumflex,  Icircumflex ]	};
    key <AC03>	{ [         e,          E,     EuroSign,   VoidSymbol ]	};
    key <AC04>	{ [         a,          A,  acircumflex,  Acircumflex ]	};
    key <AC05>	{ [udiaeresis, Udiaeresis,  ucircumflex,  Ucircumflex ]	};
    key <AC06>	{ [         t,          T,    trademark,   VoidSymbol ]	};
    key <AC07>	{ [         k,          K,   VoidSymbol,   VoidSymbol ]	};
    key <AC08>	{ [         m,          M,           mu,   VoidSymbol ]	};
    key <AC09>	{ [         l,          L,   VoidSymbol,   VoidSymbol ]	};
    key <AC10>	{ [         y,          Y,        acute,   dead_acute ]	};
    key <AC11>	{ [  scedilla,   Scedilla,   numbersign,   dead_caron ]	};
    key <TLDE>	{ type[group1] = "FOUR_LEVEL", [      plus,   asterisk,      notsign,    plusminus ]	};

    key <BKSL>	{ [         x,          X,        grave,   dead_grave ]	};
    key <AB01>	{ [         j,          J, guillemotleft,  VoidSymbol ]	};
    key <AB02>	{ [odiaeresis, Odiaeresis, guillemotright, VoidSymbol ]	};
    key <AB03>	{ [         v,          V, leftdoublequotemark, VoidSymbol ] };
    key <AB04>	{ [         c,          C,         cent,    copyright ]	};
    key <AB05>	{ [  ccedilla,   Ccedilla, rightdoublequotemark, VoidSymbol] };
    key <AB06>	{ [         z,          Z,   VoidSymbol,   VoidSymbol ]	};
    key <AB07>	{ [         s,          S,      section,   VoidSymbol ]	};
    key <AB08>	{ [         b,          B,     multiply, nobreakspace ]	};
    key <AB09>	{ type[group1] = "FOUR_LEVEL", [    period,      colon,     division, dead_abovedot]	};
    key <AB10>	{ type[group1] = "FOUR_LEVEL", [     comma,  semicolon, periodcentered, VoidSymbol ]	};
    key <SPCE>	{ type[group1] = "FOUR_LEVEL", [    space,  space, nobreakspace, nobreakspace ]	};
    key <LSGT>	{ type[group1] = "FOUR_LEVEL", [     less,     greater,          bar,    brokenbar ]	};
   
    key <RALT>  { type[Group1]="TWO_LEVEL",
                  [ ISO_Level3_Shift, Multi_key ]   };
    modifier_map Mod5   { <RALT> };
};
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d7 1
a7 1
// $XFree86: xc/programs/xkbcomp/symbols/pc/tr,v 1.6 2003/06/21 13:01:59 pascal Exp $
d17 11
a27 11
    key <AE01>	{ [         1,    exclam,    onesuperior,    exclamdown ] };
    key <AE02>	{ [         2, apostrophe,      sterling,   twosuperior ] };
    key <AE03>	{ [        3, asciicircum,    numbersign, threesuperior ] };
    key <AE04>	{ [         4,       plus,        dollar,    onequarter ] };
    key <AE06>	{ [         6,  ampersand, threequarters,    VoidSymbol ] };
    key <AE07>	{ [         7,      slash,     braceleft,    VoidSymbol ] };
    key <AE08>	{ [         8,  parenleft,   bracketleft,    VoidSymbol ] };
    key <AE09>	{ [         9, parenright,  bracketright,     plusminus ] };
    key <AE10>	{ [         0,      equal,    braceright,        degree ] };
    key <AE11>	{ [  asterisk,   question,     backslash,  questiondown ] };
    key <AE12>	{ [     minus, underscore,      division,    VoidSymbol ] };
d49 1
a49 1
    key <TLDE>	{ [  quotedbl,  backslash,    plusminus,       degree ]	};
d51 2
a52 2
    key <BKSL>	{ [     comma,  semicolon,        grave,   dead_grave ]	};
    key <LSGT>	{ [      less,    greater,          bar,    brokenbar ]	};
d55 5
a59 4
    key <AB10>	{ [    period,      colon, dead_abovedot, dead_abovedot ] };
    key <SPCE>	{ [     space,      space, nobreakspace,   nobreakspace ] };

    include "level3(ralt_switch_multikey)"
d71 11
a81 11
    key <AE01>	{ [         1,     exclam,  onesuperior,   exclamdown ]	};
    key <AE02>	{ [         2,   quotedbl,  twosuperior,   VoidSymbol ]	};
    key <AE03>	{ [         3, asciicircum, numbersign, threesuperior ] };
    key <AE04>	{ [         4,     dollar,   onequarter,   VoidSymbol ]	};
    key <AE06>	{ [         6,  ampersand, threequarters,  VoidSymbol ]	};
    key <AE07>	{ [         7, apostrophe,    braceleft,   VoidSymbol ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft,   VoidSymbol ]	};
    key <AE09>	{ [         9, parenright, bracketright,    plusminus ]	};
    key <AE10>	{ [         0,      equal,   braceright,       degree ]	};
    key <AE11>	{ [     slash,   question,    backslash, questiondown ]	};
    key <AE12>	{ [     minus, underscore,     division,   VoidSymbol ]	};
d107 1
a107 1
    key <TLDE>	{ [      plus,   asterisk,      notsign,    plusminus ]	};
d118 4
a121 4
    key <AB09>	{ [    period,      colon,     division, dead_abovedot]	};
    key <AB10>	{ [     comma,  semicolon, periodcentered, VoidSymbol ]	};
    key <SPCE>	{ [    space,       space, nobreakspace, nobreakspace ]	};
    key <LSGT>	{ [     less,     greater,          bar,    brokenbar ]	};
d123 3
a125 31
    include "level3(ralt_switch_multikey)"
};

// Turkish Alt-Q Layout
partial
xkb_symbols "tr_alt" {

    include "pc/latin"

    name[Group1]="Turkish";

    key <AE07>  { [         7,   ampersand,  lowleftcorner,  upleftcorner ] };
    key <AE08>  { [         8,    asterisk,          leftt,          topt ] };
    key <AE09>  { [         9,   parenleft,         rightt,          bott ] };
    key <AE10>  { [         0,  parenright, lowrightcorner, uprightcorner ] };
    key <AE11>  { [     minus,  underscore, horizlinescan5,      vertbar  ] };
    key <AE12>  { [     equal,        plus,  crossinglines  ] };

    key <AD03>  { [         e,           E,     EuroSign,   VoidSymbol ] };
//    key <AD05>        { [         t,           T,    trademark,   VoidSymbol >
    key <AD07>  { [         u,           U,   udiaeresis,   Udiaeresis ] };
    key <AD08>  { [         i,           I,     idotless,    Iabovedot ] };
    key <AD09>  { [         o,           O,   odiaeresis,   Odiaeresis ] };
    key <AC01>  { [         a,           A,  acircumflex,  Acircumflex ] };
    key <AC02>  { [         s,           S,     scedilla,     Scedilla ] };
    key <AC05>  { [         g,           G,       gbreve,       Gbreve ] };

    key <AB03>  { [         c,           C,     ccedilla,     Ccedilla ] };
    key <SPCE>  { [     space,       space, nobreakspace, nobreakspace ] };

    include "level3(ralt_switch_multikey)"
@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d7 1
a7 1
// $XFree86: xc/programs/xkbcomp/symbols/pc/tr,v 1.6 2003/06/21 13:01:59 pascal Exp $
d17 11
a27 11
    key <AE01>	{ [         1,    exclam,    onesuperior,    exclamdown ] };
    key <AE02>	{ [         2, apostrophe,      sterling,   twosuperior ] };
    key <AE03>	{ [        3, asciicircum,    numbersign, threesuperior ] };
    key <AE04>	{ [         4,       plus,        dollar,    onequarter ] };
    key <AE06>	{ [         6,  ampersand, threequarters,    VoidSymbol ] };
    key <AE07>	{ [         7,      slash,     braceleft,    VoidSymbol ] };
    key <AE08>	{ [         8,  parenleft,   bracketleft,    VoidSymbol ] };
    key <AE09>	{ [         9, parenright,  bracketright,     plusminus ] };
    key <AE10>	{ [         0,      equal,    braceright,        degree ] };
    key <AE11>	{ [  asterisk,   question,     backslash,  questiondown ] };
    key <AE12>	{ [     minus, underscore,      division,    VoidSymbol ] };
d49 1
a49 1
    key <TLDE>	{ [  quotedbl,  backslash,    plusminus,       degree ]	};
d51 2
a52 2
    key <BKSL>	{ [     comma,  semicolon,        grave,   dead_grave ]	};
    key <LSGT>	{ [      less,    greater,          bar,    brokenbar ]	};
d55 5
a59 4
    key <AB10>	{ [    period,      colon, dead_abovedot, dead_abovedot ] };
    key <SPCE>	{ [     space,      space, nobreakspace,   nobreakspace ] };

    include "level3(ralt_switch_multikey)"
d71 11
a81 11
    key <AE01>	{ [         1,     exclam,  onesuperior,   exclamdown ]	};
    key <AE02>	{ [         2,   quotedbl,  twosuperior,   VoidSymbol ]	};
    key <AE03>	{ [         3, asciicircum, numbersign, threesuperior ] };
    key <AE04>	{ [         4,     dollar,   onequarter,   VoidSymbol ]	};
    key <AE06>	{ [         6,  ampersand, threequarters,  VoidSymbol ]	};
    key <AE07>	{ [         7, apostrophe,    braceleft,   VoidSymbol ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft,   VoidSymbol ]	};
    key <AE09>	{ [         9, parenright, bracketright,    plusminus ]	};
    key <AE10>	{ [         0,      equal,   braceright,       degree ]	};
    key <AE11>	{ [     slash,   question,    backslash, questiondown ]	};
    key <AE12>	{ [     minus, underscore,     division,   VoidSymbol ]	};
d107 1
a107 1
    key <TLDE>	{ [      plus,   asterisk,      notsign,    plusminus ]	};
d118 4
a121 4
    key <AB09>	{ [    period,      colon,     division, dead_abovedot]	};
    key <AB10>	{ [     comma,  semicolon, periodcentered, VoidSymbol ]	};
    key <SPCE>	{ [    space,       space, nobreakspace, nobreakspace ]	};
    key <LSGT>	{ [     less,     greater,          bar,    brokenbar ]	};
d123 3
a125 31
    include "level3(ralt_switch_multikey)"
};

// Turkish Alt-Q Layout
partial
xkb_symbols "tr_alt" {

    include "pc/latin"

    name[Group1]="Turkish";

    key <AE07>  { [         7,   ampersand,  lowleftcorner,  upleftcorner ] };
    key <AE08>  { [         8,    asterisk,          leftt,          topt ] };
    key <AE09>  { [         9,   parenleft,         rightt,          bott ] };
    key <AE10>  { [         0,  parenright, lowrightcorner, uprightcorner ] };
    key <AE11>  { [     minus,  underscore, horizlinescan5,      vertbar  ] };
    key <AE12>  { [     equal,        plus,  crossinglines  ] };

    key <AD03>  { [         e,           E,     EuroSign,   VoidSymbol ] };
//    key <AD05>        { [         t,           T,    trademark,   VoidSymbol >
    key <AD07>  { [         u,           U,   udiaeresis,   Udiaeresis ] };
    key <AD08>  { [         i,           I,     idotless,    Iabovedot ] };
    key <AD09>  { [         o,           O,   odiaeresis,   Odiaeresis ] };
    key <AC01>  { [         a,           A,  acircumflex,  Acircumflex ] };
    key <AC02>  { [         s,           S,     scedilla,     Scedilla ] };
    key <AC05>  { [         g,           G,       gbreve,       Gbreve ] };

    key <AB03>  { [         c,           C,     ccedilla,     Ccedilla ] };
    key <SPCE>  { [     space,       space, nobreakspace, nobreakspace ] };

    include "level3(ralt_switch_multikey)"
@

