head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	cvs-200403021700:1.1.1.1
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.10.49;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.10.49;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* -*- Mode: C; tab-width: 4 -*- */
/* run --- run an arbitrary mode */

#if !defined( lint ) && !defined( SABER )
static const char sccsid[] = "@@(#)run.c	5.00 2000/11/01 xlockmore";

#endif

/*-
 * Copyright (c) 2000 by David Bagley
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appear in all copies and that
 * both that copyright notice and this permission notice appear in
 * supporting documentation.
 *
 * This file is provided AS IS with no warranties of any kind.  The author
 * shall have no liability with respect to the infringement of copyrights,
 * trade secrets or any patents by this file or any part thereof.  In no
 * event will the author be liable for any lost revenue or profits or
 * other special, indirect and consequential damages.
 *
 * Revision History:
 * 19-Apr-2000: Written.
 */

#ifdef STANDALONE
#define PROGCLASS "Run"
#define HACK_INIT init_run
#define HACK_DRAW draw_run
#define run_opts xlockmore_opts
#define DEFAULTS "*delay: 1000000 \n"
#include "xlockmore.h"		/* in xscreensaver distribution */
#else /* STANDALONE */
#include "xlock.h"		/* in xlockmore distribution */
#endif /* STANDALONE */

#ifdef MODE_run

#ifdef VMS
/* Have to set the Logical VAXC$PATH to point to SYS$SYSTEM */
#define DEF_RUNPROGRAM "DECW$XCLOCK.EXE"
#else
#define DEF_RUNPROGRAM "xclock"
#endif
#define DEF_GEOMETRYSTRING "geometry"
/* some programs do not like "-geometry" but like "-g" */

static char *runprogram;
static char *geometrystring;

static XrmOptionDescRec opts[] =
{
	{(char *) "-runprogram", (char *) ".run.runprogram", XrmoptionSepArg, (caddr_t) NULL},
	{(char *) "-geometrystring", (char *) ".run.geometrystring", XrmoptionSepArg, (caddr_t) NULL}
};

static argtype vars[] =
{
	{(caddr_t *) & runprogram, (char *) "runprogram", (char *) "Runprogram", (char *) DEF_RUNPROGRAM, t_String},
	{(caddr_t *) & geometrystring, (char *) "geometrystring", (char *) "GeometryString", (char *) DEF_GEOMETRYSTRING, t_String}
};

static OptionStruct desc[] =
{
	{(char *) "-runprogram string", (char *) "program to run (default xclock)"},
	{(char *) "-geometrystring string", (char *) "geometry string, could be g for -g, none for none"}
};

ModeSpecOpt run_opts =
{sizeof opts / sizeof opts[0], opts, sizeof vars / sizeof vars[0], vars, desc};

#ifdef USE_MODULES
ModStruct   run_description =
{"run", "init_run", "draw_run", "release_run",
 "refresh_run", "init_run", NULL, &run_opts,
 3000000, 1, 1, 1, 64, 1.0, "",
 "Shows another xprogram", 0, NULL};

#endif

typedef struct {
	int numberprocess;
	int width, height;
} runstruct;

static runstruct *runs = NULL;

void
init_run(ModeInfo * mi)
{
	char geom_buf[50];
	char geoms_buf[50];
	/* char win_buf[50]; */
	XWindowAttributes xgwa;
	runstruct *rp;

	if (runs == NULL) {
		if ((runs = (runstruct *) calloc(MI_NUM_SCREENS(mi),
				sizeof (runstruct))) == NULL)
			return;
	}
	rp = &runs[MI_SCREEN(mi)];

	if (rp->numberprocess == 0 && !MI_IS_ICONIC(mi)) {
		(void) XGetWindowAttributes(MI_DISPLAY(mi),
			RootWindowOfScreen(MI_SCREENPTR(mi)), &xgwa);
#ifdef DEBUG
		(void) printf("%dx%d\n", xgwa.width, xgwa.height);
#endif
		(void) sprintf(geom_buf, "%dx%d", xgwa.width, xgwa.height);
		(void) sprintf(geoms_buf, "-%s", geometrystring);
#ifdef VMS
#define FORK vfork
#else
#define FORK fork
#endif
		if ((rp->numberprocess = FORK()) == -1)
			(void) fprintf(stderr, "Fork error\n");
		else if (rp->numberprocess == 0) {
			if (strcmp(geoms_buf, "-none")) {
#ifdef DEBUG
				(void) printf("running \"%s %s %s\"\n",
					runprogram, geoms_buf, geom_buf);
#endif
				(void) execlp(runprogram, runprogram,
					geoms_buf, geom_buf, 0);
			} else {
#ifdef DEBUG
				(void) printf("running \"%s\"\n", runprogram);
#endif

				(void) execlp(runprogram, runprogram);
			}
		}
	}
}

/* ARGSUSED */
void
draw_run(ModeInfo * mi)
{
}

#ifdef SunCplusplus
extern int  kill(pid_t, int);
extern pid_t  wait(int *);
#else
#if 0
extern int  kill(int, int);
extern pid_t  wait(int *);

#endif
#endif

void
release_run(ModeInfo * mi)
{
	if (runs != NULL) {
		int         screen;

		for (screen = 0; screen < MI_NUM_SCREENS(mi); screen++) {
			runstruct *rp = &runs[screen];

			if (rp->numberprocess > 0) {
				int n;
#ifdef DEBUG
				(void) printf("killing %d\n",
					rp->numberprocess);
#endif
				(void) kill(rp->numberprocess, SIGKILL);
				(void) wait(&n);
			}
		}
		(void) free((void *) runs);
		runs = NULL;
        }
}

void
refresh_run(ModeInfo * mi)
{
	/* Do nothing, it will refresh by itself :) */
}

#endif /* MODE_run */
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
