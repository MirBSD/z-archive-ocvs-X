head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	cvs-200403021700:1.1.1.1
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.10.53;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.10.53;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* sphere, Copyright (c) 1998 David Konerding <dek@@cgl.ucsf.edu>
 * Utility function to create a unit sphere in GL.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation.  No representations are made about the suitability of this
 * software for any purpose.  It is provided "as is" without express or 
 * implied warranty.
 *
 *  8-Oct-98: dek           Released initial version of "glplanet"
 * 21-Mar-01: jwz@@jwz.org   Broke sphere routine out into its own file.
 */

/* #include "config.h" */
#include <stdlib.h>
#include <math.h>
#include <GL/glx.h>

/* Function for determining points on the surface of the sphere */
static void
parametric_sphere (float theta, float rho, GLfloat *vector)
{
  vector[0] = -sin(theta) * sin(rho);
  vector[1] = cos(theta) * sin(rho);
  vector[2] = cos(rho);
}


void
unit_sphere (int stacks, int slices, Bool wire)
{
  int i, j;
  float drho, dtheta;
  float rho, theta;
  GLfloat vector[3];
  GLfloat ds, dt, t, s;

  if (!wire)
    glShadeModel(GL_SMOOTH);

  /* Generate a sphere with quadrilaterals.
   * Quad vertices are determined using a parametric sphere function.
   * For fun, you could generate practically any parameteric surface and
   * map an image onto it. 
   */
  drho = M_PI / stacks;
  dtheta = 2.0 * M_PI / slices;
  ds = 1.0 / slices;
  dt = 1.0 / stacks;

  glFrontFace(GL_CCW);
  glBegin (wire ? GL_LINE_LOOP : GL_QUADS);

  t = 0.0;
  for (i=0; i < stacks; i++) {
    rho = i * drho;
    s = 0.0;
    for (j=0; j < slices; j++) {
      theta = j * dtheta;

      glTexCoord2f (s,t);
      parametric_sphere (theta, rho, vector);
      glNormal3fv (vector);
      parametric_sphere (theta, rho, vector);
      glVertex3f (vector[0], vector[1], vector[2]);

      glTexCoord2f (s,t+dt);
      parametric_sphere (theta, rho+drho, vector);
      glNormal3fv (vector);
      parametric_sphere (theta, rho+drho, vector);
      glVertex3f (vector[0], vector[1], vector[2]);

      glTexCoord2f (s+ds,t+dt);
      parametric_sphere (theta + dtheta, rho+drho, vector);
      glNormal3fv (vector);
      parametric_sphere (theta + dtheta, rho+drho, vector);
      glVertex3f (vector[0], vector[1], vector[2]);

      glTexCoord2f (s+ds, t);
      parametric_sphere (theta + dtheta, rho, vector);
      glNormal3fv (vector);
      parametric_sphere (theta + dtheta, rho, vector);
      glVertex3f (vector[0], vector[1], vector[2]);

      s = s + ds;
    }
    t = t + dt;
  }
  glEnd();
}
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
