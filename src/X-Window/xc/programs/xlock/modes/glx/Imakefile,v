head	1.3;
access;
symbols
	tg-mergetmp-2:1.3
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	cvs-200403021700:1.1.1.1
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2004.03.22.20.54.09;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2004.03.18.22.08.57;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.20.10.49;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.10.49;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@big commit:
* fix xlock correctly, this time
* add RCS IDs
* nuke remaining unprotected calls to obsolete network protocols
  (I hope I didn't remove too much)
* build base + X11 through and sync sets
@
text
@#ifndef XCOMM
#define XCOMM /**/#
#endif
XCOMM $MirBSD$
XCOMM @@(#)Sub Imakefile	xlockmore
XCOMM

#include "../../iconfig.h"
top_srcdir = ../..

UTILDIR = $(top_srcdir)/xlock/
MODEDIR = $(top_srcdir)/modes/
GLDIR = $(top_srcdir)/modes/glx/
UTILOBJDIR = ../../xlock/
MODEOBJDIR = ../
GLOBJDIR = ./

DM =
DU = $(UTILDIR)
DOU = $(UTILOBJDIR)
DG = $(GLDIR)
DOG = $(GLOBJDIR)
OM = $(O)$(S)$(DM)
OU = $(O)$(S)$(DOU)
OG = $(O)$(S)$(DOG)
CM = $(C) $(DM)
CU = $(C) $(DU)
CG = $(C) $(DG)
CXG = $(CX) $(DG)

XCOMM  List of object files
#ifdef GLLibrary
#ifdef Unstable
XLOCKUNSTABLEGLOBJS = $(DOG)skewb$(O)
#endif
#ifdef CPPCompiler
INVERTOBJS = $(DOG)i_figureeight$(O)$(S)\
$(DOG)i_linkage$(OG)i_sphere$(OG)i_spline$(O)$(S)\
$(DOG)i_threejet$(OG)i_threejetvec$(O)$(S)\
$(DOG)i_twojet$(OG)i_twojetvec$(O)
#ifndef MirBSDArchitecture
XLOCKDEPCPPGLOBJS = $(INVERTOBJS)
XLOCKMULTCPPGLOBJS = $(DOG)invert$(O)
#endif
#if defined(TtfLibrary) && defined(GlttLibrary) && defined(Unstable)
XLOCKUNSTABLETEXTGLOBJS = $(DOG)text3d$(O)
#endif
#endif
SPROINGIESOBJS = $(DOG)buildlwo$(OG)sproingiewrap$(OG)s1_b$(O)$(S)\
$(DOG)s1_1$(OG)s1_2$(OG)s1_3$(OG)s1_4$(OG)s1_5$(OG)s1_6$(O)
ATLANTISOBJS = $(DOG)dolphin$(OG)shark$(OG)swim$(OG)whale$(O)
GLPLANETOBJS = $(DOG)sphere$(O)
BUBBLE3DOBJS = $(DOG)b_draw$(OG)b_sphere$(OG)b_lockglue$(O)
MOLECULEOBJS = $(DOG)tube$(O)
XLOCKDEPGLOBJS = $(DOG)xpm-ximage$(OG)pipeobjs$(O)$(S)\
$(SPROINGIESOBJS)$(S)$(ATLANTISOBJS)$(S)$(GLPLANETOBJS)$(S)$(BUBBLE3DOBJS)$(S)\
$(MOLECULEOBJS)$(S)$(XLOCKDEPCPPGLOBJS)
XLOCKNORMGLOBJS = $(DOG)cage$(OG)gears$(O)$(S)\
$(DOG)moebius$(OG)morph3d$(O)$(S)\
$(DOG)rubik$(OG)sierpinski3d$(OG)stairs$(OG)superquadrics$(O)$(S)\
$(XLOCKUNSTABLEGLOBJS)$(S)$(XLOCKUNSTABLETEXTGLOBJS)
XLOCKMULTGLOBJS = $(DOG)fire$(OG)lament$(OG)sballs$(OG)molecule$(O)$(S)\
$(DOG)pipes$(OG)sproingies$(OG)atlantis$(OG)bubble3d$(OG)glplanet$(O)$(S)\
$(XLOCKMULTCPPGLOBJS)
XLOCKGLOBJS = $(XLOCKNORMGLOBJS)$(S)\
$(XLOCKDEPGLOBJS)$(S)$(XLOCKMULTGLOBJS)

/* Sources */
#ifdef Unstable
XLOCKUNSTABLEGLSRCS = $(DOG)skewb$(C)
#endif
#ifdef CPPCompiler
INVERTSRCS = $(DOG)i_figureeight$(C)$(S)\
$(DOG)i_linkage$(CG)i_sphere$(CG)i_spline$(C)$(S)\
$(DOG)i_threejet$(CG)i_threejetvec$(C)$(S)\
$(DOG)i_twojet$(CG)i_twojetvec$(C)
#ifndef MirBSDArchitecture
XLOCKDEPCPPGLSRCS = $(INVERTSRCS)
XLOCKMULTCPPGLSRCS = $(DOG)invert$(C)
#endif
#if defined(TtfLibrary) && defined(GlttLibrary) && defined(Unstable)
XLOCKUNSTABLETEXTGLSRCS = $(DOG)text3d$(C)
#endif
#endif
SPROINGIESSRCS = $(DOG)buildlwo$(CG)sproingiewrap$(CG)s1_b$(C)$(S)\
$(DOG)s1_1$(CG)s1_2$(CG)s1_3$(CG)s1_4$(CG)s1_5$(CG)s1_6$(C)
ATLANTISSRCS = $(DOG)dolphin$(CG)shark$(CG)swim$(CG)whale$(C)
GLPLANETSRCS = $(DOG)sphere$(C)
BUBBLE3DSRCS = $(DOG)b_draw$(CG)b_sphere$(CG)b_lockglue$(C)
MOLECULESRCS = $(DOG)tube$(C)
XLOCKDEPGLSRCS = $(DOG)xpm-ximage$(CG)pipeobjs$(C)$(S)\
$(SPROINGIESSRCS)$(S)$(ATLANTISSRCS)$(S)$(GLPLANETSRCS)$(S)$(BUBBLE3DSRCS)$(S)\
$(MOLECULESRCS)$(S)$(XLOCKDEPCPPGLSRCS)
XLOCKNORMGLSRCS = $(DOG)cage$(CG)gears$(C)$(S)\
$(DOG)moebius$(CG)morph3d$(C)$(S)\
$(DOG)rubik$(CG)sierpinski3d$(CG)stairs$(CG)superquadrics$(C)$(S)\
$(XLOCKUNSTABLEGLSRCS)$(S)$(XLOCKUNSTABLETEXTGLSRCS)
XLOCKMULTGLSRCS = $(DOG)fire$(CG)lament$(CG)sballs$(CG)molecule$(C)$(S)\
$(DOG)pipes$(CG)sproingies$(CG)atlantis$(CG)bubble3d$(CG)glplanet$(C)$(S)\
$(XLOCKMULTCPPGLSRCS)
SRCS = $(XLOCKNORMGLSRCS)$(S)\
$(XLOCKDEPGLSRCS)$(S)$(XLOCKMULTGLSRCS)
#endif
XCOMM default target

#ifdef Modules

NORMMODULES = $(XLOCKNORMMODEOBJS:.o=.xlk)

MULTMODULES = $(XLOCKMULTMODEOBJS:.o=.xlk)

MODULES = $(NORMMODULES) $(MULTMODULES)

EXTRA_LDOPTIONS += $(MODULEFLAGS)

all:: $(XLOCKMODULES)

InstallMultiple($(MODULES), $(DEF_MODULEPATH))

$(CX)$(O) :
	$(CXX) -c -o $@@ $(CFLAGS) $<
XCOMM	Sun and gcc
XCOMM	$(CXX) -c -o $@@ -isystem /usr/openwin/include $(CFLAGS) $<

$(NORMMODULES) : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $<

$(DOG)fire.xlk : $(DOG)xpm-ximage.o
$(DOG)lament.xlk : $(DOG)xpm-ximage.o
$(DOG)sballs.xlk : $(DOG)xpm-ximage.o

$(DOG)fire.xlk $(DOG)lament.xlk $(DOG)sballs.xlk : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $(DOG)xpm-ximage.o $<

$(DOG)pipes.xlk : $(DOG)buildlwo.o $(DOG)pipeobjs.o

$(DOG)pipes.xlk : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $(DOG)buildlwo.o $(DOG)pipeobjs.o $<

$(DOG)sproingies.xlk : $(SPROINGIESOBJS)

$(DOG)sproingies.xlk : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $(SPROINGIESOBJS) $<

$(DOG)atlantis.xlk : $(ATLANTISOBJS)

$(DOG)atlantis.xlk : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $(ATLANTISOBJS) $<


$(DOG)bubble3d.xlk : $(BUBBLE3DOBJS)

$(DOG)bubble3d.xlk : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $(BUBBLE3DOBJS) $<

#ifdef CPPCompiler

$(DOG)invert.xlk : $(INVERTOBJS)

$(DOG)invert.xlk : %.xlk:%.o
	$(RM) $@@
	$(CCLINK) $(CFLAGS) $(SHLIBLDFLAGS) -o $@@ $(INVERTOBJS) $<
#endif

clean::
	$(RM) *.xlk .pure

#else
all:: $(XLOCKGLOBJS)
#endif

XLOCKINC = -I. -I../.. -I../../xlock

DependTarget()
LintTarget()

distclean::	clean
	$(RM) Makefile config.status config.cache config.log config.h

clean.all:: distclean
@


1.2
log
@disable the "invert" mode ifdef MirBSDArchitecture for now
it causes the X server to crash with signal 11 and out of memory
for some weird reason.
@
text
@d4 1
@


1.1
log
@Initial revision
@
text
@d40 1
d43 1
d76 1
d79 1
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
