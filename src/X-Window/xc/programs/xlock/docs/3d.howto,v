head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	cvs-200403021700:1.1.1.1
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.20.10.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.10.41;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@
              Introduction to 3d modes
                  Henrik Theiling


This is a short introduction to how you could try to see the 3d effects
in xlock:

- You will need glasses with one lens red and the other blue (or green).
  The blue (or green) one needs to be in front of the left eye, the red one
  in front of the right one.  If you have got differently coloured lenses
  (like green) you can try to adjust the colours by using the switches
  -right3d <colour> and -left3d <colour> .

 If you do not see any 3d effect, try to change the -delta3d value.

- Adjust the colour of your screen (or use -right3d/-left3d instead).  Most
  likely if you use the green colours will be too bright so you can see them
  through the red lens, too.

- Let the program display in blue for the green lens.  You should still be
  able to see blue through your green lens, but less likely through your
  red lens.

- Try to zoom in from a completely dark screen.

- Try different 3d modes.  Some people see `rock' more easily, others `worm'.
  It depends.

I hope you enjoy it.

Currently the following modes are implemented for 3d view:
  rock, worm, bouboule, pyro.

BUGS:
  Some of the 3d modes are not implemented with real 3d.  They try to
  use a close approach.
  Rock, pyro and bouboule use real 3d calculations.
  In the worm mode, worms can not just creep to the bottom or the top.  That
  means they do not have a real 3d direction but one 2d direction (the same
  as in 2d mode) and an additional 1d direction for the z-axis.  This could
  be fixed.

@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
