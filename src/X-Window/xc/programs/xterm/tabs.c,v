head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407190955:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.11.10;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.11.10;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.41.17;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.29.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 *	$XFree86: xc/programs/xterm/tabs.c,v 3.9 2001/01/17 23:46:39 dawes Exp $
 */

/* $Xorg: tabs.c,v 1.3 2000/08/17 19:55:09 cpqbld Exp $ */

/*
 * Copyright 2000 by Thomas E. Dickey
 *
 *                         All Rights Reserved
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the
 * sale, use or other dealings in this Software without prior written
 * authorization.
 *
 * Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.
 *
 *                         All Rights Reserved
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appear in all copies and that
 * both that copyright notice and this permission notice appear in
 * supporting documentation, and that the name of Digital Equipment
 * Corporation not be used in advertising or publicity pertaining to
 * distribution of the software without specific, written prior permission.
 *
 *
 * DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
 * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
 * DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
 * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
 * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 */

/* tabs.c */

#include <xterm.h>
#include <data.h>

/*
 * This file presumes 32bits/word.  This is somewhat of a crock, and should
 * be fixed sometime.
 */
#define TAB_INDEX(n) ((n) >> 5)
#define TAB_MASK(n)  (1 << ((n) & 31))

#define SET_TAB(tabs,n) tabs[TAB_INDEX(n)] |=  TAB_MASK(n)
#define CLR_TAB(tabs,n) tabs[TAB_INDEX(n)] &= ~TAB_MASK(n)
#define TST_TAB(tabs,n) tabs[TAB_INDEX(n)] &   TAB_MASK(n)

/*
 * places tabstops at only every 8 columns
 */
void
TabReset(Tabs tabs)
{
	register int i;

	for (i=0; i<TAB_ARRAY_SIZE; ++i)
		tabs[i] = 0;

	for (i=0; i<MAX_TABS; i+=8)
		TabSet(tabs, i);
}	


/*
 * places a tabstop at col
 */
void
TabSet(Tabs tabs, int col)
{
	SET_TAB(tabs,col);
}

/*
 * clears a tabstop at col
 */
void
TabClear(Tabs tabs, int col)
{
	CLR_TAB(tabs,col);
}

/*
 * returns the column of the next tabstop
 * (or MAX_TABS - 1 if there are no more).
 * A tabstop at col is ignored.
 */
int
TabNext (Tabs tabs, int col)
{
	register TScreen *screen = &term->screen;

	if(screen->curses && screen->do_wrap && (term->flags & WRAPAROUND)) {
		xtermIndex(screen, 1);
		col = screen->cur_col = screen->do_wrap = 0;
	}
	for (++col; col<MAX_TABS; ++col)
		if (TST_TAB(tabs,col))
			return (col);

	return (MAX_TABS - 1);
}

/*
 * returns the column of the previous tabstop
 * (or 0 if there are no more).
 * A tabstop at col is ignored.
 */
int
TabPrev (Tabs tabs, int col)
{
	for (--col; col >= 0; --col)
		if (TST_TAB(tabs,col))
			return (col);

	return (0);
}

/*
 * Tab to the next stop, returning true if the cursor moved
 */
Boolean
TabToNextStop(void)
{
	register TScreen *screen = &term->screen;
	int saved_column = screen->cur_col;

	screen->cur_col = TabNext(term->tabs, screen->cur_col);
	if (screen->cur_col > CurMaxCol(screen, screen->cur_row))
		screen->cur_col = CurMaxCol(screen, screen->cur_row);

	return (screen->cur_col > saved_column);
}

/*
 * Tab to the previous stop, returning true if the cursor moved
 */
Boolean
TabToPrevStop(void)
{
	register TScreen *screen = &term->screen;
	int saved_column = screen->cur_col;

	screen->cur_col = TabPrev(term->tabs, screen->cur_col);

	return (screen->cur_col < saved_column);
}

/*
 * clears all tabs
 */
void
TabZonk (Tabs tabs)
{
	register int i;

	for (i=0; i<TAB_ARRAY_SIZE; ++i)
		tabs[i] = 0;
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d2 1
a2 1
 *	$XFree86: xc/programs/xterm/tabs.c,v 3.10 2002/03/26 01:46:40 dickey Exp $
d8 1
a8 1
 * Copyright 2000,2002 by Thomas E. Dickey
d68 1
a68 1
#define TAB_MASK(n)  (1 << ((n) & (TAB_BITS_WIDTH-1)))
d80 1
a80 1
    register int i;
d82 6
a87 2
    for (i = 0; i < TAB_ARRAY_SIZE; ++i)
	tabs[i] = 0;
a88 3
    for (i = 0; i < MAX_TABS; i += 8)
	TabSet(tabs, i);
}
d96 1
a96 1
    SET_TAB(tabs, col);
d105 1
a105 1
    CLR_TAB(tabs, col);
d114 1
a114 1
TabNext(Tabs tabs, int col)
d116 1
a116 1
    register TScreen *screen = &term->screen;
d118 7
a124 7
    if (screen->curses && screen->do_wrap && (term->flags & WRAPAROUND)) {
	xtermIndex(screen, 1);
	col = screen->cur_col = screen->do_wrap = 0;
    }
    for (++col; col < MAX_TABS; ++col)
	if (TST_TAB(tabs, col))
	    return (col);
d126 1
a126 1
    return (MAX_TABS - 1);
d135 1
a135 1
TabPrev(Tabs tabs, int col)
d137 3
a139 3
    for (--col; col >= 0; --col)
	if (TST_TAB(tabs, col))
	    return (col);
d141 1
a141 1
    return (0);
d150 2
a151 2
    register TScreen *screen = &term->screen;
    int saved_column = screen->cur_col;
d153 3
a155 3
    screen->cur_col = TabNext(term->tabs, screen->cur_col);
    if (screen->cur_col > CurMaxCol(screen, screen->cur_row))
	screen->cur_col = CurMaxCol(screen, screen->cur_row);
d157 1
a157 1
    return (screen->cur_col > saved_column);
d166 2
a167 2
    register TScreen *screen = &term->screen;
    int saved_column = screen->cur_col;
d169 1
a169 1
    screen->cur_col = TabPrev(term->tabs, screen->cur_col);
d171 1
a171 1
    return (screen->cur_col < saved_column);
d178 1
a178 1
TabZonk(Tabs tabs)
d180 1
a180 1
    register int i;
d182 2
a183 2
    for (i = 0; i < TAB_ARRAY_SIZE; ++i)
	tabs[i] = 0;
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d2 1
a2 1
 *	$XFree86: xc/programs/xterm/tabs.c,v 3.10 2002/03/26 01:46:40 dickey Exp $
d8 1
a8 1
 * Copyright 2000,2002 by Thomas E. Dickey
d68 1
a68 1
#define TAB_MASK(n)  (1 << ((n) & (TAB_BITS_WIDTH-1)))
d80 1
a80 1
    register int i;
d82 6
a87 2
    for (i = 0; i < TAB_ARRAY_SIZE; ++i)
	tabs[i] = 0;
a88 3
    for (i = 0; i < MAX_TABS; i += 8)
	TabSet(tabs, i);
}
d96 1
a96 1
    SET_TAB(tabs, col);
d105 1
a105 1
    CLR_TAB(tabs, col);
d114 1
a114 1
TabNext(Tabs tabs, int col)
d116 1
a116 1
    register TScreen *screen = &term->screen;
d118 7
a124 7
    if (screen->curses && screen->do_wrap && (term->flags & WRAPAROUND)) {
	xtermIndex(screen, 1);
	col = screen->cur_col = screen->do_wrap = 0;
    }
    for (++col; col < MAX_TABS; ++col)
	if (TST_TAB(tabs, col))
	    return (col);
d126 1
a126 1
    return (MAX_TABS - 1);
d135 1
a135 1
TabPrev(Tabs tabs, int col)
d137 3
a139 3
    for (--col; col >= 0; --col)
	if (TST_TAB(tabs, col))
	    return (col);
d141 1
a141 1
    return (0);
d150 2
a151 2
    register TScreen *screen = &term->screen;
    int saved_column = screen->cur_col;
d153 3
a155 3
    screen->cur_col = TabNext(term->tabs, screen->cur_col);
    if (screen->cur_col > CurMaxCol(screen, screen->cur_row))
	screen->cur_col = CurMaxCol(screen, screen->cur_row);
d157 1
a157 1
    return (screen->cur_col > saved_column);
d166 2
a167 2
    register TScreen *screen = &term->screen;
    int saved_column = screen->cur_col;
d169 1
a169 1
    screen->cur_col = TabPrev(term->tabs, screen->cur_col);
d171 1
a171 1
    return (screen->cur_col < saved_column);
d178 1
a178 1
TabZonk(Tabs tabs)
d180 1
a180 1
    register int i;
d182 2
a183 2
    for (i = 0; i < TAB_ARRAY_SIZE; ++i)
	tabs[i] = 0;
@

