head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.04.08.18.39.50;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.39.50;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.28.29;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 * Provide setenv() and unsetenv() on platforms that don't have them.
 * From FreeBSD's libc.
 */

/*
 * Copyright (c) 1987, 1993
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $XFree86: xc/programs/xedit/lisp/env.c,v 1.1 2002/03/05 03:52:34 dawes Exp $ */


#include <stdlib.h>
#include <stddef.h>
#include <string.h>

extern char **environ;

extern int setenv(const char *name, const char *value, int overwrite);
extern void unsetenv(const char *name);

static char *
findenv(const char *name, int *offset)
{
    int len, i;
    const char *np;
    char **p, *cp;

    if (name == NULL || environ == NULL)
	return NULL;

    for (np = name; *np && *np != '='; ++np)
	continue;
    len = np - name;
    for (p = environ; (cp = *p) != NULL; ++p) {
	for (np = name, i = len; i && *cp; i--)
	    if (*cp++ != *np++)
		break;
	if (i == 0 && *cp++ == '=') {
	    *offset = p - environ;
	    return cp;
	}
    }
    return NULL;
}

/*
 * setenv --
 *      Set the value of the environmental variable "name" to be
 *      "value".  If overwrite is set, replace any current value.
 */

int
setenv(const char *name, const char *value, int overwrite)
{
    static char **alloced;			/* if allocated space before */
    char *c;
    int l_value, offset;

    if (*value == '=')				/* no '=' in value */
	++value;
    l_value = strlen(value);
    if ((c = findenv(name, &offset))) {		/* find if already exists */
	if (!overwrite)
	    return 0;
	if (strlen(c) >= l_value) {		/* old larger; copy over */
	    while ((*c++ = *value++))
		;
	    return 0;
	}
    } else {					/* create new slot */
	int cnt;
	char **p;

	for (p = environ, cnt = 0; *p; ++p, ++cnt)
	    ;
	if (alloced == environ) {		/* just increase size */
	    p = (char **)realloc((char *)environ,
				 sizeof(char *) * (cnt + 2));
	    if (!p)
		return -1;
	    alloced = environ = p;
	} else {				/* get new space */
						/* copy old entries into it */
	    p = malloc(sizeof(char *) * (cnt + 2));
	    if (!p)
		return -1;
	    memcpy(p, environ, cnt * sizeof(char *));
	    alloced = environ = p;
	}
	environ[cnt + 1] = NULL;
	offset = cnt;
    }
    for (c = (char *)name; *c && *c != '='; ++c)	/* no '=' in name */
	;
    if (!(environ[offset] =				/* name + '=' + value */
			malloc((int)(c - name) + l_value + 2)))
	return -1;
    for (c = environ[offset]; (*c = *name++) && *c != '='; ++c)
	;
    for (*c++ = '='; (*c++ = *value++); )
	;
    return 0;
}

/*
 * unsetenv(name) --
 *      Delete environmental variable "name".
 */

void
unsetenv(const char *name)
{
    char **p;
    int offset;

    while (findenv(name, &offset))		/* if set multiple times */
	for (p = &environ[offset];; ++p)
	    if (!(*p = *(p + 1)))
		break;
}

@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@
