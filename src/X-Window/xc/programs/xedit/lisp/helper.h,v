head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.10.19;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.10.19;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.39.50;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.18.39.10;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.28.30;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 * Copyright (c) 2001 by The XFree86 Project, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *  
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE XFREE86 PROJECT BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of the XFree86 Project shall
 * not be used in advertising or otherwise to promote the sale, use or other
 * dealings in this Software without prior written authorization from the
 * XFree86 Project.
 *
 * Author: Paulo César Pereira de Andrade
 */

/* $XFree86: xc/programs/xedit/lisp/helper.h,v 1.3 2001/10/15 07:05:52 paulo Exp $ */

#ifndef Lisp_helper_h
#define Lisp_helper_h

#include "private.h"

/*
 * Defines
 */
#define LESS		0
#define LESS_EQUAL	1
#define EQUAL		2
#define GREATER		3
#define GREATER_EQUAL	4
#define NOT_EQUAL	5

/*
 * Prototypes
 */
/*
 (do ({(var [init [step]])}*)
	(end-test {result}*)
	{declaration}* {tag | statement}*)
 (do* ({(var [init [step]])}*)
	(end-test {result}*)
	{declaration}* {tag | statement}*)
 */
LispObj *_LispDo(LispMac*, LispObj*, char*, int);

/*
 (dolist (var listform [resultform])
	{declaration}* {tag | statement}*)
 (dotimes (var countform [resultform])
	{declaration}* {tag | statement}*)
 */
LispObj *_LispDoListTimes(LispMac*, LispObj*, char*, int);

/*
 (equal x y)
 * called directly by several functions */
LispObj *_LispEqual(LispMac*, LispObj*, LispObj*);

/*
 (nth n list)
 (nthcdr n list)
 */
LispObj *_LispNth(LispMac*, LispObj*, char*, int);

/* When no <setf-place> is set, this function searchs for the one */
LispObj *_LispFindPlace(LispMac*, LispObj*, LispObj*);

/*
 (min number &rest more-numbers)
 (max number &rest more-numbers)
 */
LispObj *_LispMinMax(LispMac*, LispObj*, char*, int);

/*
 (< number &rest more-numbers)
 (<= number &rest more-numbers)
 (= number &rest more-numbers)
 (> number &rest more-numbers)
 (>= number &rest more-numbers)
 */
LispObj *_LispBoolCond(LispMac*, LispObj*, char*, int);

/*
 (char< character &rest more-characters)
 (char<= character &rest more-characters)
 (char= character &rest more-characters)
 (char> character &rest more-characters)
 (char>= character &rest more-characters)
 (char/= character &rest more-characters)
 (char-equal character &rest more-characters)
 (char-not-equal character &rest more-characters)
 (char-lessp character &rest more-characters)
 (char-greaterp character &rest more-characters)
 (char-not-lessp character &rest more-characters)
 (char-not-greaterp character &rest more-characters)
 */
LispObj *_LispCharBoolCond(LispMac*, LispObj*, char*, int, int);

/*
 (defmacro name lambda-list [[ {declaration}* | doc-string ]] {form}*)
 (defun name lambda-list [[ {declaration}* | doc-string ]] {form}*)
 (lambda lambda-list {declaration | doc-string}* {form}*)
 * doc-string not yet implemented
 */
LispObj *_LispDefLambda(LispMac*, LispObj*, LispFunType);

/*
 (set symbol value)
 (setq {var form}*)
 * used also by setf when creating a new symbol
 * XXX current setq implementation expects only 2 arguments
 */
LispObj *_LispSet(LispMac*, LispObj*, LispObj*, char*, int);

/*
 (when test {form}*)
 (unless test {form}*)
 */
LispObj *_LispWhenUnless(LispMac*, LispObj*, int);

/*
 (while test {form}*)
 (until test {form}*)
 * XXX emacs identical code, should be rewritten to be just a test
 * condition of (loop)
 */
LispObj *_LispWhileUntil(LispMac*, LispObj*, int);

/*
 * Load and execute a file. Used by (load) and (require)
 */
LispObj *_LispLoadFile(LispMac*, char*, char*, int, int, int);

/*
 (string= string1 string2 &key :start1 :end1 :start2 :end2)
 (string< string1 string2 &key :start1 :end1 :start2 :end2)
 (string> string1 string2 &key :start1 :end1 :start2 :end2)
 (string<= string1 string2 &key :start1 :end1 :start2 :end2)
 (string>= string1 string2 &key :start1 :end1 :start2 :end2)
 (string/= string1 string2 &key :start1 :end1 :start2 :end2)
 (string-equal string1 string2 &key :start1 :end1 :start2 :end2)
 (string-lessp string1 string2 &key :start1 :end1 :start2 :end2)
 (string-greaterp string1 string2 &key :start1 :end1 :start2 :end2)
 (string-not-lessp string1 string2 &key :start1 :end1 :start2 :end2)
 (string-not-greaterp string1 string2 &key :start1 :end1 :start2 :end2)
 (string-not-equal string1 string2 &key :start1 :end1 :start2 :end2)
*/
void _LispGetStringArgs(LispMac*, LispObj*, char*,
			char**,	/* string1 */
			char**,	/* string2 */
			int*,	/* start1 */
			int*,	/* end1 */
			int*,	/* start2 */
			int*);	/* end2 */

/*
 (string-trim character-bag string)
 (string-left-trim character-bag string)
 (string-right-trim character-bag string)
*/
LispObj *_LispStringDoTrim(LispMac*, LispObj*, char*, int, int);

/*
 (string-upcase string &key :start :end)
 (string-downcase string &key :start :end)
 (string-capitalize string &key :start :end)
*/
void _LispGetStringCaseArgs(LispMac*, LispObj*, char*, char**, int*, int*);

/*
 * Initialization
 */
extern char *ExpectingListAt;
extern char *ExpectingNumberAt;

#endif	/* Lisp_helper_h */
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d30 1
a30 1
/* $XFree86: xc/programs/xedit/lisp/helper.h,v 1.16 2003/04/27 18:17:33 tsi Exp $ */
d35 11
a45 1
#include "lisp/private.h"
d50 111
a160 44
void LispCheckSequenceStartEnd(LispBuiltin*, LispObj*,
			       LispObj*, LispObj*, long*, long*, long*);
long LispLength(LispObj*);
LispObj *LispCharacterCoerce(LispBuiltin*, LispObj*);
LispObj *LispStringCoerce(LispBuiltin*, LispObj*);
LispObj *LispCoerce(LispBuiltin*, LispObj*, LispObj*);

/*
 do init test &rest body
 do* init test &rest body
 */
LispObj *LispDo(LispBuiltin*, int);

/*
 dolist init &rest body
 dotimes init &rest body
 */
LispObj *LispDoListTimes(LispBuiltin*, int);

#define FEQ	1
#define FEQL	2
#define FEQUAL	3
#define FEQUALP	4
LispObj *LispObjectCompare(LispObj*, LispObj*, int);
#define XEQ(x, y)	LispObjectCompare(x, y, FEQ)
#define XEQL(x, y)	LispObjectCompare(x, y, FEQL)
#define XEQUAL(x, y)	LispObjectCompare(x, y, FEQUAL)
#define XEQUALP(x, y)	LispObjectCompare(x, y, FEQUALP)

LispObj *LispLoadFile(LispObj*, int, int, int);

/*
 string= string1 string2 &key start1 end1 start2 end2
 string< string1 string2 &key start1 end1 start2 end2
 string> string1 string2 &key start1 end1 start2 end2
 string<= string1 string2 &key start1 end1 start2 end2
 string>= string1 string2 &key start1 end1 start2 end2
 string/= string1 string2 &key start1 end1 start2 end2
 string-equal string1 string2 &key start1 end1 start2 end2
 string-lessp string1 string2 &key start1 end1 start2 end2
 string-greaterp string1 string2 &key start1 end1 start2 end2
 string-not-lessp string1 string2 &key start1 end1 start2 end2
 string-not-greaterp string1 string2 &key start1 end1 start2 end2
 string-not-equal string1 string2 &key start1 end1 start2 end2
d162 1
a162 1
void LispGetStringArgs(LispBuiltin*,
d165 4
a168 4
			long*,	/* start1 */
			long*,	/* end1 */
			long*,	/* start2 */
			long*);	/* end2 */
d171 5
a175 8
 pathname-host pathname
 pathname-device pathname
 pathname-directory pathname
 pathname-name pathname
 pathname-type pathname
 pathname-version pathname
 */
LispObj *LispPathnameField(int, int);
d178 5
a182 4
 truename pathname
 probe-file pathname
 */
LispObj *LispProbeFile(LispBuiltin*, int);
d185 1
a185 2
 write-string string &optional output-stream &key start end
 write-line string &optional output-stream &key start end
d187 2
a188 1
LispObj *LispWriteString_(LispBuiltin*, int);
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d30 1
a30 1
/* $XFree86: xc/programs/xedit/lisp/helper.h,v 1.15 2002/11/25 02:35:30 paulo Exp $ */
d38 10
d50 111
a160 44
void LispCheckSequenceStartEnd(LispBuiltin*, LispObj*,
			       LispObj*, LispObj*, long*, long*, long*);
long LispLength(LispObj*);
LispObj *LispCharacterCoerce(LispBuiltin*, LispObj*);
LispObj *LispStringCoerce(LispBuiltin*, LispObj*);
LispObj *LispCoerce(LispBuiltin*, LispObj*, LispObj*);

/*
 do init test &rest body
 do* init test &rest body
 */
LispObj *LispDo(LispBuiltin*, int);

/*
 dolist init &rest body
 dotimes init &rest body
 */
LispObj *LispDoListTimes(LispBuiltin*, int);

#define FEQ	1
#define FEQL	2
#define FEQUAL	3
#define FEQUALP	4
LispObj *LispObjectCompare(LispObj*, LispObj*, int);
#define XEQ(x, y)	LispObjectCompare(x, y, FEQ)
#define XEQL(x, y)	LispObjectCompare(x, y, FEQL)
#define XEQUAL(x, y)	LispObjectCompare(x, y, FEQUAL)
#define XEQUALP(x, y)	LispObjectCompare(x, y, FEQUALP)

LispObj *LispLoadFile(LispObj*, int, int, int);

/*
 string= string1 string2 &key start1 end1 start2 end2
 string< string1 string2 &key start1 end1 start2 end2
 string> string1 string2 &key start1 end1 start2 end2
 string<= string1 string2 &key start1 end1 start2 end2
 string>= string1 string2 &key start1 end1 start2 end2
 string/= string1 string2 &key start1 end1 start2 end2
 string-equal string1 string2 &key start1 end1 start2 end2
 string-lessp string1 string2 &key start1 end1 start2 end2
 string-greaterp string1 string2 &key start1 end1 start2 end2
 string-not-lessp string1 string2 &key start1 end1 start2 end2
 string-not-greaterp string1 string2 &key start1 end1 start2 end2
 string-not-equal string1 string2 &key start1 end1 start2 end2
d162 1
a162 1
void LispGetStringArgs(LispBuiltin*,
d165 4
a168 4
			long*,	/* start1 */
			long*,	/* end1 */
			long*,	/* start2 */
			long*);	/* end2 */
d171 5
a175 8
 pathname-host pathname
 pathname-device pathname
 pathname-directory pathname
 pathname-name pathname
 pathname-type pathname
 pathname-version pathname
 */
LispObj *LispPathnameField(int, int);
d178 5
a182 4
 truename pathname
 probe-file pathname
 */
LispObj *LispProbeFile(LispBuiltin*, int);
d185 1
a185 2
 write-string string &optional output-stream &key start end
 write-line string &optional output-stream &key start end
d187 2
a188 1
LispObj *LispWriteString_(LispBuiltin*, int);
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d30 1
a30 1
/* $XFree86: xc/programs/xedit/lisp/helper.h,v 1.16 2003/04/27 18:17:33 tsi Exp $ */
d35 1
a35 1
#include "lisp/private.h"
@


