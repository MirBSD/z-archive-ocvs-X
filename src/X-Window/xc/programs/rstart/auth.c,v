head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.10.07;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.10.07;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.27.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Xorg: auth.c,v 1.4 2000/08/17 19:54:01 cpqbld Exp $ */

/************************************************************************/
/* Copyright (c) 1993 Quarterdeck Office Systems			*/
/*									*/
/* Permission to use, copy, modify, distribute, and sell this software	*/
/* and software and its documentation for any purpose is hereby granted	*/
/* without fee, provided that the above copyright notice appear in all	*/
/* copies and that both that copyright notice and this permission	*/
/* notice appear in supporting documentation, and that the name		*/
/* Quarterdeck Office Systems, Inc. not be used in advertising or	*/
/* publicity pertaining to distribution of this software without	*/
/* specific, written prior permission.					*/
/*									*/
/* THIS SOFTWARE IS PROVIDED `AS-IS'.  QUARTERDECK OFFICE SYSTEMS,	*/
/* INC., DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,		*/
/* INCLUDING WITHOUT LIMITATION ALL IMPLIED WARRANTIES OF		*/
/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR		*/
/* NONINFRINGEMENT.  IN NO EVENT SHALL QUARTERDECK OFFICE SYSTEMS,	*/
/* INC., BE LIABLE FOR ANY DAMAGES WHATSOEVER, INCLUDING SPECIAL,	*/
/* INCIDENTAL OR CONSEQUENTIAL DAMAGES, INCLUDING LOSS OF USE, DATA, OR	*/
/* PROFITS, EVEN IF ADVISED OF THE POSSIBILITY THEREOF, AND REGARDLESS	*/
/* OF WHETHER IN AN ACTION IN CONTRACT, TORT OR NEGLIGENCE, ARISING OUT	*/
/* OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.	*/
/************************************************************************/
/* $XFree86: xc/programs/rstart/auth.c,v 1.5 2001/07/25 15:05:15 dawes Exp $ */

#include <stdio.h>
#include <X11/Xos.h>
#include <errno.h>
#include <stdlib.h>
#include <ctype.h>
#include <sys/types.h>
#include <sys/wait.h>


static char * Strupr ( char *s0 );
struct auth_info * find_or_create_auth ( char *s );
void key_auth ( int ac, char **av );
void key_internal_auth_program ( int ac, char **av );
void key_internal_auth_input ( int ac, char **av );
void do_auth ( void );
char * expand ( char *s, int ac, char **av );

/* server.c */
extern void nomem ( void );

extern char myname[];

struct list_of_argv {
	struct list_of_argv *next;
	int	argc;
	char	**argv;
};

struct auth_info {
	struct auth_info	*next;
	char			*name;
	struct list_of_argv	*data;
	char			**program;
	char			**input;
};

struct auth_info *auth_schemes = NULL;

static char *
Strupr(s0)
char *s0;
{
	char *s;

	for(s = s0; *s; s++) {
		if(islower(*s)) *s = toupper(*s);
	}
	return s0;
}

/* Argument "s" is overwritten and the memory used, so it must not be	*/
/* deallocated or subsequently used by the caller.			*/
struct auth_info *
find_or_create_auth(s)
char *s;
{
	struct auth_info *auth;

	Strupr(s);

	for(auth = auth_schemes; auth; auth=auth->next) {
		if(!strcmp(s, auth->name)) return auth;
	}

	auth = (struct auth_info *)malloc(sizeof(*auth));
	if(!auth) nomem();

	auth->next = auth_schemes;
	auth->name = s;
	auth->data = NULL;
	auth->program = NULL;
	auth->input = NULL;
	auth_schemes = auth;

	return auth;
}

void
key_auth(ac, av)
int ac;
char **av;
{
	struct list_of_argv *lav;
	struct auth_info *auth;

	if(ac < 2) {
		printf(
		    "%s: Failure: Malformed AUTH\n",myname);
		exit(255);
	}

	auth = find_or_create_auth(av[1]);

	lav = (struct list_of_argv *)malloc(sizeof(*lav));
	if(!lav) nomem();

	lav->next = auth->data;
	lav->argc = ac-2;
	lav->argv = av+2;
	auth->data = lav;
}

void
key_internal_auth_program(ac, av)
int ac;
char **av;
{
	struct auth_info *auth;

	if(ac < 4) {
		printf(
		    "%s: Failure: Malformed INTERNAL-AUTH-PROGRAM\n",myname);
		exit(255);
	}

	auth = find_or_create_auth(av[1]);
	auth->program = av + 2;
}

void
key_internal_auth_input(ac, av)
int ac;
char **av;
{
	struct auth_info *auth;

	if(ac < 2) {
		printf(
		    "%s: Failure: Malformed INTERNAL-AUTH-INPUT\n",myname);
		exit(255);
	}

	auth = find_or_create_auth(av[1]);
	auth->input = av + 2;
}

void
do_auth(void)
{
	struct auth_info *auth;
	int p[2];
	char **pp;
	struct list_of_argv *lav;
	char *s;
	int pid;
	int status;

	for(auth = auth_schemes; auth; auth = auth->next) {
		if(!auth->data) continue;
		if(!auth->program) {
			printf(
"%s: Warning: no %s authorization program specified in this context\n",myname,
				auth->name);
			continue;
		}

		if(pipe(p)) {
			printf("%s: Error: pipe - %s\n",myname, strerror(errno));
			exit(255);
		}

		fflush(stdout);		/* Can't hurt. */

		switch(pid = fork()) {
		    case -1:
			printf("%s: Error: fork - %s\n",myname, strerror(errno));
			exit(255);
		    case 0:	/* kid */
			close(0);
			dup(p[0]);
			close(p[0]);
			close(p[1]);
			execvp(auth->program[0], auth->program+1);
			printf("%s: Error: %s - %s\n",myname, auth->program[0],
				strerror(errno));
			exit(255);
			break;
		    default:	/* parent */
			close(p[0]);
			for(lav = auth->data; lav; lav=lav->next) {
				for(pp = auth->input; *pp; pp++) {
					s = expand(*pp, lav->argc, lav->argv);
					write(p[1], s, strlen(s));
					write(p[1], "\n", 1);
				}
			}
			close(p[1]);
			while(wait(&status) != pid) /* LOOP */;
			if(status) {
				printf(
				"%s: Warning: %s authorization setup failed\n",myname, auth->name);
			}
			break;
		}
	}
}

char *
expand(s, ac, av)
char *s;
int ac;
char **av;
{
	static char buf[BUFSIZ];
	char *p;
	int i;

	p = buf;
	while(*s) {
		if(*s == '$') {
			s++;
			if(*s == '$') {
				*p++ = *s++;
				continue;
			}
			if(!isdigit(*s)) {
				printf(
	"%s: Failure: bad $ in configuration: non-digit after $\n",myname);
				exit(255);
			}
			i = (int)strtol(s, &s, 10);
			if(i > ac) {
				printf(
		"%s: Failure: not enough arguments to AUTH\n",myname);
				exit(255);
			}
			strcpy(p, av[i-1]);
			p += strlen(p);
		} else *p++ = *s++;
	}
	*p = '\0';

	return buf;
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
