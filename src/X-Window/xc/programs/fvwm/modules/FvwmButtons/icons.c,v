head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	cvs-200403021700:1.1.1.1
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.09.54;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.09.54;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
   Fvwmbuttons v2.0.41-plural-Z-alpha, copyright 1996, Jarl Totland

 * This module, and the entire GoodStuff program, and the concept for
 * interfacing this module to the Window Manager, are all original work
 * by Robert Nation
 *
 * Copyright 1993, Robert Nation. No guarantees or warantees or anything
 * are provided or implied in any way whatsoever. Use this program at your
 * own risk. Permission to use this program for any purpose is given,
 * as long as the copyright is kept intact. 

*/
/***********************************************************************
 *
 * Derived from fvwm icon code
 *
 ***********************************************************************/

#include "config.h"

#include <stdio.h>
#include <unistd.h>
#include <signal.h>
#include <string.h>
#include <stdlib.h>

#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xproto.h>
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>

#ifdef HAVE_FCNTL_H
#include <fcntl.h>
#endif

#include "../../libs/fvwmlib.h"
#include "FvwmButtons.h"

#ifdef XPM
#include <X11/xpm.h>
#endif /* XPM */

#ifdef SHAPE
#include <X11/extensions/shape.h>
#endif /* SHAPE */

/****************************************************************************
 *
 * Creates an Icon Window
 *
 ****************************************************************************/
void CreateIconWindow(button_info *b)
{
#ifndef NO_ICONS
  unsigned long valuemask;		/* mask for create windows */
  XSetWindowAttributes attributes;	/* attributes for create windows */

  if(!(b->flags&b_Icon))
    return;

  if(b->IconWin != None)
    {
      fprintf(stderr,"%s: BUG: Iconwindow already created for 0x%lx!\n",
	      MyName,(unsigned long)b);
      exit(2);
    }

  attributes.background_pixel = buttonBack(b);
  attributes.event_mask = ExposureMask;
  valuemask =  CWEventMask | CWBackPixel;

  if(b->icon->width<1 || b->icon->height<1)
    {
      fprintf(stderr,"%s: BUG: Illegal iconwindow tried created\n",MyName);
      exit(2);
    }
  b->IconWin=XCreateWindow(Dpy,MyWindow,0,0,b->icon->width,b->icon->height,
			   0, CopyFromParent, CopyFromParent,CopyFromParent,
			   valuemask,&attributes);

#ifdef XPM
#ifdef SHAPE
  if (b->icon->mask!=None)
    XShapeCombineMask(Dpy,b->IconWin,ShapeBounding,0,0,
		      b->icon->mask,ShapeSet);
#endif
#endif

  if(b->icon->depth==0)
    {
      XGCValues gcv;
      unsigned long gcm=0;
      Pixmap temp;
  
      gcm = GCForeground | GCBackground;
      gcv.background=buttonBack(b);
      gcv.foreground=buttonFore(b);
      XChangeGC(Dpy,NormalGC,gcm,&gcv);
  
#ifdef SHAPE
      XShapeCombineMask(Dpy,b->IconWin,ShapeBounding,0,0,
			b->icon->picture,ShapeSet);
#endif
  
      temp = XCreatePixmap(Dpy,Root,b->icon->width,
			   b->icon->height,d_depth);
      XCopyPlane(Dpy,b->icon->picture,temp,NormalGC,
		 0,0,b->icon->width,b->icon->height,0,0,1);
      
      XSetWindowBackgroundPixmap(Dpy,b->IconWin,temp);
      XFreePixmap(Dpy,temp);
      /* We won't use the icon pixmap anymore... but we still need it for
	 width/height etc. so we can't destroy it. */
    }
  else
    XSetWindowBackgroundPixmap(Dpy,b->IconWin,b->icon->picture);

  return;
#endif
}


/****************************************************************************
 *
 * Combines icon shape masks after a resize
 *
 ****************************************************************************/
void ConfigureIconWindow(button_info *b)
{
#ifndef NO_ICONS
  int x,y,w,h;
  int xoff,yoff;
  int framew,xpad,ypad;
  XFontStruct *font;
  int BW,BH;

  if(!b || !(b->flags&b_Icon))
    return;

  if(!b->IconWin)
    {
      fprintf(stderr,"%s: DEBUG: Tried to configure erroneous iconwindow\n",
	      MyName);
      exit(2);
    }

  buttonInfo(b,&x,&y,&xpad,&ypad,&framew);
  framew=abs(framew);

  font = buttonFont(b);
  w = b->icon->width;
  h = b->icon->height;
  BW = buttonWidth(b);
  BH = buttonHeight(b);

  w=min(w,BW-2*(xpad+framew));

  if(b->flags&b_Title && font && !(buttonJustify(b)&b_Horizontal))
    h=min(h,BH-2*(ypad+framew)-font->ascent-font->descent);
  else
    h=min(h,BH-2*(ypad+framew));

  if(w < 1 || h < 1)
    {
      XMoveResizeWindow(Dpy, b->IconWin, 2000,2000,1,1);
      return; /* No need drawing to this */
    }

  if(buttonJustify(b)&b_Horizontal)
    xoff=0;
  else
    xoff=(BW-w)>>1;

  if(b->flags&b_Title && font && !(buttonJustify(b)&b_Horizontal))
    yoff=(BH-(h+font->ascent+font->descent))>>1;
  else
    yoff=(BH-h)>>1;
  
  if(xoff < framew+xpad)
    xoff = framew+xpad;
  if(yoff < framew+ypad)
    yoff = framew+ypad;

  x += xoff;
  y += yoff;

  XMoveResizeWindow(Dpy, b->IconWin, x,y,w,h);

/* Doesn't this belong above? 
#ifdef XPM
#ifdef SHAPE
  if (b->icon->mask!=None)
    {
      XShapeCombineMask(Dpy,b->IconWin,ShapeBounding,0,0,
			b->icon->mask,ShapeSet);
    }
#endif
#endif
  if(b->icon->depth==0)
    {
      PixmapFromBitmap(b);
    }
  XSetWindowBackgroundPixmap(Dpy,b->IconWin,b->icon->picture);
*/

#endif 
}
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
