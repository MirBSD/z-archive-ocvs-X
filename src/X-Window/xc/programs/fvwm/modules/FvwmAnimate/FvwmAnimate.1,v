head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	cvs-200403021700:1.1.1.1
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.20.09.54;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.09.54;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.TH FvwmAnimate 1.1 "October 1998"
.UC
.SH NAME
\fBFvwmAnimate\fP \- the Fvwm2 Animate module
.SH SYNOPSIS
\fBFvwmAnimate\fP is spawned by fvwm2, so no command line invocation will work.
From within the .fvwm2rc file, \fBFvwmAnimate\fP is spawned as follows:
.nf
.sp
Module FvwmAnimate
.sp
.fi
or from within an fvwm2 pop-up menu:
.nf
.sp
DestroyMenu Module-Popup
AddToMenu   Module-Popup "Modules" Title
AddToMenu   Module-Popup "Fvwm Animate Icons" Module FvwmAnimate OptionalName
.sp
.fi

.SH DESCRIPTION
The \fBFvwmAnimate\fP module animates iconification and deiconification.
There are currenly 6 different animation effects.

.SH INVOCATION
No command line invocation is possible. 
\fBFvwmAnimate\fP must be invoked by the
\fBfvwm2\fP window manager.
When invoked with the \fIOptionalName\fP argument, the \fIOptionalName\fP
is used to find configuration commands, configuraton files,
and name the internally generated menus and forms instead of "FvwmAnimate".
During startup, FvwmAnimate defines menus and forms for configuring and
controlling FvwmAnimate.  The default menu name is "MenuFvwmAnimate"
and the form name is "FormFvwmAnimate".
If the optional name is used, the menu would be "Menu<OptionalName>"
and the form would be "Form<OptionalName>".
.sp
Assuming you already had a builtin menu called "Module-Popup",
you could use FvwmAnimate by configuring it like this:
.nf
.sp
AddToFunc "InitFunction" "I" Module FvwmAnimate
AddToFunc "RestartFunction" "I" Module FvwmAnimate
AddToMenu "Module-Popup" "Control Animation" Popup MenuFvwmAnimate
.sp
.fi

.SH CONFIGURATION OPTIONS
Since the popup menu "MenuFvwmAnimate" allows complete control of
the \fBFvwmAnimate\fP module, you don't really have to know what any
of the configuration commands are.  This section describes them anyway.

\fBFvwmAnimate\fP reads the same \fI.fvwm2rc\fP file as \fBfvwm2\fP
reads when it starts up.
In addition, \fBFvwmAnimate\fP reads the file $HOME/.FvwmAnimate,
and accepts commands from fvwm2 and its modules as it runs.

If \fIOptionalName\fP is used to  start FvwmAnimate, the optional name
is used in all commands,  messages, menus and forms generated by  FvwmAnimate
and
in the configuration file name.   Unlike other fvwm2 modules, there is
little reason to use the optional name.

.IP "*FvwmAnimateColor \fBcolor\fP"
Tells \fBFvwmAnimate\fP what color to draw with.
The color is "XOR'ed" (exclusive ORed) onto the background.
Depending on the display type you are using,  the effect this
causes will vary.  Especially on 8-bit displays, it helps if the background
is a solid color.  You have to experiment with this to see how it works.

The default color is not really a color and can be entered as "Black^White",
or more simply "None".  This is the same as the default XOR mask used
by fvwm2 for move and resize frames.

Other colors can be specified using standard X color notation.  Ie. color
names like "LightBlue", or RGB values like "#FFFFFF".

.IP "*FvwmAnimateDelay \fBmsecs\fP"
Tells \fBFvwmAnimate\fP how many milliseconds to sleep
between frames of animation.

.IP "*FvwmAnimateIterations \fBiterations\fP"
Tells \fBFvwmAnimate\fP how many steps to break the animation into.

.IP "*FvwmAnimateTwist \fBtwist\fP"
Tells \fBFvwmAnimate\fP how many revolutions to twist the iconification frame.

.IP "*FvwmAnimateWidth \fBwidth\fP"
Tells \fBFvwmAnimate\fP how wide a line to draw with.
The default width of 0 (zero) is a fast line of Width 1.

.IP "*FvwmAnimateEffect \fBmode\fP"
Tells \fBFvwmAnimate\fP which animation effect to use.
Currently the effects are :
\fIFrame\fP,
\fILines\fP,
\fIFlip\fP,
\fITurn\fP,
\fIZoom3D\fP,
\fITwist\fP
\fIRandom\fP,
and
\fINone\fP.
\fINone\fP is normally set in the configuration file, in-case FvwmAnimate
is started automatically, but an individual user doesn't want it running.

.IP "*FvwmAnimateStop"
Tells \fBFvwmAnimate\fP to stop.

.IP "*FvwmAnimateSave"
Tells \fBFvwmAnimate\fP to save the current configuration in a file
named ".FvwmAnimate" in the users home directory.  This same file is
read automatically by FvwmAnimate during startup.

.SH ORIGIN
\fBFvwmAnimate\fP is based on the \fBAnimate\fP module from Afterstep 1.5pre6.
Porting to \fBfvwm2\fP and lots of other changes were done by
\fIDan Espen\fP <dane@@mk.bellcore.com>.
Below are the original author and acknowledgments.

.SH AUTHOR
\fIAlfredo Kengi Kojima\fP <kojima@@inf.ufrgs.br>

.SH ACKNOWLEDGMENTS
These people have contributed to \fBFvwmAnimate\fP:

.IP "\fIKaj Groner\fP <kajg@@mindspring.com>"
Twisty iconification, configuration file parsing, man page.

.IP "\fIFrank Scheelen <scheelen@@worldonline.nl>"
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
