head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.29.25;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.20.30;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.20.30;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.13.15.15.20;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.05.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@#include <string.h>
#include "xmlmime.h"

static
const char *getTok(const char **pp)
{
  /* inComment means one level of nesting; inComment+1 means two levels etc */
  enum { inAtom, inString, init, inComment };
  int state = init;
  const char *tokStart = 0;
  for (;;) {
    switch (**pp) {
    case '\0':
      if (state == inAtom)
	return tokStart;
      return 0;
    case ' ':
    case '\r':
    case '\t':
    case '\n':
      if (state == inAtom)
	return tokStart;
      break;
    case '(':
      if (state == inAtom)
	return tokStart;
      if (state != inString)
	state++;
      break;
    case ')':
      if (state > init)
	--state;
      else if (state != inString)
	return 0;
      break;
    case ';':
    case '/':
    case '=':
      if (state == inAtom)
	return tokStart;
      if (state == init)
	return (*pp)++;
      break;
    case '\\':
      ++*pp;
      if (**pp == '\0')
	return 0;
      break;
    case '"':
      switch (state) {
      case inString:
	++*pp;
	return tokStart;
      case inAtom:
	return tokStart;
      case init:
	tokStart = *pp;
	state = inString;
	break;
      }
      break;
    default:
      if (state == init) {
	tokStart = *pp;
	state = inAtom;
      }
      break;
    }
    ++*pp;
  }
  /* not reached */
}

/* key must be lowercase ASCII */

static
int matchkey(const char *start, const char *end, const char *key)
{
  if (!start)
    return 0;
  for (; start != end; start++, key++)
    if (*start != *key && *start != 'A' + (*key - 'a'))
      return 0;
  return *key == '\0';
}

void getXMLCharset(const char *buf, char *charset)
{
  const char *next, *p;

  charset[0] = '\0';
  next = buf;
  p = getTok(&next);
  if (matchkey(p, next, "text"))
    strcpy(charset, "us-ascii");
  else if (!matchkey(p, next, "application"))
    return;
  p = getTok(&next);
  if (!p || *p != '/')
    return;
  p = getTok(&next);
#if 0
  if (!matchkey(p, next, "xml") && charset[0] == '\0')
    return;
#endif
  p = getTok(&next);
  while (p) {
    if (*p == ';') {
      p = getTok(&next);
      if (matchkey(p, next, "charset")) {
	p = getTok(&next);
	if (p && *p == '=') {
	  p = getTok(&next);
	  if (p) {
	    char *s = charset;
	    if (*p == '"') {
	      while (++p != next - 1) {
		if (*p == '\\')
		  ++p;
		if (s == charset + CHARSET_MAX - 1) {
		  charset[0] = '\0';
		  break;
		}
		*s++ = *p;
	      }
	      *s++ = '\0';
	    }
	    else {
	      if (next - p > CHARSET_MAX - 1)
		break;
	      while (p != next)
		*s++ = *p++;
	      *s = 0;
	      break;
	    }
	  }
	}
	break;
      }
    }
  else
    p = getTok(&next);
  }
}

#ifdef TEST

#include <stdio.h>

int main(int argc, char **argv)
{
  char buf[CHARSET_MAX];
  if (argc <= 1)
    return 1;
  printf("%s\n", argv[1]);
  getXMLCharset(argv[1], buf);
  printf("charset=\"%s\"\n", buf);
  return 0;
}

#endif /* TEST */
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d4 2
a5 2
static const char *
getTok(const char **pp)
d15 1
a15 1
        return tokStart;
d22 1
a22 1
        return tokStart;
d26 1
a26 1
        return tokStart;
d28 1
a28 1
        state++;
d32 1
a32 1
        --state;
d34 1
a34 1
        return 0;
d40 1
a40 1
        return tokStart;
d42 1
a42 1
        return (*pp)++;
d47 1
a47 1
        return 0;
d52 2
a53 2
        ++*pp;
        return tokStart;
d55 1
a55 1
        return tokStart;
d57 3
a59 3
        tokStart = *pp;
        state = inString;
        break;
d64 2
a65 2
        tokStart = *pp;
        state = inAtom;
d76 2
a77 2
static int
matchkey(const char *start, const char *end, const char *key)
d87 1
a87 2
void
getXMLCharset(const char *buf, char *charset)
d111 28
a138 28
        p = getTok(&next);
        if (p && *p == '=') {
          p = getTok(&next);
          if (p) {
            char *s = charset;
            if (*p == '"') {
              while (++p != next - 1) {
                if (*p == '\\')
                  ++p;
                if (s == charset + CHARSET_MAX - 1) {
                  charset[0] = '\0';
                  break;
                }
                *s++ = *p;
              }
              *s++ = '\0';
            }
            else {
              if (next - p > CHARSET_MAX - 1)
                break;
              while (p != next)
                *s++ = *p++;
              *s = 0;
              break;
            }
          }
        }
        break;
d150 1
a150 2
int
main(int argc, char *argv[])
@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@


1.1.1.2
log
@Import OpenBSD tree again due to CVS bugs
@
text
@d4 2
a5 2
static const char *
getTok(const char **pp)
d15 1
a15 1
        return tokStart;
d22 1
a22 1
        return tokStart;
d26 1
a26 1
        return tokStart;
d28 1
a28 1
        state++;
d32 1
a32 1
        --state;
d34 1
a34 1
        return 0;
d40 1
a40 1
        return tokStart;
d42 1
a42 1
        return (*pp)++;
d47 1
a47 1
        return 0;
d52 2
a53 2
        ++*pp;
        return tokStart;
d55 1
a55 1
        return tokStart;
d57 3
a59 3
        tokStart = *pp;
        state = inString;
        break;
d64 2
a65 2
        tokStart = *pp;
        state = inAtom;
d76 2
a77 2
static int
matchkey(const char *start, const char *end, const char *key)
d87 1
a87 2
void
getXMLCharset(const char *buf, char *charset)
d111 28
a138 28
        p = getTok(&next);
        if (p && *p == '=') {
          p = getTok(&next);
          if (p) {
            char *s = charset;
            if (*p == '"') {
              while (++p != next - 1) {
                if (*p == '\\')
                  ++p;
                if (s == charset + CHARSET_MAX - 1) {
                  charset[0] = '\0';
                  break;
                }
                *s++ = *p;
              }
              *s++ = '\0';
            }
            else {
              if (next - p > CHARSET_MAX - 1)
                break;
              while (p != next)
                *s++ = *p++;
              *s = 0;
              break;
            }
          }
        }
        break;
d150 1
a150 2
int
main(int argc, char *argv[])
@

