head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.3
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.4
	MIRBSD_7:1.1.1.3.0.2
	MIRBSD_7ter:1.1.1.3
	cvs-20011091815:1.1.1.3
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.29.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.20.29;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.20.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.13.15.15.13;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.11.09.18.33.25;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.05.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@################################################################
# Process this file with top-level configure script to produce Makefile
#
# Copyright 2000 Clark Cooper
#
#  This file is part of EXPAT.
#
#  EXPAT is free software; you can redistribute it and/or modify it
#  under the terms of the License (based on the MIT/X license) contained
#  in the file COPYING that comes with this distribution.
#
# EXPAT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN EXPAT.
#
#  ---
#  I started using automake, but
#		1) it seemed like overkill
#		2) I don't want all the GNU policies
#		3) I wanted more explicit control over what gets built
#
#  So I'm doing my Makefile.in files manually. But a fair part is based
#  on what I learned from perusing the Makefile.in's generated by automake,
#  and the automake authors still get my kudos.
#

SHELL = @@SHELL@@

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

bindir = @@bindir@@
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
datadir = @@datadir@@
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
infodir = @@infodir@@
mandir = @@mandir@@
includedir = @@includedir@@
oldincludedir = /usr/include

top_builddir = .


AUTOCONF = autoconf

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @@host_alias@@
host_triplet = @@host@@

CC = @@CC@@

LIBTOOL = @@LIBTOOL@@
LN_S = @@LN_S@@
PACKAGE = @@PACKAGE@@
RANLIB = @@RANLIB@@
VERSION = @@VERSION@@

SUBDIRS = lib examples xmlwf
INSTALLSUBDIRS = lib xmlwf
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
CONFIG_HEADERS = config.h

DISTDIR = $(PACKAGE)-$(VERSION)
DISTRIBUTION = $(DISTDIR).tar.gz

default:  lib xmlwf

buildlib: lib

all: $(SUBDIRS)

Makefile: Makefile.in config.status
	CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) config.status

config.status: configure
	@@if test -f $@@; then \
		$(SHELL) config.status --recheck ; \
	else \
		$(SHELL) configure ; \
	fi

configure: configure.in
	$(AUTOCONF)

config.h: config.h.in config.status
	CONFIG_FILES= CONFIG_HEADERS=$(CONFIG_HEADERS) \
	$(SHELL) ./config.status

$(SUBDIRS):
	cd $@@ && $(MAKE)

clean:
	for dir in $(SUBDIRS); do \
		(cd $$dir && $(MAKE) clean); \
	done
	rm -f core *~

distclean:
	for dir in $(SUBDIRS); do \
		(cd $$dir && $(MAKE) distclean); \
	done
	rm -f config.h config.status config.log config.cache libtool
	rm -f Makefile examples/Makefile xmlwf/Makefile

extraclean: distclean
	rm -f aclocal.m4 config.h.in configure
	rm -f conftools/config.guess conftools/config.sub
	rm -f conftools/ltconfig conftools/ltmain.sh

maintainer-clean: distclean
	rm -f $(DISTRIBUTION)
	rm -rf $(DISTDIR)

distdir: MANIFEST
	test -d $(DISTDIR) && rm -rf $(DISTDIR); \
	mkdir $(DISTDIR); \
	flist=`sed -e "s/[ 	]:.*$$//" MANIFEST`; for file in $$flist; do \
		cp -P $$file $(DISTDIR); \
	done

check:	$(SUBDIRS)
	@@echo
	@@echo This package does not yet have a regression test.
	@@echo

$(DISTRIBUTION): distdir
	tar cf - $(DISTDIR) | gzip -9 >$(DISTRIBUTION)

dist: $(DISTRIBUTION)

install:
	for dir in $(INSTALLSUBDIRS); do \
		(cd $$dir && $(MAKE) install); \
	done

uninstall:
	for dir in $(INSTALLSUBDIRS); do \
		(cd $$dir && $(MAKE) uninstall); \
	done

.PHONY: buildlib all $(SUBDIRS) \
	clean distclean extraclean maintainer-clean \
	dist distdir \
	install uninstall
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d20 10
a35 1

d40 6
d47 2
d50 1
a50 1
mandir = ${prefix}/man/man1
d55 2
d60 30
a89 1
mkinstalldirs = $(SHELL) $(top_srcdir)/conftools/mkinstalldirs
d91 1
a91 3
MANFILE = $(srcdir)/doc/xmlwf.1
APIHEADER = $(srcdir)/lib/expat.h
LIBRARY = libexpat.la
d93 2
d96 6
a101 1
default:  buildlib xmlwf/xmlwf
d103 2
a104 1
buildlib: $(LIBRARY)
d106 6
a111 1
all: $(LIBRARY) xmlwf/xmlwf examples/elements examples/outline
d114 11
a124 12
	cd lib && rm -f $(LIBRARY) *.o *.lo && rm -rf .libs _libs
	cd xmlwf && rm -f xmlwf *.o *.lo && rm -rf .libs _libs
	cd examples && rm -f elements outline *.o *.lo && rm -rf .libs _libs
	cd tests && rm -rf .libs runtests runtests.o chardata.o
	rm -rf .libs libexpat.la
	rm -f examples/core tests/core xmlwf/core

clobber: clean

distclean: clean
	rm -f expat_config.h config.status config.log config.cache libtool
	rm -f Makefile
d127 14
a140 2
	rm -f expat_config.h.in configure
	rm -f conftools/ltconfig conftools/ltmain.sh conftools/libtool.m4
d142 14
a155 2
check: tests/runtests
	tests/runtests
d157 3
a159 22
install: xmlwf/xmlwf installlib
	$(mkinstalldirs) $(bindir) $(mandir)
	$(LIBTOOL) --mode=install $(INSTALL_PROGRAM) xmlwf/xmlwf $(bindir)/xmlwf
	$(INSTALL_DATA) $(MANFILE) $(mandir)

installlib: $(LIBRARY) $(APIHEADER)
	$(mkinstalldirs) $(libdir) $(includedir)
	$(LIBTOOL) --mode=install $(INSTALL) $(LIBRARY) $(libdir)/$(LIBRARY)
	$(INSTALL_DATA) $(APIHEADER) $(includedir)

uninstall: uninstalllib
	$(LIBTOOL) --mode=uninstall rm -f $(bindir)/xmlwf
	rm -f $(mandir)/xmlwf.1

uninstalllib:
	$(LIBTOOL) --mode=uninstall rm -f $(libdir)/$(LIBRARY)
	rm -f $(includedir)/$(APIHEADER)

# for VPATH builds (invoked by configure)
mkdir-init:
	@@for d in lib xmlwf examples tests ; do \
		(mkdir $$d 2> /dev/null || test 1) ; \
d162 1
a162 72
CC = @@CC@@
LIBTOOL = @@LIBTOOL@@

INCLUDES = -I$(srcdir)/lib -I.
LDFLAGS = @@LDFLAGS@@
CPPFLAGS = @@CPPFLAGS@@
CFLAGS = @@CFLAGS@@
VSNFLAG = -version-info @@LIBCURRENT@@:@@LIBREVISION@@:@@LIBAGE@@

### autoconf this?
LTFLAGS = --silent

COMPILE = $(CC) $(CFLAGS) $(DEFS) $(CPPFLAGS) $(INCLUDES)
LTCOMPILE = $(LIBTOOL) $(LTFLAGS) --mode=compile $(COMPILE)
LINK_LIB = $(LIBTOOL) $(LTFLAGS) --mode=link $(COMPILE) -no-undefined $(VSNFLAG) -rpath $(libdir) $(LDFLAGS) -o $@@
LINK_EXE = $(LIBTOOL) $(LTFLAGS) --mode=link $(COMPILE) $(LDFLAGS) -o $@@

LIB_OBJS = lib/xmlparse.lo lib/xmltok.lo lib/xmlrole.lo
$(LIBRARY): $(LIB_OBJS)
	$(LINK_LIB) $(LIB_OBJS)

lib/xmlparse.lo: lib/xmlparse.c lib/expat.h lib/xmlrole.h lib/xmltok.h \
	$(top_builddir)/expat_config.h lib/internal.h

lib/xmlrole.lo: lib/xmlrole.c lib/ascii.h lib/xmlrole.h \
	$(top_builddir)/expat_config.h lib/internal.h

lib/xmltok.lo: lib/xmltok.c lib/xmltok_impl.c lib/xmltok_ns.c \
	lib/ascii.h lib/asciitab.h lib/iasciitab.h lib/latin1tab.h \
	lib/nametab.h lib/utf8tab.h lib/xmltok.h lib/xmltok_impl.h \
	$(top_builddir)/expat_config.h


XMLWF_OBJS = xmlwf/xmlwf.o xmlwf/xmlfile.o xmlwf/codepage.o xmlwf/@@FILEMAP@@.o
xmlwf/xmlwf.o: xmlwf/xmlwf.c
xmlwf/xmlfile.o: xmlwf/xmlfile.c
xmlwf/codepage.o: xmlwf/codepage.c
xmlwf/@@FILEMAP@@.o: xmlwf/@@FILEMAP@@.c
xmlwf/xmlwf: $(XMLWF_OBJS) $(LIBRARY)
	$(LINK_EXE) $(XMLWF_OBJS) $(LIBRARY)

examples/elements.o: examples/elements.c
examples/elements: examples/elements.o $(LIBRARY)
	$(LINK_EXE) $< $(LIBRARY)

examples/outline.o: examples/outline.c
examples/outline: examples/outline.o $(LIBRARY)
	$(LINK_EXE) $< $(LIBRARY)

tests/chardata.o: tests/chardata.c tests/chardata.h
tests/runtests.o: tests/runtests.c tests/chardata.h
tests/runtests: tests/runtests.o tests/chardata.o $(LIBRARY)
	$(LINK_EXE) $^ -lcheck

tests/xmlts.zip:
	wget --output-document=tests/xmlts.zip \
		http://www.w3.org/XML/Test/xmlts20020606.zip

tests/XML-Test-Suite: tests/xmlts.zip
	cd tests && unzip -q xmlts.zip

run-xmltest: xmlwf/xmlwf tests/XML-Test-Suite
	tests/xmltest.sh

.SUFFIXES: .c .lo .o

.c.o:
	$(COMPILE) -o $@@ -c $<
.c.lo:
	$(LTCOMPILE) -o $@@ -c $<

.PHONY: buildlib all \
@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@


1.1.1.2
log
@Import OpenBSD tree again due to CVS bugs
@
text
@d20 10
a35 1

d40 6
d47 2
d50 1
a50 1
mandir = ${prefix}/man/man1
d55 2
d60 30
a89 1
mkinstalldirs = $(SHELL) $(top_srcdir)/conftools/mkinstalldirs
d91 1
a91 3
MANFILE = $(srcdir)/doc/xmlwf.1
APIHEADER = $(srcdir)/lib/expat.h
LIBRARY = libexpat.la
d93 2
d96 6
a101 1
default:  buildlib xmlwf/xmlwf
d103 2
a104 1
buildlib: $(LIBRARY)
d106 6
a111 1
all: $(LIBRARY) xmlwf/xmlwf examples/elements examples/outline
d114 11
a124 8
	cd lib && rm -f $(LIBRARY) *.o *.lo && rm -rf .libs _libs
	cd xmlwf && rm -f xmlwf *.o *.lo && rm -rf .libs _libs
	cd examples && rm -f elements outline *.o *.lo && rm -rf .libs _libs
	find . -name core | xargs rm -f

distclean: clean
	rm -f expat_config.h config.status config.log config.cache libtool
	rm -f Makefile
d127 14
a140 2
	rm -f expat_config.h.in configure
	rm -f conftools/ltconfig conftools/ltmain.sh conftools/libtool.m4
d142 14
a155 2
check: tests/runtests
	tests/runtests
d157 3
a159 22
install: xmlwf/xmlwf installlib
	$(mkinstalldirs) $(bindir) $(mandir)
	$(LIBTOOL) --mode=install $(INSTALL_PROGRAM) xmlwf/xmlwf $(bindir)/xmlwf
	$(INSTALL_DATA) $(MANFILE) $(mandir)

installlib: $(LIBRARY) $(APIHEADER)
	$(mkinstalldirs) $(libdir) $(includedir)
	$(LIBTOOL) --mode=install $(INSTALL) $(LIBRARY) $(libdir)/$(LIBRARY)
	$(INSTALL_DATA) $(APIHEADER) $(includedir)

uninstall: uninstalllib
	$(LIBTOOL) --mode=uninstall rm -f $(bindir)/xmlwf
	rm -f $(mandir)/xmlwf.1

uninstalllib:
	$(LIBTOOL) --mode=uninstall rm -f $(libdir)/$(LIBRARY)
	rm -f $(includedir)/$(APIHEADER)

# for VPATH builds (invoked by configure)
mkdir-init:
	@@for d in lib xmlwf examples tests ; do \
		(mkdir $$d 2> /dev/null || test 1) ; \
d162 1
a162 71
CC = @@CC@@
LIBTOOL = @@LIBTOOL@@

INCLUDES = -I$(srcdir)/lib -I.
LDFLAGS = @@LDFLAGS@@
CPPFLAGS = @@CPPFLAGS@@
CFLAGS = @@CFLAGS@@
VSNFLAG = -version-info @@LIBCURRENT@@:@@LIBREVISION@@:@@LIBAGE@@

### autoconf this?
LTFLAGS = --silent

COMPILE = $(CC) $(CFLAGS) $(DEFS) $(CPPFLAGS) $(INCLUDES)
LTCOMPILE = $(LIBTOOL) $(LTFLAGS) --mode=compile $(COMPILE)
LINK_LIB = $(LIBTOOL) $(LTFLAGS) --mode=link $(COMPILE) -no-undefined $(VSNFLAG) -rpath $(libdir) $(LDFLAGS) -o $@@
LINK_EXE = $(LIBTOOL) $(LTFLAGS) --mode=link $(COMPILE) $(LDFLAGS) -o $@@

LIB_OBJS = lib/xmlparse.lo lib/xmltok.lo lib/xmlrole.lo
$(LIBRARY): $(LIB_OBJS)
	$(LINK_LIB) $(LIB_OBJS)

lib/xmlparse.lo: lib/xmlparse.c lib/expat.h lib/xmlrole.h lib/xmltok.h \
	$(top_builddir)/expat_config.h

lib/xmlrole.lo: lib/xmlrole.c lib/ascii.h lib/xmlrole.h \
	$(top_builddir)/expat_config.h

lib/xmltok.lo: lib/xmltok.c lib/xmltok_impl.c lib/xmltok_ns.c \
	lib/ascii.h lib/asciitab.h lib/iasciitab.h lib/latin1tab.h \
	lib/nametab.h lib/utf8tab.h lib/xmltok.h lib/xmltok_impl.h \
	$(top_builddir)/expat_config.h


XMLWF_OBJS = xmlwf/xmlwf.o xmlwf/xmlfile.o xmlwf/codepage.o xmlwf/@@FILEMAP@@.o
xmlwf/xmlwf.o: xmlwf/xmlwf.c
xmlwf/xmlfile.o: xmlwf/xmlfile.c
xmlwf/codepage.o: xmlwf/codepage.c
xmlwf/@@FILEMAP@@.o: xmlwf/@@FILEMAP@@.c
xmlwf/xmlwf: $(XMLWF_OBJS) $(LIBRARY)
	$(LINK_EXE) $(XMLWF_OBJS) $(LIBRARY)

examples/elements.o: examples/elements.c
examples/elements: examples/elements.o $(LIBRARY)
	$(LINK_EXE) $< $(LIBRARY)

examples/outline.o: examples/outline.c
examples/outline: examples/outline.o $(LIBRARY)
	$(LINK_EXE) $< $(LIBRARY)

tests/chardata.o: tests/chardata.c tests/chardata.h
tests/runtests.o: tests/runtests.c tests/chardata.h
tests/runtests: tests/runtests.o tests/chardata.o $(LIBRARY)
	$(LINK_EXE) $^ -lcheck

tests/xmltest.zip:
	cd tests && wget ftp://ftp.jclark.com/pub/xml/xmltest.zip

tests/xmltest: tests/xmltest.zip
	cd tests && unzip -q xmltest.zip

run-xmltest: xmlwf/xmlwf tests/xmltest
	tests/xmltest.sh

.SUFFIXES: .c .lo .o

.c.o:
	$(COMPILE) -o $@@ -c $<
.c.lo:
	$(LTCOMPILE) -o $@@ -c $<

.PHONY: buildlib all \
@


1.1.1.3
log
@sync with OpenBSD's idea of X-Window as of now();
@
text
@d58 1
a58 5
	cd tests && rm -rf .libs runtests runtests.o chardata.o
	rm -rf .libs libexpat.la
	rm -f examples/core tests/core xmlwf/core

clobber: clean
d117 1
a117 1
	$(top_builddir)/expat_config.h lib/internal.h
d120 1
a120 1
	$(top_builddir)/expat_config.h lib/internal.h
d149 2
a150 3
tests/xmlts.zip:
	wget --output-document=tests/xmlts.zip \
		http://www.w3.org/XML/Test/xmlts20020606.zip
d152 2
a153 2
tests/XML-Test-Suite: tests/xmlts.zip
	cd tests && unzip -q xmlts.zip
d155 1
a155 1
run-xmltest: xmlwf/xmlwf tests/XML-Test-Suite
@


