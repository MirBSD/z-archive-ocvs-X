head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.29.52;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.21.02;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.21.02;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.09.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@#include "otljstf.h"
#include "otlcommn.h"
#include "otlgpos.h"

  static void
  otl_jstf_extender_validate( OTL_Bytes      table,
                              OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    OTL_CHECK( 2 );

    count = OTL_NEXT_USHORT( p );

    OTL_CHECK( count*2 );
  }


  static void
  otl_jstf_gsub_mods_validate( OTL_Bytes      table,
                               OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    OTL_CHECK( 2 );
    count = OTL_NEXT_USHORT( p );
    OTL_CHECK( count*2 );

    /* XXX: check GSUB lookup indices */
  }


  static void
  otl_jstf_gpos_mods_validate( OTL_Bytes      table,
                               OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    OTL_CHECK( 2 );
    count = OTL_NEXT_USHORT( p );
    OTL_CHECK( count*2 );

    /* XXX: check GPOS lookup indices */
  }


  static void
  otl_jstf_max_validate( OTL_Bytes      table,
                         OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    OTL_CHECK( 2 );

    count = OTL_NEXT_USHORT( p );

    OTL_CHECK( count*2 );
    for ( ; count > 0; count-- )
      otl_gpos_subtable_check( table + OTL_NEXT_USHORT( p ), valid );
  }


  static void
  otl_jstf_priority_validate( OTL_Bytes      table,
                              OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   offset;

    OTL_CHECK( 20 );

    /* shrinkage GSUB enable/disable */
    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gsub_mods_validate( table + val, valid );

    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gsub_mods_validate( table + val, valid );

    /* shrinkage GPOS enable/disable */
    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gpos_mods_validate( table + val, valid );

    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gpos_mods_validate( table + val, valid );

    /* shrinkage JSTF max */
    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_max_validate( table + val, valid );

    /* extension GSUB enable/disable */
    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gsub_mods_validate( table + val, valid );

    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gsub_mods_validate( table + val, valid );

    /* extension GPOS enable/disable */
    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gpos_mods_validate( table + val, valid );

    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_gpos_mods_validate( table + val, valid );

    /* extension JSTF max */
    val = OTL_NEXT_USHORT( p );
    if ( val )
      otl_jstf_max_validate( table + val, valid );
  }

  static void
  otl_jstf_lang_validate( OTL_Bytes      table,
                          OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    OTL_CHECK( 2 );

    count = OTL_NEXT_USHORT( p );

    OTL_CHECK( count*2 );
    for ( ; count > 0; count-- )
      otl_jstf_priority_validate( table + OTL_NEXT_USHORT( p ), valid );
  }


  static void
  otl_jstf_script_validate( OTL_Bytes      table,
                            OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count, extender, default_lang;

    OTL_CHECK( 6 );
    extender     = OTL_NEXT_USHORT( p );
    default_lang = OTL_NEXT_USHORT( p );
    count        = OTL_NEXT_USHORT( p );

    if ( extender )
      otl_jstf_extender_validate( table + extender, valid );

    if ( default_lang )
      otl_jstf_lang_validate( table + default_lang, valid );

    OTL_CHECK( 6*count );

    for ( ; count > 0; count-- )
    {
      p += 4;  /* ignore tag */
      otl_jstf_lang_validate( table + OTL_NEXT_USHORT( p ), valid );
    }
  }


  OTL_LOCALDEF( void )
  otl_jstf_validate( OTL_Bytes      table,
                     OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    OTL_CHECK( 4 );

    if ( OTL_NEXT_ULONG( p ) != 0x10000UL )
      OTL_INVALID_DATA;

    count = OTL_NEXT_USHORT( p );
    OTL_CHECK( count*6 );

    for ( ; count > 0; count++ )
    {
      p += 4;  /* ignore tag */
      otl_jstf_script_validate( table + OTL_NEXT_USHORT( p ), valid );
    }
  }
  @


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@
