head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.29.51;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.21.02;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.21.02;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.09.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@#include "otlgdef.h"
#include "otlcommn.h"

 /************************************************************************/
 /************************************************************************/
 /*****                                                              *****/
 /*****                      ATTACHMENTS LIST                        *****/
 /*****                                                              *****/
 /************************************************************************/
 /************************************************************************/

  static void
  otl_attach_point_validate( OTL_Bytes      table,
                             OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    if ( p + 2 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    count = OTL_NEXT_USHORT( p );
    if ( table + count*2 > valid->limit )
      OTL_INVALID_TOO_SHORT;
  }


  static void
  otl_attach_list_validate( OTL_Bytes      table,
                            OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_Bytes  coverage;
    OTL_UInt   count;

    if ( p + 4 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    coverage = table + OTL_NEXT_USHORT( p );
    count    = OTL_NEXT_USHORT( p );

    otl_coverage_validate( coverage, valid );
    if ( count != otl_coverage_get_count( coverage ) )
      OTL_INVALID_DATA;

    if ( p + count*2 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    for ( ; count > 0; count-- )
      otl_attach_point_validate( table + OTL_NEXT_USHORT( p ) );
  }


 /************************************************************************/
 /************************************************************************/
 /*****                                                              *****/
 /*****                      LIGATURE CARETS                         *****/
 /*****                                                              *****/
 /************************************************************************/
 /************************************************************************/

  static void
  otl_caret_value_validate( OTL_Bytes      table,
                            OTL_Validator  valid )
  {
    OTL_Bytes  p = table;

    if ( p + 4 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    format = OTL_NEXT_USHORT( p );
    switch ( format )
    {
      case 1:
      case 2:
        break;

      case 3:
        {
          OTL_Bytes  device;

          p += 2;
          if ( p + 2 > valid->limit )
            OTL_INVALID_TOO_SHORT;

          otl_device_table_validate( table + OTL_PEEK_USHORT( p ) );
        }
        break;

      default:
        OTL_INVALID_DATA;
    }
  }


  static void
  otl_ligature_glyph_validate( OTL_Bytes      table,
                               OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_UInt   count;

    if ( p + 2 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    count = OTL_NEXT_USHORT( p );

    if ( p + count*2 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    for ( ; count > 0; count-- )
      otl_caret_value_validate( table + OTL_NEXT_USHORT( p ) );
  }


  static void
  otl_ligature_caret_list_validate( OTL_Bytes      table,
                                    OTL_Validator  valid )
  {
    OTL_Bytes  p = table;
    OTL_Bytes  coverage;
    OTL_UInt   count;

    if ( p + 4 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    coverage = table + OTL_NEXT_USHORT( p );
    count    = OTL_NEXT_USHORT( p );

    otl_coverage_validate( coverage, valid );
    if ( count != otl_coverage_get_count( coverage ) )
      OTL_INVALID_DATA;

    if ( p + count*2 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    for ( ; count > 0; count-- )
      otl_ligature_glyph_validate( table + OTL_NEXT_USHORT( p ) );
  }


 /************************************************************************/
 /************************************************************************/
 /*****                                                              *****/
 /*****                         GDEF TABLE                           *****/
 /*****                                                              *****/
 /************************************************************************/
 /************************************************************************/

  OTL_APIDEF( void )
  otl_gdef_validate( OTL_Bytes      table,
                     OTL_Validator  valid )
  {
    OTL_Bytes  p = table;

    if ( p + 12 > valid->limit )
      OTL_INVALID_TOO_SHORT;

    /* check format */
    if ( OTL_NEXT_ULONG( p ) != 0x00010000UL )
      OTL_INVALID_FORMAT;

    /* validate class definition table */
    otl_class_definition_validate( table + OTL_NEXT_USHORT( p ) );

    /* validate attachment point list */
    otl_attach_list_validate( table + OTL_NEXT_USHORT( p ) );

    /* validate ligature caret list */
    otl_ligature_caret_list_validate( table + OTL_NEXT_USHORT( p ) );

    /* validate mark attach class */
    otl_class_definition_validate( table + OTL_NEXT_USHORT( p ) );
  }

@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@
