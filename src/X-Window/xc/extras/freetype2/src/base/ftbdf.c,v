head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.29.45;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.20.59;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.20.59;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.38.09;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.08.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@/***************************************************************************/
/*                                                                         */
/*  ftbdf.c                                                                */
/*                                                                         */
/*    FreeType API for accessing BDF-specific strings (body).              */
/*                                                                         */
/*  Copyright 2002 by                                                      */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#include <ft2build.h>
#include FT_INTERNAL_BDF_TYPES_H
#include FT_INTERNAL_OBJECTS_H


  FT_EXPORT_DEF( FT_Error )
  FT_Get_BDF_Charset_ID( FT_Face       face,
                         const char*  *acharset_encoding,
                         const char*  *acharset_registry )
  {
    FT_Error     error;
    const char*  encoding = NULL;
    const char*  registry = NULL;
    

    error = FT_Err_Invalid_Argument;
    
    if ( face != NULL && face->driver != NULL )
    {
      FT_Module  driver = (FT_Module) face->driver;
      

      if ( driver->clazz && driver->clazz->module_name         &&
           ft_strcmp( driver->clazz->module_name, "bdf" ) == 0 )
      {
        BDF_Public_Face  bdf_face = (BDF_Public_Face)face;
        

        encoding = (const char*) bdf_face->charset_encoding;
        registry = (const char*) bdf_face->charset_registry;
        error    = 0;
      }           
    }
  
    if ( acharset_encoding )
      *acharset_encoding = encoding;
    
    if ( acharset_registry )
      *acharset_registry = registry;
    
    return error;
  }                         


/* END */
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@a22 16
  static FT_Bool
  test_font_type( FT_Face face, const char*  name )
  {
    if ( face && face->driver )
    {
      FT_Module  driver = (FT_Module)face->driver;

      if ( driver->clazz && driver->clazz->module_name )
      {
        if ( ft_strcmp( driver->clazz->module_name, name ) == 0 )
          return 1;
      }
    }
    return 0;
  }

d32 1
a32 1

d35 2
a36 2

    if ( test_font_type( face, "bdf" ) )
d38 2
a39 1
      BDF_Public_Face  bdf_face = (BDF_Public_Face)face;
d41 5
d47 4
a50 3
      encoding = (const char*) bdf_face->charset_encoding;
      registry = (const char*) bdf_face->charset_registry;
      error    = 0;
d52 1
a52 1

d55 1
a55 1

d58 1
a58 1

d60 1
a60 11
  }


  FT_EXPORT( FT_Error )
  FT_Get_BDF_Property( FT_Face           face,
                       const char*       prop_name,
                       BDF_PropertyRec  *aproperty )
  {
    FT_Error   error;

    error = FT_Err_Invalid_Argument;
a61 14
    aproperty->type = BDF_PROPERTY_TYPE_NONE;

    if ( face != NULL && face->driver != NULL )
    {
      FT_Driver              driver = face->driver;
      BDF_GetPropertyFunc    func;

      func = (BDF_GetPropertyFunc) driver->root.clazz->get_interface(
                             FT_MODULE( driver ), "get_bdf_property" );
      if ( func )
        error = func( face, prop_name, aproperty );
    }
    return error;
  }
@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@a22 16
  static FT_Bool
  test_font_type( FT_Face face, const char*  name )
  {
    if ( face && face->driver )
    {
      FT_Module  driver = (FT_Module)face->driver;

      if ( driver->clazz && driver->clazz->module_name )
      {
        if ( ft_strcmp( driver->clazz->module_name, name ) == 0 )
          return 1;
      }
    }
    return 0;
  }

d32 1
a32 1

d35 2
a36 2

    if ( test_font_type( face, "bdf" ) )
d38 2
a39 1
      BDF_Public_Face  bdf_face = (BDF_Public_Face)face;
d41 5
d47 4
a50 3
      encoding = (const char*) bdf_face->charset_encoding;
      registry = (const char*) bdf_face->charset_registry;
      error    = 0;
d52 1
a52 1

d55 1
a55 1

d58 1
a58 1

d60 1
a60 11
  }


  FT_EXPORT( FT_Error )
  FT_Get_BDF_Property( FT_Face           face,
                       const char*       prop_name,
                       BDF_PropertyRec  *aproperty )
  {
    FT_Error   error;

    error = FT_Err_Invalid_Argument;
a61 14
    aproperty->type = BDF_PROPERTY_TYPE_NONE;

    if ( face != NULL && face->driver != NULL )
    {
      FT_Driver              driver = face->driver;
      BDF_GetPropertyFunc    func;

      func = (BDF_GetPropertyFunc) driver->root.clazz->get_interface(
                             FT_MODULE( driver ), "get_bdf_property" );
      if ( func )
        error = func( face, prop_name, aproperty );
    }
    return error;
  }
@

