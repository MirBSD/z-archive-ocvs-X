head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.27.41;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.00.40;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.40;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.03.53;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@/*
 *   subfont.c
 *
 *   This file is part of the ttf2pk package.
 *
 *   Copyright 1997-1999 by
 *     Frederic Loyer <loyer@@ensta.fr>
 *     Werner Lemberg <wl@@gnu.org>
 */

#include <stdio.h>
#include <stdlib.h>
#include <stddef.h>         /* for size_t */
#include <ctype.h>
#include <string.h>

#include "filesrch.h"
#include "subfont.h"
#include "newobj.h"
#include "errormsg.h"


static char *real_sfd_name;
static FILE *sfd;


/*
 *   Initialize subfont functionality.  The argument is the subfont
 *   definition file name.  If `fatal' is `True', the routine exits
 *   with an error.  If `fatal' is `False', a warning message is emitted
 *   and `False' returned if an error occurs; in case of success `True'
 *   will be returned.
 */

Boolean
init_sfd(Font *fnt, Boolean fatal)
{
  real_sfd_name = TeX_search_sfd_file(&(fnt->sfdname));
  if (!real_sfd_name)
  {
    if (fatal)
      oops("Cannot find subfont definition file `%s'.", fnt->sfdname);
    else
    {
      warning("Cannot find subfont definition file `%s'.", fnt->sfdname);
      return False;
    }
  }

  sfd = fopen(real_sfd_name, "rt");
  if (sfd == NULL)
  {
    if (fatal)
      oops("Cannot open subfont definition file `%s'.", fnt->sfdname);
    else
    {
      warning("Cannot open subfont definition file `%s'.", fnt->sfdname);
      return False;
    }
  }

  return True;
}


/*
 *   This function fills the font structure sequentially with subfont
 *   entries; it returns `False' if no more subfont entries are available,
 *   `True' otherwise.
 *
 *   fnt->subfont_name must be set to NULL before the first call.
 *
 *   The subset parser was inspired by ttf2bdf.c .
 */

Boolean
get_sfd(Font *fnt)
{
  long i, offset;
  long begin, end = -1;
  char *buffer, *oldbuffer, *bufp, *bufp2, *bufp3;


  for (i = 0; i < 256; i++)
    fnt->sf_code[i] = -1;

again:

  buffer = get_line(sfd);
  if (!buffer)
    oops("Error reading subfont definition file `%s'.", real_sfd_name);
  if (!*buffer)
    return False;

  oldbuffer = newstring(buffer);
  bufp = buffer;
  offset = 0;

  while (*bufp)             /* remove comment */
  {
    if (*bufp == '#')
    {
      bufp++;
      break;
    }
    bufp++;
  }
  *(--bufp) = '\0';         /* remove final newline character */

  bufp = buffer;

  while (isspace(*bufp))
    bufp++;

  if (*bufp == '\0')                    /* empty line? */
  {
    free(buffer);
    free(oldbuffer);
    goto again;
  }

  while (*bufp && !isspace(*bufp))      /* subfont name */
    bufp++;
  *(bufp++) = '\0';

  while (isspace(*bufp))
    bufp++;

  if (*bufp == '\0')
    oops("Invalid subfont entry in `%s'.", real_sfd_name);

  if (fnt->subfont_name)
    free(fnt->subfont_name);
  fnt->subfont_name = newstring(buffer);

  while (1)
  {
    bufp3 = bufp;

    begin = strtol(bufp, &bufp2, 0);

    if (bufp == bufp2 || begin < 0 || begin > 0xFFFF)
      boops(oldbuffer, bufp - buffer,
            "Invalid subfont range or offset entry.");

    if (*bufp2 == ':')                  /* offset */
    {
      offset = begin;
      if (offset > 0xFF)
        boops(oldbuffer, bufp - buffer, "Invalid subfont offset.");

      bufp = bufp2 + 1;

      while (isspace(*bufp))
        bufp++;

      continue;
    }
    else if (*bufp2 == '_')             /* range */
    {
      bufp = bufp2 + 1;
      if (!isdigit(*bufp))
        boops(oldbuffer, bufp - buffer, "Invalid subfont range entry.");

      end = strtol(bufp, &bufp2, 0);

      if (bufp == bufp2 || end < 0 || end > 0xFFFFL)
        boops(oldbuffer, bufp - buffer, "Invalid subfont range entry.");
      if (*bufp2 && !isspace(*bufp2))
        boops(oldbuffer, bufp2 - buffer, "Invalid subfont range entry.");
      if (end < begin)
        boops(oldbuffer, bufp - buffer, "End of subfont range too small.");
      if (offset + (end - begin) > 255)
        boops(oldbuffer, bufp3 - buffer,
              "Subfont range too large for current offset (%i).", offset);
    }
    else if (isspace(*bufp2) || !*bufp2)        /* single value */
      end = begin;
    else
      boops(oldbuffer, bufp2 - buffer, "Invalid subfont range entry.");

    for (i = begin; i <= end; i++)
    {
      if (fnt->sf_code[offset] != -1)
        boops(oldbuffer, bufp3 - buffer, "Overlapping subfont ranges.");

      fnt->sf_code[offset++] = i;
    }

    bufp = bufp2;

    while (isspace(*bufp))
      bufp++;

    if (!*bufp)
      break;
  }

  free(buffer);
  free(oldbuffer);

  return True;
}


void
close_sfd(void)
{
  if (sfd)
    fclose(sfd);
}


/*
 *   We extract the subfont definition file name.  The name must
 *   be embedded between two `@@' characters.  If there is no sfd file,
 *   `sfd_begin' is set to -1.
 *
 *   The `@@' characters will be replaced with null characters.
 */

void
handle_sfd(char *s, int *sfd_begin, int *postfix_begin)
{
  size_t len;
  int i;
  Boolean have_atsign;


  have_atsign = False;
  len = strlen(s);
  *sfd_begin = -1;
  *postfix_begin = -1;

  for (i = 0; s[i]; i++)
  {
    if (s[i] == '@@')
    {
      if (have_atsign)
      {
        *postfix_begin = i + 1;

        s[i] = '\0';
        break;
      }
      have_atsign = True;
      *sfd_begin = i + 1;

      s[i] = '\0';
    }
  }

  if (*sfd_begin != -1 &&
      (*postfix_begin == -1 || *postfix_begin < *sfd_begin + 2))
    oops("Invalid subfont definition file name.");

  if (*postfix_begin > -1)
    for (i = *postfix_begin; s[i]; i++)
      if (s[i] == '/' || s[i] == ':' || s[i] == '\\' || s[i] == '@@')
        oops("`/', `:', `\\', and `@@' not allowed after second `@@'.");
}


/* end */
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
