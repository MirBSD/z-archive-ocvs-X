head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.27.52;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.00.44;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.44;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.04.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@                The FreeType OS/2 Compilation HowTo

Contents

Introduction
I.   Building the library
  1. Quick Compilation
  2. Manual compilation
  3. Notes
II.  Building other parts of the package
  1. Test programs
  2. Other contribs
III. Troubleshooting



Introduction
============

This file  describes the compilation  of the FreeType package  on an
OS/2 system.  It comes with makefiles for the following compilers:

  - gcc/emx with GNU make

  - icc with nmake (Visual Age C++)

  - wcc386 with wmake (Watcom -- tried with 10.6)

  - gcc/emx with dmake


NOTE:

  You're advised  to jump  to section  II.1 if you  want to  run the
  FreeType test/demo programs as quick as possible.



I. Building the library
=======================


1. Quick Compilation
--------------------

  The easiest  way to compile  the library on  OS/2 is to go  to the
  directory `freetype/lib'.  Then type, depending on your compiler,

    gcc/emx:     make  -f arch/os2/makefile.emx
    gcc/dmake:   dmake -f arch/os2/makefile.dm

    icc:         nmake -f arch\os2\makefile.icc
    wcc386:      wmake -f=arch\os2\makefile.wat

  This should build the `libttf.a' or `libttf.lib' library files.

  You can also use the following targets:

    debug     - Makes  a development version  of the  library.  Only
                useful for FreeType developers and hackers.

    clean     - Cleans all intermediate  object files created during
                compilation.  Keeps  all library and  executables in
                place.

    distclean - Cleans everything,  leaving the directories  as they
                were before the compilation.


2. Manual compilation
---------------------

  Here  are explained  the  steps  that are  required  to compile  the
  FreeType _library_ (and only this one) by hand.

  Unlike previous  versions, FreeType 1.1 and above  can be compiled
  in two modes, called `debug mode' and `single object mode'.
     
  Debug mode is simply the normal way of compiling C programs, i.e.,
  each  `*.c' file  is compiled  into an  individual  `*.obj' object
  file, and all  of them are linked together  into an archive (i.e.,
  `*.lib' library).

  Single object mode is slightly different: all C files are included
  in a single source during compilation, resulting in a single final
  object  file for  the core  library.   This has  the advantage  of
  letting  optimizing compilers  do  more global  work,  as well  as
  getting rid of all external  symbols which are used solely for the
  purpose of components interfacing.

  In both  modes, you  need to include  the following paths  to your
  makefile/command line:

    the location of all `tt*.[hc]' files
    the location of system-specific files

  For  example,  if  you   are  compiling  from  the  `freetype/lib'
  directory, you can type for debug mode something like

    gcc -c -I. -Iarch/os2 tt*.c arch/os2/os2file.c

  to  compile all required  files into  object ones.   Then assemble
  them in a library with `ar' or `implib'.

  In single  object mode,  you only need  to compile the  file named
  `freetype.c'  which is  located in  `freetype/lib/arch/os2'.  From
  the same directory as before, one would type:

    gcc -c -I. -Iarch/os2 arch/os2/freetype.c

  You    can    also    compile    the   extensions    located    in
  `freetype/lib/extend' separately  from the base  engine.  You will
  need to include  the same paths as before, though;  be sure to add
  the path to the `extend' directory, like in

      gcc -c -I. -Iarch/os2 -Iextend extend/*.c



II. Building other parts of the package
=======================================


1. Test programs
----------------

  The test  programs are located  in `freetype/test'.  Most  of them
  use a  tiny graphics  sub-system which is  simply used  to display
  bitmaps and pixmaps  in a windows on a  variety of platforms.  The
  OS/2 version comes in two flavors: PM and full-screen.

  To compile them, you must be in the `freetype/test' directory, and
  invoke the makefile in arch/os2.  For example:

    nmake -f arch\os2\makefile.os2


  NOTE 1:

    This will automatically invoke the library makefile for you!

  NOTE 2:

    The test programs come in two flavors, distinguished by the `fs'
    suffix appended to their name.  For example:

      ftview   (PM version)
      ftviewfs (Full Screen version)

  The full-screen version is there mainly for debugging purposes.

  NOTE 3:

    For now, the  graphical test programs only run  on the following
    platforms: Unix, OS/2, Dos, Amiga, and Windows.

    The library,  being pure  ANSI-C, can be  used on any  system to
    generate bitmaps and pixmaps.


2. Other contributions
----------------------

  You may find  some other contributions to the  FreeType project in
  the `freetype/contrib'  directory.  Each of  these programs should
  have  its  own Makefiles  and  documentations.   Also check  their
  licenses, as  the programs  not necessarily distributed  under the
  FreeType one.   You are invited to port  the non-OS/2 applications
  to OS/2.

  For OS/2,  you will find the  source code for  the FreeType/2 font
  driver   in   `freetype/contrib/os2'.    Read  its   documentation
  carefully before  trying to compile  it, as it certainly  won't be
  easy.



III. Troubleshooting
====================

  There is only one important point on OS/2:

  `The test program crashes with anti-aliasing on!'

  It  has been  discovered  that  some versions  of  Visual Age  C++
  contain  a  bug  which  miscompiles the  anti-aliasing  source  in
  ttraster.c, hence resulting in a  page fault when trying to render
  a pixmap  in the engine.   Apparently, not all  levels/versions of
  the  compiler   contain  the  bug.   You'll   notice  the  problem
  immediately (page fault :-).

  Please apply the  most recent fixpack to your  Visual Age C++ copy
  in  order to  get rid  of  it (newer  fixpacks seem  to solve  the
  issue).


Good luck!


--- end of os2.txt ---
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
