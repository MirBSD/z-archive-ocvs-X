head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.28.04;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.00.54;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.54;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.04.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@unit StateTV;

interface

uses Objects, Views, Drivers, TTTypes, TTObjs, TTDebug;

{$I DEBUGGER.INC}

type

  { State Viewer }

  { A simple TView to show the current graphics state }

  PStateViewer = ^TStateViewer;
  TStateViewer = object( TView )

                   constructor Init( var Bounds : TRect;
                                     aexec      : PExec_Context );

                   procedure HandleEvent( var Event : TEvent ); virtual;
                   procedure Draw; virtual;

                 private
                   exec : PExec_Context;
                 end;

  { PStateWindow }

  PStateWindow = ^TStateWindow;
  TStateWindow = object( TWindow )
                   stateView : PStateViewer;
                   constructor Init( var Bounds : TRect;
                                     exec       : PExec_Context );
                 end;

implementation

{ TStateViewer }

constructor TStateViewer.Init;
begin
  inherited Init( Bounds );
  exec      := aexec;
  Options   := Options or ofSelectable;
  EventMask := EventMask or evWave;
end;

procedure TStateViewer.Draw;
var
  B     : TDrawBuffer;
  S     : String;
  Color : Int;
  n     : Int;
begin
  Color := $1E;
  n     := 0;
  MoveChar( B, ' ', Color, Self.Size.X );

  S := ' Loop                 ' + Hex16( exec^.GS.loop );

  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Auto_flip            ';
  if exec^.GS.auto_flip then S := S + ' Yes'
                            else S := S + '  No';
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Dual          ('+Hex16(exec^.GS.dualVector.x)+','+
                     Hex16(exec^.GS.dualVector.y)+')';
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Projection    ('+Hex16(exec^.GS.projVector.x)+','+
                     Hex16(exec^.GS.projVector.y)+')';
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Freedom       ('+Hex16(exec^.GS.freeVector.x)+','+
                     Hex16(exec^.GS.freeVector.y)+')';
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Gep0                   ' + Hex8( exec^.GS.gep0 );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Gep1                   ' + Hex8( exec^.GS.gep1 );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Gep2                   ' + Hex8( exec^.GS.gep2 );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Ins_Control            ' + Hex8( exec^.GS.instruct_control );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Rounding               ' + Hex8( exec^.GS.round_state );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Min_Distance     ' + Hex32( exec^.GS.minimum_distance );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Rp0                    ' + Hex8( exec^.GS.rp0 );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Rp1                    ' + Hex8( exec^.GS.rp1 );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Rp2                    ' + Hex8( exec^.GS.rp2 );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Ctrl_Val_Cutin   ' + Hex32( exec^.GS.control_value_cutin );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Sngl_Width_Cutin ' + Hex32( exec^.GS.single_width_cutin );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Sngl_Widht_Value ' + Hex32( exec^.GS.single_width_value );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  S := ' Scan_type              ' + Hex8( exec^.GS.scan_type );
  MoveStr( B, S, Color );
  WriteLine( 0, n, Self.Size.X, 1, B );
  inc( n );

  MoveChar( B, ' ', Color, Self.Size.X );
  WriteLine( 0, n, Self.Size.X, Size.Y-n, B );

end;

procedure TStateViewer.HandleEvent;
var
  Limits     : TRect;
  Mini, Maxi : Objects.TPoint;
begin

  inherited HandleEvent( Event );

  case Event.What of

    evWave : case Event.Command of

               cmReFocus : DrawView;
(*
                  cmResize: begin
                              Owner^.GetExtent(Limits);
                              SizeLimits( Mini, Maxi );
                              DragView(Event, DragMode, Limits, Mini, Maxi );
                              ClearEvent(Event);
                            end;
*)
             end;
  end;
end;


constructor TStateWindow.Init;
begin
  inherited Init( Bounds, 'State', wnNoNumber );
  GetExtent( Bounds );
  Bounds.Grow(-1,-1);
  New( StateView, Init( Bounds, exec ) );
  Insert( StateView );
end;

end.
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
