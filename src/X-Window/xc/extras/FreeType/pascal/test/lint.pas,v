head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.28.04;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.00.54;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.54;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.04.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@{***************************************************************************}
{*                                                                         *}
{*  FreeType Font glyph programs checker                                   *}
{*                                                                         *}
{*                                                                         *}
{*    This small program will load a TrueType font file and try to         *}
{*    render it at a given point size.                                     *}
{*                                                                         *}
{*    This version will also catch differences between the engine's        *}
{*    computed advance widths, and the pre-calc values found in the        *}
{*    "hdmx" table                                                         *}
{*                                                                         *}
{*  This source code has been compiled and run under both Virtual Pascal   *}
{*  on OS/2 and Borland's BP7.                                             *}
{*                                                                         *}
{***************************************************************************}

program Abc;

uses Crt,
     Common,
{$IFDEF OS2}
     Use32,
{$ENDIF}
     FreeType,
     TTObjs;

const
  Precis  = 64;
  Precis2 = Precis div 2;

  PrecisAux = 1024;

  Screen_Width  = 640;
  Screen_Height = 480;
  Screen_Cols   = Screen_Width div 8;
  Screen_Size   = Screen_Cols * Screen_Height;

  Grid_Width  = Screen_Width div 8;
  Grid_Height = Screen_Height div 8;
  Grid_Cols   = Grid_Width div 8;
  Grid_Size   = Grid_Cols * Grid_Height;

  Screen_Center_X = Screen_Width div 2;
  Screen_Center_Y = Screen_Height div 2;

  Grid_Center_X = Grid_Width div 2;
  Grid_Center_Y = Grid_Height div 2;

  Profile_Buff_Size = 64000;

var

  res, old_res           : integer;

  numPoints, numContours : integer;

  Bitmap_small : TT_Raster_Map;
  Bitmap_big   : TT_Raster_Map;

  Rotation : integer;  (* Angle modulo 1024 *)

  num_glyphs : integer;

  face     : TT_Face;
  instance : TT_Instance;
  glyph    : TT_Glyph;

  metrics  : TT_Glyph_Metrics;
  imetrics : TT_Instance_Metrics;

  props    : TT_Face_Properties;

  point_size : integer;
  error      : TT_Error;

  display_outline : boolean;
  hint_glyph      : boolean;
  scan_type       : Byte;

  old_glyph : integer;

  FOut : Text;

(*******************************************************************
 *
 *  Function    :  LoadTrueTypeChar
 *
 *  Description :  Loads a single glyph into the xcoord, ycoord and
 *                 flag arrays, from the instance data.
 *
 *****************************************************************)

Function LoadTrueTypeChar( index : integer;
                           hint  : boolean ) : TT_Error;
var
  j, load_flag : integer;

  result : TT_Error;

begin
  if hint then load_flag := TT_Load_Scale_Glyph or TT_Load_Hint_Glyph
          else load_flag := TT_Load_Scale_Glyph;

  result := TT_Load_Glyph( instance,
                           glyph,
                           index,
                           load_flag );

  LoadTrueTypeChar := result;
end;


procedure Usage;
begin
    Writeln('Simple TrueType Glyphs viewer - part of the FreeType project' );
    Writeln;
    Writeln('Usage : ',paramStr(0),' size fontname[.ttf] [fontname.. ]');
    Writeln;
    Halt(1);
end;



var i: integer;
    heure,
    min1,
    min2,
    sec1,
    sec2,
    cent1,
    cent2  :
{$IFDEF OS2}
    longint;
{$ELSE}
    word;
{$ENDIF}

    C : Char;

    Filename : String;

label Fin;

var
  Fail     : Integer;
  PtSize   : Integer;
  Param    : Integer;
  code     : Integer;
  glyphStr : String[4];
  cur_file : Integer;
  valid    : Boolean;

  Mem0     : Longint;

label
  Lopo;

begin

  Mem0 := MemAvail;

  TT_Init_FreeType;

  if ParamCount < 2 then Usage;

  val( ParamStr(1), point_size, code );
  if code <> 0 then Usage;

  if ( point_size <= 0 ) then
  begin
    Writeln('Invalid argument : pointsize must be >= 1');
    Usage;
  end;

  Expand_WildCards( 2, '.ttf' );

  for cur_file := 0 to num_arguments-1 do
  begin

    FileName := arguments[cur_file]^;

    if Pos('.',FileName) = 0 then FileName:=FileName+'.TTF';

    Write( MemAvail:6, ' ' );

    error := TT_Open_Face( filename, face );

    i := length(FileName);
    while (i > 1) and (FileName[i] <> '\') do dec(i);
    FileName := Copy( FileName, i+1, length(FileName) );

    Write( cur_file:3,' ', filename:12, ': ' );

    if error <> TT_Err_Ok then
    begin
      Writeln( 'could not open file, error code = ', error );
      goto Lopo;
    end;

    TT_Get_Face_Properties( face, props );
    num_glyphs := props.num_Glyphs;

    error := TT_New_Glyph( face, glyph );
    if error <> TT_Err_Ok then
    begin
      Writeln( 'could not create glyph, error code = ',
               error );
      goto Lopo;
    end;

    error := TT_New_Instance( face, instance );
    if error <> TT_Err_Ok then
    begin
      Writeln( 'could not create instance, error code = ',
               error );
      goto Lopo;
    end;

    error := TT_Set_Instance_PointSize( instance, point_size );
    if error <> TT_Err_Ok then
    begin
      Writeln( 'could not set point size, error code = ', error );
      goto Lopo;
    end;

    Fail := 0;
    for i := 0 to num_glyphs-1 do
    begin
      error := LoadTrueTypeChar( i, true );
      if error <> TT_Err_Ok then
        begin
          inc( Fail );
          if Fail < 10 then
            Writeln( 'error hinting glyph ', i, ', code = ',
                     error );
        end;

{$IFDEF RIEN}
      with PGlyph(glyph.z)^ do
      begin
        if (precalc_width >= 0) and
           (precalc_width <> computed_width) then
          begin
            Write( i:5,' hdmx = ',precalc_width:3 );
            Write( ', engine = ',computed_width );
            if is_composite then Write( ' (composite)' );
            Writeln;
          end
      end;
{$ENDIF}

    end;

    if Fail >= 10 then
      Writeln( 'there were ',Fail,' failed glyphs' );

    if Fail = 0 then
      Writeln( 'ok' );

  Lopo:

    TT_Close_Face( face );

  end;

 Fin:

  Writeln('Memory consumed by lint = ', Mem0 - MemAvail );

  TT_Done_FreeType;

  Writeln('Memory leaked after engine termination = ', Mem0 - MemAvail );

end.


@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
