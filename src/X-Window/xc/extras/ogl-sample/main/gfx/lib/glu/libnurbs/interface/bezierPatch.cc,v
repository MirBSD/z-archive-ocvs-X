head	1.3;
access;
symbols
	tg-mergetmp-2:1.3
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.2
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@// @;


1.3
date	2004.03.07.19.36.18;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2003.05.16.16.30.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.01.37;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.01.37;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.21.28;	author tg;	state Exp;
branches;
next	;

1.1.9.1
date	2004.02.14.19.09.42;	author tg;	state Exp;
branches;
next	1.1.9.2;

1.1.9.2
date	2004.03.05.21.58.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@merge XFree86 4.4.0 final
@
text
@/*
** License Applicability. Except to the extent portions of this file are
** made subject to an alternative license as permitted in the SGI Free
** Software License B, Version 1.1 (the "License"), the contents of this
** file are subject only to the provisions of the License. You may not use
** this file except in compliance with the License. You may obtain a copy
** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
** 
** http://oss.sgi.com/projects/FreeB
** 
** Note that, as provided in the License, the Software is distributed on an
** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
** 
** Original Code. The Original Code is: OpenGL Sample Implementation,
** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
** Copyright in any portions created by third parties is as indicated
** elsewhere herein. All Rights Reserved.
** 
** Additional Notice Provisions: The application programming interfaces
** established by SGI in conjunction with the Original Code are The
** OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
** April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
** 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
** Window System(R) (Version 1.3), released October 19, 1998. This software
** was created using the OpenGL(R) version 1.2.1 Sample Implementation
** published by SGI, but has not been independently verified as being
** compliant with the OpenGL(R) version 1.2.1 Specification.
**
** $Date: 2004/03/05 21:58:19 $ $Revision: 1.1.9.2 $
*/
/*
** $Header: /cvs/src/X-Window/xc/extras/ogl-sample/main/gfx/lib/glu/libnurbs/interface/bezierPatch.cc,v 1.1.9.2 2004/03/05 21:58:19 tg Exp $
*/

#include "gluos.h"
#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <GL/glu.h> /*for drawing bzier patch*/
#include "bezierPatch.h"
#include "bezierEval.h"

/*
 *allocate an instance of bezierPatch. The control points are unknown. But
 *the space of this array is allocated with size of 
 *   uorder*vorder*dimension
 *
 */
bezierPatch* bezierPatchMake(float umin, float vmin, float umax, float vmax, int uorder, int vorder, int dimension)
{
  bezierPatch* ret = (bezierPatch*) malloc(sizeof(bezierPatch));
  assert(ret);
  ret->umin = umin;
  ret->vmin = vmin;
  ret->umax = umax;
  ret->vmax = vmax;
  ret->uorder = uorder;
  ret->vorder = vorder;
  ret->dimension = dimension;
  ret->ctlpoints = (float*) malloc(sizeof(float) * dimension * uorder * vorder);
  assert(ret->ctlpoints);

  ret->next = NULL;

  return ret;
}

bezierPatch* bezierPatchMake2(float umin, float vmin, float umax, float vmax, int uorder, int vorder, int dimension, int ustride, int vstride,  float* ctlpoints)
{
  bezierPatch* ret = (bezierPatch*) malloc(sizeof(bezierPatch));
  assert(ret);
  ret->umin = umin;
  ret->vmin = vmin;
  ret->umax = umax;
  ret->vmax = vmax;
  ret->uorder = uorder;
  ret->vorder = vorder;
  ret->dimension = dimension;
  ret->ctlpoints = (float*) malloc(sizeof(float) * dimension * uorder * vorder);
  assert(ret->ctlpoints);

  /*copy the control points there*/
  int the_ustride = vorder * dimension;
  int the_vstride = dimension;
  for(int i=0; i<uorder; i++)
    for(int j=0; j<vorder; j++)
      for(int k=0; k<dimension; k++)
	ret->ctlpoints[i * the_ustride + j*the_vstride+k] = ctlpoints[i*ustride+j*vstride+k];
  
  ret->next = NULL;

  return ret;
}

/*
 *deallocate the space as allocated by Make
 */
void bezierPatchDelete(bezierPatch *b)
{
  free(b->ctlpoints);
  free(b);
}

/*delete the whole linked list
 */
void bezierPatchDeleteList(bezierPatch *b)
{
  bezierPatch *temp;
  for(temp = b; temp != NULL; temp = temp->next)
    bezierPatchDelete(temp);
}

bezierPatch* bezierPatchInsert(bezierPatch *list, bezierPatch *b)
{
  b->next = list;
  return b;
}

/*print the data stored in this patch*/
void bezierPatchPrint(bezierPatch *b)
{
  printf("bezierPatch:\n");
  printf("umin,umax=(%f,%f), (vmin, vmax)=(%f,%f)\n", b->umin, b->umax, b->vmin, b->vmax);
  printf("uorder=%i, vorder=%i\n", b->uorder, b->vorder);
  printf("idmension = %i\n", b->dimension);
}
       
/*print the whole list*/
void bezierPatchPrintList(bezierPatch *list)
{
  bezierPatch* temp;
  for(temp=list; temp != NULL; temp = temp->next)
    bezierPatchPrint(temp);
}

void bezierPatchEval(bezierPatch *b, float u, float v, float ret[])
{
  if(   u >= b->umin && u<= b->umax
     && v >= b->vmin && v<= b->vmax)
    {

      bezierSurfEval(b->umin, b->umax, b->uorder, b->vmin, b->vmax, b->vorder, b->dimension, b->ctlpoints, b->dimension * b->vorder, b->dimension, u, v, ret);

     }
  else if(b->next != NULL)
    bezierPatchEval(b->next, u,v, ret);
  else 
    bezierSurfEval(b->umin, b->umax, b->uorder, b->vmin, b->vmax, b->vorder, b->dimension, b->ctlpoints, b->dimension * b->vorder, b->dimension, u, v, ret);    
}

/*the returned normal is normlized
 */
void bezierPatchEvalNormal(bezierPatch *b, float u, float v, float ret[])
{
  bezierSurfEvalNormal(b->umin, b->umax, b->uorder, b->vmin, b->vmax, b->vorder, b->dimension, b->ctlpoints, b->dimension * b->vorder, b->dimension, u, v, ret);  

  if(   u >= b->umin && u<= b->umax
     && v >= b->vmin && v<= b->vmax)
    {
      bezierSurfEvalNormal(b->umin, b->umax, b->uorder, b->vmin, b->vmax, b->vorder, b->dimension, b->ctlpoints, b->dimension * b->vorder, b->dimension, u, v, ret);
     }
  else if(b->next != NULL)
    bezierPatchEvalNormal(b->next, u,v, ret);
  else 
    bezierSurfEvalNormal(b->umin, b->umax, b->uorder, b->vmin, b->vmax, b->vorder, b->dimension, b->ctlpoints, b->dimension * b->vorder, b->dimension, u, v, ret);    

}

void bezierPatchDraw(bezierPatch *bpatch, int u_reso, int v_reso)
{
  if(bpatch->dimension == 3)
    glMap2f(GL_MAP2_VERTEX_3, bpatch->umin, bpatch->umax, 3*bpatch->vorder, bpatch->uorder, bpatch->vmin, bpatch->vmax,3, bpatch->vorder, (GLfloat*) bpatch->ctlpoints);
  else
    glMap2f(GL_MAP2_VERTEX_4, bpatch->umin, bpatch->umax, 4*bpatch->vorder, bpatch->uorder, bpatch->vmin, bpatch->vmax,3, bpatch->vorder, (GLfloat*) bpatch->ctlpoints);    

  glMapGrid2f(u_reso, bpatch->umin, bpatch->umax, 
	      v_reso, bpatch->vmin, bpatch->vmax);
  glEvalMesh2(GL_LINE, 0, u_reso, 0, v_reso);
}

void bezierPatchListDraw(bezierPatch *list, int u_reso, int v_reso)
{
  bezierPatch *temp;
glEnable(GL_LIGHTING);
glEnable(GL_LIGHT0);
glEnable(GL_MAP2_VERTEX_3);
glEnable(GL_AUTO_NORMAL);
glEnable(GL_NORMALIZE);
glColor3f(1,0,0);
#ifdef DEBUG
printf("mapmap\n");
#endif


  for(temp = list; temp != NULL; temp = temp->next)
    bezierPatchDraw(temp, u_reso, v_reso);
}
	    


@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@d34 1
a34 1
** $Date: 2003/03/22 20:01:37 $ $Revision: 1.1 $
d37 1
a37 1
** $Header: /lcvs/src/X-Window/xc/extras/ogl-sample/main/gfx/lib/glu/libnurbs/interface/bezierPatch.cc,v 1.1 2003/03/22 20:01:37 tg Exp $
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
** $Date: 2001/04/05 22:04:25 $ $Revision: 1.1.1.1 $
d37 1
a37 1
** $Header: /cvs/XF4/xc/extras/ogl-sample/main/gfx/lib/glu/libnurbs/interface/bezierPatch.cc,v 1.1.1.1 2001/04/05 22:04:25 matthieu Exp $
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.9.2
log
@Import XFree86 4.4 from The XFree86(TM) Project, Inc.
(integrity cannot be checked)

got via cvs -qd anoncvs@@anoncvs.xfree86.org:/cvs co -Prxf-4_4_0 xc
@
text
@d34 1
a34 1
** $Date$ $Revision$
d37 1
a37 1
** $Header: //depot/main/gfx/lib/glu/libnurbs/interface/bezierPatch.cc#4 $
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d34 1
a34 1
** $Date: 2003/04/01 22:36:13 $ $Revision: 1.2 $
d37 1
a37 1
** $Header: /cvs/XF4/xc/extras/ogl-sample/main/gfx/lib/glu/libnurbs/interface/bezierPatch.cc,v 1.2 2003/04/01 22:36:13 matthieu Exp $
@

