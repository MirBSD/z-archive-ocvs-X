head	1.4;
access;
symbols
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	openbsd:1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9;
locks; strict;
comment	@# @;


1.4
date	2004.03.07.18.33.51;	author tg;	state dead;
branches;
next	1.3;

1.3
date	2004.03.02.20.11.10;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.14.20.21.24;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.02.14.19.10.11;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2004.03.02.17.43.16;	author tg;	state Exp;
branches;
next	;

1.1.9.1
date	2004.02.14.19.10.11;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@semi-automagic merge of these files (ie, I've skipped through the diffs,
and most of that was done by cvs or that weird script of some minutes ago)
@
text
@ChangeLog		history of changes
INDEX			this file
FAQ			Frequently Asked Questions about zlib
Make_vms.com		script for Vax/VMS
Makefile		makefile for Unix (generated by configure)
Makefile.in		makefile for Unix (template for configure)
Makefile.riscos 	makefile for RISCOS
README			guess what
algorithm.txt		description of the (de)compression algorithm
configure		configure script for Unix
descrip.mms		makefile for Vax/VMS
zlib.3			mini man page for zlib (volunteers to write full
			man pages from zlib.h welcome. write to jloup@@gzip.org)

amiga/Makefile.sas	makefile for Amiga SAS/C
amiga/Makefile.pup      makefile for Amiga powerUP SAS/C PPC

msdos/Makefile.w32      makefile for Microsoft Visual C++ 32-bit
msdos/Makefile.b32	makefile for Borland C++   32-bit
msdos/Makefile.bor	makefile for Borland C/C++ 16-bit
msdos/Makefile.dj2	makefile for DJGPP 2.x
msdos/Makefile.emx	makefile for EMX 0.9c (32-bit DOS/OS2)
msdos/Makefile.msc	makefile for Microsoft C 16-bit
msdos/Makefile.tc	makefile for Turbo C
msdos/Makefile.wat	makefile for Watcom C
msdos/zlib.def        	definition file for Windows DLL
msdos/zlib.rc         	definition file for Windows DLL

nt/Makefile.nt		makefile for Windows NT
nt/zlib.dnt		definition file for Windows NT DLL
nt/Makefile.emx		makefile for EMX 0.9c/RSXNT 1.41 (Win32 Intel)
nt/Makefile.gcc		makefile for Windows NT using GCC (mingw32)


		zlib public header files (must be kept):
zconf.h
zlib.h

		private source files used to build the zlib library:
adler32.c
compress.c
crc32.c
deflate.c
deflate.h
gzio.c
infblock.c
infblock.h
infcodes.c
infcodes.h
inffast.c
inffast.h
inflate.c
inftrees.c
inftrees.h
infutil.c
infutil.h
maketree.c
trees.c
uncompr.c
zutil.c
zutil.h

		source files for sample programs:
example.c
minigzip.c

		unsupported contribution by third parties

contrib/asm386/ by Gilles Vollant <info@@winimage.com>
	386 asm code replacing longest_match().

contrib/minizip/ by Gilles Vollant <info@@winimage.com>
	Mini zip and unzip based on zlib
        See http://www.winimage.com/zLibDll/unzip.html

contrib/iostream/ by Kevin Ruland <kevin@@rodin.wustl.edu>
        A C++ I/O streams interface to the zlib gz* functions

contrib/iostream2/  by Tyge Løvset <Tyge.Lovset@@cmr.no>
	Another C++ I/O streams interface

contrib/untgz/  by "Pedro A. Aranda Guti\irrez" <paag@@tid.es>
	A very simple tar.gz extractor using zlib

contrib/visual-basic.txt by Carlos Rios <c_rios@@sonda.cl>
        How to use compress(), uncompress() and the gz* functions from VB.
@


1.3
log
@semi-automatic merge and whitespace adjustment of OpenBSD XF4 subtree
@
text
@@


1.2
log
@nuke a bunch of unused files
" (like openbsd)

and how often do I have to tell X I don't want 25368 copies of libz in my tree
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@
