head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.28.23;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.20.09;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.20.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.17.29.17;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.05.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@/* DO NOT EDIT - This file generated automatically with glsparcasm.py script */
#include "glapioffsets.h"




/* The _glapi_Dispatch symbol addresses get relocated into the
 * sethi/or instruction sequences below at library init time.
 */


.text
.align 32
.globl __glapi_sparc_icache_flush
__glapi_sparc_icache_flush: /* %o0 = insn_addr */
	flush	%o0
	retl
	nop

.data
.align 64

.globl _mesa_sparc_glapi_begin
.type _mesa_sparc_glapi_begin,#function
_mesa_sparc_glapi_begin:

.globl glNewList
.type glNewList,#function
glNewList:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_NewList), %g2
	or	%g2, %lo(8 * _gloffset_NewList), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_NewList)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEndList
.type glEndList,#function
glEndList:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EndList), %g2
	or	%g2, %lo(8 * _gloffset_EndList), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EndList)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCallList
.type glCallList,#function
glCallList:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CallList), %g2
	or	%g2, %lo(8 * _gloffset_CallList), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CallList)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCallLists
.type glCallLists,#function
glCallLists:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CallLists), %g2
	or	%g2, %lo(8 * _gloffset_CallLists), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CallLists)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDeleteLists
.type glDeleteLists,#function
glDeleteLists:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DeleteLists), %g2
	or	%g2, %lo(8 * _gloffset_DeleteLists), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DeleteLists)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGenLists
.type glGenLists,#function
glGenLists:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GenLists), %g2
	or	%g2, %lo(8 * _gloffset_GenLists), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GenLists)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListBase
.type glListBase,#function
glListBase:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListBase), %g2
	or	%g2, %lo(8 * _gloffset_ListBase), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListBase)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBegin
.type glBegin,#function
glBegin:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Begin), %g2
	or	%g2, %lo(8 * _gloffset_Begin), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Begin)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBitmap
.type glBitmap,#function
glBitmap:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Bitmap), %g2
	or	%g2, %lo(8 * _gloffset_Bitmap), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Bitmap)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3b
.type glColor3b,#function
glColor3b:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3b), %g2
	or	%g2, %lo(8 * _gloffset_Color3b), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3b)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3bv
.type glColor3bv,#function
glColor3bv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3bv), %g2
	or	%g2, %lo(8 * _gloffset_Color3bv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3bv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3d
.type glColor3d,#function
glColor3d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3d), %g2
	or	%g2, %lo(8 * _gloffset_Color3d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3dv
.type glColor3dv,#function
glColor3dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3dv), %g2
	or	%g2, %lo(8 * _gloffset_Color3dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3f
.type glColor3f,#function
glColor3f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3f), %g2
	or	%g2, %lo(8 * _gloffset_Color3f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3fv
.type glColor3fv,#function
glColor3fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3fv), %g2
	or	%g2, %lo(8 * _gloffset_Color3fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3i
.type glColor3i,#function
glColor3i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3i), %g2
	or	%g2, %lo(8 * _gloffset_Color3i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3iv
.type glColor3iv,#function
glColor3iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3iv), %g2
	or	%g2, %lo(8 * _gloffset_Color3iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3s
.type glColor3s,#function
glColor3s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3s), %g2
	or	%g2, %lo(8 * _gloffset_Color3s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3sv
.type glColor3sv,#function
glColor3sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3sv), %g2
	or	%g2, %lo(8 * _gloffset_Color3sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3ub
.type glColor3ub,#function
glColor3ub:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3ub), %g2
	or	%g2, %lo(8 * _gloffset_Color3ub), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3ub)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3ubv
.type glColor3ubv,#function
glColor3ubv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3ubv), %g2
	or	%g2, %lo(8 * _gloffset_Color3ubv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3ubv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3ui
.type glColor3ui,#function
glColor3ui:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3ui), %g2
	or	%g2, %lo(8 * _gloffset_Color3ui), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3ui)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3uiv
.type glColor3uiv,#function
glColor3uiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3uiv), %g2
	or	%g2, %lo(8 * _gloffset_Color3uiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3uiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3us
.type glColor3us,#function
glColor3us:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3us), %g2
	or	%g2, %lo(8 * _gloffset_Color3us), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3us)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor3usv
.type glColor3usv,#function
glColor3usv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color3usv), %g2
	or	%g2, %lo(8 * _gloffset_Color3usv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color3usv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4b
.type glColor4b,#function
glColor4b:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4b), %g2
	or	%g2, %lo(8 * _gloffset_Color4b), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4b)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4bv
.type glColor4bv,#function
glColor4bv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4bv), %g2
	or	%g2, %lo(8 * _gloffset_Color4bv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4bv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4d
.type glColor4d,#function
glColor4d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4d), %g2
	or	%g2, %lo(8 * _gloffset_Color4d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4dv
.type glColor4dv,#function
glColor4dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4dv), %g2
	or	%g2, %lo(8 * _gloffset_Color4dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4f
.type glColor4f,#function
glColor4f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4f), %g2
	or	%g2, %lo(8 * _gloffset_Color4f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4fv
.type glColor4fv,#function
glColor4fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4fv), %g2
	or	%g2, %lo(8 * _gloffset_Color4fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4i
.type glColor4i,#function
glColor4i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4i), %g2
	or	%g2, %lo(8 * _gloffset_Color4i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4iv
.type glColor4iv,#function
glColor4iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4iv), %g2
	or	%g2, %lo(8 * _gloffset_Color4iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4s
.type glColor4s,#function
glColor4s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4s), %g2
	or	%g2, %lo(8 * _gloffset_Color4s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4sv
.type glColor4sv,#function
glColor4sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4sv), %g2
	or	%g2, %lo(8 * _gloffset_Color4sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4ub
.type glColor4ub,#function
glColor4ub:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4ub), %g2
	or	%g2, %lo(8 * _gloffset_Color4ub), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4ub)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4ubv
.type glColor4ubv,#function
glColor4ubv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4ubv), %g2
	or	%g2, %lo(8 * _gloffset_Color4ubv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4ubv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4ui
.type glColor4ui,#function
glColor4ui:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4ui), %g2
	or	%g2, %lo(8 * _gloffset_Color4ui), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4ui)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4uiv
.type glColor4uiv,#function
glColor4uiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4uiv), %g2
	or	%g2, %lo(8 * _gloffset_Color4uiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4uiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4us
.type glColor4us,#function
glColor4us:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4us), %g2
	or	%g2, %lo(8 * _gloffset_Color4us), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4us)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColor4usv
.type glColor4usv,#function
glColor4usv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Color4usv), %g2
	or	%g2, %lo(8 * _gloffset_Color4usv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Color4usv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEdgeFlag
.type glEdgeFlag,#function
glEdgeFlag:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EdgeFlag), %g2
	or	%g2, %lo(8 * _gloffset_EdgeFlag), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EdgeFlag)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEdgeFlagv
.type glEdgeFlagv,#function
glEdgeFlagv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EdgeFlagv), %g2
	or	%g2, %lo(8 * _gloffset_EdgeFlagv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EdgeFlagv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEnd
.type glEnd,#function
glEnd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_End), %g2
	or	%g2, %lo(8 * _gloffset_End), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_End)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexd
.type glIndexd,#function
glIndexd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexd), %g2
	or	%g2, %lo(8 * _gloffset_Indexd), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexd)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexdv
.type glIndexdv,#function
glIndexdv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexdv), %g2
	or	%g2, %lo(8 * _gloffset_Indexdv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexdv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexf
.type glIndexf,#function
glIndexf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexf), %g2
	or	%g2, %lo(8 * _gloffset_Indexf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexfv
.type glIndexfv,#function
glIndexfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexfv), %g2
	or	%g2, %lo(8 * _gloffset_Indexfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexi
.type glIndexi,#function
glIndexi:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexi), %g2
	or	%g2, %lo(8 * _gloffset_Indexi), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexi)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexiv
.type glIndexiv,#function
glIndexiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexiv), %g2
	or	%g2, %lo(8 * _gloffset_Indexiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexs
.type glIndexs,#function
glIndexs:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexs), %g2
	or	%g2, %lo(8 * _gloffset_Indexs), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexs)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexsv
.type glIndexsv,#function
glIndexsv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexsv), %g2
	or	%g2, %lo(8 * _gloffset_Indexsv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexsv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3b
.type glNormal3b,#function
glNormal3b:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3b), %g2
	or	%g2, %lo(8 * _gloffset_Normal3b), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3b)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3bv
.type glNormal3bv,#function
glNormal3bv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3bv), %g2
	or	%g2, %lo(8 * _gloffset_Normal3bv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3bv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3d
.type glNormal3d,#function
glNormal3d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3d), %g2
	or	%g2, %lo(8 * _gloffset_Normal3d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3dv
.type glNormal3dv,#function
glNormal3dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3dv), %g2
	or	%g2, %lo(8 * _gloffset_Normal3dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3f
.type glNormal3f,#function
glNormal3f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3f), %g2
	or	%g2, %lo(8 * _gloffset_Normal3f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3fv
.type glNormal3fv,#function
glNormal3fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3fv), %g2
	or	%g2, %lo(8 * _gloffset_Normal3fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3i
.type glNormal3i,#function
glNormal3i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3i), %g2
	or	%g2, %lo(8 * _gloffset_Normal3i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3iv
.type glNormal3iv,#function
glNormal3iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3iv), %g2
	or	%g2, %lo(8 * _gloffset_Normal3iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3s
.type glNormal3s,#function
glNormal3s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3s), %g2
	or	%g2, %lo(8 * _gloffset_Normal3s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormal3sv
.type glNormal3sv,#function
glNormal3sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Normal3sv), %g2
	or	%g2, %lo(8 * _gloffset_Normal3sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Normal3sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2d
.type glRasterPos2d,#function
glRasterPos2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2d), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2dv
.type glRasterPos2dv,#function
glRasterPos2dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2dv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2f
.type glRasterPos2f,#function
glRasterPos2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2f), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2fv
.type glRasterPos2fv,#function
glRasterPos2fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2fv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2i
.type glRasterPos2i,#function
glRasterPos2i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2i), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2iv
.type glRasterPos2iv,#function
glRasterPos2iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2iv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2s
.type glRasterPos2s,#function
glRasterPos2s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2s), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos2sv
.type glRasterPos2sv,#function
glRasterPos2sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos2sv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos2sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos2sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3d
.type glRasterPos3d,#function
glRasterPos3d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3d), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3dv
.type glRasterPos3dv,#function
glRasterPos3dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3dv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3f
.type glRasterPos3f,#function
glRasterPos3f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3f), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3fv
.type glRasterPos3fv,#function
glRasterPos3fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3fv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3i
.type glRasterPos3i,#function
glRasterPos3i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3i), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3iv
.type glRasterPos3iv,#function
glRasterPos3iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3iv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3s
.type glRasterPos3s,#function
glRasterPos3s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3s), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos3sv
.type glRasterPos3sv,#function
glRasterPos3sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos3sv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos3sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos3sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4d
.type glRasterPos4d,#function
glRasterPos4d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4d), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4dv
.type glRasterPos4dv,#function
glRasterPos4dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4dv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4f
.type glRasterPos4f,#function
glRasterPos4f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4f), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4fv
.type glRasterPos4fv,#function
glRasterPos4fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4fv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4i
.type glRasterPos4i,#function
glRasterPos4i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4i), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4iv
.type glRasterPos4iv,#function
glRasterPos4iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4iv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4s
.type glRasterPos4s,#function
glRasterPos4s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4s), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRasterPos4sv
.type glRasterPos4sv,#function
glRasterPos4sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RasterPos4sv), %g2
	or	%g2, %lo(8 * _gloffset_RasterPos4sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RasterPos4sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRectd
.type glRectd,#function
glRectd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rectd), %g2
	or	%g2, %lo(8 * _gloffset_Rectd), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rectd)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRectdv
.type glRectdv,#function
glRectdv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rectdv), %g2
	or	%g2, %lo(8 * _gloffset_Rectdv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rectdv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRectf
.type glRectf,#function
glRectf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rectf), %g2
	or	%g2, %lo(8 * _gloffset_Rectf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rectf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRectfv
.type glRectfv,#function
glRectfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rectfv), %g2
	or	%g2, %lo(8 * _gloffset_Rectfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rectfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRecti
.type glRecti,#function
glRecti:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Recti), %g2
	or	%g2, %lo(8 * _gloffset_Recti), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Recti)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRectiv
.type glRectiv,#function
glRectiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rectiv), %g2
	or	%g2, %lo(8 * _gloffset_Rectiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rectiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRects
.type glRects,#function
glRects:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rects), %g2
	or	%g2, %lo(8 * _gloffset_Rects), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rects)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRectsv
.type glRectsv,#function
glRectsv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rectsv), %g2
	or	%g2, %lo(8 * _gloffset_Rectsv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rectsv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1d
.type glTexCoord1d,#function
glTexCoord1d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1d), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1dv
.type glTexCoord1dv,#function
glTexCoord1dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1dv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1f
.type glTexCoord1f,#function
glTexCoord1f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1f), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1fv
.type glTexCoord1fv,#function
glTexCoord1fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1fv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1i
.type glTexCoord1i,#function
glTexCoord1i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1i), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1iv
.type glTexCoord1iv,#function
glTexCoord1iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1iv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1s
.type glTexCoord1s,#function
glTexCoord1s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1s), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord1sv
.type glTexCoord1sv,#function
glTexCoord1sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord1sv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord1sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord1sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2d
.type glTexCoord2d,#function
glTexCoord2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2d), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2dv
.type glTexCoord2dv,#function
glTexCoord2dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2dv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2f
.type glTexCoord2f,#function
glTexCoord2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2f), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2fv
.type glTexCoord2fv,#function
glTexCoord2fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2fv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2i
.type glTexCoord2i,#function
glTexCoord2i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2i), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2iv
.type glTexCoord2iv,#function
glTexCoord2iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2iv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2s
.type glTexCoord2s,#function
glTexCoord2s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2s), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord2sv
.type glTexCoord2sv,#function
glTexCoord2sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord2sv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord2sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord2sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3d
.type glTexCoord3d,#function
glTexCoord3d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3d), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3dv
.type glTexCoord3dv,#function
glTexCoord3dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3dv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3f
.type glTexCoord3f,#function
glTexCoord3f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3f), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3fv
.type glTexCoord3fv,#function
glTexCoord3fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3fv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3i
.type glTexCoord3i,#function
glTexCoord3i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3i), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3iv
.type glTexCoord3iv,#function
glTexCoord3iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3iv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3s
.type glTexCoord3s,#function
glTexCoord3s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3s), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord3sv
.type glTexCoord3sv,#function
glTexCoord3sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord3sv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord3sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord3sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4d
.type glTexCoord4d,#function
glTexCoord4d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4d), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4dv
.type glTexCoord4dv,#function
glTexCoord4dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4dv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4f
.type glTexCoord4f,#function
glTexCoord4f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4f), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4fv
.type glTexCoord4fv,#function
glTexCoord4fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4fv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4i
.type glTexCoord4i,#function
glTexCoord4i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4i), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4iv
.type glTexCoord4iv,#function
glTexCoord4iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4iv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4s
.type glTexCoord4s,#function
glTexCoord4s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4s), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoord4sv
.type glTexCoord4sv,#function
glTexCoord4sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoord4sv), %g2
	or	%g2, %lo(8 * _gloffset_TexCoord4sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoord4sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2d
.type glVertex2d,#function
glVertex2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2d), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2dv
.type glVertex2dv,#function
glVertex2dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2dv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2f
.type glVertex2f,#function
glVertex2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2f), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2fv
.type glVertex2fv,#function
glVertex2fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2fv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2i
.type glVertex2i,#function
glVertex2i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2i), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2iv
.type glVertex2iv,#function
glVertex2iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2iv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2s
.type glVertex2s,#function
glVertex2s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2s), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex2sv
.type glVertex2sv,#function
glVertex2sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex2sv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex2sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex2sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3d
.type glVertex3d,#function
glVertex3d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3d), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3dv
.type glVertex3dv,#function
glVertex3dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3dv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3f
.type glVertex3f,#function
glVertex3f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3f), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3fv
.type glVertex3fv,#function
glVertex3fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3fv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3i
.type glVertex3i,#function
glVertex3i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3i), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3iv
.type glVertex3iv,#function
glVertex3iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3iv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3s
.type glVertex3s,#function
glVertex3s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3s), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex3sv
.type glVertex3sv,#function
glVertex3sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex3sv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex3sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex3sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4d
.type glVertex4d,#function
glVertex4d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4d), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4dv
.type glVertex4dv,#function
glVertex4dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4dv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4f
.type glVertex4f,#function
glVertex4f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4f), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4fv
.type glVertex4fv,#function
glVertex4fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4fv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4i
.type glVertex4i,#function
glVertex4i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4i), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4i), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4i)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4iv
.type glVertex4iv,#function
glVertex4iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4iv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4iv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4iv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4s
.type glVertex4s,#function
glVertex4s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4s), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4s), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4s)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertex4sv
.type glVertex4sv,#function
glVertex4sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Vertex4sv), %g2
	or	%g2, %lo(8 * _gloffset_Vertex4sv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Vertex4sv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClipPlane
.type glClipPlane,#function
glClipPlane:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClipPlane), %g2
	or	%g2, %lo(8 * _gloffset_ClipPlane), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClipPlane)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorMaterial
.type glColorMaterial,#function
glColorMaterial:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorMaterial), %g2
	or	%g2, %lo(8 * _gloffset_ColorMaterial), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorMaterial)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullFace
.type glCullFace,#function
glCullFace:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullFace), %g2
	or	%g2, %lo(8 * _gloffset_CullFace), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullFace)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogf
.type glFogf,#function
glFogf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Fogf), %g2
	or	%g2, %lo(8 * _gloffset_Fogf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Fogf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogfv
.type glFogfv,#function
glFogfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Fogfv), %g2
	or	%g2, %lo(8 * _gloffset_Fogfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Fogfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogi
.type glFogi,#function
glFogi:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Fogi), %g2
	or	%g2, %lo(8 * _gloffset_Fogi), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Fogi)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogiv
.type glFogiv,#function
glFogiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Fogiv), %g2
	or	%g2, %lo(8 * _gloffset_Fogiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Fogiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFrontFace
.type glFrontFace,#function
glFrontFace:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FrontFace), %g2
	or	%g2, %lo(8 * _gloffset_FrontFace), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FrontFace)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glHint
.type glHint,#function
glHint:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Hint), %g2
	or	%g2, %lo(8 * _gloffset_Hint), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Hint)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightf
.type glLightf,#function
glLightf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Lightf), %g2
	or	%g2, %lo(8 * _gloffset_Lightf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Lightf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightfv
.type glLightfv,#function
glLightfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Lightfv), %g2
	or	%g2, %lo(8 * _gloffset_Lightfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Lightfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLighti
.type glLighti,#function
glLighti:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Lighti), %g2
	or	%g2, %lo(8 * _gloffset_Lighti), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Lighti)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightiv
.type glLightiv,#function
glLightiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Lightiv), %g2
	or	%g2, %lo(8 * _gloffset_Lightiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Lightiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightModelf
.type glLightModelf,#function
glLightModelf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightModelf), %g2
	or	%g2, %lo(8 * _gloffset_LightModelf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightModelf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightModelfv
.type glLightModelfv,#function
glLightModelfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightModelfv), %g2
	or	%g2, %lo(8 * _gloffset_LightModelfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightModelfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightModeli
.type glLightModeli,#function
glLightModeli:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightModeli), %g2
	or	%g2, %lo(8 * _gloffset_LightModeli), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightModeli)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightModeliv
.type glLightModeliv,#function
glLightModeliv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightModeliv), %g2
	or	%g2, %lo(8 * _gloffset_LightModeliv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightModeliv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLineStipple
.type glLineStipple,#function
glLineStipple:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LineStipple), %g2
	or	%g2, %lo(8 * _gloffset_LineStipple), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LineStipple)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLineWidth
.type glLineWidth,#function
glLineWidth:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LineWidth), %g2
	or	%g2, %lo(8 * _gloffset_LineWidth), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LineWidth)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMaterialf
.type glMaterialf,#function
glMaterialf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Materialf), %g2
	or	%g2, %lo(8 * _gloffset_Materialf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Materialf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMaterialfv
.type glMaterialfv,#function
glMaterialfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Materialfv), %g2
	or	%g2, %lo(8 * _gloffset_Materialfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Materialfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMateriali
.type glMateriali,#function
glMateriali:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Materiali), %g2
	or	%g2, %lo(8 * _gloffset_Materiali), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Materiali)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMaterialiv
.type glMaterialiv,#function
glMaterialiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Materialiv), %g2
	or	%g2, %lo(8 * _gloffset_Materialiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Materialiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointSize
.type glPointSize,#function
glPointSize:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointSize), %g2
	or	%g2, %lo(8 * _gloffset_PointSize), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointSize)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPolygonMode
.type glPolygonMode,#function
glPolygonMode:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PolygonMode), %g2
	or	%g2, %lo(8 * _gloffset_PolygonMode), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PolygonMode)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPolygonStipple
.type glPolygonStipple,#function
glPolygonStipple:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PolygonStipple), %g2
	or	%g2, %lo(8 * _gloffset_PolygonStipple), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PolygonStipple)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glScissor
.type glScissor,#function
glScissor:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Scissor), %g2
	or	%g2, %lo(8 * _gloffset_Scissor), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Scissor)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glShadeModel
.type glShadeModel,#function
glShadeModel:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ShadeModel), %g2
	or	%g2, %lo(8 * _gloffset_ShadeModel), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ShadeModel)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexParameterf
.type glTexParameterf,#function
glTexParameterf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexParameterf), %g2
	or	%g2, %lo(8 * _gloffset_TexParameterf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexParameterf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexParameterfv
.type glTexParameterfv,#function
glTexParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_TexParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexParameteri
.type glTexParameteri,#function
glTexParameteri:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexParameteri), %g2
	or	%g2, %lo(8 * _gloffset_TexParameteri), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexParameteri)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexParameteriv
.type glTexParameteriv,#function
glTexParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_TexParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexImage1D
.type glTexImage1D,#function
glTexImage1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexImage1D), %g2
	or	%g2, %lo(8 * _gloffset_TexImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexImage2D
.type glTexImage2D,#function
glTexImage2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexImage2D), %g2
	or	%g2, %lo(8 * _gloffset_TexImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexEnvf
.type glTexEnvf,#function
glTexEnvf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexEnvf), %g2
	or	%g2, %lo(8 * _gloffset_TexEnvf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexEnvf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexEnvfv
.type glTexEnvfv,#function
glTexEnvfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexEnvfv), %g2
	or	%g2, %lo(8 * _gloffset_TexEnvfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexEnvfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexEnvi
.type glTexEnvi,#function
glTexEnvi:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexEnvi), %g2
	or	%g2, %lo(8 * _gloffset_TexEnvi), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexEnvi)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexEnviv
.type glTexEnviv,#function
glTexEnviv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexEnviv), %g2
	or	%g2, %lo(8 * _gloffset_TexEnviv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexEnviv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexGend
.type glTexGend,#function
glTexGend:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexGend), %g2
	or	%g2, %lo(8 * _gloffset_TexGend), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexGend)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexGendv
.type glTexGendv,#function
glTexGendv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexGendv), %g2
	or	%g2, %lo(8 * _gloffset_TexGendv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexGendv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexGenf
.type glTexGenf,#function
glTexGenf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexGenf), %g2
	or	%g2, %lo(8 * _gloffset_TexGenf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexGenf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexGenfv
.type glTexGenfv,#function
glTexGenfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexGenfv), %g2
	or	%g2, %lo(8 * _gloffset_TexGenfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexGenfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexGeni
.type glTexGeni,#function
glTexGeni:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexGeni), %g2
	or	%g2, %lo(8 * _gloffset_TexGeni), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexGeni)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexGeniv
.type glTexGeniv,#function
glTexGeniv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexGeniv), %g2
	or	%g2, %lo(8 * _gloffset_TexGeniv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexGeniv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFeedbackBuffer
.type glFeedbackBuffer,#function
glFeedbackBuffer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FeedbackBuffer), %g2
	or	%g2, %lo(8 * _gloffset_FeedbackBuffer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FeedbackBuffer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSelectBuffer
.type glSelectBuffer,#function
glSelectBuffer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SelectBuffer), %g2
	or	%g2, %lo(8 * _gloffset_SelectBuffer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SelectBuffer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRenderMode
.type glRenderMode,#function
glRenderMode:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_RenderMode), %g2
	or	%g2, %lo(8 * _gloffset_RenderMode), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_RenderMode)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glInitNames
.type glInitNames,#function
glInitNames:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_InitNames), %g2
	or	%g2, %lo(8 * _gloffset_InitNames), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_InitNames)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadName
.type glLoadName,#function
glLoadName:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadName), %g2
	or	%g2, %lo(8 * _gloffset_LoadName), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadName)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPassThrough
.type glPassThrough,#function
glPassThrough:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PassThrough), %g2
	or	%g2, %lo(8 * _gloffset_PassThrough), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PassThrough)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPopName
.type glPopName,#function
glPopName:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PopName), %g2
	or	%g2, %lo(8 * _gloffset_PopName), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PopName)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPushName
.type glPushName,#function
glPushName:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PushName), %g2
	or	%g2, %lo(8 * _gloffset_PushName), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PushName)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawBuffer
.type glDrawBuffer,#function
glDrawBuffer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawBuffer), %g2
	or	%g2, %lo(8 * _gloffset_DrawBuffer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawBuffer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClear
.type glClear,#function
glClear:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Clear), %g2
	or	%g2, %lo(8 * _gloffset_Clear), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Clear)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClearAccum
.type glClearAccum,#function
glClearAccum:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClearAccum), %g2
	or	%g2, %lo(8 * _gloffset_ClearAccum), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClearAccum)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClearIndex
.type glClearIndex,#function
glClearIndex:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClearIndex), %g2
	or	%g2, %lo(8 * _gloffset_ClearIndex), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClearIndex)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClearColor
.type glClearColor,#function
glClearColor:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClearColor), %g2
	or	%g2, %lo(8 * _gloffset_ClearColor), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClearColor)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClearStencil
.type glClearStencil,#function
glClearStencil:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClearStencil), %g2
	or	%g2, %lo(8 * _gloffset_ClearStencil), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClearStencil)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClearDepth
.type glClearDepth,#function
glClearDepth:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClearDepth), %g2
	or	%g2, %lo(8 * _gloffset_ClearDepth), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClearDepth)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStencilMask
.type glStencilMask,#function
glStencilMask:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StencilMask), %g2
	or	%g2, %lo(8 * _gloffset_StencilMask), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StencilMask)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorMask
.type glColorMask,#function
glColorMask:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorMask), %g2
	or	%g2, %lo(8 * _gloffset_ColorMask), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorMask)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDepthMask
.type glDepthMask,#function
glDepthMask:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DepthMask), %g2
	or	%g2, %lo(8 * _gloffset_DepthMask), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DepthMask)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexMask
.type glIndexMask,#function
glIndexMask:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexMask), %g2
	or	%g2, %lo(8 * _gloffset_IndexMask), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexMask)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glAccum
.type glAccum,#function
glAccum:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Accum), %g2
	or	%g2, %lo(8 * _gloffset_Accum), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Accum)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDisable
.type glDisable,#function
glDisable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Disable), %g2
	or	%g2, %lo(8 * _gloffset_Disable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Disable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEnable
.type glEnable,#function
glEnable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Enable), %g2
	or	%g2, %lo(8 * _gloffset_Enable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Enable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFinish
.type glFinish,#function
glFinish:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Finish), %g2
	or	%g2, %lo(8 * _gloffset_Finish), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Finish)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlush
.type glFlush,#function
glFlush:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Flush), %g2
	or	%g2, %lo(8 * _gloffset_Flush), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Flush)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPopAttrib
.type glPopAttrib,#function
glPopAttrib:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PopAttrib), %g2
	or	%g2, %lo(8 * _gloffset_PopAttrib), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PopAttrib)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPushAttrib
.type glPushAttrib,#function
glPushAttrib:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PushAttrib), %g2
	or	%g2, %lo(8 * _gloffset_PushAttrib), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PushAttrib)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMap1d
.type glMap1d,#function
glMap1d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Map1d), %g2
	or	%g2, %lo(8 * _gloffset_Map1d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Map1d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMap1f
.type glMap1f,#function
glMap1f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Map1f), %g2
	or	%g2, %lo(8 * _gloffset_Map1f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Map1f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMap2d
.type glMap2d,#function
glMap2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Map2d), %g2
	or	%g2, %lo(8 * _gloffset_Map2d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Map2d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMap2f
.type glMap2f,#function
glMap2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Map2f), %g2
	or	%g2, %lo(8 * _gloffset_Map2f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Map2f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMapGrid1d
.type glMapGrid1d,#function
glMapGrid1d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MapGrid1d), %g2
	or	%g2, %lo(8 * _gloffset_MapGrid1d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MapGrid1d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMapGrid1f
.type glMapGrid1f,#function
glMapGrid1f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MapGrid1f), %g2
	or	%g2, %lo(8 * _gloffset_MapGrid1f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MapGrid1f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMapGrid2d
.type glMapGrid2d,#function
glMapGrid2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MapGrid2d), %g2
	or	%g2, %lo(8 * _gloffset_MapGrid2d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MapGrid2d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMapGrid2f
.type glMapGrid2f,#function
glMapGrid2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MapGrid2f), %g2
	or	%g2, %lo(8 * _gloffset_MapGrid2f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MapGrid2f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord1d
.type glEvalCoord1d,#function
glEvalCoord1d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord1d), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord1d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord1d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord1dv
.type glEvalCoord1dv,#function
glEvalCoord1dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord1dv), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord1dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord1dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord1f
.type glEvalCoord1f,#function
glEvalCoord1f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord1f), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord1f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord1f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord1fv
.type glEvalCoord1fv,#function
glEvalCoord1fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord1fv), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord1fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord1fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord2d
.type glEvalCoord2d,#function
glEvalCoord2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord2d), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord2d), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord2d)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord2dv
.type glEvalCoord2dv,#function
glEvalCoord2dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord2dv), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord2dv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord2dv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord2f
.type glEvalCoord2f,#function
glEvalCoord2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord2f), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord2f), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord2f)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalCoord2fv
.type glEvalCoord2fv,#function
glEvalCoord2fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalCoord2fv), %g2
	or	%g2, %lo(8 * _gloffset_EvalCoord2fv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalCoord2fv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalMesh1
.type glEvalMesh1,#function
glEvalMesh1:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalMesh1), %g2
	or	%g2, %lo(8 * _gloffset_EvalMesh1), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalMesh1)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalPoint1
.type glEvalPoint1,#function
glEvalPoint1:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalPoint1), %g2
	or	%g2, %lo(8 * _gloffset_EvalPoint1), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalPoint1)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalMesh2
.type glEvalMesh2,#function
glEvalMesh2:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalMesh2), %g2
	or	%g2, %lo(8 * _gloffset_EvalMesh2), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalMesh2)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEvalPoint2
.type glEvalPoint2,#function
glEvalPoint2:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EvalPoint2), %g2
	or	%g2, %lo(8 * _gloffset_EvalPoint2), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EvalPoint2)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glAlphaFunc
.type glAlphaFunc,#function
glAlphaFunc:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_AlphaFunc), %g2
	or	%g2, %lo(8 * _gloffset_AlphaFunc), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_AlphaFunc)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFunc
.type glBlendFunc,#function
glBlendFunc:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFunc), %g2
	or	%g2, %lo(8 * _gloffset_BlendFunc), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFunc)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLogicOp
.type glLogicOp,#function
glLogicOp:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LogicOp), %g2
	or	%g2, %lo(8 * _gloffset_LogicOp), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LogicOp)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStencilFunc
.type glStencilFunc,#function
glStencilFunc:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StencilFunc), %g2
	or	%g2, %lo(8 * _gloffset_StencilFunc), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StencilFunc)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStencilOp
.type glStencilOp,#function
glStencilOp:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StencilOp), %g2
	or	%g2, %lo(8 * _gloffset_StencilOp), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StencilOp)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDepthFunc
.type glDepthFunc,#function
glDepthFunc:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DepthFunc), %g2
	or	%g2, %lo(8 * _gloffset_DepthFunc), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DepthFunc)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelZoom
.type glPixelZoom,#function
glPixelZoom:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelZoom), %g2
	or	%g2, %lo(8 * _gloffset_PixelZoom), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelZoom)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTransferf
.type glPixelTransferf,#function
glPixelTransferf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTransferf), %g2
	or	%g2, %lo(8 * _gloffset_PixelTransferf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTransferf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTransferi
.type glPixelTransferi,#function
glPixelTransferi:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTransferi), %g2
	or	%g2, %lo(8 * _gloffset_PixelTransferi), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTransferi)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelStoref
.type glPixelStoref,#function
glPixelStoref:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelStoref), %g2
	or	%g2, %lo(8 * _gloffset_PixelStoref), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelStoref)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelStorei
.type glPixelStorei,#function
glPixelStorei:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelStorei), %g2
	or	%g2, %lo(8 * _gloffset_PixelStorei), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelStorei)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelMapfv
.type glPixelMapfv,#function
glPixelMapfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelMapfv), %g2
	or	%g2, %lo(8 * _gloffset_PixelMapfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelMapfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelMapuiv
.type glPixelMapuiv,#function
glPixelMapuiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelMapuiv), %g2
	or	%g2, %lo(8 * _gloffset_PixelMapuiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelMapuiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelMapusv
.type glPixelMapusv,#function
glPixelMapusv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelMapusv), %g2
	or	%g2, %lo(8 * _gloffset_PixelMapusv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelMapusv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReadBuffer
.type glReadBuffer,#function
glReadBuffer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReadBuffer), %g2
	or	%g2, %lo(8 * _gloffset_ReadBuffer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReadBuffer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyPixels
.type glCopyPixels,#function
glCopyPixels:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyPixels), %g2
	or	%g2, %lo(8 * _gloffset_CopyPixels), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyPixels)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReadPixels
.type glReadPixels,#function
glReadPixels:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReadPixels), %g2
	or	%g2, %lo(8 * _gloffset_ReadPixels), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReadPixels)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawPixels
.type glDrawPixels,#function
glDrawPixels:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawPixels), %g2
	or	%g2, %lo(8 * _gloffset_DrawPixels), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawPixels)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetBooleanv
.type glGetBooleanv,#function
glGetBooleanv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetBooleanv), %g2
	or	%g2, %lo(8 * _gloffset_GetBooleanv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetBooleanv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetClipPlane
.type glGetClipPlane,#function
glGetClipPlane:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetClipPlane), %g2
	or	%g2, %lo(8 * _gloffset_GetClipPlane), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetClipPlane)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetDoublev
.type glGetDoublev,#function
glGetDoublev:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetDoublev), %g2
	or	%g2, %lo(8 * _gloffset_GetDoublev), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetDoublev)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetError
.type glGetError,#function
glGetError:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetError), %g2
	or	%g2, %lo(8 * _gloffset_GetError), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetError)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFloatv
.type glGetFloatv,#function
glGetFloatv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFloatv), %g2
	or	%g2, %lo(8 * _gloffset_GetFloatv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFloatv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetIntegerv
.type glGetIntegerv,#function
glGetIntegerv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetIntegerv), %g2
	or	%g2, %lo(8 * _gloffset_GetIntegerv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetIntegerv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetLightfv
.type glGetLightfv,#function
glGetLightfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetLightfv), %g2
	or	%g2, %lo(8 * _gloffset_GetLightfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetLightfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetLightiv
.type glGetLightiv,#function
glGetLightiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetLightiv), %g2
	or	%g2, %lo(8 * _gloffset_GetLightiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetLightiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMapdv
.type glGetMapdv,#function
glGetMapdv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMapdv), %g2
	or	%g2, %lo(8 * _gloffset_GetMapdv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMapdv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMapfv
.type glGetMapfv,#function
glGetMapfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMapfv), %g2
	or	%g2, %lo(8 * _gloffset_GetMapfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMapfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMapiv
.type glGetMapiv,#function
glGetMapiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMapiv), %g2
	or	%g2, %lo(8 * _gloffset_GetMapiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMapiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMaterialfv
.type glGetMaterialfv,#function
glGetMaterialfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMaterialfv), %g2
	or	%g2, %lo(8 * _gloffset_GetMaterialfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMaterialfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMaterialiv
.type glGetMaterialiv,#function
glGetMaterialiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMaterialiv), %g2
	or	%g2, %lo(8 * _gloffset_GetMaterialiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMaterialiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPixelMapfv
.type glGetPixelMapfv,#function
glGetPixelMapfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPixelMapfv), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelMapfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPixelMapfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPixelMapuiv
.type glGetPixelMapuiv,#function
glGetPixelMapuiv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPixelMapuiv), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelMapuiv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPixelMapuiv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPixelMapusv
.type glGetPixelMapusv,#function
glGetPixelMapusv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPixelMapusv), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelMapusv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPixelMapusv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPolygonStipple
.type glGetPolygonStipple,#function
glGetPolygonStipple:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPolygonStipple), %g2
	or	%g2, %lo(8 * _gloffset_GetPolygonStipple), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPolygonStipple)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetString
.type glGetString,#function
glGetString:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetString), %g2
	or	%g2, %lo(8 * _gloffset_GetString), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetString)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexEnvfv
.type glGetTexEnvfv,#function
glGetTexEnvfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexEnvfv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexEnvfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexEnvfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexEnviv
.type glGetTexEnviv,#function
glGetTexEnviv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexEnviv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexEnviv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexEnviv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexGendv
.type glGetTexGendv,#function
glGetTexGendv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexGendv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexGendv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexGendv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexGenfv
.type glGetTexGenfv,#function
glGetTexGenfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexGenfv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexGenfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexGenfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexGeniv
.type glGetTexGeniv,#function
glGetTexGeniv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexGeniv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexGeniv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexGeniv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexImage
.type glGetTexImage,#function
glGetTexImage:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexImage), %g2
	or	%g2, %lo(8 * _gloffset_GetTexImage), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexImage)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexParameterfv
.type glGetTexParameterfv,#function
glGetTexParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexParameteriv
.type glGetTexParameteriv,#function
glGetTexParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexLevelParameterfv
.type glGetTexLevelParameterfv,#function
glGetTexLevelParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexLevelParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexLevelParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexLevelParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexLevelParameteriv
.type glGetTexLevelParameteriv,#function
glGetTexLevelParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexLevelParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_GetTexLevelParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexLevelParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIsEnabled
.type glIsEnabled,#function
glIsEnabled:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IsEnabled), %g2
	or	%g2, %lo(8 * _gloffset_IsEnabled), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IsEnabled)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIsList
.type glIsList,#function
glIsList:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IsList), %g2
	or	%g2, %lo(8 * _gloffset_IsList), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IsList)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDepthRange
.type glDepthRange,#function
glDepthRange:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DepthRange), %g2
	or	%g2, %lo(8 * _gloffset_DepthRange), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DepthRange)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFrustum
.type glFrustum,#function
glFrustum:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Frustum), %g2
	or	%g2, %lo(8 * _gloffset_Frustum), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Frustum)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadIdentity
.type glLoadIdentity,#function
glLoadIdentity:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadIdentity), %g2
	or	%g2, %lo(8 * _gloffset_LoadIdentity), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadIdentity)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadMatrixf
.type glLoadMatrixf,#function
glLoadMatrixf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadMatrixf), %g2
	or	%g2, %lo(8 * _gloffset_LoadMatrixf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadMatrixf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadMatrixd
.type glLoadMatrixd,#function
glLoadMatrixd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadMatrixd), %g2
	or	%g2, %lo(8 * _gloffset_LoadMatrixd), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadMatrixd)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMatrixMode
.type glMatrixMode,#function
glMatrixMode:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MatrixMode), %g2
	or	%g2, %lo(8 * _gloffset_MatrixMode), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MatrixMode)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultMatrixf
.type glMultMatrixf,#function
glMultMatrixf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultMatrixf), %g2
	or	%g2, %lo(8 * _gloffset_MultMatrixf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultMatrixf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultMatrixd
.type glMultMatrixd,#function
glMultMatrixd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultMatrixd), %g2
	or	%g2, %lo(8 * _gloffset_MultMatrixd), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultMatrixd)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glOrtho
.type glOrtho,#function
glOrtho:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Ortho), %g2
	or	%g2, %lo(8 * _gloffset_Ortho), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Ortho)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPopMatrix
.type glPopMatrix,#function
glPopMatrix:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PopMatrix), %g2
	or	%g2, %lo(8 * _gloffset_PopMatrix), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PopMatrix)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPushMatrix
.type glPushMatrix,#function
glPushMatrix:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PushMatrix), %g2
	or	%g2, %lo(8 * _gloffset_PushMatrix), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PushMatrix)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRotated
.type glRotated,#function
glRotated:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rotated), %g2
	or	%g2, %lo(8 * _gloffset_Rotated), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rotated)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glRotatef
.type glRotatef,#function
glRotatef:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Rotatef), %g2
	or	%g2, %lo(8 * _gloffset_Rotatef), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Rotatef)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glScaled
.type glScaled,#function
glScaled:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Scaled), %g2
	or	%g2, %lo(8 * _gloffset_Scaled), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Scaled)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glScalef
.type glScalef,#function
glScalef:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Scalef), %g2
	or	%g2, %lo(8 * _gloffset_Scalef), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Scalef)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTranslated
.type glTranslated,#function
glTranslated:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Translated), %g2
	or	%g2, %lo(8 * _gloffset_Translated), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Translated)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTranslatef
.type glTranslatef,#function
glTranslatef:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Translatef), %g2
	or	%g2, %lo(8 * _gloffset_Translatef), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Translatef)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glViewport
.type glViewport,#function
glViewport:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Viewport), %g2
	or	%g2, %lo(8 * _gloffset_Viewport), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Viewport)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glArrayElement
.type glArrayElement,#function
glArrayElement:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ArrayElement), %g2
	or	%g2, %lo(8 * _gloffset_ArrayElement), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ArrayElement)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorPointer
.type glColorPointer,#function
glColorPointer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorPointer), %g2
	or	%g2, %lo(8 * _gloffset_ColorPointer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorPointer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDisableClientState
.type glDisableClientState,#function
glDisableClientState:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DisableClientState), %g2
	or	%g2, %lo(8 * _gloffset_DisableClientState), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DisableClientState)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawArrays
.type glDrawArrays,#function
glDrawArrays:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawArrays), %g2
	or	%g2, %lo(8 * _gloffset_DrawArrays), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawArrays)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawElements
.type glDrawElements,#function
glDrawElements:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawElements), %g2
	or	%g2, %lo(8 * _gloffset_DrawElements), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawElements)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEdgeFlagPointer
.type glEdgeFlagPointer,#function
glEdgeFlagPointer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EdgeFlagPointer), %g2
	or	%g2, %lo(8 * _gloffset_EdgeFlagPointer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EdgeFlagPointer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEnableClientState
.type glEnableClientState,#function
glEnableClientState:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EnableClientState), %g2
	or	%g2, %lo(8 * _gloffset_EnableClientState), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EnableClientState)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPointerv
.type glGetPointerv,#function
glGetPointerv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPointerv), %g2
	or	%g2, %lo(8 * _gloffset_GetPointerv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPointerv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexPointer
.type glIndexPointer,#function
glIndexPointer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexPointer), %g2
	or	%g2, %lo(8 * _gloffset_IndexPointer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexPointer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glInterleavedArrays
.type glInterleavedArrays,#function
glInterleavedArrays:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_InterleavedArrays), %g2
	or	%g2, %lo(8 * _gloffset_InterleavedArrays), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_InterleavedArrays)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormalPointer
.type glNormalPointer,#function
glNormalPointer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_NormalPointer), %g2
	or	%g2, %lo(8 * _gloffset_NormalPointer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_NormalPointer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoordPointer
.type glTexCoordPointer,#function
glTexCoordPointer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoordPointer), %g2
	or	%g2, %lo(8 * _gloffset_TexCoordPointer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoordPointer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexPointer
.type glVertexPointer,#function
glVertexPointer:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexPointer), %g2
	or	%g2, %lo(8 * _gloffset_VertexPointer), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexPointer)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPolygonOffset
.type glPolygonOffset,#function
glPolygonOffset:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PolygonOffset), %g2
	or	%g2, %lo(8 * _gloffset_PolygonOffset), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PolygonOffset)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexImage1D
.type glCopyTexImage1D,#function
glCopyTexImage1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexImage2D
.type glCopyTexImage2D,#function
glCopyTexImage2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexSubImage1D
.type glCopyTexSubImage1D,#function
glCopyTexSubImage1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexSubImage2D
.type glCopyTexSubImage2D,#function
glCopyTexSubImage2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage1D
.type glTexSubImage1D,#function
glTexSubImage1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage2D
.type glTexSubImage2D,#function
glTexSubImage2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glAreTexturesResident
.type glAreTexturesResident,#function
glAreTexturesResident:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_AreTexturesResident), %g2
	or	%g2, %lo(8 * _gloffset_AreTexturesResident), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_AreTexturesResident)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBindTexture
.type glBindTexture,#function
glBindTexture:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BindTexture), %g2
	or	%g2, %lo(8 * _gloffset_BindTexture), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BindTexture)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDeleteTextures
.type glDeleteTextures,#function
glDeleteTextures:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DeleteTextures), %g2
	or	%g2, %lo(8 * _gloffset_DeleteTextures), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DeleteTextures)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGenTextures
.type glGenTextures,#function
glGenTextures:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GenTextures), %g2
	or	%g2, %lo(8 * _gloffset_GenTextures), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GenTextures)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIsTexture
.type glIsTexture,#function
glIsTexture:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IsTexture), %g2
	or	%g2, %lo(8 * _gloffset_IsTexture), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IsTexture)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPrioritizeTextures
.type glPrioritizeTextures,#function
glPrioritizeTextures:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PrioritizeTextures), %g2
	or	%g2, %lo(8 * _gloffset_PrioritizeTextures), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PrioritizeTextures)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexub
.type glIndexub,#function
glIndexub:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexub), %g2
	or	%g2, %lo(8 * _gloffset_Indexub), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexub)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexubv
.type glIndexubv,#function
glIndexubv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Indexubv), %g2
	or	%g2, %lo(8 * _gloffset_Indexubv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Indexubv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPopClientAttrib
.type glPopClientAttrib,#function
glPopClientAttrib:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PopClientAttrib), %g2
	or	%g2, %lo(8 * _gloffset_PopClientAttrib), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PopClientAttrib)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPushClientAttrib
.type glPushClientAttrib,#function
glPushClientAttrib:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PushClientAttrib), %g2
	or	%g2, %lo(8 * _gloffset_PushClientAttrib), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PushClientAttrib)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendColor
.type glBlendColor,#function
glBlendColor:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendColor), %g2
	or	%g2, %lo(8 * _gloffset_BlendColor), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendColor)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendEquation
.type glBlendEquation,#function
glBlendEquation:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendEquation), %g2
	or	%g2, %lo(8 * _gloffset_BlendEquation), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendEquation)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawRangeElements
.type glDrawRangeElements,#function
glDrawRangeElements:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawRangeElements), %g2
	or	%g2, %lo(8 * _gloffset_DrawRangeElements), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawRangeElements)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTable
.type glColorTable,#function
glColorTable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableParameterfv
.type glColorTableParameterfv,#function
glColorTableParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTableParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTableParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableParameteriv
.type glColorTableParameteriv,#function
glColorTableParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTableParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTableParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyColorTable
.type glCopyColorTable,#function
glCopyColorTable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyColorTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTable
.type glGetColorTable,#function
glGetColorTable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTable), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterfv
.type glGetColorTableParameterfv,#function
glGetColorTableParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameteriv
.type glGetColorTableParameteriv,#function
glGetColorTableParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorSubTable
.type glColorSubTable,#function
glColorSubTable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyColorSubTable
.type glCopyColorSubTable,#function
glCopyColorSubTable:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionFilter1D
.type glConvolutionFilter1D,#function
glConvolutionFilter1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionFilter2D
.type glConvolutionFilter2D,#function
glConvolutionFilter2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameterf
.type glConvolutionParameterf,#function
glConvolutionParameterf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameterf), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameterfv
.type glConvolutionParameterfv,#function
glConvolutionParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameteri
.type glConvolutionParameteri,#function
glConvolutionParameteri:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameteri), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteri), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteri)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameteriv
.type glConvolutionParameteriv,#function
glConvolutionParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyConvolutionFilter1D
.type glCopyConvolutionFilter1D,#function
glCopyConvolutionFilter1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyConvolutionFilter2D
.type glCopyConvolutionFilter2D,#function
glCopyConvolutionFilter2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetConvolutionFilter
.type glGetConvolutionFilter,#function
glGetConvolutionFilter:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetConvolutionFilter), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionFilter), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetConvolutionFilter)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetConvolutionParameterfv
.type glGetConvolutionParameterfv,#function
glGetConvolutionParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetConvolutionParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetConvolutionParameteriv
.type glGetConvolutionParameteriv,#function
glGetConvolutionParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetConvolutionParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetSeparableFilter
.type glGetSeparableFilter,#function
glGetSeparableFilter:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetSeparableFilter), %g2
	or	%g2, %lo(8 * _gloffset_GetSeparableFilter), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetSeparableFilter)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSeparableFilter2D
.type glSeparableFilter2D,#function
glSeparableFilter2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SeparableFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_SeparableFilter2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SeparableFilter2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetHistogram
.type glGetHistogram,#function
glGetHistogram:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetHistogram), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogram), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetHistogram)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetHistogramParameterfv
.type glGetHistogramParameterfv,#function
glGetHistogramParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetHistogramParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetHistogramParameteriv
.type glGetHistogramParameteriv,#function
glGetHistogramParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetHistogramParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMinmax
.type glGetMinmax,#function
glGetMinmax:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMinmax), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmax), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMinmax)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMinmaxParameterfv
.type glGetMinmaxParameterfv,#function
glGetMinmaxParameterfv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMinmaxParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMinmaxParameteriv
.type glGetMinmaxParameteriv,#function
glGetMinmaxParameteriv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMinmaxParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glHistogram
.type glHistogram,#function
glHistogram:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Histogram), %g2
	or	%g2, %lo(8 * _gloffset_Histogram), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Histogram)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMinmax
.type glMinmax,#function
glMinmax:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Minmax), %g2
	or	%g2, %lo(8 * _gloffset_Minmax), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Minmax)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResetHistogram
.type glResetHistogram,#function
glResetHistogram:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResetHistogram), %g2
	or	%g2, %lo(8 * _gloffset_ResetHistogram), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResetHistogram)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResetMinmax
.type glResetMinmax,#function
glResetMinmax:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResetMinmax), %g2
	or	%g2, %lo(8 * _gloffset_ResetMinmax), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResetMinmax)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexImage3D
.type glTexImage3D,#function
glTexImage3D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexImage3D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexImage3D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage3D
.type glTexSubImage3D,#function
glTexSubImage3D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage3D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage3D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexSubImage3D
.type glCopyTexSubImage3D,#function
glCopyTexSubImage3D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage3D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage3D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glActiveTextureARB
.type glActiveTextureARB,#function
glActiveTextureARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ActiveTextureARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ActiveTextureARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClientActiveTextureARB
.type glClientActiveTextureARB,#function
glClientActiveTextureARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClientActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ClientActiveTextureARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClientActiveTextureARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1dARB
.type glMultiTexCoord1dARB,#function
glMultiTexCoord1dARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1dvARB
.type glMultiTexCoord1dvARB,#function
glMultiTexCoord1dvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1fARB
.type glMultiTexCoord1fARB,#function
glMultiTexCoord1fARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1fvARB
.type glMultiTexCoord1fvARB,#function
glMultiTexCoord1fvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1iARB
.type glMultiTexCoord1iARB,#function
glMultiTexCoord1iARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1ivARB
.type glMultiTexCoord1ivARB,#function
glMultiTexCoord1ivARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1sARB
.type glMultiTexCoord1sARB,#function
glMultiTexCoord1sARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1svARB
.type glMultiTexCoord1svARB,#function
glMultiTexCoord1svARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2dARB
.type glMultiTexCoord2dARB,#function
glMultiTexCoord2dARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2dvARB
.type glMultiTexCoord2dvARB,#function
glMultiTexCoord2dvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2fARB
.type glMultiTexCoord2fARB,#function
glMultiTexCoord2fARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2fvARB
.type glMultiTexCoord2fvARB,#function
glMultiTexCoord2fvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2iARB
.type glMultiTexCoord2iARB,#function
glMultiTexCoord2iARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2ivARB
.type glMultiTexCoord2ivARB,#function
glMultiTexCoord2ivARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2sARB
.type glMultiTexCoord2sARB,#function
glMultiTexCoord2sARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2svARB
.type glMultiTexCoord2svARB,#function
glMultiTexCoord2svARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3dARB
.type glMultiTexCoord3dARB,#function
glMultiTexCoord3dARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3dvARB
.type glMultiTexCoord3dvARB,#function
glMultiTexCoord3dvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3fARB
.type glMultiTexCoord3fARB,#function
glMultiTexCoord3fARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3fvARB
.type glMultiTexCoord3fvARB,#function
glMultiTexCoord3fvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3iARB
.type glMultiTexCoord3iARB,#function
glMultiTexCoord3iARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3ivARB
.type glMultiTexCoord3ivARB,#function
glMultiTexCoord3ivARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3sARB
.type glMultiTexCoord3sARB,#function
glMultiTexCoord3sARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3svARB
.type glMultiTexCoord3svARB,#function
glMultiTexCoord3svARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4dARB
.type glMultiTexCoord4dARB,#function
glMultiTexCoord4dARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4dvARB
.type glMultiTexCoord4dvARB,#function
glMultiTexCoord4dvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4fARB
.type glMultiTexCoord4fARB,#function
glMultiTexCoord4fARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4fvARB
.type glMultiTexCoord4fvARB,#function
glMultiTexCoord4fvARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4iARB
.type glMultiTexCoord4iARB,#function
glMultiTexCoord4iARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4ivARB
.type glMultiTexCoord4ivARB,#function
glMultiTexCoord4ivARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4sARB
.type glMultiTexCoord4sARB,#function
glMultiTexCoord4sARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4svARB
.type glMultiTexCoord4svARB,#function
glMultiTexCoord4svARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadTransposeMatrixfARB
.type glLoadTransposeMatrixfARB,#function
glLoadTransposeMatrixfARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixfARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixfARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadTransposeMatrixdARB
.type glLoadTransposeMatrixdARB,#function
glLoadTransposeMatrixdARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixdARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixdARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultTransposeMatrixfARB
.type glMultTransposeMatrixfARB,#function
glMultTransposeMatrixfARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixfARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixfARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultTransposeMatrixdARB
.type glMultTransposeMatrixdARB,#function
glMultTransposeMatrixdARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixdARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixdARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSampleCoverageARB
.type glSampleCoverageARB,#function
glSampleCoverageARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SampleCoverageARB), %g2
	or	%g2, %lo(8 * _gloffset_SampleCoverageARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SampleCoverageARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexImage3DARB
.type glCompressedTexImage3DARB,#function
glCompressedTexImage3DARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage3DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage3DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexImage2DARB
.type glCompressedTexImage2DARB,#function
glCompressedTexImage2DARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage2DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage2DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexImage1DARB
.type glCompressedTexImage1DARB,#function
glCompressedTexImage1DARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage1DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage1DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexSubImage3DARB
.type glCompressedTexSubImage3DARB,#function
glCompressedTexSubImage3DARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexSubImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage3DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage3DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexSubImage2DARB
.type glCompressedTexSubImage2DARB,#function
glCompressedTexSubImage2DARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexSubImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage2DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage2DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexSubImage1DARB
.type glCompressedTexSubImage1DARB,#function
glCompressedTexSubImage1DARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexSubImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage1DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage1DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCompressedTexImageARB
.type glGetCompressedTexImageARB,#function
glGetCompressedTexImageARB:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCompressedTexImageARB), %g2
	or	%g2, %lo(8 * _gloffset_GetCompressedTexImageARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCompressedTexImageARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendColorEXT
.type glBlendColorEXT,#function
glBlendColorEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendColor), %g2
	or	%g2, %lo(8 * _gloffset_BlendColor), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendColor)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPolygonOffsetEXT
.type glPolygonOffsetEXT,#function
glPolygonOffsetEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PolygonOffsetEXT), %g2
	or	%g2, %lo(8 * _gloffset_PolygonOffsetEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PolygonOffsetEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexImage3DEXT
.type glTexImage3DEXT,#function
glTexImage3DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexImage3D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexImage3D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage3DEXT
.type glTexSubImage3DEXT,#function
glTexSubImage3DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage3D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage3D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetTexFilterFuncSGIS
.type glGetTexFilterFuncSGIS,#function
glGetTexFilterFuncSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetTexFilterFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetTexFilterFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetTexFilterFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexFilterFuncSGIS
.type glTexFilterFuncSGIS,#function
glTexFilterFuncSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexFilterFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexFilterFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexFilterFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage1DEXT
.type glTexSubImage1DEXT,#function
glTexSubImage1DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage2DEXT
.type glTexSubImage2DEXT,#function
glTexSubImage2DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexImage1DEXT
.type glCopyTexImage1DEXT,#function
glCopyTexImage1DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexImage2DEXT
.type glCopyTexImage2DEXT,#function
glCopyTexImage2DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexSubImage1DEXT
.type glCopyTexSubImage1DEXT,#function
glCopyTexSubImage1DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexSubImage2DEXT
.type glCopyTexSubImage2DEXT,#function
glCopyTexSubImage2DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyTexSubImage3DEXT
.type glCopyTexSubImage3DEXT,#function
glCopyTexSubImage3DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyTexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage3D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage3D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetHistogramEXT
.type glGetHistogramEXT,#function
glGetHistogramEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetHistogramEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetHistogramEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetHistogramParameterfvEXT
.type glGetHistogramParameterfvEXT,#function
glGetHistogramParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetHistogramParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetHistogramParameterivEXT
.type glGetHistogramParameterivEXT,#function
glGetHistogramParameterivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetHistogramParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMinmaxEXT
.type glGetMinmaxEXT,#function
glGetMinmaxEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMinmaxEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMinmaxEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMinmaxParameterfvEXT
.type glGetMinmaxParameterfvEXT,#function
glGetMinmaxParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMinmaxParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetMinmaxParameterivEXT
.type glGetMinmaxParameterivEXT,#function
glGetMinmaxParameterivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetMinmaxParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glHistogramEXT
.type glHistogramEXT,#function
glHistogramEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Histogram), %g2
	or	%g2, %lo(8 * _gloffset_Histogram), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Histogram)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMinmaxEXT
.type glMinmaxEXT,#function
glMinmaxEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_Minmax), %g2
	or	%g2, %lo(8 * _gloffset_Minmax), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_Minmax)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResetHistogramEXT
.type glResetHistogramEXT,#function
glResetHistogramEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResetHistogram), %g2
	or	%g2, %lo(8 * _gloffset_ResetHistogram), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResetHistogram)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResetMinmaxEXT
.type glResetMinmaxEXT,#function
glResetMinmaxEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResetMinmax), %g2
	or	%g2, %lo(8 * _gloffset_ResetMinmax), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResetMinmax)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionFilter1DEXT
.type glConvolutionFilter1DEXT,#function
glConvolutionFilter1DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionFilter2DEXT
.type glConvolutionFilter2DEXT,#function
glConvolutionFilter2DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameterfEXT
.type glConvolutionParameterfEXT,#function
glConvolutionParameterfEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameterf), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterf), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterf)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameterfvEXT
.type glConvolutionParameterfvEXT,#function
glConvolutionParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameteriEXT
.type glConvolutionParameteriEXT,#function
glConvolutionParameteriEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameteri), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteri), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteri)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glConvolutionParameterivEXT
.type glConvolutionParameterivEXT,#function
glConvolutionParameterivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ConvolutionParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyConvolutionFilter1DEXT
.type glCopyConvolutionFilter1DEXT,#function
glCopyConvolutionFilter1DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter1D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter1D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyConvolutionFilter2DEXT
.type glCopyConvolutionFilter2DEXT,#function
glCopyConvolutionFilter2DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetConvolutionFilterEXT
.type glGetConvolutionFilterEXT,#function
glGetConvolutionFilterEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetConvolutionFilterEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionFilterEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetConvolutionFilterEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetConvolutionParameterfvEXT
.type glGetConvolutionParameterfvEXT,#function
glGetConvolutionParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetConvolutionParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetConvolutionParameterivEXT
.type glGetConvolutionParameterivEXT,#function
glGetConvolutionParameterivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetConvolutionParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetSeparableFilterEXT
.type glGetSeparableFilterEXT,#function
glGetSeparableFilterEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetSeparableFilterEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetSeparableFilterEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetSeparableFilterEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSeparableFilter2DEXT
.type glSeparableFilter2DEXT,#function
glSeparableFilter2DEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SeparableFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_SeparableFilter2D), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SeparableFilter2D)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableSGI
.type glColorTableSGI,#function
glColorTableSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableParameterfvSGI
.type glColorTableParameterfvSGI,#function
glColorTableParameterfvSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTableParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameterfv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTableParameterfv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableParameterivSGI
.type glColorTableParameterivSGI,#function
glColorTableParameterivSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTableParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameteriv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTableParameteriv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyColorTableSGI
.type glCopyColorTableSGI,#function
glCopyColorTableSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyColorTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableSGI
.type glGetColorTableSGI,#function
glGetColorTableSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableSGI), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableSGI)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterfvSGI
.type glGetColorTableParameterfvSGI,#function
glGetColorTableParameterfvSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterfvSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfvSGI), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfvSGI)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterivSGI
.type glGetColorTableParameterivSGI,#function
glGetColorTableParameterivSGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterivSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterivSGI), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterivSGI)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTexGenSGIX
.type glPixelTexGenSGIX,#function
glPixelTexGenSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTexGenSGIX), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTexGenSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTexGenParameteriSGIS
.type glPixelTexGenParameteriSGIS,#function
glPixelTexGenParameteriSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTexGenParameteriSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameteriSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameteriSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTexGenParameterivSGIS
.type glPixelTexGenParameterivSGIS,#function
glPixelTexGenParameterivSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTexGenParameterivSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterivSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterivSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTexGenParameterfSGIS
.type glPixelTexGenParameterfSGIS,#function
glPixelTexGenParameterfSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTexGenParameterfSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterfSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterfSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPixelTexGenParameterfvSGIS
.type glPixelTexGenParameterfvSGIS,#function
glPixelTexGenParameterfvSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PixelTexGenParameterfvSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterfvSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterfvSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPixelTexGenParameterivSGIS
.type glGetPixelTexGenParameterivSGIS,#function
glGetPixelTexGenParameterivSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPixelTexGenParameterivSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelTexGenParameterivSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPixelTexGenParameterivSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPixelTexGenParameterfvSGIS
.type glGetPixelTexGenParameterfvSGIS,#function
glGetPixelTexGenParameterfvSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPixelTexGenParameterfvSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelTexGenParameterfvSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPixelTexGenParameterfvSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexImage4DSGIS
.type glTexImage4DSGIS,#function
glTexImage4DSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexImage4DSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexImage4DSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexImage4DSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexSubImage4DSGIS
.type glTexSubImage4DSGIS,#function
glTexSubImage4DSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexSubImage4DSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage4DSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexSubImage4DSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glAreTexturesResidentEXT
.type glAreTexturesResidentEXT,#function
glAreTexturesResidentEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_AreTexturesResidentEXT), %g2
	or	%g2, %lo(8 * _gloffset_AreTexturesResidentEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_AreTexturesResidentEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBindTextureEXT
.type glBindTextureEXT,#function
glBindTextureEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BindTexture), %g2
	or	%g2, %lo(8 * _gloffset_BindTexture), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BindTexture)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDeleteTexturesEXT
.type glDeleteTexturesEXT,#function
glDeleteTexturesEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DeleteTextures), %g2
	or	%g2, %lo(8 * _gloffset_DeleteTextures), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DeleteTextures)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGenTexturesEXT
.type glGenTexturesEXT,#function
glGenTexturesEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GenTexturesEXT), %g2
	or	%g2, %lo(8 * _gloffset_GenTexturesEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GenTexturesEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIsTextureEXT
.type glIsTextureEXT,#function
glIsTextureEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IsTextureEXT), %g2
	or	%g2, %lo(8 * _gloffset_IsTextureEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IsTextureEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPrioritizeTexturesEXT
.type glPrioritizeTexturesEXT,#function
glPrioritizeTexturesEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PrioritizeTextures), %g2
	or	%g2, %lo(8 * _gloffset_PrioritizeTextures), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PrioritizeTextures)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDetailTexFuncSGIS
.type glDetailTexFuncSGIS,#function
glDetailTexFuncSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DetailTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_DetailTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DetailTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetDetailTexFuncSGIS
.type glGetDetailTexFuncSGIS,#function
glGetDetailTexFuncSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetDetailTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetDetailTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetDetailTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSharpenTexFuncSGIS
.type glSharpenTexFuncSGIS,#function
glSharpenTexFuncSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SharpenTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SharpenTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SharpenTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetSharpenTexFuncSGIS
.type glGetSharpenTexFuncSGIS,#function
glGetSharpenTexFuncSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetSharpenTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetSharpenTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetSharpenTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glArrayElementEXT
.type glArrayElementEXT,#function
glArrayElementEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ArrayElement), %g2
	or	%g2, %lo(8 * _gloffset_ArrayElement), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ArrayElement)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorPointerEXT
.type glColorPointerEXT,#function
glColorPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_ColorPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawArraysEXT
.type glDrawArraysEXT,#function
glDrawArraysEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawArrays), %g2
	or	%g2, %lo(8 * _gloffset_DrawArrays), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawArrays)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEdgeFlagPointerEXT
.type glEdgeFlagPointerEXT,#function
glEdgeFlagPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EdgeFlagPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_EdgeFlagPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EdgeFlagPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPointervEXT
.type glGetPointervEXT,#function
glGetPointervEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPointerv), %g2
	or	%g2, %lo(8 * _gloffset_GetPointerv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPointerv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexPointerEXT
.type glIndexPointerEXT,#function
glIndexPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormalPointerEXT
.type glNormalPointerEXT,#function
glNormalPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_NormalPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_NormalPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_NormalPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoordPointerEXT
.type glTexCoordPointerEXT,#function
glTexCoordPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_TexCoordPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoordPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexPointerEXT
.type glVertexPointerEXT,#function
glVertexPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendEquationEXT
.type glBlendEquationEXT,#function
glBlendEquationEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendEquation), %g2
	or	%g2, %lo(8 * _gloffset_BlendEquation), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendEquation)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterfSGIX
.type glSpriteParameterfSGIX,#function
glSpriteParameterfSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterfvSGIX
.type glSpriteParameterfvSGIX,#function
glSpriteParameterfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameteriSGIX
.type glSpriteParameteriSGIX,#function
glSpriteParameteriSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameteriSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameteriSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameteriSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterivSGIX
.type glSpriteParameterivSGIX,#function
glSpriteParameterivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfEXT
.type glPointParameterfEXT,#function
glPointParameterfEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvEXT
.type glPointParameterfvEXT,#function
glPointParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfSGIS
.type glPointParameterfSGIS,#function
glPointParameterfSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvSGIS
.type glPointParameterfvSGIS,#function
glPointParameterfvSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetInstrumentsSGIX
.type glGetInstrumentsSGIX,#function
glGetInstrumentsSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glInstrumentsBufferSGIX
.type glInstrumentsBufferSGIX,#function
glInstrumentsBufferSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_InstrumentsBufferSGIX), %g2
	or	%g2, %lo(8 * _gloffset_InstrumentsBufferSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_InstrumentsBufferSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPollInstrumentsSGIX
.type glPollInstrumentsSGIX,#function
glPollInstrumentsSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PollInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_PollInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PollInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReadInstrumentsSGIX
.type glReadInstrumentsSGIX,#function
glReadInstrumentsSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReadInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ReadInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReadInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStartInstrumentsSGIX
.type glStartInstrumentsSGIX,#function
glStartInstrumentsSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StartInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_StartInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StartInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStopInstrumentsSGIX
.type glStopInstrumentsSGIX,#function
glStopInstrumentsSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StopInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_StopInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StopInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFrameZoomSGIX
.type glFrameZoomSGIX,#function
glFrameZoomSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FrameZoomSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FrameZoomSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FrameZoomSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTagSampleBufferSGIX
.type glTagSampleBufferSGIX,#function
glTagSampleBufferSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TagSampleBufferSGIX), %g2
	or	%g2, %lo(8 * _gloffset_TagSampleBufferSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TagSampleBufferSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReferencePlaneSGIX
.type glReferencePlaneSGIX,#function
glReferencePlaneSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReferencePlaneSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ReferencePlaneSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReferencePlaneSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlushRasterSGIX
.type glFlushRasterSGIX,#function
glFlushRasterSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FlushRasterSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FlushRasterSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FlushRasterSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorSubTableEXT
.type glColorSubTableEXT,#function
glColorSubTableEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyColorSubTableEXT
.type glCopyColorSubTableEXT,#function
glCopyColorSubTableEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glHintPGI
.type glHintPGI,#function
glHintPGI:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_HintPGI), %g2
	or	%g2, %lo(8 * _gloffset_HintPGI), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_HintPGI)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableEXT
.type glColorTableEXT,#function
glColorTableEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableEXT
.type glGetColorTableEXT,#function
glGetColorTableEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterivEXT
.type glGetColorTableParameterivEXT,#function
glGetColorTableParameterivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterfvEXT
.type glGetColorTableParameterfvEXT,#function
glGetColorTableParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetListParameterfvSGIX
.type glGetListParameterfvSGIX,#function
glGetListParameterfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetListParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetListParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetListParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetListParameterivSGIX
.type glGetListParameterivSGIX,#function
glGetListParameterivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetListParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetListParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetListParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterfSGIX
.type glListParameterfSGIX,#function
glListParameterfSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterfvSGIX
.type glListParameterfvSGIX,#function
glListParameterfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameteriSGIX
.type glListParameteriSGIX,#function
glListParameteriSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameteriSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameteriSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameteriSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterivSGIX
.type glListParameterivSGIX,#function
glListParameterivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexMaterialEXT
.type glIndexMaterialEXT,#function
glIndexMaterialEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexMaterialEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexMaterialEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexMaterialEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexFuncEXT
.type glIndexFuncEXT,#function
glIndexFuncEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexFuncEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexFuncEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexFuncEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLockArraysEXT
.type glLockArraysEXT,#function
glLockArraysEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LockArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_LockArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LockArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glUnlockArraysEXT
.type glUnlockArraysEXT,#function
glUnlockArraysEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_UnlockArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_UnlockArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_UnlockArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullParameterdvEXT
.type glCullParameterdvEXT,#function
glCullParameterdvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullParameterdvEXT), %g2
	or	%g2, %lo(8 * _gloffset_CullParameterdvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullParameterdvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullParameterfvEXT
.type glCullParameterfvEXT,#function
glCullParameterfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_CullParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentColorMaterialSGIX
.type glFragmentColorMaterialSGIX,#function
glFragmentColorMaterialSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentColorMaterialSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentColorMaterialSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentColorMaterialSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightfSGIX
.type glFragmentLightfSGIX,#function
glFragmentLightfSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightfvSGIX
.type glFragmentLightfvSGIX,#function
glFragmentLightfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightiSGIX
.type glFragmentLightiSGIX,#function
glFragmentLightiSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightiSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightiSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightiSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightivSGIX
.type glFragmentLightivSGIX,#function
glFragmentLightivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelfSGIX
.type glFragmentLightModelfSGIX,#function
glFragmentLightModelfSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelfvSGIX
.type glFragmentLightModelfvSGIX,#function
glFragmentLightModelfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModeliSGIX
.type glFragmentLightModeliSGIX,#function
glFragmentLightModeliSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModeliSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModeliSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModeliSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelivSGIX
.type glFragmentLightModelivSGIX,#function
glFragmentLightModelivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialfSGIX
.type glFragmentMaterialfSGIX,#function
glFragmentMaterialfSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialfvSGIX
.type glFragmentMaterialfvSGIX,#function
glFragmentMaterialfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialiSGIX
.type glFragmentMaterialiSGIX,#function
glFragmentMaterialiSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialiSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialiSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialiSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialivSGIX
.type glFragmentMaterialivSGIX,#function
glFragmentMaterialivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentLightfvSGIX
.type glGetFragmentLightfvSGIX,#function
glGetFragmentLightfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentLightfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentLightfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentLightfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentLightivSGIX
.type glGetFragmentLightivSGIX,#function
glGetFragmentLightivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentLightivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentLightivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentLightivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentMaterialfvSGIX
.type glGetFragmentMaterialfvSGIX,#function
glGetFragmentMaterialfvSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentMaterialfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentMaterialfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentMaterialfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentMaterialivSGIX
.type glGetFragmentMaterialivSGIX,#function
glGetFragmentMaterialivSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentMaterialivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentMaterialivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentMaterialivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightEnviSGIX
.type glLightEnviSGIX,#function
glLightEnviSGIX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightEnviSGIX), %g2
	or	%g2, %lo(8 * _gloffset_LightEnviSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightEnviSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawRangeElementsEXT
.type glDrawRangeElementsEXT,#function
glDrawRangeElementsEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawRangeElements), %g2
	or	%g2, %lo(8 * _gloffset_DrawRangeElements), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawRangeElements)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3bEXT
.type glSecondaryColor3bEXT,#function
glSecondaryColor3bEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3bEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3bvEXT
.type glSecondaryColor3bvEXT,#function
glSecondaryColor3bvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3bvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3dEXT
.type glSecondaryColor3dEXT,#function
glSecondaryColor3dEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3dEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3dvEXT
.type glSecondaryColor3dvEXT,#function
glSecondaryColor3dvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3dvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3fEXT
.type glSecondaryColor3fEXT,#function
glSecondaryColor3fEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3fEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3fvEXT
.type glSecondaryColor3fvEXT,#function
glSecondaryColor3fvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3fvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3iEXT
.type glSecondaryColor3iEXT,#function
glSecondaryColor3iEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3iEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3iEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3iEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ivEXT
.type glSecondaryColor3ivEXT,#function
glSecondaryColor3ivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3sEXT
.type glSecondaryColor3sEXT,#function
glSecondaryColor3sEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3sEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3sEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3sEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3svEXT
.type glSecondaryColor3svEXT,#function
glSecondaryColor3svEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3svEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3svEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3svEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ubEXT
.type glSecondaryColor3ubEXT,#function
glSecondaryColor3ubEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ubEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ubvEXT
.type glSecondaryColor3ubvEXT,#function
glSecondaryColor3ubvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3uiEXT
.type glSecondaryColor3uiEXT,#function
glSecondaryColor3uiEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3uiEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uiEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uiEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3uivEXT
.type glSecondaryColor3uivEXT,#function
glSecondaryColor3uivEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3uivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3usEXT
.type glSecondaryColor3usEXT,#function
glSecondaryColor3usEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3usEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3usvEXT
.type glSecondaryColor3usvEXT,#function
glSecondaryColor3usvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3usvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColorPointerEXT
.type glSecondaryColorPointerEXT,#function
glSecondaryColorPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColorPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColorPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordfEXT
.type glFogCoordfEXT,#function
glFogCoordfEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordfEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordfvEXT
.type glFogCoordfvEXT,#function
glFogCoordfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoorddEXT
.type glFogCoorddEXT,#function
glFogCoorddEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoorddEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoorddEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoorddvEXT
.type glFogCoorddvEXT,#function
glFogCoorddvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoorddvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoorddvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordPointerEXT
.type glFogCoordPointerEXT,#function
glFogCoordPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFuncSeparateEXT
.type glBlendFuncSeparateEXT,#function
glBlendFuncSeparateEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFuncSeparateINGR
.type glBlendFuncSeparateINGR,#function
glBlendFuncSeparateINGR:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightfEXT
.type glVertexWeightfEXT,#function
glVertexWeightfEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightfEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightfvEXT
.type glVertexWeightfvEXT,#function
glVertexWeightfvEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightPointerEXT
.type glVertexWeightPointerEXT,#function
glVertexWeightPointerEXT:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlushVertexArrayRangeNV
.type glFlushVertexArrayRangeNV,#function
glFlushVertexArrayRangeNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FlushVertexArrayRangeNV), %g2
	or	%g2, %lo(8 * _gloffset_FlushVertexArrayRangeNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FlushVertexArrayRangeNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexArrayRangeNV
.type glVertexArrayRangeNV,#function
glVertexArrayRangeNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexArrayRangeNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexArrayRangeNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexArrayRangeNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterfvNV
.type glCombinerParameterfvNV,#function
glCombinerParameterfvNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterfNV
.type glCombinerParameterfNV,#function
glCombinerParameterfNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterfNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterfNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterfNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterivNV
.type glCombinerParameterivNV,#function
glCombinerParameterivNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameteriNV
.type glCombinerParameteriNV,#function
glCombinerParameteriNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameteriNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameteriNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerInputNV
.type glCombinerInputNV,#function
glCombinerInputNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerInputNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerInputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerInputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerOutputNV
.type glCombinerOutputNV,#function
glCombinerOutputNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerOutputNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerOutputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerOutputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFinalCombinerInputNV
.type glFinalCombinerInputNV,#function
glFinalCombinerInputNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FinalCombinerInputNV), %g2
	or	%g2, %lo(8 * _gloffset_FinalCombinerInputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FinalCombinerInputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerInputParameterfvNV
.type glGetCombinerInputParameterfvNV,#function
glGetCombinerInputParameterfvNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerInputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerInputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerInputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerInputParameterivNV
.type glGetCombinerInputParameterivNV,#function
glGetCombinerInputParameterivNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerInputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerInputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerInputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerOutputParameterfvNV
.type glGetCombinerOutputParameterfvNV,#function
glGetCombinerOutputParameterfvNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerOutputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerOutputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerOutputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerOutputParameterivNV
.type glGetCombinerOutputParameterivNV,#function
glGetCombinerOutputParameterivNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerOutputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerOutputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerOutputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFinalCombinerInputParameterfvNV
.type glGetFinalCombinerInputParameterfvNV,#function
glGetFinalCombinerInputParameterfvNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFinalCombinerInputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFinalCombinerInputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFinalCombinerInputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFinalCombinerInputParameterivNV
.type glGetFinalCombinerInputParameterivNV,#function
glGetFinalCombinerInputParameterivNV:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFinalCombinerInputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFinalCombinerInputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFinalCombinerInputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResizeBuffersMESA
.type glResizeBuffersMESA,#function
glResizeBuffersMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResizeBuffersMESA), %g2
	or	%g2, %lo(8 * _gloffset_ResizeBuffersMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResizeBuffersMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2dMESA
.type glWindowPos2dMESA,#function
glWindowPos2dMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2dvMESA
.type glWindowPos2dvMESA,#function
glWindowPos2dvMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2fMESA
.type glWindowPos2fMESA,#function
glWindowPos2fMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2fvMESA
.type glWindowPos2fvMESA,#function
glWindowPos2fvMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2iMESA
.type glWindowPos2iMESA,#function
glWindowPos2iMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2ivMESA
.type glWindowPos2ivMESA,#function
glWindowPos2ivMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2sMESA
.type glWindowPos2sMESA,#function
glWindowPos2sMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2svMESA
.type glWindowPos2svMESA,#function
glWindowPos2svMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3dMESA
.type glWindowPos3dMESA,#function
glWindowPos3dMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3dvMESA
.type glWindowPos3dvMESA,#function
glWindowPos3dvMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3fMESA
.type glWindowPos3fMESA,#function
glWindowPos3fMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3fvMESA
.type glWindowPos3fvMESA,#function
glWindowPos3fvMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3iMESA
.type glWindowPos3iMESA,#function
glWindowPos3iMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3ivMESA
.type glWindowPos3ivMESA,#function
glWindowPos3ivMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3sMESA
.type glWindowPos3sMESA,#function
glWindowPos3sMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3svMESA
.type glWindowPos3svMESA,#function
glWindowPos3svMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4dMESA
.type glWindowPos4dMESA,#function
glWindowPos4dMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4dvMESA
.type glWindowPos4dvMESA,#function
glWindowPos4dvMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4fMESA
.type glWindowPos4fMESA,#function
glWindowPos4fMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4fvMESA
.type glWindowPos4fvMESA,#function
glWindowPos4fvMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4iMESA
.type glWindowPos4iMESA,#function
glWindowPos4iMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4ivMESA
.type glWindowPos4ivMESA,#function
glWindowPos4ivMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4sMESA
.type glWindowPos4sMESA,#function
glWindowPos4sMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4svMESA
.type glWindowPos4svMESA,#function
glWindowPos4svMESA:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTbufferMask3DFX
.type glTbufferMask3DFX,#function
glTbufferMask3DFX:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TbufferMask3DFX), %g2
	or	%g2, %lo(8 * _gloffset_TbufferMask3DFX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TbufferMask3DFX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSampleMaskSGIS
.type glSampleMaskSGIS,#function
glSampleMaskSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SampleMaskSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SampleMaskSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SampleMaskSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSamplePatternSGIS
.type glSamplePatternSGIS,#function
glSamplePatternSGIS:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SamplePatternSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SamplePatternSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SamplePatternSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glActiveTexture
.type glActiveTexture,#function
glActiveTexture:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ActiveTextureARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ActiveTextureARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glClientActiveTexture
.type glClientActiveTexture,#function
glClientActiveTexture:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ClientActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ClientActiveTextureARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ClientActiveTextureARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexImage1D
.type glCompressedTexImage1D,#function
glCompressedTexImage1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage1DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage1DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexImage2D
.type glCompressedTexImage2D,#function
glCompressedTexImage2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage2DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage2DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexImage3D
.type glCompressedTexImage3D,#function
glCompressedTexImage3D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage3DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage3DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexSubImage1D
.type glCompressedTexSubImage1D,#function
glCompressedTexSubImage1D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexSubImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage1DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage1DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexSubImage2D
.type glCompressedTexSubImage2D,#function
glCompressedTexSubImage2D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexSubImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage2DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage2DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCompressedTexSubImage3D
.type glCompressedTexSubImage3D,#function
glCompressedTexSubImage3D:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CompressedTexSubImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage3DARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage3DARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCompressedTexImage
.type glGetCompressedTexImage,#function
glGetCompressedTexImage:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCompressedTexImageARB), %g2
	or	%g2, %lo(8 * _gloffset_GetCompressedTexImageARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCompressedTexImageARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1d
.type glMultiTexCoord1d,#function
glMultiTexCoord1d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1dv
.type glMultiTexCoord1dv,#function
glMultiTexCoord1dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1f
.type glMultiTexCoord1f,#function
glMultiTexCoord1f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1fv
.type glMultiTexCoord1fv,#function
glMultiTexCoord1fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1i
.type glMultiTexCoord1i,#function
glMultiTexCoord1i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1iv
.type glMultiTexCoord1iv,#function
glMultiTexCoord1iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1s
.type glMultiTexCoord1s,#function
glMultiTexCoord1s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord1sv
.type glMultiTexCoord1sv,#function
glMultiTexCoord1sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord1svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2d
.type glMultiTexCoord2d,#function
glMultiTexCoord2d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2dv
.type glMultiTexCoord2dv,#function
glMultiTexCoord2dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2f
.type glMultiTexCoord2f,#function
glMultiTexCoord2f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2fv
.type glMultiTexCoord2fv,#function
glMultiTexCoord2fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2i
.type glMultiTexCoord2i,#function
glMultiTexCoord2i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2iv
.type glMultiTexCoord2iv,#function
glMultiTexCoord2iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2s
.type glMultiTexCoord2s,#function
glMultiTexCoord2s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord2sv
.type glMultiTexCoord2sv,#function
glMultiTexCoord2sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord2svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3d
.type glMultiTexCoord3d,#function
glMultiTexCoord3d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3dv
.type glMultiTexCoord3dv,#function
glMultiTexCoord3dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3f
.type glMultiTexCoord3f,#function
glMultiTexCoord3f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3fv
.type glMultiTexCoord3fv,#function
glMultiTexCoord3fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3i
.type glMultiTexCoord3i,#function
glMultiTexCoord3i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3iv
.type glMultiTexCoord3iv,#function
glMultiTexCoord3iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3s
.type glMultiTexCoord3s,#function
glMultiTexCoord3s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord3sv
.type glMultiTexCoord3sv,#function
glMultiTexCoord3sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord3svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4d
.type glMultiTexCoord4d,#function
glMultiTexCoord4d:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4dv
.type glMultiTexCoord4dv,#function
glMultiTexCoord4dv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4f
.type glMultiTexCoord4f,#function
glMultiTexCoord4f:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4fv
.type glMultiTexCoord4fv,#function
glMultiTexCoord4fv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fvARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fvARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4i
.type glMultiTexCoord4i,#function
glMultiTexCoord4i:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4iARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4iARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4iv
.type glMultiTexCoord4iv,#function
glMultiTexCoord4iv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4ivARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4ivARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4s
.type glMultiTexCoord4s,#function
glMultiTexCoord4s:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4sARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4sARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiTexCoord4sv
.type glMultiTexCoord4sv,#function
glMultiTexCoord4sv:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiTexCoord4svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4svARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4svARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadTransposeMatrixd
.type glLoadTransposeMatrixd,#function
glLoadTransposeMatrixd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixdARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixdARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLoadTransposeMatrixf
.type glLoadTransposeMatrixf,#function
glLoadTransposeMatrixf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixfARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixfARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultTransposeMatrixd
.type glMultTransposeMatrixd,#function
glMultTransposeMatrixd:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixdARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixdARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultTransposeMatrixf
.type glMultTransposeMatrixf,#function
glMultTransposeMatrixf:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixfARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixfARB)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSampleCoverage
.type glSampleCoverage,#function
glSampleCoverage:
#ifdef __sparc_v9__
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SampleCoverageARB), %g2
	or	%g2, %lo(8 * _gloffset_SampleCoverageARB), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SampleCoverageARB)], %g3
#endif
	jmpl	%g3, %g0
	nop


.globl _mesa_sparc_glapi_end
.type _mesa_sparc_glapi_end,#function
_mesa_sparc_glapi_end:

@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d1 4
a4 1
/* $XFree86: xc/extras/Mesa/src/SPARC/glapi_sparc.S,v 1.3 2003/12/02 20:27:34 dawes Exp $ */
a5 2
/* DO NOT EDIT - This file generated automatically with glsparcasm.py script */
#include "../glapioffsets.h"
a11 5
#if defined(__sparc_v9__) && !defined(__linux__)
#define SPARC_64BIT_ADDR
#endif


d30 1
a30 1
#ifdef SPARC_64BIT_ADDR
d51 1
a51 1
#ifdef SPARC_64BIT_ADDR
d72 1
a72 1
#ifdef SPARC_64BIT_ADDR
d93 1
a93 1
#ifdef SPARC_64BIT_ADDR
d114 1
a114 1
#ifdef SPARC_64BIT_ADDR
d135 1
a135 1
#ifdef SPARC_64BIT_ADDR
d156 1
a156 1
#ifdef SPARC_64BIT_ADDR
d177 1
a177 1
#ifdef SPARC_64BIT_ADDR
d198 1
a198 1
#ifdef SPARC_64BIT_ADDR
d219 1
a219 1
#ifdef SPARC_64BIT_ADDR
d240 1
a240 1
#ifdef SPARC_64BIT_ADDR
d261 1
a261 1
#ifdef SPARC_64BIT_ADDR
d282 1
a282 1
#ifdef SPARC_64BIT_ADDR
d303 1
a303 1
#ifdef SPARC_64BIT_ADDR
d324 1
a324 1
#ifdef SPARC_64BIT_ADDR
d345 1
a345 1
#ifdef SPARC_64BIT_ADDR
d366 1
a366 1
#ifdef SPARC_64BIT_ADDR
d387 1
a387 1
#ifdef SPARC_64BIT_ADDR
d408 1
a408 1
#ifdef SPARC_64BIT_ADDR
d429 1
a429 1
#ifdef SPARC_64BIT_ADDR
d450 1
a450 1
#ifdef SPARC_64BIT_ADDR
d471 1
a471 1
#ifdef SPARC_64BIT_ADDR
d492 1
a492 1
#ifdef SPARC_64BIT_ADDR
d513 1
a513 1
#ifdef SPARC_64BIT_ADDR
d534 1
a534 1
#ifdef SPARC_64BIT_ADDR
d555 1
a555 1
#ifdef SPARC_64BIT_ADDR
d576 1
a576 1
#ifdef SPARC_64BIT_ADDR
d597 1
a597 1
#ifdef SPARC_64BIT_ADDR
d618 1
a618 1
#ifdef SPARC_64BIT_ADDR
d639 1
a639 1
#ifdef SPARC_64BIT_ADDR
d660 1
a660 1
#ifdef SPARC_64BIT_ADDR
d681 1
a681 1
#ifdef SPARC_64BIT_ADDR
d702 1
a702 1
#ifdef SPARC_64BIT_ADDR
d723 1
a723 1
#ifdef SPARC_64BIT_ADDR
d744 1
a744 1
#ifdef SPARC_64BIT_ADDR
d765 1
a765 1
#ifdef SPARC_64BIT_ADDR
d786 1
a786 1
#ifdef SPARC_64BIT_ADDR
d807 1
a807 1
#ifdef SPARC_64BIT_ADDR
d828 1
a828 1
#ifdef SPARC_64BIT_ADDR
d849 1
a849 1
#ifdef SPARC_64BIT_ADDR
d870 1
a870 1
#ifdef SPARC_64BIT_ADDR
d891 1
a891 1
#ifdef SPARC_64BIT_ADDR
d912 1
a912 1
#ifdef SPARC_64BIT_ADDR
d933 1
a933 1
#ifdef SPARC_64BIT_ADDR
d954 1
a954 1
#ifdef SPARC_64BIT_ADDR
d975 1
a975 1
#ifdef SPARC_64BIT_ADDR
d996 1
a996 1
#ifdef SPARC_64BIT_ADDR
d1017 1
a1017 1
#ifdef SPARC_64BIT_ADDR
d1038 1
a1038 1
#ifdef SPARC_64BIT_ADDR
d1059 1
a1059 1
#ifdef SPARC_64BIT_ADDR
d1080 1
a1080 1
#ifdef SPARC_64BIT_ADDR
d1101 1
a1101 1
#ifdef SPARC_64BIT_ADDR
d1122 1
a1122 1
#ifdef SPARC_64BIT_ADDR
d1143 1
a1143 1
#ifdef SPARC_64BIT_ADDR
d1164 1
a1164 1
#ifdef SPARC_64BIT_ADDR
d1185 1
a1185 1
#ifdef SPARC_64BIT_ADDR
d1206 1
a1206 1
#ifdef SPARC_64BIT_ADDR
d1227 1
a1227 1
#ifdef SPARC_64BIT_ADDR
d1248 1
a1248 1
#ifdef SPARC_64BIT_ADDR
d1269 1
a1269 1
#ifdef SPARC_64BIT_ADDR
d1290 1
a1290 1
#ifdef SPARC_64BIT_ADDR
d1311 1
a1311 1
#ifdef SPARC_64BIT_ADDR
d1332 1
a1332 1
#ifdef SPARC_64BIT_ADDR
d1353 1
a1353 1
#ifdef SPARC_64BIT_ADDR
d1374 1
a1374 1
#ifdef SPARC_64BIT_ADDR
d1395 1
a1395 1
#ifdef SPARC_64BIT_ADDR
d1416 1
a1416 1
#ifdef SPARC_64BIT_ADDR
d1437 1
a1437 1
#ifdef SPARC_64BIT_ADDR
d1458 1
a1458 1
#ifdef SPARC_64BIT_ADDR
d1479 1
a1479 1
#ifdef SPARC_64BIT_ADDR
d1500 1
a1500 1
#ifdef SPARC_64BIT_ADDR
d1521 1
a1521 1
#ifdef SPARC_64BIT_ADDR
d1542 1
a1542 1
#ifdef SPARC_64BIT_ADDR
d1563 1
a1563 1
#ifdef SPARC_64BIT_ADDR
d1584 1
a1584 1
#ifdef SPARC_64BIT_ADDR
d1605 1
a1605 1
#ifdef SPARC_64BIT_ADDR
d1626 1
a1626 1
#ifdef SPARC_64BIT_ADDR
d1647 1
a1647 1
#ifdef SPARC_64BIT_ADDR
d1668 1
a1668 1
#ifdef SPARC_64BIT_ADDR
d1689 1
a1689 1
#ifdef SPARC_64BIT_ADDR
d1710 1
a1710 1
#ifdef SPARC_64BIT_ADDR
d1731 1
a1731 1
#ifdef SPARC_64BIT_ADDR
d1752 1
a1752 1
#ifdef SPARC_64BIT_ADDR
d1773 1
a1773 1
#ifdef SPARC_64BIT_ADDR
d1794 1
a1794 1
#ifdef SPARC_64BIT_ADDR
d1815 1
a1815 1
#ifdef SPARC_64BIT_ADDR
d1836 1
a1836 1
#ifdef SPARC_64BIT_ADDR
d1857 1
a1857 1
#ifdef SPARC_64BIT_ADDR
d1878 1
a1878 1
#ifdef SPARC_64BIT_ADDR
d1899 1
a1899 1
#ifdef SPARC_64BIT_ADDR
d1920 1
a1920 1
#ifdef SPARC_64BIT_ADDR
d1941 1
a1941 1
#ifdef SPARC_64BIT_ADDR
d1962 1
a1962 1
#ifdef SPARC_64BIT_ADDR
d1983 1
a1983 1
#ifdef SPARC_64BIT_ADDR
d2004 1
a2004 1
#ifdef SPARC_64BIT_ADDR
d2025 1
a2025 1
#ifdef SPARC_64BIT_ADDR
d2046 1
a2046 1
#ifdef SPARC_64BIT_ADDR
d2067 1
a2067 1
#ifdef SPARC_64BIT_ADDR
d2088 1
a2088 1
#ifdef SPARC_64BIT_ADDR
d2109 1
a2109 1
#ifdef SPARC_64BIT_ADDR
d2130 1
a2130 1
#ifdef SPARC_64BIT_ADDR
d2151 1
a2151 1
#ifdef SPARC_64BIT_ADDR
d2172 1
a2172 1
#ifdef SPARC_64BIT_ADDR
d2193 1
a2193 1
#ifdef SPARC_64BIT_ADDR
d2214 1
a2214 1
#ifdef SPARC_64BIT_ADDR
d2235 1
a2235 1
#ifdef SPARC_64BIT_ADDR
d2256 1
a2256 1
#ifdef SPARC_64BIT_ADDR
d2277 1
a2277 1
#ifdef SPARC_64BIT_ADDR
d2298 1
a2298 1
#ifdef SPARC_64BIT_ADDR
d2319 1
a2319 1
#ifdef SPARC_64BIT_ADDR
d2340 1
a2340 1
#ifdef SPARC_64BIT_ADDR
d2361 1
a2361 1
#ifdef SPARC_64BIT_ADDR
d2382 1
a2382 1
#ifdef SPARC_64BIT_ADDR
d2403 1
a2403 1
#ifdef SPARC_64BIT_ADDR
d2424 1
a2424 1
#ifdef SPARC_64BIT_ADDR
d2445 1
a2445 1
#ifdef SPARC_64BIT_ADDR
d2466 1
a2466 1
#ifdef SPARC_64BIT_ADDR
d2487 1
a2487 1
#ifdef SPARC_64BIT_ADDR
d2508 1
a2508 1
#ifdef SPARC_64BIT_ADDR
d2529 1
a2529 1
#ifdef SPARC_64BIT_ADDR
d2550 1
a2550 1
#ifdef SPARC_64BIT_ADDR
d2571 1
a2571 1
#ifdef SPARC_64BIT_ADDR
d2592 1
a2592 1
#ifdef SPARC_64BIT_ADDR
d2613 1
a2613 1
#ifdef SPARC_64BIT_ADDR
d2634 1
a2634 1
#ifdef SPARC_64BIT_ADDR
d2655 1
a2655 1
#ifdef SPARC_64BIT_ADDR
d2676 1
a2676 1
#ifdef SPARC_64BIT_ADDR
d2697 1
a2697 1
#ifdef SPARC_64BIT_ADDR
d2718 1
a2718 1
#ifdef SPARC_64BIT_ADDR
d2739 1
a2739 1
#ifdef SPARC_64BIT_ADDR
d2760 1
a2760 1
#ifdef SPARC_64BIT_ADDR
d2781 1
a2781 1
#ifdef SPARC_64BIT_ADDR
d2802 1
a2802 1
#ifdef SPARC_64BIT_ADDR
d2823 1
a2823 1
#ifdef SPARC_64BIT_ADDR
d2844 1
a2844 1
#ifdef SPARC_64BIT_ADDR
d2865 1
a2865 1
#ifdef SPARC_64BIT_ADDR
d2886 1
a2886 1
#ifdef SPARC_64BIT_ADDR
d2907 1
a2907 1
#ifdef SPARC_64BIT_ADDR
d2928 1
a2928 1
#ifdef SPARC_64BIT_ADDR
d2949 1
a2949 1
#ifdef SPARC_64BIT_ADDR
d2970 1
a2970 1
#ifdef SPARC_64BIT_ADDR
d2991 1
a2991 1
#ifdef SPARC_64BIT_ADDR
d3012 1
a3012 1
#ifdef SPARC_64BIT_ADDR
d3033 1
a3033 1
#ifdef SPARC_64BIT_ADDR
d3054 1
a3054 1
#ifdef SPARC_64BIT_ADDR
d3075 1
a3075 1
#ifdef SPARC_64BIT_ADDR
d3096 1
a3096 1
#ifdef SPARC_64BIT_ADDR
d3117 1
a3117 1
#ifdef SPARC_64BIT_ADDR
d3138 1
a3138 1
#ifdef SPARC_64BIT_ADDR
d3159 1
a3159 1
#ifdef SPARC_64BIT_ADDR
d3180 1
a3180 1
#ifdef SPARC_64BIT_ADDR
d3201 1
a3201 1
#ifdef SPARC_64BIT_ADDR
d3222 1
a3222 1
#ifdef SPARC_64BIT_ADDR
d3243 1
a3243 1
#ifdef SPARC_64BIT_ADDR
d3264 1
a3264 1
#ifdef SPARC_64BIT_ADDR
d3285 1
a3285 1
#ifdef SPARC_64BIT_ADDR
d3306 1
a3306 1
#ifdef SPARC_64BIT_ADDR
d3327 1
a3327 1
#ifdef SPARC_64BIT_ADDR
d3348 1
a3348 1
#ifdef SPARC_64BIT_ADDR
d3369 1
a3369 1
#ifdef SPARC_64BIT_ADDR
d3390 1
a3390 1
#ifdef SPARC_64BIT_ADDR
d3411 1
a3411 1
#ifdef SPARC_64BIT_ADDR
d3432 1
a3432 1
#ifdef SPARC_64BIT_ADDR
d3453 1
a3453 1
#ifdef SPARC_64BIT_ADDR
d3474 1
a3474 1
#ifdef SPARC_64BIT_ADDR
d3495 1
a3495 1
#ifdef SPARC_64BIT_ADDR
d3516 1
a3516 1
#ifdef SPARC_64BIT_ADDR
d3537 1
a3537 1
#ifdef SPARC_64BIT_ADDR
d3558 1
a3558 1
#ifdef SPARC_64BIT_ADDR
d3579 1
a3579 1
#ifdef SPARC_64BIT_ADDR
d3600 1
a3600 1
#ifdef SPARC_64BIT_ADDR
d3621 1
a3621 1
#ifdef SPARC_64BIT_ADDR
d3642 1
a3642 1
#ifdef SPARC_64BIT_ADDR
d3663 1
a3663 1
#ifdef SPARC_64BIT_ADDR
d3684 1
a3684 1
#ifdef SPARC_64BIT_ADDR
d3705 1
a3705 1
#ifdef SPARC_64BIT_ADDR
d3726 1
a3726 1
#ifdef SPARC_64BIT_ADDR
d3747 1
a3747 1
#ifdef SPARC_64BIT_ADDR
d3768 1
a3768 1
#ifdef SPARC_64BIT_ADDR
d3789 1
a3789 1
#ifdef SPARC_64BIT_ADDR
d3810 1
a3810 1
#ifdef SPARC_64BIT_ADDR
d3831 1
a3831 1
#ifdef SPARC_64BIT_ADDR
d3852 1
a3852 1
#ifdef SPARC_64BIT_ADDR
d3873 1
a3873 1
#ifdef SPARC_64BIT_ADDR
d3894 1
a3894 1
#ifdef SPARC_64BIT_ADDR
d3915 1
a3915 1
#ifdef SPARC_64BIT_ADDR
d3936 1
a3936 1
#ifdef SPARC_64BIT_ADDR
d3957 1
a3957 1
#ifdef SPARC_64BIT_ADDR
d3978 1
a3978 1
#ifdef SPARC_64BIT_ADDR
d3999 1
a3999 1
#ifdef SPARC_64BIT_ADDR
d4020 1
a4020 1
#ifdef SPARC_64BIT_ADDR
d4041 1
a4041 1
#ifdef SPARC_64BIT_ADDR
d4062 1
a4062 1
#ifdef SPARC_64BIT_ADDR
d4083 1
a4083 1
#ifdef SPARC_64BIT_ADDR
d4104 1
a4104 1
#ifdef SPARC_64BIT_ADDR
d4125 1
a4125 1
#ifdef SPARC_64BIT_ADDR
d4146 1
a4146 1
#ifdef SPARC_64BIT_ADDR
d4167 1
a4167 1
#ifdef SPARC_64BIT_ADDR
d4188 1
a4188 1
#ifdef SPARC_64BIT_ADDR
d4209 1
a4209 1
#ifdef SPARC_64BIT_ADDR
d4230 1
a4230 1
#ifdef SPARC_64BIT_ADDR
d4251 1
a4251 1
#ifdef SPARC_64BIT_ADDR
d4272 1
a4272 1
#ifdef SPARC_64BIT_ADDR
d4293 1
a4293 1
#ifdef SPARC_64BIT_ADDR
d4314 1
a4314 1
#ifdef SPARC_64BIT_ADDR
d4335 1
a4335 1
#ifdef SPARC_64BIT_ADDR
d4356 1
a4356 1
#ifdef SPARC_64BIT_ADDR
d4377 1
a4377 1
#ifdef SPARC_64BIT_ADDR
d4398 1
a4398 1
#ifdef SPARC_64BIT_ADDR
d4419 1
a4419 1
#ifdef SPARC_64BIT_ADDR
d4440 1
a4440 1
#ifdef SPARC_64BIT_ADDR
d4461 1
a4461 1
#ifdef SPARC_64BIT_ADDR
d4482 1
a4482 1
#ifdef SPARC_64BIT_ADDR
d4503 1
a4503 1
#ifdef SPARC_64BIT_ADDR
d4524 1
a4524 1
#ifdef SPARC_64BIT_ADDR
d4545 1
a4545 1
#ifdef SPARC_64BIT_ADDR
d4566 1
a4566 1
#ifdef SPARC_64BIT_ADDR
d4587 1
a4587 1
#ifdef SPARC_64BIT_ADDR
d4608 1
a4608 1
#ifdef SPARC_64BIT_ADDR
d4629 1
a4629 1
#ifdef SPARC_64BIT_ADDR
d4650 1
a4650 1
#ifdef SPARC_64BIT_ADDR
d4671 1
a4671 1
#ifdef SPARC_64BIT_ADDR
d4692 1
a4692 1
#ifdef SPARC_64BIT_ADDR
d4713 1
a4713 1
#ifdef SPARC_64BIT_ADDR
d4734 1
a4734 1
#ifdef SPARC_64BIT_ADDR
d4755 1
a4755 1
#ifdef SPARC_64BIT_ADDR
d4776 1
a4776 1
#ifdef SPARC_64BIT_ADDR
d4797 1
a4797 1
#ifdef SPARC_64BIT_ADDR
d4818 1
a4818 1
#ifdef SPARC_64BIT_ADDR
d4839 1
a4839 1
#ifdef SPARC_64BIT_ADDR
d4860 1
a4860 1
#ifdef SPARC_64BIT_ADDR
d4881 1
a4881 1
#ifdef SPARC_64BIT_ADDR
d4902 1
a4902 1
#ifdef SPARC_64BIT_ADDR
d4923 1
a4923 1
#ifdef SPARC_64BIT_ADDR
d4944 1
a4944 1
#ifdef SPARC_64BIT_ADDR
d4965 1
a4965 1
#ifdef SPARC_64BIT_ADDR
d4986 1
a4986 1
#ifdef SPARC_64BIT_ADDR
d5007 1
a5007 1
#ifdef SPARC_64BIT_ADDR
d5028 1
a5028 1
#ifdef SPARC_64BIT_ADDR
d5049 1
a5049 1
#ifdef SPARC_64BIT_ADDR
d5070 1
a5070 1
#ifdef SPARC_64BIT_ADDR
d5091 1
a5091 1
#ifdef SPARC_64BIT_ADDR
d5112 1
a5112 1
#ifdef SPARC_64BIT_ADDR
d5133 1
a5133 1
#ifdef SPARC_64BIT_ADDR
d5154 1
a5154 1
#ifdef SPARC_64BIT_ADDR
d5175 1
a5175 1
#ifdef SPARC_64BIT_ADDR
d5196 1
a5196 1
#ifdef SPARC_64BIT_ADDR
d5217 1
a5217 1
#ifdef SPARC_64BIT_ADDR
d5238 1
a5238 1
#ifdef SPARC_64BIT_ADDR
d5259 1
a5259 1
#ifdef SPARC_64BIT_ADDR
d5280 1
a5280 1
#ifdef SPARC_64BIT_ADDR
d5301 1
a5301 1
#ifdef SPARC_64BIT_ADDR
d5322 1
a5322 1
#ifdef SPARC_64BIT_ADDR
d5343 1
a5343 1
#ifdef SPARC_64BIT_ADDR
d5364 1
a5364 1
#ifdef SPARC_64BIT_ADDR
d5385 1
a5385 1
#ifdef SPARC_64BIT_ADDR
d5406 1
a5406 1
#ifdef SPARC_64BIT_ADDR
d5427 1
a5427 1
#ifdef SPARC_64BIT_ADDR
d5448 1
a5448 1
#ifdef SPARC_64BIT_ADDR
d5469 1
a5469 1
#ifdef SPARC_64BIT_ADDR
d5490 1
a5490 1
#ifdef SPARC_64BIT_ADDR
d5511 1
a5511 1
#ifdef SPARC_64BIT_ADDR
d5532 1
a5532 1
#ifdef SPARC_64BIT_ADDR
d5553 1
a5553 1
#ifdef SPARC_64BIT_ADDR
d5574 1
a5574 1
#ifdef SPARC_64BIT_ADDR
d5595 1
a5595 1
#ifdef SPARC_64BIT_ADDR
d5616 1
a5616 1
#ifdef SPARC_64BIT_ADDR
d5637 1
a5637 1
#ifdef SPARC_64BIT_ADDR
d5658 1
a5658 1
#ifdef SPARC_64BIT_ADDR
d5679 1
a5679 1
#ifdef SPARC_64BIT_ADDR
d5700 1
a5700 1
#ifdef SPARC_64BIT_ADDR
d5721 1
a5721 1
#ifdef SPARC_64BIT_ADDR
d5742 1
a5742 1
#ifdef SPARC_64BIT_ADDR
d5763 1
a5763 1
#ifdef SPARC_64BIT_ADDR
d5784 1
a5784 1
#ifdef SPARC_64BIT_ADDR
d5805 1
a5805 1
#ifdef SPARC_64BIT_ADDR
d5826 1
a5826 1
#ifdef SPARC_64BIT_ADDR
d5847 1
a5847 1
#ifdef SPARC_64BIT_ADDR
d5868 1
a5868 1
#ifdef SPARC_64BIT_ADDR
d5889 1
a5889 1
#ifdef SPARC_64BIT_ADDR
d5910 1
a5910 1
#ifdef SPARC_64BIT_ADDR
d5931 1
a5931 1
#ifdef SPARC_64BIT_ADDR
d5952 1
a5952 1
#ifdef SPARC_64BIT_ADDR
d5973 1
a5973 1
#ifdef SPARC_64BIT_ADDR
d5994 1
a5994 1
#ifdef SPARC_64BIT_ADDR
d6015 1
a6015 1
#ifdef SPARC_64BIT_ADDR
d6036 1
a6036 1
#ifdef SPARC_64BIT_ADDR
d6057 1
a6057 1
#ifdef SPARC_64BIT_ADDR
d6078 1
a6078 1
#ifdef SPARC_64BIT_ADDR
d6099 1
a6099 1
#ifdef SPARC_64BIT_ADDR
d6120 1
a6120 1
#ifdef SPARC_64BIT_ADDR
d6141 1
a6141 1
#ifdef SPARC_64BIT_ADDR
d6162 1
a6162 1
#ifdef SPARC_64BIT_ADDR
d6183 1
a6183 1
#ifdef SPARC_64BIT_ADDR
d6204 1
a6204 1
#ifdef SPARC_64BIT_ADDR
d6225 1
a6225 1
#ifdef SPARC_64BIT_ADDR
d6246 1
a6246 1
#ifdef SPARC_64BIT_ADDR
d6267 1
a6267 1
#ifdef SPARC_64BIT_ADDR
d6288 1
a6288 1
#ifdef SPARC_64BIT_ADDR
d6309 1
a6309 1
#ifdef SPARC_64BIT_ADDR
d6330 1
a6330 1
#ifdef SPARC_64BIT_ADDR
d6351 1
a6351 1
#ifdef SPARC_64BIT_ADDR
d6372 1
a6372 1
#ifdef SPARC_64BIT_ADDR
d6393 1
a6393 1
#ifdef SPARC_64BIT_ADDR
d6414 1
a6414 1
#ifdef SPARC_64BIT_ADDR
d6435 1
a6435 1
#ifdef SPARC_64BIT_ADDR
d6456 1
a6456 1
#ifdef SPARC_64BIT_ADDR
d6477 1
a6477 1
#ifdef SPARC_64BIT_ADDR
d6498 1
a6498 1
#ifdef SPARC_64BIT_ADDR
d6519 1
a6519 1
#ifdef SPARC_64BIT_ADDR
d6540 1
a6540 1
#ifdef SPARC_64BIT_ADDR
d6561 1
a6561 1
#ifdef SPARC_64BIT_ADDR
d6582 1
a6582 1
#ifdef SPARC_64BIT_ADDR
d6603 1
a6603 1
#ifdef SPARC_64BIT_ADDR
d6624 1
a6624 1
#ifdef SPARC_64BIT_ADDR
d6645 1
a6645 1
#ifdef SPARC_64BIT_ADDR
d6666 1
a6666 1
#ifdef SPARC_64BIT_ADDR
d6687 1
a6687 1
#ifdef SPARC_64BIT_ADDR
d6708 1
a6708 1
#ifdef SPARC_64BIT_ADDR
d6729 1
a6729 1
#ifdef SPARC_64BIT_ADDR
d6750 1
a6750 1
#ifdef SPARC_64BIT_ADDR
d6771 1
a6771 1
#ifdef SPARC_64BIT_ADDR
d6792 1
a6792 1
#ifdef SPARC_64BIT_ADDR
d6813 1
a6813 1
#ifdef SPARC_64BIT_ADDR
d6834 1
a6834 1
#ifdef SPARC_64BIT_ADDR
d6855 1
a6855 1
#ifdef SPARC_64BIT_ADDR
d6876 1
a6876 1
#ifdef SPARC_64BIT_ADDR
d6897 1
a6897 1
#ifdef SPARC_64BIT_ADDR
d6918 1
a6918 1
#ifdef SPARC_64BIT_ADDR
d6939 1
a6939 1
#ifdef SPARC_64BIT_ADDR
d6960 1
a6960 1
#ifdef SPARC_64BIT_ADDR
d6981 1
a6981 1
#ifdef SPARC_64BIT_ADDR
d7002 1
a7002 1
#ifdef SPARC_64BIT_ADDR
d7023 1
a7023 1
#ifdef SPARC_64BIT_ADDR
d7044 1
a7044 1
#ifdef SPARC_64BIT_ADDR
d7065 1
a7065 1
#ifdef SPARC_64BIT_ADDR
d7086 1
a7086 1
#ifdef SPARC_64BIT_ADDR
d7107 1
a7107 1
#ifdef SPARC_64BIT_ADDR
d7128 1
a7128 1
#ifdef SPARC_64BIT_ADDR
d7149 1
a7149 1
#ifdef SPARC_64BIT_ADDR
d7170 1
a7170 1
#ifdef SPARC_64BIT_ADDR
d7191 1
a7191 1
#ifdef SPARC_64BIT_ADDR
d7212 1
a7212 1
#ifdef SPARC_64BIT_ADDR
d7233 1
a7233 1
#ifdef SPARC_64BIT_ADDR
d7254 1
a7254 1
#ifdef SPARC_64BIT_ADDR
d7275 1
a7275 1
#ifdef SPARC_64BIT_ADDR
d7296 1
a7296 1
#ifdef SPARC_64BIT_ADDR
d7317 1
a7317 1
#ifdef SPARC_64BIT_ADDR
d7338 1
a7338 1
#ifdef SPARC_64BIT_ADDR
d7359 1
a7359 1
#ifdef SPARC_64BIT_ADDR
d7380 1
a7380 1
#ifdef SPARC_64BIT_ADDR
d7401 1
a7401 1
#ifdef SPARC_64BIT_ADDR
d7422 1
a7422 1
#ifdef SPARC_64BIT_ADDR
d7443 1
a7443 1
#ifdef SPARC_64BIT_ADDR
d7464 1
a7464 1
#ifdef SPARC_64BIT_ADDR
d7485 1
a7485 1
#ifdef SPARC_64BIT_ADDR
d7506 1
a7506 1
#ifdef SPARC_64BIT_ADDR
d7527 1
a7527 1
#ifdef SPARC_64BIT_ADDR
d7548 1
a7548 1
#ifdef SPARC_64BIT_ADDR
d7569 1
a7569 1
#ifdef SPARC_64BIT_ADDR
d7590 1
a7590 1
#ifdef SPARC_64BIT_ADDR
d7611 1
a7611 1
#ifdef SPARC_64BIT_ADDR
d7632 1
a7632 1
#ifdef SPARC_64BIT_ADDR
d7653 1
a7653 1
#ifdef SPARC_64BIT_ADDR
d7674 1
a7674 1
#ifdef SPARC_64BIT_ADDR
d7695 1
a7695 1
#ifdef SPARC_64BIT_ADDR
d7716 1
a7716 1
#ifdef SPARC_64BIT_ADDR
d7737 1
a7737 1
#ifdef SPARC_64BIT_ADDR
d7758 1
a7758 1
#ifdef SPARC_64BIT_ADDR
d7779 1
a7779 1
#ifdef SPARC_64BIT_ADDR
d7800 1
a7800 1
#ifdef SPARC_64BIT_ADDR
d7821 1
a7821 1
#ifdef SPARC_64BIT_ADDR
d7842 1
a7842 1
#ifdef SPARC_64BIT_ADDR
d7863 1
a7863 1
#ifdef SPARC_64BIT_ADDR
d7884 1
a7884 1
#ifdef SPARC_64BIT_ADDR
d7905 1
a7905 1
#ifdef SPARC_64BIT_ADDR
d7926 1
a7926 1
#ifdef SPARC_64BIT_ADDR
d7947 1
a7947 1
#ifdef SPARC_64BIT_ADDR
d7968 1
a7968 1
#ifdef SPARC_64BIT_ADDR
d7989 1
a7989 1
#ifdef SPARC_64BIT_ADDR
d8010 1
a8010 1
#ifdef SPARC_64BIT_ADDR
d8031 1
a8031 1
#ifdef SPARC_64BIT_ADDR
d8052 1
a8052 1
#ifdef SPARC_64BIT_ADDR
d8073 1
a8073 1
#ifdef SPARC_64BIT_ADDR
d8094 1
a8094 1
#ifdef SPARC_64BIT_ADDR
d8115 1
a8115 1
#ifdef SPARC_64BIT_ADDR
d8136 1
a8136 1
#ifdef SPARC_64BIT_ADDR
d8157 1
a8157 1
#ifdef SPARC_64BIT_ADDR
d8178 1
a8178 1
#ifdef SPARC_64BIT_ADDR
d8199 1
a8199 1
#ifdef SPARC_64BIT_ADDR
d8220 1
a8220 1
#ifdef SPARC_64BIT_ADDR
d8241 1
a8241 1
#ifdef SPARC_64BIT_ADDR
d8262 1
a8262 1
#ifdef SPARC_64BIT_ADDR
d8283 1
a8283 1
#ifdef SPARC_64BIT_ADDR
d8304 1
a8304 1
#ifdef SPARC_64BIT_ADDR
d8325 1
a8325 1
#ifdef SPARC_64BIT_ADDR
d8346 1
a8346 1
#ifdef SPARC_64BIT_ADDR
d8367 1
a8367 1
#ifdef SPARC_64BIT_ADDR
d8388 1
a8388 1
#ifdef SPARC_64BIT_ADDR
d8409 1
a8409 1
#ifdef SPARC_64BIT_ADDR
d8430 1
a8430 1
#ifdef SPARC_64BIT_ADDR
d8451 1
a8451 1
#ifdef SPARC_64BIT_ADDR
d8472 1
a8472 1
#ifdef SPARC_64BIT_ADDR
d8493 1
a8493 1
#ifdef SPARC_64BIT_ADDR
d8514 1
a8514 1
#ifdef SPARC_64BIT_ADDR
d8535 1
a8535 1
#ifdef SPARC_64BIT_ADDR
d8556 1
a8556 1
#ifdef SPARC_64BIT_ADDR
d8577 1
a8577 1
#ifdef SPARC_64BIT_ADDR
d8598 1
a8598 1
#ifdef SPARC_64BIT_ADDR
d8619 1
a8619 1
#ifdef SPARC_64BIT_ADDR
d8640 1
a8640 1
#ifdef SPARC_64BIT_ADDR
d8661 1
a8661 1
#ifdef SPARC_64BIT_ADDR
d8682 1
a8682 1
#ifdef SPARC_64BIT_ADDR
a8699 21
.globl gl__unused413
.type gl__unused413,#function
gl__unused413:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset___unused413), %g2
	or	%g2, %lo(8 * _gloffset___unused413), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset___unused413)], %g3
#endif
	jmpl	%g3, %g0
	nop

d8703 1
a8703 1
#ifdef SPARC_64BIT_ADDR
d8724 1
a8724 1
#ifdef SPARC_64BIT_ADDR
d8745 1
a8745 1
#ifdef SPARC_64BIT_ADDR
d8766 1
a8766 1
#ifdef SPARC_64BIT_ADDR
d8787 1
a8787 1
#ifdef SPARC_64BIT_ADDR
d8808 1
a8808 1
#ifdef SPARC_64BIT_ADDR
d8829 1
a8829 1
#ifdef SPARC_64BIT_ADDR
d8847 4
a8850 4
.globl glActiveTexture
.type glActiveTexture,#function
glActiveTexture:
#ifdef SPARC_64BIT_ADDR
d8857 2
a8858 2
	sethi	%hi(8 * _gloffset_ActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ActiveTextureARB), %g2
d8863 1
a8863 1
	ld	[%g1 + (4 * _gloffset_ActiveTextureARB)], %g3
d8868 4
a8871 4
.globl glClientActiveTexture
.type glClientActiveTexture,#function
glClientActiveTexture:
#ifdef SPARC_64BIT_ADDR
d8878 2
a8879 2
	sethi	%hi(8 * _gloffset_ClientActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ClientActiveTextureARB), %g2
d8884 1
a8884 1
	ld	[%g1 + (4 * _gloffset_ClientActiveTextureARB)], %g3
d8889 4
a8892 4
.globl glMultiTexCoord1d
.type glMultiTexCoord1d,#function
glMultiTexCoord1d:
#ifdef SPARC_64BIT_ADDR
d8899 2
a8900 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dARB), %g2
d8905 1
a8905 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dARB)], %g3
d8910 4
a8913 4
.globl glMultiTexCoord1dv
.type glMultiTexCoord1dv,#function
glMultiTexCoord1dv:
#ifdef SPARC_64BIT_ADDR
d8920 2
a8921 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dvARB), %g2
d8926 1
a8926 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dvARB)], %g3
d8931 4
a8934 4
.globl glMultiTexCoord1f
.type glMultiTexCoord1f,#function
glMultiTexCoord1f:
#ifdef SPARC_64BIT_ADDR
d8941 2
a8942 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fARB), %g2
d8947 1
a8947 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fARB)], %g3
d8952 4
a8955 4
.globl glMultiTexCoord1fv
.type glMultiTexCoord1fv,#function
glMultiTexCoord1fv:
#ifdef SPARC_64BIT_ADDR
d8962 2
a8963 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fvARB), %g2
d8968 1
a8968 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fvARB)], %g3
d8973 4
a8976 4
.globl glMultiTexCoord1i
.type glMultiTexCoord1i,#function
glMultiTexCoord1i:
#ifdef SPARC_64BIT_ADDR
d8983 2
a8984 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1iARB), %g2
d8989 1
a8989 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1iARB)], %g3
d8994 4
a8997 4
.globl glMultiTexCoord1iv
.type glMultiTexCoord1iv,#function
glMultiTexCoord1iv:
#ifdef SPARC_64BIT_ADDR
d9004 2
a9005 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1ivARB), %g2
d9010 1
a9010 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1ivARB)], %g3
d9015 4
a9018 4
.globl glMultiTexCoord1s
.type glMultiTexCoord1s,#function
glMultiTexCoord1s:
#ifdef SPARC_64BIT_ADDR
d9025 2
a9026 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1sARB), %g2
d9031 1
a9031 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1sARB)], %g3
d9036 4
a9039 4
.globl glMultiTexCoord1sv
.type glMultiTexCoord1sv,#function
glMultiTexCoord1sv:
#ifdef SPARC_64BIT_ADDR
d9046 2
a9047 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1svARB), %g2
d9052 1
a9052 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1svARB)], %g3
d9057 4
a9060 4
.globl glMultiTexCoord2d
.type glMultiTexCoord2d,#function
glMultiTexCoord2d:
#ifdef SPARC_64BIT_ADDR
d9067 2
a9068 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dARB), %g2
d9073 1
a9073 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dARB)], %g3
d9078 4
a9081 4
.globl glMultiTexCoord2dv
.type glMultiTexCoord2dv,#function
glMultiTexCoord2dv:
#ifdef SPARC_64BIT_ADDR
d9088 2
a9089 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dvARB), %g2
d9094 1
a9094 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dvARB)], %g3
d9099 4
a9102 4
.globl glMultiTexCoord2f
.type glMultiTexCoord2f,#function
glMultiTexCoord2f:
#ifdef SPARC_64BIT_ADDR
d9109 2
a9110 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fARB), %g2
d9115 1
a9115 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fARB)], %g3
d9120 4
a9123 4
.globl glMultiTexCoord2fv
.type glMultiTexCoord2fv,#function
glMultiTexCoord2fv:
#ifdef SPARC_64BIT_ADDR
d9130 2
a9131 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fvARB), %g2
d9136 1
a9136 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fvARB)], %g3
d9141 4
a9144 4
.globl glMultiTexCoord2i
.type glMultiTexCoord2i,#function
glMultiTexCoord2i:
#ifdef SPARC_64BIT_ADDR
d9151 2
a9152 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2iARB), %g2
d9157 1
a9157 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2iARB)], %g3
d9162 4
a9165 4
.globl glMultiTexCoord2iv
.type glMultiTexCoord2iv,#function
glMultiTexCoord2iv:
#ifdef SPARC_64BIT_ADDR
d9172 2
a9173 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2ivARB), %g2
d9178 1
a9178 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2ivARB)], %g3
d9183 4
a9186 4
.globl glMultiTexCoord2s
.type glMultiTexCoord2s,#function
glMultiTexCoord2s:
#ifdef SPARC_64BIT_ADDR
d9193 2
a9194 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2sARB), %g2
d9199 1
a9199 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2sARB)], %g3
d9204 4
a9207 4
.globl glMultiTexCoord2sv
.type glMultiTexCoord2sv,#function
glMultiTexCoord2sv:
#ifdef SPARC_64BIT_ADDR
d9214 2
a9215 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2svARB), %g2
d9220 1
a9220 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2svARB)], %g3
d9225 4
a9228 4
.globl glMultiTexCoord3d
.type glMultiTexCoord3d,#function
glMultiTexCoord3d:
#ifdef SPARC_64BIT_ADDR
d9235 2
a9236 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dARB), %g2
d9241 1
a9241 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dARB)], %g3
d9246 4
a9249 4
.globl glMultiTexCoord3dv
.type glMultiTexCoord3dv,#function
glMultiTexCoord3dv:
#ifdef SPARC_64BIT_ADDR
d9256 2
a9257 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dvARB), %g2
d9262 1
a9262 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dvARB)], %g3
d9267 4
a9270 4
.globl glMultiTexCoord3f
.type glMultiTexCoord3f,#function
glMultiTexCoord3f:
#ifdef SPARC_64BIT_ADDR
d9277 2
a9278 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fARB), %g2
d9283 1
a9283 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fARB)], %g3
d9288 4
a9291 4
.globl glMultiTexCoord3fv
.type glMultiTexCoord3fv,#function
glMultiTexCoord3fv:
#ifdef SPARC_64BIT_ADDR
d9298 2
a9299 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fvARB), %g2
d9304 1
a9304 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fvARB)], %g3
d9309 4
a9312 4
.globl glMultiTexCoord3i
.type glMultiTexCoord3i,#function
glMultiTexCoord3i:
#ifdef SPARC_64BIT_ADDR
d9319 2
a9320 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3iARB), %g2
d9325 1
a9325 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3iARB)], %g3
d9330 4
a9333 4
.globl glMultiTexCoord3iv
.type glMultiTexCoord3iv,#function
glMultiTexCoord3iv:
#ifdef SPARC_64BIT_ADDR
d9340 2
a9341 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3ivARB), %g2
d9346 1
a9346 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3ivARB)], %g3
d9351 4
a9354 4
.globl glMultiTexCoord3s
.type glMultiTexCoord3s,#function
glMultiTexCoord3s:
#ifdef SPARC_64BIT_ADDR
d9361 2
a9362 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3sARB), %g2
d9367 1
a9367 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3sARB)], %g3
d9372 4
a9375 4
.globl glMultiTexCoord3sv
.type glMultiTexCoord3sv,#function
glMultiTexCoord3sv:
#ifdef SPARC_64BIT_ADDR
d9382 2
a9383 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3svARB), %g2
d9388 1
a9388 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3svARB)], %g3
d9393 4
a9396 4
.globl glMultiTexCoord4d
.type glMultiTexCoord4d,#function
glMultiTexCoord4d:
#ifdef SPARC_64BIT_ADDR
d9403 2
a9404 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dARB), %g2
d9409 1
a9409 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dARB)], %g3
d9414 4
a9417 4
.globl glMultiTexCoord4dv
.type glMultiTexCoord4dv,#function
glMultiTexCoord4dv:
#ifdef SPARC_64BIT_ADDR
d9424 2
a9425 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dvARB), %g2
d9430 1
a9430 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dvARB)], %g3
d9435 4
a9438 4
.globl glMultiTexCoord4f
.type glMultiTexCoord4f,#function
glMultiTexCoord4f:
#ifdef SPARC_64BIT_ADDR
d9445 2
a9446 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fARB), %g2
d9451 1
a9451 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fARB)], %g3
d9456 4
a9459 4
.globl glMultiTexCoord4fv
.type glMultiTexCoord4fv,#function
glMultiTexCoord4fv:
#ifdef SPARC_64BIT_ADDR
d9466 2
a9467 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fvARB), %g2
d9472 1
a9472 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fvARB)], %g3
d9477 4
a9480 4
.globl glMultiTexCoord4i
.type glMultiTexCoord4i,#function
glMultiTexCoord4i:
#ifdef SPARC_64BIT_ADDR
d9487 2
a9488 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4iARB), %g2
d9493 1
a9493 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4iARB)], %g3
d9498 4
a9501 4
.globl glMultiTexCoord4iv
.type glMultiTexCoord4iv,#function
glMultiTexCoord4iv:
#ifdef SPARC_64BIT_ADDR
d9508 2
a9509 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4ivARB), %g2
d9514 1
a9514 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4ivARB)], %g3
d9519 4
a9522 4
.globl glMultiTexCoord4s
.type glMultiTexCoord4s,#function
glMultiTexCoord4s:
#ifdef SPARC_64BIT_ADDR
d9529 2
a9530 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4sARB), %g2
d9535 1
a9535 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4sARB)], %g3
d9540 4
a9543 4
.globl glMultiTexCoord4sv
.type glMultiTexCoord4sv,#function
glMultiTexCoord4sv:
#ifdef SPARC_64BIT_ADDR
d9550 2
a9551 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4svARB), %g2
d9556 1
a9556 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4svARB)], %g3
d9561 4
a9564 4
.globl glLoadTransposeMatrixf
.type glLoadTransposeMatrixf,#function
glLoadTransposeMatrixf:
#ifdef SPARC_64BIT_ADDR
d9571 2
a9572 2
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixfARB), %g2
d9577 1
a9577 1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixfARB)], %g3
d9582 4
a9585 4
.globl glLoadTransposeMatrixd
.type glLoadTransposeMatrixd,#function
glLoadTransposeMatrixd:
#ifdef SPARC_64BIT_ADDR
d9592 2
a9593 2
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixdARB), %g2
d9598 1
a9598 1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixdARB)], %g3
d9603 4
a9606 4
.globl glMultTransposeMatrixf
.type glMultTransposeMatrixf,#function
glMultTransposeMatrixf:
#ifdef SPARC_64BIT_ADDR
d9613 2
a9614 2
	sethi	%hi(8 * _gloffset_MultTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixfARB), %g2
d9619 1
a9619 1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixfARB)], %g3
d9624 4
a9627 4
.globl glMultTransposeMatrixd
.type glMultTransposeMatrixd,#function
glMultTransposeMatrixd:
#ifdef SPARC_64BIT_ADDR
d9634 2
a9635 2
	sethi	%hi(8 * _gloffset_MultTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixdARB), %g2
d9640 1
a9640 1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixdARB)], %g3
d9645 4
a9648 4
.globl glSampleCoverage
.type glSampleCoverage,#function
glSampleCoverage:
#ifdef SPARC_64BIT_ADDR
d9655 2
a9656 2
	sethi	%hi(8 * _gloffset_SampleCoverageARB), %g2
	or	%g2, %lo(8 * _gloffset_SampleCoverageARB), %g2
d9661 1
a9661 1
	ld	[%g1 + (4 * _gloffset_SampleCoverageARB)], %g3
d9666 4
a9669 4
.globl glCompressedTexImage3D
.type glCompressedTexImage3D,#function
glCompressedTexImage3D:
#ifdef SPARC_64BIT_ADDR
d9676 2
a9677 2
	sethi	%hi(8 * _gloffset_CompressedTexImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage3DARB), %g2
d9682 1
a9682 1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage3DARB)], %g3
d9687 4
a9690 4
.globl glCompressedTexImage2D
.type glCompressedTexImage2D,#function
glCompressedTexImage2D:
#ifdef SPARC_64BIT_ADDR
d9697 2
a9698 2
	sethi	%hi(8 * _gloffset_CompressedTexImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage2DARB), %g2
d9703 1
a9703 1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage2DARB)], %g3
d9708 4
a9711 4
.globl glCompressedTexImage1D
.type glCompressedTexImage1D,#function
glCompressedTexImage1D:
#ifdef SPARC_64BIT_ADDR
d9718 2
a9719 2
	sethi	%hi(8 * _gloffset_CompressedTexImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage1DARB), %g2
d9724 1
a9724 1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage1DARB)], %g3
d9729 4
a9732 4
.globl glCompressedTexSubImage3D
.type glCompressedTexSubImage3D,#function
glCompressedTexSubImage3D:
#ifdef SPARC_64BIT_ADDR
d9739 2
a9740 2
	sethi	%hi(8 * _gloffset_CompressedTexSubImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage3DARB), %g2
d9745 1
a9745 1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage3DARB)], %g3
d9750 4
a9753 4
.globl glCompressedTexSubImage2D
.type glCompressedTexSubImage2D,#function
glCompressedTexSubImage2D:
#ifdef SPARC_64BIT_ADDR
d9760 2
a9761 2
	sethi	%hi(8 * _gloffset_CompressedTexSubImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage2DARB), %g2
d9766 1
a9766 1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage2DARB)], %g3
d9771 4
a9774 4
.globl glCompressedTexSubImage1D
.type glCompressedTexSubImage1D,#function
glCompressedTexSubImage1D:
#ifdef SPARC_64BIT_ADDR
d9781 2
a9782 2
	sethi	%hi(8 * _gloffset_CompressedTexSubImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage1DARB), %g2
d9787 1
a9787 1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage1DARB)], %g3
d9792 4
a9795 4
.globl glGetCompressedTexImage
.type glGetCompressedTexImage,#function
glGetCompressedTexImage:
#ifdef SPARC_64BIT_ADDR
d9802 2
a9803 2
	sethi	%hi(8 * _gloffset_GetCompressedTexImageARB), %g2
	or	%g2, %lo(8 * _gloffset_GetCompressedTexImageARB), %g2
d9808 1
a9808 1
	ld	[%g1 + (4 * _gloffset_GetCompressedTexImageARB)], %g3
d9813 4
a9816 4
.globl glBlendColorEXT
.type glBlendColorEXT,#function
glBlendColorEXT:
#ifdef SPARC_64BIT_ADDR
d9823 2
a9824 2
	sethi	%hi(8 * _gloffset_BlendColor), %g2
	or	%g2, %lo(8 * _gloffset_BlendColor), %g2
d9829 1
a9829 1
	ld	[%g1 + (4 * _gloffset_BlendColor)], %g3
d9834 4
a9837 4
.globl glPolygonOffsetEXT
.type glPolygonOffsetEXT,#function
glPolygonOffsetEXT:
#ifdef SPARC_64BIT_ADDR
d9844 2
a9845 2
	sethi	%hi(8 * _gloffset_PolygonOffsetEXT), %g2
	or	%g2, %lo(8 * _gloffset_PolygonOffsetEXT), %g2
d9850 1
a9850 1
	ld	[%g1 + (4 * _gloffset_PolygonOffsetEXT)], %g3
d9855 4
a9858 4
.globl glTexImage3DEXT
.type glTexImage3DEXT,#function
glTexImage3DEXT:
#ifdef SPARC_64BIT_ADDR
d9865 2
a9866 2
	sethi	%hi(8 * _gloffset_TexImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexImage3D), %g2
d9871 1
a9871 1
	ld	[%g1 + (4 * _gloffset_TexImage3D)], %g3
d9876 4
a9879 4
.globl glTexSubImage3DEXT
.type glTexSubImage3DEXT,#function
glTexSubImage3DEXT:
#ifdef SPARC_64BIT_ADDR
d9886 2
a9887 2
	sethi	%hi(8 * _gloffset_TexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage3D), %g2
d9892 1
a9892 1
	ld	[%g1 + (4 * _gloffset_TexSubImage3D)], %g3
d9897 4
a9900 4
.globl glGetTexFilterFuncSGIS
.type glGetTexFilterFuncSGIS,#function
glGetTexFilterFuncSGIS:
#ifdef SPARC_64BIT_ADDR
d9907 2
a9908 2
	sethi	%hi(8 * _gloffset_GetTexFilterFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetTexFilterFuncSGIS), %g2
d9913 1
a9913 1
	ld	[%g1 + (4 * _gloffset_GetTexFilterFuncSGIS)], %g3
d9918 4
a9921 4
.globl glTexFilterFuncSGIS
.type glTexFilterFuncSGIS,#function
glTexFilterFuncSGIS:
#ifdef SPARC_64BIT_ADDR
d9928 2
a9929 2
	sethi	%hi(8 * _gloffset_TexFilterFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexFilterFuncSGIS), %g2
d9934 1
a9934 1
	ld	[%g1 + (4 * _gloffset_TexFilterFuncSGIS)], %g3
d9939 4
a9942 4
.globl glTexSubImage1DEXT
.type glTexSubImage1DEXT,#function
glTexSubImage1DEXT:
#ifdef SPARC_64BIT_ADDR
d9949 2
a9950 2
	sethi	%hi(8 * _gloffset_TexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage1D), %g2
d9955 1
a9955 1
	ld	[%g1 + (4 * _gloffset_TexSubImage1D)], %g3
d9960 4
a9963 4
.globl glTexSubImage2DEXT
.type glTexSubImage2DEXT,#function
glTexSubImage2DEXT:
#ifdef SPARC_64BIT_ADDR
d9970 2
a9971 2
	sethi	%hi(8 * _gloffset_TexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage2D), %g2
d9976 1
a9976 1
	ld	[%g1 + (4 * _gloffset_TexSubImage2D)], %g3
d9981 4
a9984 4
.globl glCopyTexImage1DEXT
.type glCopyTexImage1DEXT,#function
glCopyTexImage1DEXT:
#ifdef SPARC_64BIT_ADDR
d9991 2
a9992 2
	sethi	%hi(8 * _gloffset_CopyTexImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage1D), %g2
d9997 1
a9997 1
	ld	[%g1 + (4 * _gloffset_CopyTexImage1D)], %g3
d10002 4
a10005 4
.globl glCopyTexImage2DEXT
.type glCopyTexImage2DEXT,#function
glCopyTexImage2DEXT:
#ifdef SPARC_64BIT_ADDR
d10012 2
a10013 2
	sethi	%hi(8 * _gloffset_CopyTexImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage2D), %g2
d10018 1
a10018 1
	ld	[%g1 + (4 * _gloffset_CopyTexImage2D)], %g3
d10023 4
a10026 4
.globl glCopyTexSubImage1DEXT
.type glCopyTexSubImage1DEXT,#function
glCopyTexSubImage1DEXT:
#ifdef SPARC_64BIT_ADDR
d10033 2
a10034 2
	sethi	%hi(8 * _gloffset_CopyTexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage1D), %g2
d10039 1
a10039 1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage1D)], %g3
d10044 4
a10047 4
.globl glCopyTexSubImage2DEXT
.type glCopyTexSubImage2DEXT,#function
glCopyTexSubImage2DEXT:
#ifdef SPARC_64BIT_ADDR
d10054 2
a10055 2
	sethi	%hi(8 * _gloffset_CopyTexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage2D), %g2
d10060 1
a10060 1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage2D)], %g3
d10065 4
a10068 4
.globl glCopyTexSubImage3DEXT
.type glCopyTexSubImage3DEXT,#function
glCopyTexSubImage3DEXT:
#ifdef SPARC_64BIT_ADDR
d10075 2
a10076 2
	sethi	%hi(8 * _gloffset_CopyTexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage3D), %g2
d10081 1
a10081 1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage3D)], %g3
d10086 4
a10089 4
.globl glGetHistogramEXT
.type glGetHistogramEXT,#function
glGetHistogramEXT:
#ifdef SPARC_64BIT_ADDR
d10096 2
a10097 2
	sethi	%hi(8 * _gloffset_GetHistogramEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramEXT), %g2
d10102 1
a10102 1
	ld	[%g1 + (4 * _gloffset_GetHistogramEXT)], %g3
d10107 4
a10110 4
.globl glGetHistogramParameterfvEXT
.type glGetHistogramParameterfvEXT,#function
glGetHistogramParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10117 2
a10118 2
	sethi	%hi(8 * _gloffset_GetHistogramParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterfvEXT), %g2
d10123 1
a10123 1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterfvEXT)], %g3
d10128 4
a10131 4
.globl glGetHistogramParameterivEXT
.type glGetHistogramParameterivEXT,#function
glGetHistogramParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10138 2
a10139 2
	sethi	%hi(8 * _gloffset_GetHistogramParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterivEXT), %g2
d10144 1
a10144 1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterivEXT)], %g3
d10149 4
a10152 4
.globl glGetMinmaxEXT
.type glGetMinmaxEXT,#function
glGetMinmaxEXT:
#ifdef SPARC_64BIT_ADDR
d10159 2
a10160 2
	sethi	%hi(8 * _gloffset_GetMinmaxEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxEXT), %g2
d10165 1
a10165 1
	ld	[%g1 + (4 * _gloffset_GetMinmaxEXT)], %g3
d10170 4
a10173 4
.globl glGetMinmaxParameterfvEXT
.type glGetMinmaxParameterfvEXT,#function
glGetMinmaxParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10180 2
a10181 2
	sethi	%hi(8 * _gloffset_GetMinmaxParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterfvEXT), %g2
d10186 1
a10186 1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterfvEXT)], %g3
d10191 4
a10194 4
.globl glGetMinmaxParameterivEXT
.type glGetMinmaxParameterivEXT,#function
glGetMinmaxParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10201 2
a10202 2
	sethi	%hi(8 * _gloffset_GetMinmaxParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterivEXT), %g2
d10207 1
a10207 1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterivEXT)], %g3
d10212 4
a10215 4
.globl glHistogramEXT
.type glHistogramEXT,#function
glHistogramEXT:
#ifdef SPARC_64BIT_ADDR
d10222 2
a10223 2
	sethi	%hi(8 * _gloffset_Histogram), %g2
	or	%g2, %lo(8 * _gloffset_Histogram), %g2
d10228 1
a10228 1
	ld	[%g1 + (4 * _gloffset_Histogram)], %g3
d10233 4
a10236 4
.globl glMinmaxEXT
.type glMinmaxEXT,#function
glMinmaxEXT:
#ifdef SPARC_64BIT_ADDR
d10243 2
a10244 2
	sethi	%hi(8 * _gloffset_Minmax), %g2
	or	%g2, %lo(8 * _gloffset_Minmax), %g2
d10249 1
a10249 1
	ld	[%g1 + (4 * _gloffset_Minmax)], %g3
d10254 4
a10257 4
.globl glResetHistogramEXT
.type glResetHistogramEXT,#function
glResetHistogramEXT:
#ifdef SPARC_64BIT_ADDR
d10264 2
a10265 2
	sethi	%hi(8 * _gloffset_ResetHistogram), %g2
	or	%g2, %lo(8 * _gloffset_ResetHistogram), %g2
d10270 1
a10270 1
	ld	[%g1 + (4 * _gloffset_ResetHistogram)], %g3
d10275 4
a10278 4
.globl glResetMinmaxEXT
.type glResetMinmaxEXT,#function
glResetMinmaxEXT:
#ifdef SPARC_64BIT_ADDR
d10285 2
a10286 2
	sethi	%hi(8 * _gloffset_ResetMinmax), %g2
	or	%g2, %lo(8 * _gloffset_ResetMinmax), %g2
d10291 1
a10291 1
	ld	[%g1 + (4 * _gloffset_ResetMinmax)], %g3
d10296 4
a10299 4
.globl glConvolutionFilter1DEXT
.type glConvolutionFilter1DEXT,#function
glConvolutionFilter1DEXT:
#ifdef SPARC_64BIT_ADDR
d10306 2
a10307 2
	sethi	%hi(8 * _gloffset_ConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter1D), %g2
d10312 1
a10312 1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter1D)], %g3
d10317 4
a10320 4
.globl glConvolutionFilter2DEXT
.type glConvolutionFilter2DEXT,#function
glConvolutionFilter2DEXT:
#ifdef SPARC_64BIT_ADDR
d10327 2
a10328 2
	sethi	%hi(8 * _gloffset_ConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter2D), %g2
d10333 1
a10333 1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter2D)], %g3
d10338 4
a10341 4
.globl glConvolutionParameterfEXT
.type glConvolutionParameterfEXT,#function
glConvolutionParameterfEXT:
#ifdef SPARC_64BIT_ADDR
d10348 2
a10349 2
	sethi	%hi(8 * _gloffset_ConvolutionParameterf), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterf), %g2
d10354 1
a10354 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterf)], %g3
d10359 4
a10362 4
.globl glConvolutionParameterfvEXT
.type glConvolutionParameterfvEXT,#function
glConvolutionParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10369 2
a10370 2
	sethi	%hi(8 * _gloffset_ConvolutionParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterfv), %g2
d10375 1
a10375 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterfv)], %g3
d10380 4
a10383 4
.globl glConvolutionParameteriEXT
.type glConvolutionParameteriEXT,#function
glConvolutionParameteriEXT:
#ifdef SPARC_64BIT_ADDR
d10390 2
a10391 2
	sethi	%hi(8 * _gloffset_ConvolutionParameteri), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteri), %g2
d10396 1
a10396 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteri)], %g3
d10401 4
a10404 4
.globl glConvolutionParameterivEXT
.type glConvolutionParameterivEXT,#function
glConvolutionParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10411 2
a10412 2
	sethi	%hi(8 * _gloffset_ConvolutionParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteriv), %g2
d10417 1
a10417 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteriv)], %g3
d10422 4
a10425 4
.globl glCopyConvolutionFilter1DEXT
.type glCopyConvolutionFilter1DEXT,#function
glCopyConvolutionFilter1DEXT:
#ifdef SPARC_64BIT_ADDR
d10432 2
a10433 2
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter1D), %g2
d10438 1
a10438 1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter1D)], %g3
d10443 4
a10446 4
.globl glCopyConvolutionFilter2DEXT
.type glCopyConvolutionFilter2DEXT,#function
glCopyConvolutionFilter2DEXT:
#ifdef SPARC_64BIT_ADDR
d10453 2
a10454 2
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter2D), %g2
d10459 1
a10459 1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter2D)], %g3
d10464 4
a10467 4
.globl glGetConvolutionFilterEXT
.type glGetConvolutionFilterEXT,#function
glGetConvolutionFilterEXT:
#ifdef SPARC_64BIT_ADDR
d10474 2
a10475 2
	sethi	%hi(8 * _gloffset_GetConvolutionFilterEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionFilterEXT), %g2
d10480 1
a10480 1
	ld	[%g1 + (4 * _gloffset_GetConvolutionFilterEXT)], %g3
d10485 4
a10488 4
.globl glGetConvolutionParameterfvEXT
.type glGetConvolutionParameterfvEXT,#function
glGetConvolutionParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10495 2
a10496 2
	sethi	%hi(8 * _gloffset_GetConvolutionParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterfvEXT), %g2
d10501 1
a10501 1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterfvEXT)], %g3
d10506 4
a10509 4
.globl glGetConvolutionParameterivEXT
.type glGetConvolutionParameterivEXT,#function
glGetConvolutionParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10516 2
a10517 2
	sethi	%hi(8 * _gloffset_GetConvolutionParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterivEXT), %g2
d10522 1
a10522 1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterivEXT)], %g3
d10527 4
a10530 4
.globl glGetSeparableFilterEXT
.type glGetSeparableFilterEXT,#function
glGetSeparableFilterEXT:
#ifdef SPARC_64BIT_ADDR
d10537 2
a10538 2
	sethi	%hi(8 * _gloffset_GetSeparableFilterEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetSeparableFilterEXT), %g2
d10543 1
a10543 1
	ld	[%g1 + (4 * _gloffset_GetSeparableFilterEXT)], %g3
d10548 4
a10551 4
.globl glSeparableFilter2DEXT
.type glSeparableFilter2DEXT,#function
glSeparableFilter2DEXT:
#ifdef SPARC_64BIT_ADDR
d10558 2
a10559 2
	sethi	%hi(8 * _gloffset_SeparableFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_SeparableFilter2D), %g2
d10564 1
a10564 1
	ld	[%g1 + (4 * _gloffset_SeparableFilter2D)], %g3
d10569 4
a10572 4
.globl glColorTableSGI
.type glColorTableSGI,#function
glColorTableSGI:
#ifdef SPARC_64BIT_ADDR
d10579 2
a10580 2
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
d10585 1
a10585 1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
d10590 4
a10593 4
.globl glColorTableParameterfvSGI
.type glColorTableParameterfvSGI,#function
glColorTableParameterfvSGI:
#ifdef SPARC_64BIT_ADDR
d10600 2
a10601 2
	sethi	%hi(8 * _gloffset_ColorTableParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameterfv), %g2
d10606 1
a10606 1
	ld	[%g1 + (4 * _gloffset_ColorTableParameterfv)], %g3
d10611 4
a10614 4
.globl glColorTableParameterivSGI
.type glColorTableParameterivSGI,#function
glColorTableParameterivSGI:
#ifdef SPARC_64BIT_ADDR
d10621 2
a10622 2
	sethi	%hi(8 * _gloffset_ColorTableParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameteriv), %g2
d10627 1
a10627 1
	ld	[%g1 + (4 * _gloffset_ColorTableParameteriv)], %g3
d10632 4
a10635 4
.globl glCopyColorTableSGI
.type glCopyColorTableSGI,#function
glCopyColorTableSGI:
#ifdef SPARC_64BIT_ADDR
d10642 2
a10643 2
	sethi	%hi(8 * _gloffset_CopyColorTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorTable), %g2
d10648 1
a10648 1
	ld	[%g1 + (4 * _gloffset_CopyColorTable)], %g3
d10653 4
a10656 4
.globl glGetColorTableSGI
.type glGetColorTableSGI,#function
glGetColorTableSGI:
#ifdef SPARC_64BIT_ADDR
d10663 2
a10664 2
	sethi	%hi(8 * _gloffset_GetColorTableSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableSGI), %g2
d10669 1
a10669 1
	ld	[%g1 + (4 * _gloffset_GetColorTableSGI)], %g3
d10674 4
a10677 4
.globl glGetColorTableParameterfvSGI
.type glGetColorTableParameterfvSGI,#function
glGetColorTableParameterfvSGI:
#ifdef SPARC_64BIT_ADDR
d10684 2
a10685 2
	sethi	%hi(8 * _gloffset_GetColorTableParameterfvSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfvSGI), %g2
d10690 1
a10690 1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfvSGI)], %g3
d10695 4
a10698 4
.globl glGetColorTableParameterivSGI
.type glGetColorTableParameterivSGI,#function
glGetColorTableParameterivSGI:
#ifdef SPARC_64BIT_ADDR
d10705 2
a10706 2
	sethi	%hi(8 * _gloffset_GetColorTableParameterivSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterivSGI), %g2
d10711 1
a10711 1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterivSGI)], %g3
d10716 4
a10719 4
.globl glPixelTexGenSGIX
.type glPixelTexGenSGIX,#function
glPixelTexGenSGIX:
#ifdef SPARC_64BIT_ADDR
d10726 2
a10727 2
	sethi	%hi(8 * _gloffset_PixelTexGenSGIX), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenSGIX), %g2
d10732 1
a10732 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenSGIX)], %g3
d10737 4
a10740 4
.globl glPixelTexGenParameteriSGIS
.type glPixelTexGenParameteriSGIS,#function
glPixelTexGenParameteriSGIS:
#ifdef SPARC_64BIT_ADDR
d10747 2
a10748 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameteriSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameteriSGIS), %g2
d10753 1
a10753 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameteriSGIS)], %g3
d10758 4
a10761 4
.globl glPixelTexGenParameterivSGIS
.type glPixelTexGenParameterivSGIS,#function
glPixelTexGenParameterivSGIS:
#ifdef SPARC_64BIT_ADDR
d10768 2
a10769 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameterivSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterivSGIS), %g2
d10774 1
a10774 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterivSGIS)], %g3
d10779 4
a10782 4
.globl glPixelTexGenParameterfSGIS
.type glPixelTexGenParameterfSGIS,#function
glPixelTexGenParameterfSGIS:
#ifdef SPARC_64BIT_ADDR
d10789 2
a10790 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameterfSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterfSGIS), %g2
d10795 1
a10795 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterfSGIS)], %g3
d10800 4
a10803 4
.globl glPixelTexGenParameterfvSGIS
.type glPixelTexGenParameterfvSGIS,#function
glPixelTexGenParameterfvSGIS:
#ifdef SPARC_64BIT_ADDR
d10810 2
a10811 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameterfvSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterfvSGIS), %g2
d10816 1
a10816 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterfvSGIS)], %g3
d10821 4
a10824 4
.globl glGetPixelTexGenParameterivSGIS
.type glGetPixelTexGenParameterivSGIS,#function
glGetPixelTexGenParameterivSGIS:
#ifdef SPARC_64BIT_ADDR
d10831 2
a10832 2
	sethi	%hi(8 * _gloffset_GetPixelTexGenParameterivSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelTexGenParameterivSGIS), %g2
d10837 1
a10837 1
	ld	[%g1 + (4 * _gloffset_GetPixelTexGenParameterivSGIS)], %g3
d10842 4
a10845 4
.globl glGetPixelTexGenParameterfvSGIS
.type glGetPixelTexGenParameterfvSGIS,#function
glGetPixelTexGenParameterfvSGIS:
#ifdef SPARC_64BIT_ADDR
d10852 2
a10853 2
	sethi	%hi(8 * _gloffset_GetPixelTexGenParameterfvSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelTexGenParameterfvSGIS), %g2
d10858 1
a10858 1
	ld	[%g1 + (4 * _gloffset_GetPixelTexGenParameterfvSGIS)], %g3
d10863 4
a10866 4
.globl glTexImage4DSGIS
.type glTexImage4DSGIS,#function
glTexImage4DSGIS:
#ifdef SPARC_64BIT_ADDR
d10873 2
a10874 2
	sethi	%hi(8 * _gloffset_TexImage4DSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexImage4DSGIS), %g2
d10879 1
a10879 1
	ld	[%g1 + (4 * _gloffset_TexImage4DSGIS)], %g3
d10884 4
a10887 4
.globl glTexSubImage4DSGIS
.type glTexSubImage4DSGIS,#function
glTexSubImage4DSGIS:
#ifdef SPARC_64BIT_ADDR
d10894 2
a10895 2
	sethi	%hi(8 * _gloffset_TexSubImage4DSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage4DSGIS), %g2
d10900 1
a10900 1
	ld	[%g1 + (4 * _gloffset_TexSubImage4DSGIS)], %g3
d10905 4
a10908 4
.globl glAreTexturesResidentEXT
.type glAreTexturesResidentEXT,#function
glAreTexturesResidentEXT:
#ifdef SPARC_64BIT_ADDR
d10915 2
a10916 2
	sethi	%hi(8 * _gloffset_AreTexturesResidentEXT), %g2
	or	%g2, %lo(8 * _gloffset_AreTexturesResidentEXT), %g2
d10921 1
a10921 1
	ld	[%g1 + (4 * _gloffset_AreTexturesResidentEXT)], %g3
d10926 4
a10929 4
.globl glBindTextureEXT
.type glBindTextureEXT,#function
glBindTextureEXT:
#ifdef SPARC_64BIT_ADDR
d10936 2
a10937 2
	sethi	%hi(8 * _gloffset_BindTexture), %g2
	or	%g2, %lo(8 * _gloffset_BindTexture), %g2
d10942 1
a10942 1
	ld	[%g1 + (4 * _gloffset_BindTexture)], %g3
d10947 4
a10950 4
.globl glDeleteTexturesEXT
.type glDeleteTexturesEXT,#function
glDeleteTexturesEXT:
#ifdef SPARC_64BIT_ADDR
d10957 2
a10958 2
	sethi	%hi(8 * _gloffset_DeleteTextures), %g2
	or	%g2, %lo(8 * _gloffset_DeleteTextures), %g2
d10963 1
a10963 1
	ld	[%g1 + (4 * _gloffset_DeleteTextures)], %g3
d10968 4
a10971 4
.globl glGenTexturesEXT
.type glGenTexturesEXT,#function
glGenTexturesEXT:
#ifdef SPARC_64BIT_ADDR
d10978 2
a10979 2
	sethi	%hi(8 * _gloffset_GenTexturesEXT), %g2
	or	%g2, %lo(8 * _gloffset_GenTexturesEXT), %g2
d10984 1
a10984 1
	ld	[%g1 + (4 * _gloffset_GenTexturesEXT)], %g3
d10989 4
a10992 4
.globl glIsTextureEXT
.type glIsTextureEXT,#function
glIsTextureEXT:
#ifdef SPARC_64BIT_ADDR
d10999 2
a11000 2
	sethi	%hi(8 * _gloffset_IsTextureEXT), %g2
	or	%g2, %lo(8 * _gloffset_IsTextureEXT), %g2
d11005 1
a11005 1
	ld	[%g1 + (4 * _gloffset_IsTextureEXT)], %g3
d11010 4
a11013 4
.globl glPrioritizeTexturesEXT
.type glPrioritizeTexturesEXT,#function
glPrioritizeTexturesEXT:
#ifdef SPARC_64BIT_ADDR
d11020 2
a11021 2
	sethi	%hi(8 * _gloffset_PrioritizeTextures), %g2
	or	%g2, %lo(8 * _gloffset_PrioritizeTextures), %g2
d11026 1
a11026 1
	ld	[%g1 + (4 * _gloffset_PrioritizeTextures)], %g3
d11031 4
a11034 4
.globl glDetailTexFuncSGIS
.type glDetailTexFuncSGIS,#function
glDetailTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
d11041 2
a11042 2
	sethi	%hi(8 * _gloffset_DetailTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_DetailTexFuncSGIS), %g2
d11047 1
a11047 2710
	ld	[%g1 + (4 * _gloffset_DetailTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetDetailTexFuncSGIS
.type glGetDetailTexFuncSGIS,#function
glGetDetailTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetDetailTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetDetailTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetDetailTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSharpenTexFuncSGIS
.type glSharpenTexFuncSGIS,#function
glSharpenTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SharpenTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SharpenTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SharpenTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetSharpenTexFuncSGIS
.type glGetSharpenTexFuncSGIS,#function
glGetSharpenTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetSharpenTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetSharpenTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetSharpenTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSampleMaskSGIS
.type glSampleMaskSGIS,#function
glSampleMaskSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SampleMaskSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SampleMaskSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SampleMaskSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSamplePatternSGIS
.type glSamplePatternSGIS,#function
glSamplePatternSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SamplePatternSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SamplePatternSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SamplePatternSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glArrayElementEXT
.type glArrayElementEXT,#function
glArrayElementEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ArrayElement), %g2
	or	%g2, %lo(8 * _gloffset_ArrayElement), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ArrayElement)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorPointerEXT
.type glColorPointerEXT,#function
glColorPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_ColorPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawArraysEXT
.type glDrawArraysEXT,#function
glDrawArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawArrays), %g2
	or	%g2, %lo(8 * _gloffset_DrawArrays), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawArrays)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEdgeFlagPointerEXT
.type glEdgeFlagPointerEXT,#function
glEdgeFlagPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EdgeFlagPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_EdgeFlagPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EdgeFlagPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPointervEXT
.type glGetPointervEXT,#function
glGetPointervEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPointerv), %g2
	or	%g2, %lo(8 * _gloffset_GetPointerv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPointerv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexPointerEXT
.type glIndexPointerEXT,#function
glIndexPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormalPointerEXT
.type glNormalPointerEXT,#function
glNormalPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_NormalPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_NormalPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_NormalPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoordPointerEXT
.type glTexCoordPointerEXT,#function
glTexCoordPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_TexCoordPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoordPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexPointerEXT
.type glVertexPointerEXT,#function
glVertexPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendEquationEXT
.type glBlendEquationEXT,#function
glBlendEquationEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendEquation), %g2
	or	%g2, %lo(8 * _gloffset_BlendEquation), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendEquation)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterfSGIX
.type glSpriteParameterfSGIX,#function
glSpriteParameterfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterfvSGIX
.type glSpriteParameterfvSGIX,#function
glSpriteParameterfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameteriSGIX
.type glSpriteParameteriSGIX,#function
glSpriteParameteriSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameteriSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameteriSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameteriSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterivSGIX
.type glSpriteParameterivSGIX,#function
glSpriteParameterivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfEXT
.type glPointParameterfEXT,#function
glPointParameterfEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvEXT
.type glPointParameterfvEXT,#function
glPointParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfARB
.type glPointParameterfARB,#function
glPointParameterfARB:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvARB
.type glPointParameterfvARB,#function
glPointParameterfvARB:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfSGIS
.type glPointParameterfSGIS,#function
glPointParameterfSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvSGIS
.type glPointParameterfvSGIS,#function
glPointParameterfvSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetInstrumentsSGIX
.type glGetInstrumentsSGIX,#function
glGetInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glInstrumentsBufferSGIX
.type glInstrumentsBufferSGIX,#function
glInstrumentsBufferSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_InstrumentsBufferSGIX), %g2
	or	%g2, %lo(8 * _gloffset_InstrumentsBufferSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_InstrumentsBufferSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPollInstrumentsSGIX
.type glPollInstrumentsSGIX,#function
glPollInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PollInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_PollInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PollInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReadInstrumentsSGIX
.type glReadInstrumentsSGIX,#function
glReadInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReadInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ReadInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReadInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStartInstrumentsSGIX
.type glStartInstrumentsSGIX,#function
glStartInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StartInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_StartInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StartInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStopInstrumentsSGIX
.type glStopInstrumentsSGIX,#function
glStopInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StopInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_StopInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StopInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFrameZoomSGIX
.type glFrameZoomSGIX,#function
glFrameZoomSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FrameZoomSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FrameZoomSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FrameZoomSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTagSampleBufferSGIX
.type glTagSampleBufferSGIX,#function
glTagSampleBufferSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TagSampleBufferSGIX), %g2
	or	%g2, %lo(8 * _gloffset_TagSampleBufferSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TagSampleBufferSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReferencePlaneSGIX
.type glReferencePlaneSGIX,#function
glReferencePlaneSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReferencePlaneSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ReferencePlaneSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReferencePlaneSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlushRasterSGIX
.type glFlushRasterSGIX,#function
glFlushRasterSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FlushRasterSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FlushRasterSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FlushRasterSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorSubTableEXT
.type glColorSubTableEXT,#function
glColorSubTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyColorSubTableEXT
.type glCopyColorSubTableEXT,#function
glCopyColorSubTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glHintPGI
.type glHintPGI,#function
glHintPGI:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_HintPGI), %g2
	or	%g2, %lo(8 * _gloffset_HintPGI), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_HintPGI)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableEXT
.type glColorTableEXT,#function
glColorTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableEXT
.type glGetColorTableEXT,#function
glGetColorTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterivEXT
.type glGetColorTableParameterivEXT,#function
glGetColorTableParameterivEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterfvEXT
.type glGetColorTableParameterfvEXT,#function
glGetColorTableParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetListParameterfvSGIX
.type glGetListParameterfvSGIX,#function
glGetListParameterfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetListParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetListParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetListParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetListParameterivSGIX
.type glGetListParameterivSGIX,#function
glGetListParameterivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetListParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetListParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetListParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterfSGIX
.type glListParameterfSGIX,#function
glListParameterfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterfvSGIX
.type glListParameterfvSGIX,#function
glListParameterfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameteriSGIX
.type glListParameteriSGIX,#function
glListParameteriSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameteriSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameteriSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameteriSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterivSGIX
.type glListParameterivSGIX,#function
glListParameterivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexMaterialEXT
.type glIndexMaterialEXT,#function
glIndexMaterialEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexMaterialEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexMaterialEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexMaterialEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexFuncEXT
.type glIndexFuncEXT,#function
glIndexFuncEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexFuncEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexFuncEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexFuncEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLockArraysEXT
.type glLockArraysEXT,#function
glLockArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LockArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_LockArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LockArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glUnlockArraysEXT
.type glUnlockArraysEXT,#function
glUnlockArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_UnlockArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_UnlockArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_UnlockArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullParameterdvEXT
.type glCullParameterdvEXT,#function
glCullParameterdvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullParameterdvEXT), %g2
	or	%g2, %lo(8 * _gloffset_CullParameterdvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullParameterdvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullParameterfvEXT
.type glCullParameterfvEXT,#function
glCullParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_CullParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentColorMaterialSGIX
.type glFragmentColorMaterialSGIX,#function
glFragmentColorMaterialSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentColorMaterialSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentColorMaterialSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentColorMaterialSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightfSGIX
.type glFragmentLightfSGIX,#function
glFragmentLightfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightfvSGIX
.type glFragmentLightfvSGIX,#function
glFragmentLightfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightiSGIX
.type glFragmentLightiSGIX,#function
glFragmentLightiSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightiSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightiSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightiSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightivSGIX
.type glFragmentLightivSGIX,#function
glFragmentLightivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelfSGIX
.type glFragmentLightModelfSGIX,#function
glFragmentLightModelfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelfvSGIX
.type glFragmentLightModelfvSGIX,#function
glFragmentLightModelfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModeliSGIX
.type glFragmentLightModeliSGIX,#function
glFragmentLightModeliSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModeliSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModeliSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModeliSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelivSGIX
.type glFragmentLightModelivSGIX,#function
glFragmentLightModelivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialfSGIX
.type glFragmentMaterialfSGIX,#function
glFragmentMaterialfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialfvSGIX
.type glFragmentMaterialfvSGIX,#function
glFragmentMaterialfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialiSGIX
.type glFragmentMaterialiSGIX,#function
glFragmentMaterialiSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialiSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialiSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialiSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialivSGIX
.type glFragmentMaterialivSGIX,#function
glFragmentMaterialivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentLightfvSGIX
.type glGetFragmentLightfvSGIX,#function
glGetFragmentLightfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentLightfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentLightfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentLightfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentLightivSGIX
.type glGetFragmentLightivSGIX,#function
glGetFragmentLightivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentLightivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentLightivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentLightivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentMaterialfvSGIX
.type glGetFragmentMaterialfvSGIX,#function
glGetFragmentMaterialfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentMaterialfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentMaterialfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentMaterialfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentMaterialivSGIX
.type glGetFragmentMaterialivSGIX,#function
glGetFragmentMaterialivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentMaterialivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentMaterialivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentMaterialivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightEnviSGIX
.type glLightEnviSGIX,#function
glLightEnviSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightEnviSGIX), %g2
	or	%g2, %lo(8 * _gloffset_LightEnviSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightEnviSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawRangeElementsEXT
.type glDrawRangeElementsEXT,#function
glDrawRangeElementsEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawRangeElements), %g2
	or	%g2, %lo(8 * _gloffset_DrawRangeElements), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawRangeElements)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3bEXT
.type glSecondaryColor3bEXT,#function
glSecondaryColor3bEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3bEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3bvEXT
.type glSecondaryColor3bvEXT,#function
glSecondaryColor3bvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3bvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3dEXT
.type glSecondaryColor3dEXT,#function
glSecondaryColor3dEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3dEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3dvEXT
.type glSecondaryColor3dvEXT,#function
glSecondaryColor3dvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3dvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3fEXT
.type glSecondaryColor3fEXT,#function
glSecondaryColor3fEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3fEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3fvEXT
.type glSecondaryColor3fvEXT,#function
glSecondaryColor3fvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3fvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3iEXT
.type glSecondaryColor3iEXT,#function
glSecondaryColor3iEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3iEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3iEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3iEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ivEXT
.type glSecondaryColor3ivEXT,#function
glSecondaryColor3ivEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3sEXT
.type glSecondaryColor3sEXT,#function
glSecondaryColor3sEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3sEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3sEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3sEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3svEXT
.type glSecondaryColor3svEXT,#function
glSecondaryColor3svEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3svEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3svEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3svEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ubEXT
.type glSecondaryColor3ubEXT,#function
glSecondaryColor3ubEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ubEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ubvEXT
.type glSecondaryColor3ubvEXT,#function
glSecondaryColor3ubvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3uiEXT
.type glSecondaryColor3uiEXT,#function
glSecondaryColor3uiEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3uiEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uiEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uiEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3uivEXT
.type glSecondaryColor3uivEXT,#function
glSecondaryColor3uivEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3uivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3usEXT
.type glSecondaryColor3usEXT,#function
glSecondaryColor3usEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3usEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3usvEXT
.type glSecondaryColor3usvEXT,#function
glSecondaryColor3usvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3usvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColorPointerEXT
.type glSecondaryColorPointerEXT,#function
glSecondaryColorPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColorPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColorPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiDrawArraysEXT
.type glMultiDrawArraysEXT,#function
glMultiDrawArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiDrawArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiDrawArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiDrawElementsEXT
.type glMultiDrawElementsEXT,#function
glMultiDrawElementsEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiDrawElementsEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawElementsEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiDrawElementsEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordfEXT
.type glFogCoordfEXT,#function
glFogCoordfEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordfEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordfvEXT
.type glFogCoordfvEXT,#function
glFogCoordfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoorddEXT
.type glFogCoorddEXT,#function
glFogCoorddEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoorddEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoorddEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoorddvEXT
.type glFogCoorddvEXT,#function
glFogCoorddvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoorddvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoorddvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordPointerEXT
.type glFogCoordPointerEXT,#function
glFogCoordPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFuncSeparateEXT
.type glBlendFuncSeparateEXT,#function
glBlendFuncSeparateEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFuncSeparateINGR
.type glBlendFuncSeparateINGR,#function
glBlendFuncSeparateINGR:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightfEXT
.type glVertexWeightfEXT,#function
glVertexWeightfEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightfEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightfvEXT
.type glVertexWeightfvEXT,#function
glVertexWeightfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightPointerEXT
.type glVertexWeightPointerEXT,#function
glVertexWeightPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlushVertexArrayRangeNV
.type glFlushVertexArrayRangeNV,#function
glFlushVertexArrayRangeNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FlushVertexArrayRangeNV), %g2
	or	%g2, %lo(8 * _gloffset_FlushVertexArrayRangeNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FlushVertexArrayRangeNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexArrayRangeNV
.type glVertexArrayRangeNV,#function
glVertexArrayRangeNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexArrayRangeNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexArrayRangeNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexArrayRangeNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterfvNV
.type glCombinerParameterfvNV,#function
glCombinerParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterfNV
.type glCombinerParameterfNV,#function
glCombinerParameterfNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterfNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterfNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterfNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterivNV
.type glCombinerParameterivNV,#function
glCombinerParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameteriNV
.type glCombinerParameteriNV,#function
glCombinerParameteriNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameteriNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameteriNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerInputNV
.type glCombinerInputNV,#function
glCombinerInputNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerInputNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerInputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerInputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerOutputNV
.type glCombinerOutputNV,#function
glCombinerOutputNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerOutputNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerOutputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerOutputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFinalCombinerInputNV
.type glFinalCombinerInputNV,#function
glFinalCombinerInputNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FinalCombinerInputNV), %g2
	or	%g2, %lo(8 * _gloffset_FinalCombinerInputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FinalCombinerInputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerInputParameterfvNV
.type glGetCombinerInputParameterfvNV,#function
glGetCombinerInputParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerInputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerInputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerInputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerInputParameterivNV
.type glGetCombinerInputParameterivNV,#function
glGetCombinerInputParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerInputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerInputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerInputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerOutputParameterfvNV
.type glGetCombinerOutputParameterfvNV,#function
glGetCombinerOutputParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerOutputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerOutputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerOutputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerOutputParameterivNV
.type glGetCombinerOutputParameterivNV,#function
glGetCombinerOutputParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerOutputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerOutputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerOutputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFinalCombinerInputParameterfvNV
.type glGetFinalCombinerInputParameterfvNV,#function
glGetFinalCombinerInputParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFinalCombinerInputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFinalCombinerInputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFinalCombinerInputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFinalCombinerInputParameterivNV
.type glGetFinalCombinerInputParameterivNV,#function
glGetFinalCombinerInputParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFinalCombinerInputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFinalCombinerInputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFinalCombinerInputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResizeBuffersMESA
.type glResizeBuffersMESA,#function
glResizeBuffersMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResizeBuffersMESA), %g2
	or	%g2, %lo(8 * _gloffset_ResizeBuffersMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResizeBuffersMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2dMESA
.type glWindowPos2dMESA,#function
glWindowPos2dMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2dvMESA
.type glWindowPos2dvMESA,#function
glWindowPos2dvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2fMESA
.type glWindowPos2fMESA,#function
glWindowPos2fMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2fvMESA
.type glWindowPos2fvMESA,#function
glWindowPos2fvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2iMESA
.type glWindowPos2iMESA,#function
glWindowPos2iMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2ivMESA
.type glWindowPos2ivMESA,#function
glWindowPos2ivMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2sMESA
.type glWindowPos2sMESA,#function
glWindowPos2sMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2svMESA
.type glWindowPos2svMESA,#function
glWindowPos2svMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3dMESA
.type glWindowPos3dMESA,#function
glWindowPos3dMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3dvMESA
.type glWindowPos3dvMESA,#function
glWindowPos3dvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3fMESA
.type glWindowPos3fMESA,#function
glWindowPos3fMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
d11052 4
a11055 256
.globl glWindowPos3fvMESA
.type glWindowPos3fvMESA,#function
glWindowPos3fvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3iMESA
.type glWindowPos3iMESA,#function
glWindowPos3iMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3ivMESA
.type glWindowPos3ivMESA,#function
glWindowPos3ivMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3sMESA
.type glWindowPos3sMESA,#function
glWindowPos3sMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3svMESA
.type glWindowPos3svMESA,#function
glWindowPos3svMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4dMESA
.type glWindowPos4dMESA,#function
glWindowPos4dMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4dvMESA
.type glWindowPos4dvMESA,#function
glWindowPos4dvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4fMESA
.type glWindowPos4fMESA,#function
glWindowPos4fMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4fvMESA
.type glWindowPos4fvMESA,#function
glWindowPos4fvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4iMESA
.type glWindowPos4iMESA,#function
glWindowPos4iMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4ivMESA
.type glWindowPos4ivMESA,#function
glWindowPos4ivMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4sMESA
.type glWindowPos4sMESA,#function
glWindowPos4sMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4svMESA
.type glWindowPos4svMESA,#function
glWindowPos4svMESA:
#ifdef SPARC_64BIT_ADDR
d11062 2
a11063 2
	sethi	%hi(8 * _gloffset_WindowPos4svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4svMESA), %g2
d11068 1
a11068 1
	ld	[%g1 + (4 * _gloffset_WindowPos4svMESA)], %g3
d11073 4
a11076 4
.globl glTbufferMask3DFX
.type glTbufferMask3DFX,#function
glTbufferMask3DFX:
#ifdef SPARC_64BIT_ADDR
d11083 2
a11084 2
	sethi	%hi(8 * _gloffset_TbufferMask3DFX), %g2
	or	%g2, %lo(8 * _gloffset_TbufferMask3DFX), %g2
d11089 1
a11089 1
	ld	[%g1 + (4 * _gloffset_TbufferMask3DFX)], %g3
d11094 4
a11097 4
.globl glSampleMaskEXT
.type glSampleMaskEXT,#function
glSampleMaskEXT:
#ifdef SPARC_64BIT_ADDR
d11104 2
a11105 2
	sethi	%hi(8 * _gloffset_SampleMaskSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SampleMaskSGIS), %g2
d11110 1
a11110 1
	ld	[%g1 + (4 * _gloffset_SampleMaskSGIS)], %g3
d11115 4
a11118 4
.globl glSamplePatternEXT
.type glSamplePatternEXT,#function
glSamplePatternEXT:
#ifdef SPARC_64BIT_ADDR
d11125 2
a11126 2
	sethi	%hi(8 * _gloffset_SamplePatternSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SamplePatternSGIS), %g2
d11131 1
a11131 1
	ld	[%g1 + (4 * _gloffset_SamplePatternSGIS)], %g3
d11136 4
a11139 4
.globl glDeleteFencesNV
.type glDeleteFencesNV,#function
glDeleteFencesNV:
#ifdef SPARC_64BIT_ADDR
d11146 2
a11147 2
	sethi	%hi(8 * _gloffset_DeleteFencesNV), %g2
	or	%g2, %lo(8 * _gloffset_DeleteFencesNV), %g2
d11152 1
a11152 1
	ld	[%g1 + (4 * _gloffset_DeleteFencesNV)], %g3
d11157 4
a11160 4
.globl glGenFencesNV
.type glGenFencesNV,#function
glGenFencesNV:
#ifdef SPARC_64BIT_ADDR
d11167 2
a11168 2
	sethi	%hi(8 * _gloffset_GenFencesNV), %g2
	or	%g2, %lo(8 * _gloffset_GenFencesNV), %g2
d11173 1
a11173 1
	ld	[%g1 + (4 * _gloffset_GenFencesNV)], %g3
d11178 4
a11181 4
.globl glIsFenceNV
.type glIsFenceNV,#function
glIsFenceNV:
#ifdef SPARC_64BIT_ADDR
d11188 2
a11189 2
	sethi	%hi(8 * _gloffset_IsFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_IsFenceNV), %g2
d11194 1
a11194 1
	ld	[%g1 + (4 * _gloffset_IsFenceNV)], %g3
d11199 4
a11202 4
.globl glTestFenceNV
.type glTestFenceNV,#function
glTestFenceNV:
#ifdef SPARC_64BIT_ADDR
d11209 2
a11210 2
	sethi	%hi(8 * _gloffset_TestFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_TestFenceNV), %g2
d11215 1
a11215 1
	ld	[%g1 + (4 * _gloffset_TestFenceNV)], %g3
d11220 4
a11223 4
.globl glGetFenceivNV
.type glGetFenceivNV,#function
glGetFenceivNV:
#ifdef SPARC_64BIT_ADDR
d11230 2
a11231 2
	sethi	%hi(8 * _gloffset_GetFenceivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFenceivNV), %g2
d11236 1
a11236 1
	ld	[%g1 + (4 * _gloffset_GetFenceivNV)], %g3
d11241 4
a11244 4
.globl glFinishFenceNV
.type glFinishFenceNV,#function
glFinishFenceNV:
#ifdef SPARC_64BIT_ADDR
d11251 2
a11252 2
	sethi	%hi(8 * _gloffset_FinishFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_FinishFenceNV), %g2
d11257 1
a11257 1
	ld	[%g1 + (4 * _gloffset_FinishFenceNV)], %g3
d11262 4
a11265 4
.globl glSetFenceNV
.type glSetFenceNV,#function
glSetFenceNV:
#ifdef SPARC_64BIT_ADDR
d11272 2
a11273 2
	sethi	%hi(8 * _gloffset_SetFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_SetFenceNV), %g2
d11278 1
a11278 1
	ld	[%g1 + (4 * _gloffset_SetFenceNV)], %g3
d11283 4
a11286 4
.globl glWindowPos2dARB
.type glWindowPos2dARB,#function
glWindowPos2dARB:
#ifdef SPARC_64BIT_ADDR
d11293 2
a11294 2
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
d11299 1
a11299 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
d11304 4
a11307 4
.globl glWindowPos2fARB
.type glWindowPos2fARB,#function
glWindowPos2fARB:
#ifdef SPARC_64BIT_ADDR
d11314 2
a11315 2
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
d11320 1
a11320 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
d11325 4
a11328 4
.globl glWindowPos2iARB
.type glWindowPos2iARB,#function
glWindowPos2iARB:
#ifdef SPARC_64BIT_ADDR
d11335 2
a11336 2
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
d11341 1
a11341 1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
d11346 4
a11349 4
.globl glWindowPos2sARB
.type glWindowPos2sARB,#function
glWindowPos2sARB:
#ifdef SPARC_64BIT_ADDR
d11356 2
a11357 2
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
d11362 1
a11362 1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
d11367 4
a11370 4
.globl glWindowPos2dvARB
.type glWindowPos2dvARB,#function
glWindowPos2dvARB:
#ifdef SPARC_64BIT_ADDR
d11377 2
a11378 2
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
d11383 1
a11383 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
d11388 4
a11391 4
.globl glWindowPos2fvARB
.type glWindowPos2fvARB,#function
glWindowPos2fvARB:
#ifdef SPARC_64BIT_ADDR
d11398 2
a11399 2
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
d11404 1
a11404 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
d11409 4
a11412 4
.globl glWindowPos2ivARB
.type glWindowPos2ivARB,#function
glWindowPos2ivARB:
#ifdef SPARC_64BIT_ADDR
d11419 2
a11420 2
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
d11425 1
a11425 1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
d11430 4
a11433 4
.globl glWindowPos2svARB
.type glWindowPos2svARB,#function
glWindowPos2svARB:
#ifdef SPARC_64BIT_ADDR
d11440 2
a11441 2
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
d11446 1
a11446 1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
d11451 4
a11454 4
.globl glWindowPos3dARB
.type glWindowPos3dARB,#function
glWindowPos3dARB:
#ifdef SPARC_64BIT_ADDR
d11461 2
a11462 2
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
d11467 1
a11467 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
d11472 4
a11475 4
.globl glWindowPos3fARB
.type glWindowPos3fARB,#function
glWindowPos3fARB:
#ifdef SPARC_64BIT_ADDR
d11482 2
a11483 2
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
d11488 1
a11488 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
d11493 4
a11496 4
.globl glWindowPos3iARB
.type glWindowPos3iARB,#function
glWindowPos3iARB:
#ifdef SPARC_64BIT_ADDR
d11503 2
a11504 2
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
d11509 1
a11509 1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
d11514 4
a11517 4
.globl glWindowPos3sARB
.type glWindowPos3sARB,#function
glWindowPos3sARB:
#ifdef SPARC_64BIT_ADDR
d11524 2
a11525 2
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
d11530 1
a11530 1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
d11535 4
a11538 4
.globl glWindowPos3dvARB
.type glWindowPos3dvARB,#function
glWindowPos3dvARB:
#ifdef SPARC_64BIT_ADDR
d11545 2
a11546 2
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
d11551 1
a11551 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
d11556 4
a11559 4
.globl glWindowPos3fvARB
.type glWindowPos3fvARB,#function
glWindowPos3fvARB:
#ifdef SPARC_64BIT_ADDR
d11566 2
a11567 2
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
d11572 1
a11572 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
d11577 4
a11580 4
.globl glWindowPos3ivARB
.type glWindowPos3ivARB,#function
glWindowPos3ivARB:
#ifdef SPARC_64BIT_ADDR
d11587 2
a11588 2
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
d11593 1
a11593 1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
d11598 4
a11601 4
.globl glWindowPos3svARB
.type glWindowPos3svARB,#function
glWindowPos3svARB:
#ifdef SPARC_64BIT_ADDR
d11608 2
a11609 2
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
d11614 1
a11614 1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
d11619 4
a11622 4
.globl glAreProgramsResidentNV
.type glAreProgramsResidentNV,#function
glAreProgramsResidentNV:
#ifdef SPARC_64BIT_ADDR
d11629 2
a11630 2
	sethi	%hi(8 * _gloffset_AreProgramsResidentNV), %g2
	or	%g2, %lo(8 * _gloffset_AreProgramsResidentNV), %g2
d11635 1
a11635 1
	ld	[%g1 + (4 * _gloffset_AreProgramsResidentNV)], %g3
d11640 4
a11643 4
.globl glBindProgramNV
.type glBindProgramNV,#function
glBindProgramNV:
#ifdef SPARC_64BIT_ADDR
d11650 2
a11651 2
	sethi	%hi(8 * _gloffset_BindProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_BindProgramNV), %g2
d11656 1
a11656 1
	ld	[%g1 + (4 * _gloffset_BindProgramNV)], %g3
d11661 4
a11664 4
.globl glDeleteProgramsNV
.type glDeleteProgramsNV,#function
glDeleteProgramsNV:
#ifdef SPARC_64BIT_ADDR
d11671 2
a11672 2
	sethi	%hi(8 * _gloffset_DeleteProgramsNV), %g2
	or	%g2, %lo(8 * _gloffset_DeleteProgramsNV), %g2
d11677 1
a11677 1
	ld	[%g1 + (4 * _gloffset_DeleteProgramsNV)], %g3
d11682 4
a11685 4
.globl glExecuteProgramNV
.type glExecuteProgramNV,#function
glExecuteProgramNV:
#ifdef SPARC_64BIT_ADDR
d11692 2
a11693 2
	sethi	%hi(8 * _gloffset_ExecuteProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_ExecuteProgramNV), %g2
d11698 1
a11698 1
	ld	[%g1 + (4 * _gloffset_ExecuteProgramNV)], %g3
d11703 4
a11706 4
.globl glGenProgramsNV
.type glGenProgramsNV,#function
glGenProgramsNV:
#ifdef SPARC_64BIT_ADDR
d11713 2
a11714 2
	sethi	%hi(8 * _gloffset_GenProgramsNV), %g2
	or	%g2, %lo(8 * _gloffset_GenProgramsNV), %g2
d11719 1
a11719 1
	ld	[%g1 + (4 * _gloffset_GenProgramsNV)], %g3
d11724 4
a11727 4
.globl glGetProgramParameterdvNV
.type glGetProgramParameterdvNV,#function
glGetProgramParameterdvNV:
#ifdef SPARC_64BIT_ADDR
d11734 2
a11735 2
	sethi	%hi(8 * _gloffset_GetProgramParameterdvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramParameterdvNV), %g2
d11740 1
a11740 1
	ld	[%g1 + (4 * _gloffset_GetProgramParameterdvNV)], %g3
d11745 4
a11748 4
.globl glGetProgramParameterfvNV
.type glGetProgramParameterfvNV,#function
glGetProgramParameterfvNV:
#ifdef SPARC_64BIT_ADDR
d11755 2
a11756 2
	sethi	%hi(8 * _gloffset_GetProgramParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramParameterfvNV), %g2
d11761 1
a11761 1
	ld	[%g1 + (4 * _gloffset_GetProgramParameterfvNV)], %g3
d11766 4
a11769 4
.globl glGetProgramivNV
.type glGetProgramivNV,#function
glGetProgramivNV:
#ifdef SPARC_64BIT_ADDR
d11776 2
a11777 2
	sethi	%hi(8 * _gloffset_GetProgramivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramivNV), %g2
d11782 1
a11782 1
	ld	[%g1 + (4 * _gloffset_GetProgramivNV)], %g3
d11787 4
a11790 4
.globl glGetProgramStringNV
.type glGetProgramStringNV,#function
glGetProgramStringNV:
#ifdef SPARC_64BIT_ADDR
d11797 2
a11798 2
	sethi	%hi(8 * _gloffset_GetProgramStringNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramStringNV), %g2
d11803 1
a11803 1
	ld	[%g1 + (4 * _gloffset_GetProgramStringNV)], %g3
d11808 4
a11811 4
.globl glGetTrackMatrixivNV
.type glGetTrackMatrixivNV,#function
glGetTrackMatrixivNV:
#ifdef SPARC_64BIT_ADDR
d11818 2
a11819 2
	sethi	%hi(8 * _gloffset_GetTrackMatrixivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetTrackMatrixivNV), %g2
d11824 1
a11824 1
	ld	[%g1 + (4 * _gloffset_GetTrackMatrixivNV)], %g3
d11829 4
a11832 4
.globl glGetVertexAttribdvNV
.type glGetVertexAttribdvNV,#function
glGetVertexAttribdvNV:
#ifdef SPARC_64BIT_ADDR
d11839 2
a11840 2
	sethi	%hi(8 * _gloffset_GetVertexAttribdvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribdvNV), %g2
d11845 1
a11845 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribdvNV)], %g3
d11850 4
a11853 4
.globl glGetVertexAttribfvNV
.type glGetVertexAttribfvNV,#function
glGetVertexAttribfvNV:
#ifdef SPARC_64BIT_ADDR
d11860 2
a11861 2
	sethi	%hi(8 * _gloffset_GetVertexAttribfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribfvNV), %g2
d11866 1
a11866 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribfvNV)], %g3
d11871 4
a11874 4
.globl glGetVertexAttribivNV
.type glGetVertexAttribivNV,#function
glGetVertexAttribivNV:
#ifdef SPARC_64BIT_ADDR
d11881 2
a11882 2
	sethi	%hi(8 * _gloffset_GetVertexAttribivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribivNV), %g2
d11887 1
a11887 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribivNV)], %g3
d11892 4
a11895 4
.globl glGetVertexAttribPointervNV
.type glGetVertexAttribPointervNV,#function
glGetVertexAttribPointervNV:
#ifdef SPARC_64BIT_ADDR
d11902 2
a11903 2
	sethi	%hi(8 * _gloffset_GetVertexAttribPointervNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribPointervNV), %g2
d11908 1
a11908 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribPointervNV)], %g3
d11913 4
a11916 4
.globl glIsProgramNV
.type glIsProgramNV,#function
glIsProgramNV:
#ifdef SPARC_64BIT_ADDR
d11923 2
a11924 2
	sethi	%hi(8 * _gloffset_IsProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_IsProgramNV), %g2
d11929 1
a11929 1
	ld	[%g1 + (4 * _gloffset_IsProgramNV)], %g3
d11934 4
a11937 4
.globl glLoadProgramNV
.type glLoadProgramNV,#function
glLoadProgramNV:
#ifdef SPARC_64BIT_ADDR
d11944 2
a11945 2
	sethi	%hi(8 * _gloffset_LoadProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_LoadProgramNV), %g2
d11950 1
a11950 1
	ld	[%g1 + (4 * _gloffset_LoadProgramNV)], %g3
d11955 4
a11958 4
.globl glProgramParameter4dNV
.type glProgramParameter4dNV,#function
glProgramParameter4dNV:
#ifdef SPARC_64BIT_ADDR
d11965 2
a11966 2
	sethi	%hi(8 * _gloffset_ProgramParameter4dNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4dNV), %g2
d11971 1
a11971 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4dNV)], %g3
d11976 4
a11979 4
.globl glProgramParameter4dvNV
.type glProgramParameter4dvNV,#function
glProgramParameter4dvNV:
#ifdef SPARC_64BIT_ADDR
d11986 2
a11987 2
	sethi	%hi(8 * _gloffset_ProgramParameter4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4dvNV), %g2
d11992 1
a11992 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4dvNV)], %g3
d11997 4
a12000 4
.globl glProgramParameter4fNV
.type glProgramParameter4fNV,#function
glProgramParameter4fNV:
#ifdef SPARC_64BIT_ADDR
d12007 2
a12008 2
	sethi	%hi(8 * _gloffset_ProgramParameter4fNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4fNV), %g2
d12013 1
a12013 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4fNV)], %g3
d12018 4
a12021 4
.globl glProgramParameter4fvNV
.type glProgramParameter4fvNV,#function
glProgramParameter4fvNV:
#ifdef SPARC_64BIT_ADDR
d12028 2
a12029 2
	sethi	%hi(8 * _gloffset_ProgramParameter4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4fvNV), %g2
d12034 1
a12034 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4fvNV)], %g3
d12039 4
a12042 4
.globl glProgramParameters4dvNV
.type glProgramParameters4dvNV,#function
glProgramParameters4dvNV:
#ifdef SPARC_64BIT_ADDR
d12049 2
a12050 2
	sethi	%hi(8 * _gloffset_ProgramParameters4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameters4dvNV), %g2
d12055 1
a12055 1
	ld	[%g1 + (4 * _gloffset_ProgramParameters4dvNV)], %g3
d12060 4
a12063 4
.globl glProgramParameters4fvNV
.type glProgramParameters4fvNV,#function
glProgramParameters4fvNV:
#ifdef SPARC_64BIT_ADDR
d12070 2
a12071 2
	sethi	%hi(8 * _gloffset_ProgramParameters4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameters4fvNV), %g2
d12076 1
a12076 1
	ld	[%g1 + (4 * _gloffset_ProgramParameters4fvNV)], %g3
d12081 4
a12084 4
.globl glRequestResidentProgramsNV
.type glRequestResidentProgramsNV,#function
glRequestResidentProgramsNV:
#ifdef SPARC_64BIT_ADDR
d12091 2
a12092 2
	sethi	%hi(8 * _gloffset_RequestResidentProgramsNV), %g2
	or	%g2, %lo(8 * _gloffset_RequestResidentProgramsNV), %g2
d12097 1
a12097 1
	ld	[%g1 + (4 * _gloffset_RequestResidentProgramsNV)], %g3
d12102 4
a12105 4
.globl glTrackMatrixNV
.type glTrackMatrixNV,#function
glTrackMatrixNV:
#ifdef SPARC_64BIT_ADDR
d12112 2
a12113 2
	sethi	%hi(8 * _gloffset_TrackMatrixNV), %g2
	or	%g2, %lo(8 * _gloffset_TrackMatrixNV), %g2
d12118 1
a12118 1
	ld	[%g1 + (4 * _gloffset_TrackMatrixNV)], %g3
d12123 4
a12126 4
.globl glVertexAttribPointerNV
.type glVertexAttribPointerNV,#function
glVertexAttribPointerNV:
#ifdef SPARC_64BIT_ADDR
d12133 2
a12134 2
	sethi	%hi(8 * _gloffset_VertexAttribPointerNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribPointerNV), %g2
d12139 1
a12139 1
	ld	[%g1 + (4 * _gloffset_VertexAttribPointerNV)], %g3
d12144 4
a12147 4
.globl glVertexAttrib1dNV
.type glVertexAttrib1dNV,#function
glVertexAttrib1dNV:
#ifdef SPARC_64BIT_ADDR
d12154 2
a12155 2
	sethi	%hi(8 * _gloffset_VertexAttrib1dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1dNV), %g2
d12160 1
a12160 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1dNV)], %g3
d12165 4
a12168 4
.globl glVertexAttrib1dvNV
.type glVertexAttrib1dvNV,#function
glVertexAttrib1dvNV:
#ifdef SPARC_64BIT_ADDR
d12175 2
a12176 2
	sethi	%hi(8 * _gloffset_VertexAttrib1dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1dvNV), %g2
d12181 1
a12181 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1dvNV)], %g3
d12186 4
a12189 4
.globl glVertexAttrib1fNV
.type glVertexAttrib1fNV,#function
glVertexAttrib1fNV:
#ifdef SPARC_64BIT_ADDR
d12196 2
a12197 2
	sethi	%hi(8 * _gloffset_VertexAttrib1fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1fNV), %g2
d12202 1
a12202 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1fNV)], %g3
d12207 4
a12210 4
.globl glVertexAttrib1fvNV
.type glVertexAttrib1fvNV,#function
glVertexAttrib1fvNV:
#ifdef SPARC_64BIT_ADDR
d12217 2
a12218 2
	sethi	%hi(8 * _gloffset_VertexAttrib1fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1fvNV), %g2
d12223 1
a12223 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1fvNV)], %g3
d12228 4
a12231 4
.globl glVertexAttrib1sNV
.type glVertexAttrib1sNV,#function
glVertexAttrib1sNV:
#ifdef SPARC_64BIT_ADDR
d12238 2
a12239 2
	sethi	%hi(8 * _gloffset_VertexAttrib1sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1sNV), %g2
d12244 1
a12244 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1sNV)], %g3
d12249 4
a12252 4
.globl glVertexAttrib1svNV
.type glVertexAttrib1svNV,#function
glVertexAttrib1svNV:
#ifdef SPARC_64BIT_ADDR
d12259 2
a12260 2
	sethi	%hi(8 * _gloffset_VertexAttrib1svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1svNV), %g2
d12265 1
a12265 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1svNV)], %g3
d12270 4
a12273 4
.globl glVertexAttrib2dNV
.type glVertexAttrib2dNV,#function
glVertexAttrib2dNV:
#ifdef SPARC_64BIT_ADDR
d12280 2
a12281 2
	sethi	%hi(8 * _gloffset_VertexAttrib2dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2dNV), %g2
d12286 1
a12286 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2dNV)], %g3
d12291 4
a12294 4
.globl glVertexAttrib2dvNV
.type glVertexAttrib2dvNV,#function
glVertexAttrib2dvNV:
#ifdef SPARC_64BIT_ADDR
d12301 2
a12302 2
	sethi	%hi(8 * _gloffset_VertexAttrib2dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2dvNV), %g2
d12307 1
a12307 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2dvNV)], %g3
d12312 4
a12315 4
.globl glVertexAttrib2fNV
.type glVertexAttrib2fNV,#function
glVertexAttrib2fNV:
#ifdef SPARC_64BIT_ADDR
d12322 2
a12323 2
	sethi	%hi(8 * _gloffset_VertexAttrib2fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2fNV), %g2
d12328 1
a12328 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2fNV)], %g3
d12333 4
a12336 4
.globl glVertexAttrib2fvNV
.type glVertexAttrib2fvNV,#function
glVertexAttrib2fvNV:
#ifdef SPARC_64BIT_ADDR
d12343 2
a12344 2
	sethi	%hi(8 * _gloffset_VertexAttrib2fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2fvNV), %g2
d12349 1
a12349 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2fvNV)], %g3
d12354 4
a12357 4
.globl glVertexAttrib2sNV
.type glVertexAttrib2sNV,#function
glVertexAttrib2sNV:
#ifdef SPARC_64BIT_ADDR
d12364 2
a12365 2
	sethi	%hi(8 * _gloffset_VertexAttrib2sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2sNV), %g2
d12370 1
a12370 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2sNV)], %g3
d12375 4
a12378 4
.globl glVertexAttrib2svNV
.type glVertexAttrib2svNV,#function
glVertexAttrib2svNV:
#ifdef SPARC_64BIT_ADDR
d12385 2
a12386 2
	sethi	%hi(8 * _gloffset_VertexAttrib2svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2svNV), %g2
d12391 1
a12391 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2svNV)], %g3
d12396 4
a12399 4
.globl glVertexAttrib3dNV
.type glVertexAttrib3dNV,#function
glVertexAttrib3dNV:
#ifdef SPARC_64BIT_ADDR
d12406 2
a12407 2
	sethi	%hi(8 * _gloffset_VertexAttrib3dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3dNV), %g2
d12412 1
a12412 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3dNV)], %g3
d12417 4
a12420 4
.globl glVertexAttrib3dvNV
.type glVertexAttrib3dvNV,#function
glVertexAttrib3dvNV:
#ifdef SPARC_64BIT_ADDR
d12427 2
a12428 2
	sethi	%hi(8 * _gloffset_VertexAttrib3dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3dvNV), %g2
d12433 1
a12433 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3dvNV)], %g3
d12438 4
a12441 4
.globl glVertexAttrib3fNV
.type glVertexAttrib3fNV,#function
glVertexAttrib3fNV:
#ifdef SPARC_64BIT_ADDR
d12448 2
a12449 2
	sethi	%hi(8 * _gloffset_VertexAttrib3fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3fNV), %g2
d12454 1
a12454 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3fNV)], %g3
d12459 4
a12462 4
.globl glVertexAttrib3fvNV
.type glVertexAttrib3fvNV,#function
glVertexAttrib3fvNV:
#ifdef SPARC_64BIT_ADDR
d12469 2
a12470 2
	sethi	%hi(8 * _gloffset_VertexAttrib3fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3fvNV), %g2
d12475 1
a12475 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3fvNV)], %g3
d12480 4
a12483 4
.globl glVertexAttrib3sNV
.type glVertexAttrib3sNV,#function
glVertexAttrib3sNV:
#ifdef SPARC_64BIT_ADDR
d12490 2
a12491 2
	sethi	%hi(8 * _gloffset_VertexAttrib3sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3sNV), %g2
d12496 1
a12496 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3sNV)], %g3
d12501 4
a12504 4
.globl glVertexAttrib3svNV
.type glVertexAttrib3svNV,#function
glVertexAttrib3svNV:
#ifdef SPARC_64BIT_ADDR
d12511 2
a12512 2
	sethi	%hi(8 * _gloffset_VertexAttrib3svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3svNV), %g2
d12517 1
a12517 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3svNV)], %g3
d12522 4
a12525 4
.globl glVertexAttrib4dNV
.type glVertexAttrib4dNV,#function
glVertexAttrib4dNV:
#ifdef SPARC_64BIT_ADDR
d12532 2
a12533 2
	sethi	%hi(8 * _gloffset_VertexAttrib4dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4dNV), %g2
d12538 1
a12538 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4dNV)], %g3
d12543 4
a12546 4
.globl glVertexAttrib4dvNV
.type glVertexAttrib4dvNV,#function
glVertexAttrib4dvNV:
#ifdef SPARC_64BIT_ADDR
d12553 2
a12554 2
	sethi	%hi(8 * _gloffset_VertexAttrib4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4dvNV), %g2
d12559 1
a12559 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4dvNV)], %g3
d12564 4
a12567 4
.globl glVertexAttrib4fNV
.type glVertexAttrib4fNV,#function
glVertexAttrib4fNV:
#ifdef SPARC_64BIT_ADDR
d12574 2
a12575 2
	sethi	%hi(8 * _gloffset_VertexAttrib4fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4fNV), %g2
d12580 1
a12580 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4fNV)], %g3
d12585 4
a12588 4
.globl glVertexAttrib4fvNV
.type glVertexAttrib4fvNV,#function
glVertexAttrib4fvNV:
#ifdef SPARC_64BIT_ADDR
d12595 2
a12596 2
	sethi	%hi(8 * _gloffset_VertexAttrib4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4fvNV), %g2
d12601 1
a12601 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4fvNV)], %g3
d12605 5
a12609 5

.globl glVertexAttrib4sNV
.type glVertexAttrib4sNV,#function
glVertexAttrib4sNV:
#ifdef SPARC_64BIT_ADDR
d12616 2
a12617 2
	sethi	%hi(8 * _gloffset_VertexAttrib4sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4sNV), %g2
d12622 1
a12622 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4sNV)], %g3
d12627 4
a12630 4
.globl glVertexAttrib4svNV
.type glVertexAttrib4svNV,#function
glVertexAttrib4svNV:
#ifdef SPARC_64BIT_ADDR
d12637 2
a12638 2
	sethi	%hi(8 * _gloffset_VertexAttrib4svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4svNV), %g2
d12643 1
a12643 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4svNV)], %g3
d12648 4
a12651 4
.globl glVertexAttrib4ubNV
.type glVertexAttrib4ubNV,#function
glVertexAttrib4ubNV:
#ifdef SPARC_64BIT_ADDR
d12658 2
a12659 2
	sethi	%hi(8 * _gloffset_VertexAttrib4ubNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4ubNV), %g2
d12664 1
a12664 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4ubNV)], %g3
d12669 4
a12672 4
.globl glVertexAttrib4ubvNV
.type glVertexAttrib4ubvNV,#function
glVertexAttrib4ubvNV:
#ifdef SPARC_64BIT_ADDR
d12679 2
a12680 2
	sethi	%hi(8 * _gloffset_VertexAttrib4ubvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4ubvNV), %g2
d12685 1
a12685 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4ubvNV)], %g3
d12690 4
a12693 4
.globl glVertexAttribs1dvNV
.type glVertexAttribs1dvNV,#function
glVertexAttribs1dvNV:
#ifdef SPARC_64BIT_ADDR
d12700 2
a12701 2
	sethi	%hi(8 * _gloffset_VertexAttribs1dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs1dvNV), %g2
d12706 1
a12706 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs1dvNV)], %g3
d12711 4
a12714 4
.globl glVertexAttribs1fvNV
.type glVertexAttribs1fvNV,#function
glVertexAttribs1fvNV:
#ifdef SPARC_64BIT_ADDR
d12721 2
a12722 2
	sethi	%hi(8 * _gloffset_VertexAttribs1fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs1fvNV), %g2
d12727 1
a12727 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs1fvNV)], %g3
d12732 4
a12735 4
.globl glVertexAttribs1svNV
.type glVertexAttribs1svNV,#function
glVertexAttribs1svNV:
#ifdef SPARC_64BIT_ADDR
d12742 2
a12743 2
	sethi	%hi(8 * _gloffset_VertexAttribs1svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs1svNV), %g2
d12748 1
a12748 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs1svNV)], %g3
d12753 4
a12756 4
.globl glVertexAttribs2dvNV
.type glVertexAttribs2dvNV,#function
glVertexAttribs2dvNV:
#ifdef SPARC_64BIT_ADDR
d12763 2
a12764 2
	sethi	%hi(8 * _gloffset_VertexAttribs2dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs2dvNV), %g2
d12769 1
a12769 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs2dvNV)], %g3
d12774 4
a12777 4
.globl glVertexAttribs2fvNV
.type glVertexAttribs2fvNV,#function
glVertexAttribs2fvNV:
#ifdef SPARC_64BIT_ADDR
d12784 2
a12785 2
	sethi	%hi(8 * _gloffset_VertexAttribs2fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs2fvNV), %g2
d12790 1
a12790 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs2fvNV)], %g3
d12795 4
a12798 4
.globl glVertexAttribs2svNV
.type glVertexAttribs2svNV,#function
glVertexAttribs2svNV:
#ifdef SPARC_64BIT_ADDR
d12805 2
a12806 2
	sethi	%hi(8 * _gloffset_VertexAttribs2svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs2svNV), %g2
d12811 1
a12811 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs2svNV)], %g3
d12816 4
a12819 4
.globl glVertexAttribs3dvNV
.type glVertexAttribs3dvNV,#function
glVertexAttribs3dvNV:
#ifdef SPARC_64BIT_ADDR
d12826 2
a12827 2
	sethi	%hi(8 * _gloffset_VertexAttribs3dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs3dvNV), %g2
d12832 1
a12832 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs3dvNV)], %g3
d12837 4
a12840 4
.globl glVertexAttribs3fvNV
.type glVertexAttribs3fvNV,#function
glVertexAttribs3fvNV:
#ifdef SPARC_64BIT_ADDR
d12847 2
a12848 2
	sethi	%hi(8 * _gloffset_VertexAttribs3fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs3fvNV), %g2
d12853 1
a12853 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs3fvNV)], %g3
d12858 4
a12861 4
.globl glVertexAttribs3svNV
.type glVertexAttribs3svNV,#function
glVertexAttribs3svNV:
#ifdef SPARC_64BIT_ADDR
d12868 2
a12869 2
	sethi	%hi(8 * _gloffset_VertexAttribs3svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs3svNV), %g2
d12874 1
a12874 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs3svNV)], %g3
d12879 4
a12882 4
.globl glVertexAttribs4dvNV
.type glVertexAttribs4dvNV,#function
glVertexAttribs4dvNV:
#ifdef SPARC_64BIT_ADDR
d12889 2
a12890 2
	sethi	%hi(8 * _gloffset_VertexAttribs4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4dvNV), %g2
d12895 1
a12895 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4dvNV)], %g3
d12900 4
a12903 4
.globl glVertexAttribs4fvNV
.type glVertexAttribs4fvNV,#function
glVertexAttribs4fvNV:
#ifdef SPARC_64BIT_ADDR
d12910 2
a12911 2
	sethi	%hi(8 * _gloffset_VertexAttribs4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4fvNV), %g2
d12916 1
a12916 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4fvNV)], %g3
d12921 4
a12924 4
.globl glVertexAttribs4svNV
.type glVertexAttribs4svNV,#function
glVertexAttribs4svNV:
#ifdef SPARC_64BIT_ADDR
d12931 2
a12932 2
	sethi	%hi(8 * _gloffset_VertexAttribs4svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4svNV), %g2
d12937 1
a12937 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4svNV)], %g3
d12942 4
a12945 4
.globl glVertexAttribs4ubvNV
.type glVertexAttribs4ubvNV,#function
glVertexAttribs4ubvNV:
#ifdef SPARC_64BIT_ADDR
d12952 2
a12953 2
	sethi	%hi(8 * _gloffset_VertexAttribs4ubvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4ubvNV), %g2
d12958 1
a12958 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4ubvNV)], %g3
d12963 4
a12966 4
.globl glPointParameteriNV
.type glPointParameteriNV,#function
glPointParameteriNV:
#ifdef SPARC_64BIT_ADDR
d12973 2
a12974 2
	sethi	%hi(8 * _gloffset_PointParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameteriNV), %g2
d12979 1
a12979 1
	ld	[%g1 + (4 * _gloffset_PointParameteriNV)], %g3
d12984 4
a12987 4
.globl glPointParameterivNV
.type glPointParameterivNV,#function
glPointParameterivNV:
#ifdef SPARC_64BIT_ADDR
d12994 2
a12995 2
	sethi	%hi(8 * _gloffset_PointParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterivNV), %g2
d13000 1
a13000 1
	ld	[%g1 + (4 * _gloffset_PointParameterivNV)], %g3
d13005 4
a13008 4
.globl glBlendFuncSeparate
.type glBlendFuncSeparate,#function
glBlendFuncSeparate:
#ifdef SPARC_64BIT_ADDR
d13015 2
a13016 2
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
d13021 1
a13021 1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
d13026 4
a13029 4
.globl glFogCoordf
.type glFogCoordf,#function
glFogCoordf:
#ifdef SPARC_64BIT_ADDR
d13036 2
a13037 2
	sethi	%hi(8 * _gloffset_FogCoordfEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfEXT), %g2
d13042 1
a13042 1
	ld	[%g1 + (4 * _gloffset_FogCoordfEXT)], %g3
d13047 4
a13050 4
.globl glFogCoordfv
.type glFogCoordfv,#function
glFogCoordfv:
#ifdef SPARC_64BIT_ADDR
d13057 2
a13058 2
	sethi	%hi(8 * _gloffset_FogCoordfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfvEXT), %g2
d13063 1
a13063 1
	ld	[%g1 + (4 * _gloffset_FogCoordfvEXT)], %g3
d13068 4
a13071 4
.globl glFogCoordd
.type glFogCoordd,#function
glFogCoordd:
#ifdef SPARC_64BIT_ADDR
d13078 2
a13079 2
	sethi	%hi(8 * _gloffset_FogCoorddEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddEXT), %g2
d13084 1
a13084 1
	ld	[%g1 + (4 * _gloffset_FogCoorddEXT)], %g3
d13089 4
a13092 4
.globl glFogCoorddv
.type glFogCoorddv,#function
glFogCoorddv:
#ifdef SPARC_64BIT_ADDR
d13099 2
a13100 2
	sethi	%hi(8 * _gloffset_FogCoorddvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddvEXT), %g2
d13105 1
a13105 1
	ld	[%g1 + (4 * _gloffset_FogCoorddvEXT)], %g3
d13110 4
a13113 4
.globl glFogCoordPointer
.type glFogCoordPointer,#function
glFogCoordPointer:
#ifdef SPARC_64BIT_ADDR
d13120 2
a13121 2
	sethi	%hi(8 * _gloffset_FogCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordPointerEXT), %g2
d13126 1
a13126 1
	ld	[%g1 + (4 * _gloffset_FogCoordPointerEXT)], %g3
d13131 4
a13134 4
.globl glMultiDrawArrays
.type glMultiDrawArrays,#function
glMultiDrawArrays:
#ifdef SPARC_64BIT_ADDR
d13141 2
a13142 2
	sethi	%hi(8 * _gloffset_MultiDrawArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawArraysEXT), %g2
d13147 1
a13147 1
	ld	[%g1 + (4 * _gloffset_MultiDrawArraysEXT)], %g3
d13152 4
a13155 4
.globl glMultiDrawElements
.type glMultiDrawElements,#function
glMultiDrawElements:
#ifdef SPARC_64BIT_ADDR
d13162 2
a13163 2
	sethi	%hi(8 * _gloffset_MultiDrawElementsEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawElementsEXT), %g2
d13168 1
a13168 1
	ld	[%g1 + (4 * _gloffset_MultiDrawElementsEXT)], %g3
d13173 4
a13176 4
.globl glPointParameterf
.type glPointParameterf,#function
glPointParameterf:
#ifdef SPARC_64BIT_ADDR
d13183 2
a13184 2
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
d13189 1
a13189 1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
d13194 4
a13197 4
.globl glPointParameterfv
.type glPointParameterfv,#function
glPointParameterfv:
#ifdef SPARC_64BIT_ADDR
d13204 2
a13205 2
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
d13210 1
a13210 1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
d13215 4
a13218 4
.globl glPointParameteri
.type glPointParameteri,#function
glPointParameteri:
#ifdef SPARC_64BIT_ADDR
d13225 2
a13226 2
	sethi	%hi(8 * _gloffset_PointParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameteriNV), %g2
d13231 1
a13231 1
	ld	[%g1 + (4 * _gloffset_PointParameteriNV)], %g3
d13236 4
a13239 4
.globl glPointParameteriv
.type glPointParameteriv,#function
glPointParameteriv:
#ifdef SPARC_64BIT_ADDR
d13246 2
a13247 2
	sethi	%hi(8 * _gloffset_PointParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterivNV), %g2
d13252 1
a13252 1
	ld	[%g1 + (4 * _gloffset_PointParameterivNV)], %g3
d13257 4
a13260 4
.globl glSecondaryColor3b
.type glSecondaryColor3b,#function
glSecondaryColor3b:
#ifdef SPARC_64BIT_ADDR
d13267 2
a13268 2
	sethi	%hi(8 * _gloffset_SecondaryColor3bEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bEXT), %g2
d13273 1
a13273 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bEXT)], %g3
d13278 4
a13281 4
.globl glSecondaryColor3bv
.type glSecondaryColor3bv,#function
glSecondaryColor3bv:
#ifdef SPARC_64BIT_ADDR
d13288 2
a13289 2
	sethi	%hi(8 * _gloffset_SecondaryColor3bvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bvEXT), %g2
d13294 1
a13294 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bvEXT)], %g3
d13299 4
a13302 4
.globl glSecondaryColor3d
.type glSecondaryColor3d,#function
glSecondaryColor3d:
#ifdef SPARC_64BIT_ADDR
d13309 2
a13310 2
	sethi	%hi(8 * _gloffset_SecondaryColor3dEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dEXT), %g2
d13315 1
a13315 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dEXT)], %g3
d13320 4
a13323 4
.globl glSecondaryColor3dv
.type glSecondaryColor3dv,#function
glSecondaryColor3dv:
#ifdef SPARC_64BIT_ADDR
d13330 2
a13331 2
	sethi	%hi(8 * _gloffset_SecondaryColor3dvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dvEXT), %g2
d13336 1
a13336 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dvEXT)], %g3
d13341 4
a13344 4
.globl glSecondaryColor3f
.type glSecondaryColor3f,#function
glSecondaryColor3f:
#ifdef SPARC_64BIT_ADDR
d13351 2
a13352 2
	sethi	%hi(8 * _gloffset_SecondaryColor3fEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fEXT), %g2
d13357 1
a13357 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fEXT)], %g3
d13362 4
a13365 4
.globl glSecondaryColor3fv
.type glSecondaryColor3fv,#function
glSecondaryColor3fv:
#ifdef SPARC_64BIT_ADDR
d13372 2
a13373 2
	sethi	%hi(8 * _gloffset_SecondaryColor3fvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fvEXT), %g2
d13378 1
a13378 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fvEXT)], %g3
d13383 4
a13386 4
.globl glSecondaryColor3i
.type glSecondaryColor3i,#function
glSecondaryColor3i:
#ifdef SPARC_64BIT_ADDR
d13393 2
a13394 2
	sethi	%hi(8 * _gloffset_SecondaryColor3iEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3iEXT), %g2
d13399 1
a13399 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3iEXT)], %g3
d13404 4
a13407 4
.globl glSecondaryColor3iv
.type glSecondaryColor3iv,#function
glSecondaryColor3iv:
#ifdef SPARC_64BIT_ADDR
d13414 2
a13415 2
	sethi	%hi(8 * _gloffset_SecondaryColor3ivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ivEXT), %g2
d13420 1
a13420 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ivEXT)], %g3
d13425 4
a13428 4
.globl glSecondaryColor3s
.type glSecondaryColor3s,#function
glSecondaryColor3s:
#ifdef SPARC_64BIT_ADDR
d13435 2
a13436 2
	sethi	%hi(8 * _gloffset_SecondaryColor3sEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3sEXT), %g2
d13441 1
a13441 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3sEXT)], %g3
d13446 4
a13449 4
.globl glSecondaryColor3sv
.type glSecondaryColor3sv,#function
glSecondaryColor3sv:
#ifdef SPARC_64BIT_ADDR
d13456 2
a13457 2
	sethi	%hi(8 * _gloffset_SecondaryColor3svEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3svEXT), %g2
d13462 1
a13462 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3svEXT)], %g3
d13467 4
a13470 4
.globl glSecondaryColor3ub
.type glSecondaryColor3ub,#function
glSecondaryColor3ub:
#ifdef SPARC_64BIT_ADDR
d13477 2
a13478 2
	sethi	%hi(8 * _gloffset_SecondaryColor3ubEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubEXT), %g2
d13483 1
a13483 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubEXT)], %g3
d13488 4
a13491 4
.globl glSecondaryColor3ubv
.type glSecondaryColor3ubv,#function
glSecondaryColor3ubv:
#ifdef SPARC_64BIT_ADDR
d13498 2
a13499 2
	sethi	%hi(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubvEXT), %g2
d13504 1
a13504 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubvEXT)], %g3
d13509 4
a13512 4
.globl glSecondaryColor3ui
.type glSecondaryColor3ui,#function
glSecondaryColor3ui:
#ifdef SPARC_64BIT_ADDR
d13519 2
a13520 2
	sethi	%hi(8 * _gloffset_SecondaryColor3uiEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uiEXT), %g2
d13525 1
a13525 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uiEXT)], %g3
d13530 4
a13533 4
.globl glSecondaryColor3uiv
.type glSecondaryColor3uiv,#function
glSecondaryColor3uiv:
#ifdef SPARC_64BIT_ADDR
d13540 2
a13541 2
	sethi	%hi(8 * _gloffset_SecondaryColor3uivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uivEXT), %g2
d13546 1
a13546 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uivEXT)], %g3
d13551 4
a13554 4
.globl glSecondaryColor3us
.type glSecondaryColor3us,#function
glSecondaryColor3us:
#ifdef SPARC_64BIT_ADDR
d13561 2
a13562 2
	sethi	%hi(8 * _gloffset_SecondaryColor3usEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usEXT), %g2
d13567 1
a13567 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usEXT)], %g3
d13572 4
a13575 4
.globl glSecondaryColor3usv
.type glSecondaryColor3usv,#function
glSecondaryColor3usv:
#ifdef SPARC_64BIT_ADDR
d13582 2
a13583 2
	sethi	%hi(8 * _gloffset_SecondaryColor3usvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usvEXT), %g2
d13588 1
a13588 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usvEXT)], %g3
d13593 4
a13596 4
.globl glSecondaryColorPointer
.type glSecondaryColorPointer,#function
glSecondaryColorPointer:
#ifdef SPARC_64BIT_ADDR
d13603 2
a13604 2
	sethi	%hi(8 * _gloffset_SecondaryColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColorPointerEXT), %g2
d13609 1
a13609 1
	ld	[%g1 + (4 * _gloffset_SecondaryColorPointerEXT)], %g3
d13614 4
a13617 4
.globl glWindowPos2d
.type glWindowPos2d,#function
glWindowPos2d:
#ifdef SPARC_64BIT_ADDR
d13624 2
a13625 2
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
d13630 1
a13630 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
d13635 4
a13638 4
.globl glWindowPos2dv
.type glWindowPos2dv,#function
glWindowPos2dv:
#ifdef SPARC_64BIT_ADDR
d13645 2
a13646 2
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
d13651 1
a13651 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
d13656 4
a13659 4
.globl glWindowPos2f
.type glWindowPos2f,#function
glWindowPos2f:
#ifdef SPARC_64BIT_ADDR
d13666 2
a13667 2
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
d13672 1
a13672 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
d13677 4
a13680 4
.globl glWindowPos2fv
.type glWindowPos2fv,#function
glWindowPos2fv:
#ifdef SPARC_64BIT_ADDR
d13687 2
a13688 2
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
d13693 1
a13693 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
d13698 4
a13701 4
.globl glWindowPos2i
.type glWindowPos2i,#function
glWindowPos2i:
#ifdef SPARC_64BIT_ADDR
d13708 2
a13709 2
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
d13714 1
a13714 1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
d13719 4
a13722 4
.globl glWindowPos2iv
.type glWindowPos2iv,#function
glWindowPos2iv:
#ifdef SPARC_64BIT_ADDR
d13729 2
a13730 2
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
d13735 1
a13735 1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
d13740 4
a13743 4
.globl glWindowPos2s
.type glWindowPos2s,#function
glWindowPos2s:
#ifdef SPARC_64BIT_ADDR
d13750 2
a13751 2
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
d13756 1
a13756 1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
d13761 4
a13764 4
.globl glWindowPos2sv
.type glWindowPos2sv,#function
glWindowPos2sv:
#ifdef SPARC_64BIT_ADDR
d13771 2
a13772 2
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
d13777 1
a13777 1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
d13782 4
a13785 4
.globl glWindowPos3d
.type glWindowPos3d,#function
glWindowPos3d:
#ifdef SPARC_64BIT_ADDR
d13792 2
a13793 2
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
d13798 1
a13798 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
d13803 4
a13806 4
.globl glWindowPos3dv
.type glWindowPos3dv,#function
glWindowPos3dv:
#ifdef SPARC_64BIT_ADDR
d13813 2
a13814 2
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
d13819 1
a13819 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
d13824 4
a13827 4
.globl glWindowPos3f
.type glWindowPos3f,#function
glWindowPos3f:
#ifdef SPARC_64BIT_ADDR
d13834 2
a13835 2
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
d13840 1
a13840 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
d13845 4
a13848 4
.globl glWindowPos3fv
.type glWindowPos3fv,#function
glWindowPos3fv:
#ifdef SPARC_64BIT_ADDR
d13855 2
a13856 2
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
d13861 1
a13861 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
d13866 4
a13869 4
.globl glWindowPos3i
.type glWindowPos3i,#function
glWindowPos3i:
#ifdef SPARC_64BIT_ADDR
d13876 2
a13877 2
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
d13882 1
a13882 1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
d13887 4
a13890 4
.globl glWindowPos3iv
.type glWindowPos3iv,#function
glWindowPos3iv:
#ifdef SPARC_64BIT_ADDR
d13897 2
a13898 2
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
d13903 1
a13903 1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
d13908 4
a13911 4
.globl glWindowPos3s
.type glWindowPos3s,#function
glWindowPos3s:
#ifdef SPARC_64BIT_ADDR
d13918 2
a13919 2
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
d13924 1
a13924 1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
d13929 4
a13932 4
.globl glWindowPos3sv
.type glWindowPos3sv,#function
glWindowPos3sv:
#ifdef SPARC_64BIT_ADDR
d13939 2
a13940 2
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
d13945 1
a13945 1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
d13950 4
a13953 4
.globl glActiveStencilFaceEXT
.type glActiveStencilFaceEXT,#function
glActiveStencilFaceEXT:
#ifdef SPARC_64BIT_ADDR
d13960 2
a13961 2
	sethi	%hi(8 * _gloffset_ActiveStencilFaceEXT), %g2
	or	%g2, %lo(8 * _gloffset_ActiveStencilFaceEXT), %g2
d13966 1
a13966 1
	ld	[%g1 + (4 * _gloffset_ActiveStencilFaceEXT)], %g3
d13970 1
a13970 1
	 nop
@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d1 4
a4 1
/* $XFree86: xc/extras/Mesa/src/SPARC/glapi_sparc.S,v 1.3 2003/12/02 20:27:34 dawes Exp $ */
a5 2
/* DO NOT EDIT - This file generated automatically with glsparcasm.py script */
#include "../glapioffsets.h"
a11 5
#if defined(__sparc_v9__) && !defined(__linux__)
#define SPARC_64BIT_ADDR
#endif


d30 1
a30 1
#ifdef SPARC_64BIT_ADDR
d51 1
a51 1
#ifdef SPARC_64BIT_ADDR
d72 1
a72 1
#ifdef SPARC_64BIT_ADDR
d93 1
a93 1
#ifdef SPARC_64BIT_ADDR
d114 1
a114 1
#ifdef SPARC_64BIT_ADDR
d135 1
a135 1
#ifdef SPARC_64BIT_ADDR
d156 1
a156 1
#ifdef SPARC_64BIT_ADDR
d177 1
a177 1
#ifdef SPARC_64BIT_ADDR
d198 1
a198 1
#ifdef SPARC_64BIT_ADDR
d219 1
a219 1
#ifdef SPARC_64BIT_ADDR
d240 1
a240 1
#ifdef SPARC_64BIT_ADDR
d261 1
a261 1
#ifdef SPARC_64BIT_ADDR
d282 1
a282 1
#ifdef SPARC_64BIT_ADDR
d303 1
a303 1
#ifdef SPARC_64BIT_ADDR
d324 1
a324 1
#ifdef SPARC_64BIT_ADDR
d345 1
a345 1
#ifdef SPARC_64BIT_ADDR
d366 1
a366 1
#ifdef SPARC_64BIT_ADDR
d387 1
a387 1
#ifdef SPARC_64BIT_ADDR
d408 1
a408 1
#ifdef SPARC_64BIT_ADDR
d429 1
a429 1
#ifdef SPARC_64BIT_ADDR
d450 1
a450 1
#ifdef SPARC_64BIT_ADDR
d471 1
a471 1
#ifdef SPARC_64BIT_ADDR
d492 1
a492 1
#ifdef SPARC_64BIT_ADDR
d513 1
a513 1
#ifdef SPARC_64BIT_ADDR
d534 1
a534 1
#ifdef SPARC_64BIT_ADDR
d555 1
a555 1
#ifdef SPARC_64BIT_ADDR
d576 1
a576 1
#ifdef SPARC_64BIT_ADDR
d597 1
a597 1
#ifdef SPARC_64BIT_ADDR
d618 1
a618 1
#ifdef SPARC_64BIT_ADDR
d639 1
a639 1
#ifdef SPARC_64BIT_ADDR
d660 1
a660 1
#ifdef SPARC_64BIT_ADDR
d681 1
a681 1
#ifdef SPARC_64BIT_ADDR
d702 1
a702 1
#ifdef SPARC_64BIT_ADDR
d723 1
a723 1
#ifdef SPARC_64BIT_ADDR
d744 1
a744 1
#ifdef SPARC_64BIT_ADDR
d765 1
a765 1
#ifdef SPARC_64BIT_ADDR
d786 1
a786 1
#ifdef SPARC_64BIT_ADDR
d807 1
a807 1
#ifdef SPARC_64BIT_ADDR
d828 1
a828 1
#ifdef SPARC_64BIT_ADDR
d849 1
a849 1
#ifdef SPARC_64BIT_ADDR
d870 1
a870 1
#ifdef SPARC_64BIT_ADDR
d891 1
a891 1
#ifdef SPARC_64BIT_ADDR
d912 1
a912 1
#ifdef SPARC_64BIT_ADDR
d933 1
a933 1
#ifdef SPARC_64BIT_ADDR
d954 1
a954 1
#ifdef SPARC_64BIT_ADDR
d975 1
a975 1
#ifdef SPARC_64BIT_ADDR
d996 1
a996 1
#ifdef SPARC_64BIT_ADDR
d1017 1
a1017 1
#ifdef SPARC_64BIT_ADDR
d1038 1
a1038 1
#ifdef SPARC_64BIT_ADDR
d1059 1
a1059 1
#ifdef SPARC_64BIT_ADDR
d1080 1
a1080 1
#ifdef SPARC_64BIT_ADDR
d1101 1
a1101 1
#ifdef SPARC_64BIT_ADDR
d1122 1
a1122 1
#ifdef SPARC_64BIT_ADDR
d1143 1
a1143 1
#ifdef SPARC_64BIT_ADDR
d1164 1
a1164 1
#ifdef SPARC_64BIT_ADDR
d1185 1
a1185 1
#ifdef SPARC_64BIT_ADDR
d1206 1
a1206 1
#ifdef SPARC_64BIT_ADDR
d1227 1
a1227 1
#ifdef SPARC_64BIT_ADDR
d1248 1
a1248 1
#ifdef SPARC_64BIT_ADDR
d1269 1
a1269 1
#ifdef SPARC_64BIT_ADDR
d1290 1
a1290 1
#ifdef SPARC_64BIT_ADDR
d1311 1
a1311 1
#ifdef SPARC_64BIT_ADDR
d1332 1
a1332 1
#ifdef SPARC_64BIT_ADDR
d1353 1
a1353 1
#ifdef SPARC_64BIT_ADDR
d1374 1
a1374 1
#ifdef SPARC_64BIT_ADDR
d1395 1
a1395 1
#ifdef SPARC_64BIT_ADDR
d1416 1
a1416 1
#ifdef SPARC_64BIT_ADDR
d1437 1
a1437 1
#ifdef SPARC_64BIT_ADDR
d1458 1
a1458 1
#ifdef SPARC_64BIT_ADDR
d1479 1
a1479 1
#ifdef SPARC_64BIT_ADDR
d1500 1
a1500 1
#ifdef SPARC_64BIT_ADDR
d1521 1
a1521 1
#ifdef SPARC_64BIT_ADDR
d1542 1
a1542 1
#ifdef SPARC_64BIT_ADDR
d1563 1
a1563 1
#ifdef SPARC_64BIT_ADDR
d1584 1
a1584 1
#ifdef SPARC_64BIT_ADDR
d1605 1
a1605 1
#ifdef SPARC_64BIT_ADDR
d1626 1
a1626 1
#ifdef SPARC_64BIT_ADDR
d1647 1
a1647 1
#ifdef SPARC_64BIT_ADDR
d1668 1
a1668 1
#ifdef SPARC_64BIT_ADDR
d1689 1
a1689 1
#ifdef SPARC_64BIT_ADDR
d1710 1
a1710 1
#ifdef SPARC_64BIT_ADDR
d1731 1
a1731 1
#ifdef SPARC_64BIT_ADDR
d1752 1
a1752 1
#ifdef SPARC_64BIT_ADDR
d1773 1
a1773 1
#ifdef SPARC_64BIT_ADDR
d1794 1
a1794 1
#ifdef SPARC_64BIT_ADDR
d1815 1
a1815 1
#ifdef SPARC_64BIT_ADDR
d1836 1
a1836 1
#ifdef SPARC_64BIT_ADDR
d1857 1
a1857 1
#ifdef SPARC_64BIT_ADDR
d1878 1
a1878 1
#ifdef SPARC_64BIT_ADDR
d1899 1
a1899 1
#ifdef SPARC_64BIT_ADDR
d1920 1
a1920 1
#ifdef SPARC_64BIT_ADDR
d1941 1
a1941 1
#ifdef SPARC_64BIT_ADDR
d1962 1
a1962 1
#ifdef SPARC_64BIT_ADDR
d1983 1
a1983 1
#ifdef SPARC_64BIT_ADDR
d2004 1
a2004 1
#ifdef SPARC_64BIT_ADDR
d2025 1
a2025 1
#ifdef SPARC_64BIT_ADDR
d2046 1
a2046 1
#ifdef SPARC_64BIT_ADDR
d2067 1
a2067 1
#ifdef SPARC_64BIT_ADDR
d2088 1
a2088 1
#ifdef SPARC_64BIT_ADDR
d2109 1
a2109 1
#ifdef SPARC_64BIT_ADDR
d2130 1
a2130 1
#ifdef SPARC_64BIT_ADDR
d2151 1
a2151 1
#ifdef SPARC_64BIT_ADDR
d2172 1
a2172 1
#ifdef SPARC_64BIT_ADDR
d2193 1
a2193 1
#ifdef SPARC_64BIT_ADDR
d2214 1
a2214 1
#ifdef SPARC_64BIT_ADDR
d2235 1
a2235 1
#ifdef SPARC_64BIT_ADDR
d2256 1
a2256 1
#ifdef SPARC_64BIT_ADDR
d2277 1
a2277 1
#ifdef SPARC_64BIT_ADDR
d2298 1
a2298 1
#ifdef SPARC_64BIT_ADDR
d2319 1
a2319 1
#ifdef SPARC_64BIT_ADDR
d2340 1
a2340 1
#ifdef SPARC_64BIT_ADDR
d2361 1
a2361 1
#ifdef SPARC_64BIT_ADDR
d2382 1
a2382 1
#ifdef SPARC_64BIT_ADDR
d2403 1
a2403 1
#ifdef SPARC_64BIT_ADDR
d2424 1
a2424 1
#ifdef SPARC_64BIT_ADDR
d2445 1
a2445 1
#ifdef SPARC_64BIT_ADDR
d2466 1
a2466 1
#ifdef SPARC_64BIT_ADDR
d2487 1
a2487 1
#ifdef SPARC_64BIT_ADDR
d2508 1
a2508 1
#ifdef SPARC_64BIT_ADDR
d2529 1
a2529 1
#ifdef SPARC_64BIT_ADDR
d2550 1
a2550 1
#ifdef SPARC_64BIT_ADDR
d2571 1
a2571 1
#ifdef SPARC_64BIT_ADDR
d2592 1
a2592 1
#ifdef SPARC_64BIT_ADDR
d2613 1
a2613 1
#ifdef SPARC_64BIT_ADDR
d2634 1
a2634 1
#ifdef SPARC_64BIT_ADDR
d2655 1
a2655 1
#ifdef SPARC_64BIT_ADDR
d2676 1
a2676 1
#ifdef SPARC_64BIT_ADDR
d2697 1
a2697 1
#ifdef SPARC_64BIT_ADDR
d2718 1
a2718 1
#ifdef SPARC_64BIT_ADDR
d2739 1
a2739 1
#ifdef SPARC_64BIT_ADDR
d2760 1
a2760 1
#ifdef SPARC_64BIT_ADDR
d2781 1
a2781 1
#ifdef SPARC_64BIT_ADDR
d2802 1
a2802 1
#ifdef SPARC_64BIT_ADDR
d2823 1
a2823 1
#ifdef SPARC_64BIT_ADDR
d2844 1
a2844 1
#ifdef SPARC_64BIT_ADDR
d2865 1
a2865 1
#ifdef SPARC_64BIT_ADDR
d2886 1
a2886 1
#ifdef SPARC_64BIT_ADDR
d2907 1
a2907 1
#ifdef SPARC_64BIT_ADDR
d2928 1
a2928 1
#ifdef SPARC_64BIT_ADDR
d2949 1
a2949 1
#ifdef SPARC_64BIT_ADDR
d2970 1
a2970 1
#ifdef SPARC_64BIT_ADDR
d2991 1
a2991 1
#ifdef SPARC_64BIT_ADDR
d3012 1
a3012 1
#ifdef SPARC_64BIT_ADDR
d3033 1
a3033 1
#ifdef SPARC_64BIT_ADDR
d3054 1
a3054 1
#ifdef SPARC_64BIT_ADDR
d3075 1
a3075 1
#ifdef SPARC_64BIT_ADDR
d3096 1
a3096 1
#ifdef SPARC_64BIT_ADDR
d3117 1
a3117 1
#ifdef SPARC_64BIT_ADDR
d3138 1
a3138 1
#ifdef SPARC_64BIT_ADDR
d3159 1
a3159 1
#ifdef SPARC_64BIT_ADDR
d3180 1
a3180 1
#ifdef SPARC_64BIT_ADDR
d3201 1
a3201 1
#ifdef SPARC_64BIT_ADDR
d3222 1
a3222 1
#ifdef SPARC_64BIT_ADDR
d3243 1
a3243 1
#ifdef SPARC_64BIT_ADDR
d3264 1
a3264 1
#ifdef SPARC_64BIT_ADDR
d3285 1
a3285 1
#ifdef SPARC_64BIT_ADDR
d3306 1
a3306 1
#ifdef SPARC_64BIT_ADDR
d3327 1
a3327 1
#ifdef SPARC_64BIT_ADDR
d3348 1
a3348 1
#ifdef SPARC_64BIT_ADDR
d3369 1
a3369 1
#ifdef SPARC_64BIT_ADDR
d3390 1
a3390 1
#ifdef SPARC_64BIT_ADDR
d3411 1
a3411 1
#ifdef SPARC_64BIT_ADDR
d3432 1
a3432 1
#ifdef SPARC_64BIT_ADDR
d3453 1
a3453 1
#ifdef SPARC_64BIT_ADDR
d3474 1
a3474 1
#ifdef SPARC_64BIT_ADDR
d3495 1
a3495 1
#ifdef SPARC_64BIT_ADDR
d3516 1
a3516 1
#ifdef SPARC_64BIT_ADDR
d3537 1
a3537 1
#ifdef SPARC_64BIT_ADDR
d3558 1
a3558 1
#ifdef SPARC_64BIT_ADDR
d3579 1
a3579 1
#ifdef SPARC_64BIT_ADDR
d3600 1
a3600 1
#ifdef SPARC_64BIT_ADDR
d3621 1
a3621 1
#ifdef SPARC_64BIT_ADDR
d3642 1
a3642 1
#ifdef SPARC_64BIT_ADDR
d3663 1
a3663 1
#ifdef SPARC_64BIT_ADDR
d3684 1
a3684 1
#ifdef SPARC_64BIT_ADDR
d3705 1
a3705 1
#ifdef SPARC_64BIT_ADDR
d3726 1
a3726 1
#ifdef SPARC_64BIT_ADDR
d3747 1
a3747 1
#ifdef SPARC_64BIT_ADDR
d3768 1
a3768 1
#ifdef SPARC_64BIT_ADDR
d3789 1
a3789 1
#ifdef SPARC_64BIT_ADDR
d3810 1
a3810 1
#ifdef SPARC_64BIT_ADDR
d3831 1
a3831 1
#ifdef SPARC_64BIT_ADDR
d3852 1
a3852 1
#ifdef SPARC_64BIT_ADDR
d3873 1
a3873 1
#ifdef SPARC_64BIT_ADDR
d3894 1
a3894 1
#ifdef SPARC_64BIT_ADDR
d3915 1
a3915 1
#ifdef SPARC_64BIT_ADDR
d3936 1
a3936 1
#ifdef SPARC_64BIT_ADDR
d3957 1
a3957 1
#ifdef SPARC_64BIT_ADDR
d3978 1
a3978 1
#ifdef SPARC_64BIT_ADDR
d3999 1
a3999 1
#ifdef SPARC_64BIT_ADDR
d4020 1
a4020 1
#ifdef SPARC_64BIT_ADDR
d4041 1
a4041 1
#ifdef SPARC_64BIT_ADDR
d4062 1
a4062 1
#ifdef SPARC_64BIT_ADDR
d4083 1
a4083 1
#ifdef SPARC_64BIT_ADDR
d4104 1
a4104 1
#ifdef SPARC_64BIT_ADDR
d4125 1
a4125 1
#ifdef SPARC_64BIT_ADDR
d4146 1
a4146 1
#ifdef SPARC_64BIT_ADDR
d4167 1
a4167 1
#ifdef SPARC_64BIT_ADDR
d4188 1
a4188 1
#ifdef SPARC_64BIT_ADDR
d4209 1
a4209 1
#ifdef SPARC_64BIT_ADDR
d4230 1
a4230 1
#ifdef SPARC_64BIT_ADDR
d4251 1
a4251 1
#ifdef SPARC_64BIT_ADDR
d4272 1
a4272 1
#ifdef SPARC_64BIT_ADDR
d4293 1
a4293 1
#ifdef SPARC_64BIT_ADDR
d4314 1
a4314 1
#ifdef SPARC_64BIT_ADDR
d4335 1
a4335 1
#ifdef SPARC_64BIT_ADDR
d4356 1
a4356 1
#ifdef SPARC_64BIT_ADDR
d4377 1
a4377 1
#ifdef SPARC_64BIT_ADDR
d4398 1
a4398 1
#ifdef SPARC_64BIT_ADDR
d4419 1
a4419 1
#ifdef SPARC_64BIT_ADDR
d4440 1
a4440 1
#ifdef SPARC_64BIT_ADDR
d4461 1
a4461 1
#ifdef SPARC_64BIT_ADDR
d4482 1
a4482 1
#ifdef SPARC_64BIT_ADDR
d4503 1
a4503 1
#ifdef SPARC_64BIT_ADDR
d4524 1
a4524 1
#ifdef SPARC_64BIT_ADDR
d4545 1
a4545 1
#ifdef SPARC_64BIT_ADDR
d4566 1
a4566 1
#ifdef SPARC_64BIT_ADDR
d4587 1
a4587 1
#ifdef SPARC_64BIT_ADDR
d4608 1
a4608 1
#ifdef SPARC_64BIT_ADDR
d4629 1
a4629 1
#ifdef SPARC_64BIT_ADDR
d4650 1
a4650 1
#ifdef SPARC_64BIT_ADDR
d4671 1
a4671 1
#ifdef SPARC_64BIT_ADDR
d4692 1
a4692 1
#ifdef SPARC_64BIT_ADDR
d4713 1
a4713 1
#ifdef SPARC_64BIT_ADDR
d4734 1
a4734 1
#ifdef SPARC_64BIT_ADDR
d4755 1
a4755 1
#ifdef SPARC_64BIT_ADDR
d4776 1
a4776 1
#ifdef SPARC_64BIT_ADDR
d4797 1
a4797 1
#ifdef SPARC_64BIT_ADDR
d4818 1
a4818 1
#ifdef SPARC_64BIT_ADDR
d4839 1
a4839 1
#ifdef SPARC_64BIT_ADDR
d4860 1
a4860 1
#ifdef SPARC_64BIT_ADDR
d4881 1
a4881 1
#ifdef SPARC_64BIT_ADDR
d4902 1
a4902 1
#ifdef SPARC_64BIT_ADDR
d4923 1
a4923 1
#ifdef SPARC_64BIT_ADDR
d4944 1
a4944 1
#ifdef SPARC_64BIT_ADDR
d4965 1
a4965 1
#ifdef SPARC_64BIT_ADDR
d4986 1
a4986 1
#ifdef SPARC_64BIT_ADDR
d5007 1
a5007 1
#ifdef SPARC_64BIT_ADDR
d5028 1
a5028 1
#ifdef SPARC_64BIT_ADDR
d5049 1
a5049 1
#ifdef SPARC_64BIT_ADDR
d5070 1
a5070 1
#ifdef SPARC_64BIT_ADDR
d5091 1
a5091 1
#ifdef SPARC_64BIT_ADDR
d5112 1
a5112 1
#ifdef SPARC_64BIT_ADDR
d5133 1
a5133 1
#ifdef SPARC_64BIT_ADDR
d5154 1
a5154 1
#ifdef SPARC_64BIT_ADDR
d5175 1
a5175 1
#ifdef SPARC_64BIT_ADDR
d5196 1
a5196 1
#ifdef SPARC_64BIT_ADDR
d5217 1
a5217 1
#ifdef SPARC_64BIT_ADDR
d5238 1
a5238 1
#ifdef SPARC_64BIT_ADDR
d5259 1
a5259 1
#ifdef SPARC_64BIT_ADDR
d5280 1
a5280 1
#ifdef SPARC_64BIT_ADDR
d5301 1
a5301 1
#ifdef SPARC_64BIT_ADDR
d5322 1
a5322 1
#ifdef SPARC_64BIT_ADDR
d5343 1
a5343 1
#ifdef SPARC_64BIT_ADDR
d5364 1
a5364 1
#ifdef SPARC_64BIT_ADDR
d5385 1
a5385 1
#ifdef SPARC_64BIT_ADDR
d5406 1
a5406 1
#ifdef SPARC_64BIT_ADDR
d5427 1
a5427 1
#ifdef SPARC_64BIT_ADDR
d5448 1
a5448 1
#ifdef SPARC_64BIT_ADDR
d5469 1
a5469 1
#ifdef SPARC_64BIT_ADDR
d5490 1
a5490 1
#ifdef SPARC_64BIT_ADDR
d5511 1
a5511 1
#ifdef SPARC_64BIT_ADDR
d5532 1
a5532 1
#ifdef SPARC_64BIT_ADDR
d5553 1
a5553 1
#ifdef SPARC_64BIT_ADDR
d5574 1
a5574 1
#ifdef SPARC_64BIT_ADDR
d5595 1
a5595 1
#ifdef SPARC_64BIT_ADDR
d5616 1
a5616 1
#ifdef SPARC_64BIT_ADDR
d5637 1
a5637 1
#ifdef SPARC_64BIT_ADDR
d5658 1
a5658 1
#ifdef SPARC_64BIT_ADDR
d5679 1
a5679 1
#ifdef SPARC_64BIT_ADDR
d5700 1
a5700 1
#ifdef SPARC_64BIT_ADDR
d5721 1
a5721 1
#ifdef SPARC_64BIT_ADDR
d5742 1
a5742 1
#ifdef SPARC_64BIT_ADDR
d5763 1
a5763 1
#ifdef SPARC_64BIT_ADDR
d5784 1
a5784 1
#ifdef SPARC_64BIT_ADDR
d5805 1
a5805 1
#ifdef SPARC_64BIT_ADDR
d5826 1
a5826 1
#ifdef SPARC_64BIT_ADDR
d5847 1
a5847 1
#ifdef SPARC_64BIT_ADDR
d5868 1
a5868 1
#ifdef SPARC_64BIT_ADDR
d5889 1
a5889 1
#ifdef SPARC_64BIT_ADDR
d5910 1
a5910 1
#ifdef SPARC_64BIT_ADDR
d5931 1
a5931 1
#ifdef SPARC_64BIT_ADDR
d5952 1
a5952 1
#ifdef SPARC_64BIT_ADDR
d5973 1
a5973 1
#ifdef SPARC_64BIT_ADDR
d5994 1
a5994 1
#ifdef SPARC_64BIT_ADDR
d6015 1
a6015 1
#ifdef SPARC_64BIT_ADDR
d6036 1
a6036 1
#ifdef SPARC_64BIT_ADDR
d6057 1
a6057 1
#ifdef SPARC_64BIT_ADDR
d6078 1
a6078 1
#ifdef SPARC_64BIT_ADDR
d6099 1
a6099 1
#ifdef SPARC_64BIT_ADDR
d6120 1
a6120 1
#ifdef SPARC_64BIT_ADDR
d6141 1
a6141 1
#ifdef SPARC_64BIT_ADDR
d6162 1
a6162 1
#ifdef SPARC_64BIT_ADDR
d6183 1
a6183 1
#ifdef SPARC_64BIT_ADDR
d6204 1
a6204 1
#ifdef SPARC_64BIT_ADDR
d6225 1
a6225 1
#ifdef SPARC_64BIT_ADDR
d6246 1
a6246 1
#ifdef SPARC_64BIT_ADDR
d6267 1
a6267 1
#ifdef SPARC_64BIT_ADDR
d6288 1
a6288 1
#ifdef SPARC_64BIT_ADDR
d6309 1
a6309 1
#ifdef SPARC_64BIT_ADDR
d6330 1
a6330 1
#ifdef SPARC_64BIT_ADDR
d6351 1
a6351 1
#ifdef SPARC_64BIT_ADDR
d6372 1
a6372 1
#ifdef SPARC_64BIT_ADDR
d6393 1
a6393 1
#ifdef SPARC_64BIT_ADDR
d6414 1
a6414 1
#ifdef SPARC_64BIT_ADDR
d6435 1
a6435 1
#ifdef SPARC_64BIT_ADDR
d6456 1
a6456 1
#ifdef SPARC_64BIT_ADDR
d6477 1
a6477 1
#ifdef SPARC_64BIT_ADDR
d6498 1
a6498 1
#ifdef SPARC_64BIT_ADDR
d6519 1
a6519 1
#ifdef SPARC_64BIT_ADDR
d6540 1
a6540 1
#ifdef SPARC_64BIT_ADDR
d6561 1
a6561 1
#ifdef SPARC_64BIT_ADDR
d6582 1
a6582 1
#ifdef SPARC_64BIT_ADDR
d6603 1
a6603 1
#ifdef SPARC_64BIT_ADDR
d6624 1
a6624 1
#ifdef SPARC_64BIT_ADDR
d6645 1
a6645 1
#ifdef SPARC_64BIT_ADDR
d6666 1
a6666 1
#ifdef SPARC_64BIT_ADDR
d6687 1
a6687 1
#ifdef SPARC_64BIT_ADDR
d6708 1
a6708 1
#ifdef SPARC_64BIT_ADDR
d6729 1
a6729 1
#ifdef SPARC_64BIT_ADDR
d6750 1
a6750 1
#ifdef SPARC_64BIT_ADDR
d6771 1
a6771 1
#ifdef SPARC_64BIT_ADDR
d6792 1
a6792 1
#ifdef SPARC_64BIT_ADDR
d6813 1
a6813 1
#ifdef SPARC_64BIT_ADDR
d6834 1
a6834 1
#ifdef SPARC_64BIT_ADDR
d6855 1
a6855 1
#ifdef SPARC_64BIT_ADDR
d6876 1
a6876 1
#ifdef SPARC_64BIT_ADDR
d6897 1
a6897 1
#ifdef SPARC_64BIT_ADDR
d6918 1
a6918 1
#ifdef SPARC_64BIT_ADDR
d6939 1
a6939 1
#ifdef SPARC_64BIT_ADDR
d6960 1
a6960 1
#ifdef SPARC_64BIT_ADDR
d6981 1
a6981 1
#ifdef SPARC_64BIT_ADDR
d7002 1
a7002 1
#ifdef SPARC_64BIT_ADDR
d7023 1
a7023 1
#ifdef SPARC_64BIT_ADDR
d7044 1
a7044 1
#ifdef SPARC_64BIT_ADDR
d7065 1
a7065 1
#ifdef SPARC_64BIT_ADDR
d7086 1
a7086 1
#ifdef SPARC_64BIT_ADDR
d7107 1
a7107 1
#ifdef SPARC_64BIT_ADDR
d7128 1
a7128 1
#ifdef SPARC_64BIT_ADDR
d7149 1
a7149 1
#ifdef SPARC_64BIT_ADDR
d7170 1
a7170 1
#ifdef SPARC_64BIT_ADDR
d7191 1
a7191 1
#ifdef SPARC_64BIT_ADDR
d7212 1
a7212 1
#ifdef SPARC_64BIT_ADDR
d7233 1
a7233 1
#ifdef SPARC_64BIT_ADDR
d7254 1
a7254 1
#ifdef SPARC_64BIT_ADDR
d7275 1
a7275 1
#ifdef SPARC_64BIT_ADDR
d7296 1
a7296 1
#ifdef SPARC_64BIT_ADDR
d7317 1
a7317 1
#ifdef SPARC_64BIT_ADDR
d7338 1
a7338 1
#ifdef SPARC_64BIT_ADDR
d7359 1
a7359 1
#ifdef SPARC_64BIT_ADDR
d7380 1
a7380 1
#ifdef SPARC_64BIT_ADDR
d7401 1
a7401 1
#ifdef SPARC_64BIT_ADDR
d7422 1
a7422 1
#ifdef SPARC_64BIT_ADDR
d7443 1
a7443 1
#ifdef SPARC_64BIT_ADDR
d7464 1
a7464 1
#ifdef SPARC_64BIT_ADDR
d7485 1
a7485 1
#ifdef SPARC_64BIT_ADDR
d7506 1
a7506 1
#ifdef SPARC_64BIT_ADDR
d7527 1
a7527 1
#ifdef SPARC_64BIT_ADDR
d7548 1
a7548 1
#ifdef SPARC_64BIT_ADDR
d7569 1
a7569 1
#ifdef SPARC_64BIT_ADDR
d7590 1
a7590 1
#ifdef SPARC_64BIT_ADDR
d7611 1
a7611 1
#ifdef SPARC_64BIT_ADDR
d7632 1
a7632 1
#ifdef SPARC_64BIT_ADDR
d7653 1
a7653 1
#ifdef SPARC_64BIT_ADDR
d7674 1
a7674 1
#ifdef SPARC_64BIT_ADDR
d7695 1
a7695 1
#ifdef SPARC_64BIT_ADDR
d7716 1
a7716 1
#ifdef SPARC_64BIT_ADDR
d7737 1
a7737 1
#ifdef SPARC_64BIT_ADDR
d7758 1
a7758 1
#ifdef SPARC_64BIT_ADDR
d7779 1
a7779 1
#ifdef SPARC_64BIT_ADDR
d7800 1
a7800 1
#ifdef SPARC_64BIT_ADDR
d7821 1
a7821 1
#ifdef SPARC_64BIT_ADDR
d7842 1
a7842 1
#ifdef SPARC_64BIT_ADDR
d7863 1
a7863 1
#ifdef SPARC_64BIT_ADDR
d7884 1
a7884 1
#ifdef SPARC_64BIT_ADDR
d7905 1
a7905 1
#ifdef SPARC_64BIT_ADDR
d7926 1
a7926 1
#ifdef SPARC_64BIT_ADDR
d7947 1
a7947 1
#ifdef SPARC_64BIT_ADDR
d7968 1
a7968 1
#ifdef SPARC_64BIT_ADDR
d7989 1
a7989 1
#ifdef SPARC_64BIT_ADDR
d8010 1
a8010 1
#ifdef SPARC_64BIT_ADDR
d8031 1
a8031 1
#ifdef SPARC_64BIT_ADDR
d8052 1
a8052 1
#ifdef SPARC_64BIT_ADDR
d8073 1
a8073 1
#ifdef SPARC_64BIT_ADDR
d8094 1
a8094 1
#ifdef SPARC_64BIT_ADDR
d8115 1
a8115 1
#ifdef SPARC_64BIT_ADDR
d8136 1
a8136 1
#ifdef SPARC_64BIT_ADDR
d8157 1
a8157 1
#ifdef SPARC_64BIT_ADDR
d8178 1
a8178 1
#ifdef SPARC_64BIT_ADDR
d8199 1
a8199 1
#ifdef SPARC_64BIT_ADDR
d8220 1
a8220 1
#ifdef SPARC_64BIT_ADDR
d8241 1
a8241 1
#ifdef SPARC_64BIT_ADDR
d8262 1
a8262 1
#ifdef SPARC_64BIT_ADDR
d8283 1
a8283 1
#ifdef SPARC_64BIT_ADDR
d8304 1
a8304 1
#ifdef SPARC_64BIT_ADDR
d8325 1
a8325 1
#ifdef SPARC_64BIT_ADDR
d8346 1
a8346 1
#ifdef SPARC_64BIT_ADDR
d8367 1
a8367 1
#ifdef SPARC_64BIT_ADDR
d8388 1
a8388 1
#ifdef SPARC_64BIT_ADDR
d8409 1
a8409 1
#ifdef SPARC_64BIT_ADDR
d8430 1
a8430 1
#ifdef SPARC_64BIT_ADDR
d8451 1
a8451 1
#ifdef SPARC_64BIT_ADDR
d8472 1
a8472 1
#ifdef SPARC_64BIT_ADDR
d8493 1
a8493 1
#ifdef SPARC_64BIT_ADDR
d8514 1
a8514 1
#ifdef SPARC_64BIT_ADDR
d8535 1
a8535 1
#ifdef SPARC_64BIT_ADDR
d8556 1
a8556 1
#ifdef SPARC_64BIT_ADDR
d8577 1
a8577 1
#ifdef SPARC_64BIT_ADDR
d8598 1
a8598 1
#ifdef SPARC_64BIT_ADDR
d8619 1
a8619 1
#ifdef SPARC_64BIT_ADDR
d8640 1
a8640 1
#ifdef SPARC_64BIT_ADDR
d8661 1
a8661 1
#ifdef SPARC_64BIT_ADDR
d8682 1
a8682 1
#ifdef SPARC_64BIT_ADDR
a8699 21
.globl gl__unused413
.type gl__unused413,#function
gl__unused413:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset___unused413), %g2
	or	%g2, %lo(8 * _gloffset___unused413), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset___unused413)], %g3
#endif
	jmpl	%g3, %g0
	nop

d8703 1
a8703 1
#ifdef SPARC_64BIT_ADDR
d8724 1
a8724 1
#ifdef SPARC_64BIT_ADDR
d8745 1
a8745 1
#ifdef SPARC_64BIT_ADDR
d8766 1
a8766 1
#ifdef SPARC_64BIT_ADDR
d8787 1
a8787 1
#ifdef SPARC_64BIT_ADDR
d8808 1
a8808 1
#ifdef SPARC_64BIT_ADDR
d8829 1
a8829 1
#ifdef SPARC_64BIT_ADDR
d8847 4
a8850 4
.globl glActiveTexture
.type glActiveTexture,#function
glActiveTexture:
#ifdef SPARC_64BIT_ADDR
d8857 2
a8858 2
	sethi	%hi(8 * _gloffset_ActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ActiveTextureARB), %g2
d8863 1
a8863 1
	ld	[%g1 + (4 * _gloffset_ActiveTextureARB)], %g3
d8868 4
a8871 4
.globl glClientActiveTexture
.type glClientActiveTexture,#function
glClientActiveTexture:
#ifdef SPARC_64BIT_ADDR
d8878 2
a8879 2
	sethi	%hi(8 * _gloffset_ClientActiveTextureARB), %g2
	or	%g2, %lo(8 * _gloffset_ClientActiveTextureARB), %g2
d8884 1
a8884 1
	ld	[%g1 + (4 * _gloffset_ClientActiveTextureARB)], %g3
d8889 4
a8892 4
.globl glMultiTexCoord1d
.type glMultiTexCoord1d,#function
glMultiTexCoord1d:
#ifdef SPARC_64BIT_ADDR
d8899 2
a8900 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dARB), %g2
d8905 1
a8905 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dARB)], %g3
d8910 4
a8913 4
.globl glMultiTexCoord1dv
.type glMultiTexCoord1dv,#function
glMultiTexCoord1dv:
#ifdef SPARC_64BIT_ADDR
d8920 2
a8921 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1dvARB), %g2
d8926 1
a8926 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1dvARB)], %g3
d8931 4
a8934 4
.globl glMultiTexCoord1f
.type glMultiTexCoord1f,#function
glMultiTexCoord1f:
#ifdef SPARC_64BIT_ADDR
d8941 2
a8942 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fARB), %g2
d8947 1
a8947 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fARB)], %g3
d8952 4
a8955 4
.globl glMultiTexCoord1fv
.type glMultiTexCoord1fv,#function
glMultiTexCoord1fv:
#ifdef SPARC_64BIT_ADDR
d8962 2
a8963 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1fvARB), %g2
d8968 1
a8968 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1fvARB)], %g3
d8973 4
a8976 4
.globl glMultiTexCoord1i
.type glMultiTexCoord1i,#function
glMultiTexCoord1i:
#ifdef SPARC_64BIT_ADDR
d8983 2
a8984 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1iARB), %g2
d8989 1
a8989 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1iARB)], %g3
d8994 4
a8997 4
.globl glMultiTexCoord1iv
.type glMultiTexCoord1iv,#function
glMultiTexCoord1iv:
#ifdef SPARC_64BIT_ADDR
d9004 2
a9005 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1ivARB), %g2
d9010 1
a9010 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1ivARB)], %g3
d9015 4
a9018 4
.globl glMultiTexCoord1s
.type glMultiTexCoord1s,#function
glMultiTexCoord1s:
#ifdef SPARC_64BIT_ADDR
d9025 2
a9026 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1sARB), %g2
d9031 1
a9031 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1sARB)], %g3
d9036 4
a9039 4
.globl glMultiTexCoord1sv
.type glMultiTexCoord1sv,#function
glMultiTexCoord1sv:
#ifdef SPARC_64BIT_ADDR
d9046 2
a9047 2
	sethi	%hi(8 * _gloffset_MultiTexCoord1svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord1svARB), %g2
d9052 1
a9052 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord1svARB)], %g3
d9057 4
a9060 4
.globl glMultiTexCoord2d
.type glMultiTexCoord2d,#function
glMultiTexCoord2d:
#ifdef SPARC_64BIT_ADDR
d9067 2
a9068 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dARB), %g2
d9073 1
a9073 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dARB)], %g3
d9078 4
a9081 4
.globl glMultiTexCoord2dv
.type glMultiTexCoord2dv,#function
glMultiTexCoord2dv:
#ifdef SPARC_64BIT_ADDR
d9088 2
a9089 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2dvARB), %g2
d9094 1
a9094 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2dvARB)], %g3
d9099 4
a9102 4
.globl glMultiTexCoord2f
.type glMultiTexCoord2f,#function
glMultiTexCoord2f:
#ifdef SPARC_64BIT_ADDR
d9109 2
a9110 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fARB), %g2
d9115 1
a9115 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fARB)], %g3
d9120 4
a9123 4
.globl glMultiTexCoord2fv
.type glMultiTexCoord2fv,#function
glMultiTexCoord2fv:
#ifdef SPARC_64BIT_ADDR
d9130 2
a9131 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2fvARB), %g2
d9136 1
a9136 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2fvARB)], %g3
d9141 4
a9144 4
.globl glMultiTexCoord2i
.type glMultiTexCoord2i,#function
glMultiTexCoord2i:
#ifdef SPARC_64BIT_ADDR
d9151 2
a9152 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2iARB), %g2
d9157 1
a9157 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2iARB)], %g3
d9162 4
a9165 4
.globl glMultiTexCoord2iv
.type glMultiTexCoord2iv,#function
glMultiTexCoord2iv:
#ifdef SPARC_64BIT_ADDR
d9172 2
a9173 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2ivARB), %g2
d9178 1
a9178 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2ivARB)], %g3
d9183 4
a9186 4
.globl glMultiTexCoord2s
.type glMultiTexCoord2s,#function
glMultiTexCoord2s:
#ifdef SPARC_64BIT_ADDR
d9193 2
a9194 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2sARB), %g2
d9199 1
a9199 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2sARB)], %g3
d9204 4
a9207 4
.globl glMultiTexCoord2sv
.type glMultiTexCoord2sv,#function
glMultiTexCoord2sv:
#ifdef SPARC_64BIT_ADDR
d9214 2
a9215 2
	sethi	%hi(8 * _gloffset_MultiTexCoord2svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord2svARB), %g2
d9220 1
a9220 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord2svARB)], %g3
d9225 4
a9228 4
.globl glMultiTexCoord3d
.type glMultiTexCoord3d,#function
glMultiTexCoord3d:
#ifdef SPARC_64BIT_ADDR
d9235 2
a9236 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dARB), %g2
d9241 1
a9241 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dARB)], %g3
d9246 4
a9249 4
.globl glMultiTexCoord3dv
.type glMultiTexCoord3dv,#function
glMultiTexCoord3dv:
#ifdef SPARC_64BIT_ADDR
d9256 2
a9257 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3dvARB), %g2
d9262 1
a9262 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3dvARB)], %g3
d9267 4
a9270 4
.globl glMultiTexCoord3f
.type glMultiTexCoord3f,#function
glMultiTexCoord3f:
#ifdef SPARC_64BIT_ADDR
d9277 2
a9278 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fARB), %g2
d9283 1
a9283 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fARB)], %g3
d9288 4
a9291 4
.globl glMultiTexCoord3fv
.type glMultiTexCoord3fv,#function
glMultiTexCoord3fv:
#ifdef SPARC_64BIT_ADDR
d9298 2
a9299 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3fvARB), %g2
d9304 1
a9304 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3fvARB)], %g3
d9309 4
a9312 4
.globl glMultiTexCoord3i
.type glMultiTexCoord3i,#function
glMultiTexCoord3i:
#ifdef SPARC_64BIT_ADDR
d9319 2
a9320 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3iARB), %g2
d9325 1
a9325 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3iARB)], %g3
d9330 4
a9333 4
.globl glMultiTexCoord3iv
.type glMultiTexCoord3iv,#function
glMultiTexCoord3iv:
#ifdef SPARC_64BIT_ADDR
d9340 2
a9341 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3ivARB), %g2
d9346 1
a9346 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3ivARB)], %g3
d9351 4
a9354 4
.globl glMultiTexCoord3s
.type glMultiTexCoord3s,#function
glMultiTexCoord3s:
#ifdef SPARC_64BIT_ADDR
d9361 2
a9362 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3sARB), %g2
d9367 1
a9367 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3sARB)], %g3
d9372 4
a9375 4
.globl glMultiTexCoord3sv
.type glMultiTexCoord3sv,#function
glMultiTexCoord3sv:
#ifdef SPARC_64BIT_ADDR
d9382 2
a9383 2
	sethi	%hi(8 * _gloffset_MultiTexCoord3svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord3svARB), %g2
d9388 1
a9388 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord3svARB)], %g3
d9393 4
a9396 4
.globl glMultiTexCoord4d
.type glMultiTexCoord4d,#function
glMultiTexCoord4d:
#ifdef SPARC_64BIT_ADDR
d9403 2
a9404 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4dARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dARB), %g2
d9409 1
a9409 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dARB)], %g3
d9414 4
a9417 4
.globl glMultiTexCoord4dv
.type glMultiTexCoord4dv,#function
glMultiTexCoord4dv:
#ifdef SPARC_64BIT_ADDR
d9424 2
a9425 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4dvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4dvARB), %g2
d9430 1
a9430 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4dvARB)], %g3
d9435 4
a9438 4
.globl glMultiTexCoord4f
.type glMultiTexCoord4f,#function
glMultiTexCoord4f:
#ifdef SPARC_64BIT_ADDR
d9445 2
a9446 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4fARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fARB), %g2
d9451 1
a9451 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fARB)], %g3
d9456 4
a9459 4
.globl glMultiTexCoord4fv
.type glMultiTexCoord4fv,#function
glMultiTexCoord4fv:
#ifdef SPARC_64BIT_ADDR
d9466 2
a9467 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4fvARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4fvARB), %g2
d9472 1
a9472 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4fvARB)], %g3
d9477 4
a9480 4
.globl glMultiTexCoord4i
.type glMultiTexCoord4i,#function
glMultiTexCoord4i:
#ifdef SPARC_64BIT_ADDR
d9487 2
a9488 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4iARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4iARB), %g2
d9493 1
a9493 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4iARB)], %g3
d9498 4
a9501 4
.globl glMultiTexCoord4iv
.type glMultiTexCoord4iv,#function
glMultiTexCoord4iv:
#ifdef SPARC_64BIT_ADDR
d9508 2
a9509 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4ivARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4ivARB), %g2
d9514 1
a9514 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4ivARB)], %g3
d9519 4
a9522 4
.globl glMultiTexCoord4s
.type glMultiTexCoord4s,#function
glMultiTexCoord4s:
#ifdef SPARC_64BIT_ADDR
d9529 2
a9530 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4sARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4sARB), %g2
d9535 1
a9535 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4sARB)], %g3
d9540 4
a9543 4
.globl glMultiTexCoord4sv
.type glMultiTexCoord4sv,#function
glMultiTexCoord4sv:
#ifdef SPARC_64BIT_ADDR
d9550 2
a9551 2
	sethi	%hi(8 * _gloffset_MultiTexCoord4svARB), %g2
	or	%g2, %lo(8 * _gloffset_MultiTexCoord4svARB), %g2
d9556 1
a9556 1
	ld	[%g1 + (4 * _gloffset_MultiTexCoord4svARB)], %g3
d9561 4
a9564 4
.globl glLoadTransposeMatrixf
.type glLoadTransposeMatrixf,#function
glLoadTransposeMatrixf:
#ifdef SPARC_64BIT_ADDR
d9571 2
a9572 2
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixfARB), %g2
d9577 1
a9577 1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixfARB)], %g3
d9582 4
a9585 4
.globl glLoadTransposeMatrixd
.type glLoadTransposeMatrixd,#function
glLoadTransposeMatrixd:
#ifdef SPARC_64BIT_ADDR
d9592 2
a9593 2
	sethi	%hi(8 * _gloffset_LoadTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_LoadTransposeMatrixdARB), %g2
d9598 1
a9598 1
	ld	[%g1 + (4 * _gloffset_LoadTransposeMatrixdARB)], %g3
d9603 4
a9606 4
.globl glMultTransposeMatrixf
.type glMultTransposeMatrixf,#function
glMultTransposeMatrixf:
#ifdef SPARC_64BIT_ADDR
d9613 2
a9614 2
	sethi	%hi(8 * _gloffset_MultTransposeMatrixfARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixfARB), %g2
d9619 1
a9619 1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixfARB)], %g3
d9624 4
a9627 4
.globl glMultTransposeMatrixd
.type glMultTransposeMatrixd,#function
glMultTransposeMatrixd:
#ifdef SPARC_64BIT_ADDR
d9634 2
a9635 2
	sethi	%hi(8 * _gloffset_MultTransposeMatrixdARB), %g2
	or	%g2, %lo(8 * _gloffset_MultTransposeMatrixdARB), %g2
d9640 1
a9640 1
	ld	[%g1 + (4 * _gloffset_MultTransposeMatrixdARB)], %g3
d9645 4
a9648 4
.globl glSampleCoverage
.type glSampleCoverage,#function
glSampleCoverage:
#ifdef SPARC_64BIT_ADDR
d9655 2
a9656 2
	sethi	%hi(8 * _gloffset_SampleCoverageARB), %g2
	or	%g2, %lo(8 * _gloffset_SampleCoverageARB), %g2
d9661 1
a9661 1
	ld	[%g1 + (4 * _gloffset_SampleCoverageARB)], %g3
d9666 4
a9669 4
.globl glCompressedTexImage3D
.type glCompressedTexImage3D,#function
glCompressedTexImage3D:
#ifdef SPARC_64BIT_ADDR
d9676 2
a9677 2
	sethi	%hi(8 * _gloffset_CompressedTexImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage3DARB), %g2
d9682 1
a9682 1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage3DARB)], %g3
d9687 4
a9690 4
.globl glCompressedTexImage2D
.type glCompressedTexImage2D,#function
glCompressedTexImage2D:
#ifdef SPARC_64BIT_ADDR
d9697 2
a9698 2
	sethi	%hi(8 * _gloffset_CompressedTexImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage2DARB), %g2
d9703 1
a9703 1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage2DARB)], %g3
d9708 4
a9711 4
.globl glCompressedTexImage1D
.type glCompressedTexImage1D,#function
glCompressedTexImage1D:
#ifdef SPARC_64BIT_ADDR
d9718 2
a9719 2
	sethi	%hi(8 * _gloffset_CompressedTexImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexImage1DARB), %g2
d9724 1
a9724 1
	ld	[%g1 + (4 * _gloffset_CompressedTexImage1DARB)], %g3
d9729 4
a9732 4
.globl glCompressedTexSubImage3D
.type glCompressedTexSubImage3D,#function
glCompressedTexSubImage3D:
#ifdef SPARC_64BIT_ADDR
d9739 2
a9740 2
	sethi	%hi(8 * _gloffset_CompressedTexSubImage3DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage3DARB), %g2
d9745 1
a9745 1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage3DARB)], %g3
d9750 4
a9753 4
.globl glCompressedTexSubImage2D
.type glCompressedTexSubImage2D,#function
glCompressedTexSubImage2D:
#ifdef SPARC_64BIT_ADDR
d9760 2
a9761 2
	sethi	%hi(8 * _gloffset_CompressedTexSubImage2DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage2DARB), %g2
d9766 1
a9766 1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage2DARB)], %g3
d9771 4
a9774 4
.globl glCompressedTexSubImage1D
.type glCompressedTexSubImage1D,#function
glCompressedTexSubImage1D:
#ifdef SPARC_64BIT_ADDR
d9781 2
a9782 2
	sethi	%hi(8 * _gloffset_CompressedTexSubImage1DARB), %g2
	or	%g2, %lo(8 * _gloffset_CompressedTexSubImage1DARB), %g2
d9787 1
a9787 1
	ld	[%g1 + (4 * _gloffset_CompressedTexSubImage1DARB)], %g3
d9792 4
a9795 4
.globl glGetCompressedTexImage
.type glGetCompressedTexImage,#function
glGetCompressedTexImage:
#ifdef SPARC_64BIT_ADDR
d9802 2
a9803 2
	sethi	%hi(8 * _gloffset_GetCompressedTexImageARB), %g2
	or	%g2, %lo(8 * _gloffset_GetCompressedTexImageARB), %g2
d9808 1
a9808 1
	ld	[%g1 + (4 * _gloffset_GetCompressedTexImageARB)], %g3
d9813 4
a9816 4
.globl glBlendColorEXT
.type glBlendColorEXT,#function
glBlendColorEXT:
#ifdef SPARC_64BIT_ADDR
d9823 2
a9824 2
	sethi	%hi(8 * _gloffset_BlendColor), %g2
	or	%g2, %lo(8 * _gloffset_BlendColor), %g2
d9829 1
a9829 1
	ld	[%g1 + (4 * _gloffset_BlendColor)], %g3
d9834 4
a9837 4
.globl glPolygonOffsetEXT
.type glPolygonOffsetEXT,#function
glPolygonOffsetEXT:
#ifdef SPARC_64BIT_ADDR
d9844 2
a9845 2
	sethi	%hi(8 * _gloffset_PolygonOffsetEXT), %g2
	or	%g2, %lo(8 * _gloffset_PolygonOffsetEXT), %g2
d9850 1
a9850 1
	ld	[%g1 + (4 * _gloffset_PolygonOffsetEXT)], %g3
d9855 4
a9858 4
.globl glTexImage3DEXT
.type glTexImage3DEXT,#function
glTexImage3DEXT:
#ifdef SPARC_64BIT_ADDR
d9865 2
a9866 2
	sethi	%hi(8 * _gloffset_TexImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexImage3D), %g2
d9871 1
a9871 1
	ld	[%g1 + (4 * _gloffset_TexImage3D)], %g3
d9876 4
a9879 4
.globl glTexSubImage3DEXT
.type glTexSubImage3DEXT,#function
glTexSubImage3DEXT:
#ifdef SPARC_64BIT_ADDR
d9886 2
a9887 2
	sethi	%hi(8 * _gloffset_TexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage3D), %g2
d9892 1
a9892 1
	ld	[%g1 + (4 * _gloffset_TexSubImage3D)], %g3
d9897 4
a9900 4
.globl glGetTexFilterFuncSGIS
.type glGetTexFilterFuncSGIS,#function
glGetTexFilterFuncSGIS:
#ifdef SPARC_64BIT_ADDR
d9907 2
a9908 2
	sethi	%hi(8 * _gloffset_GetTexFilterFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetTexFilterFuncSGIS), %g2
d9913 1
a9913 1
	ld	[%g1 + (4 * _gloffset_GetTexFilterFuncSGIS)], %g3
d9918 4
a9921 4
.globl glTexFilterFuncSGIS
.type glTexFilterFuncSGIS,#function
glTexFilterFuncSGIS:
#ifdef SPARC_64BIT_ADDR
d9928 2
a9929 2
	sethi	%hi(8 * _gloffset_TexFilterFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexFilterFuncSGIS), %g2
d9934 1
a9934 1
	ld	[%g1 + (4 * _gloffset_TexFilterFuncSGIS)], %g3
d9939 4
a9942 4
.globl glTexSubImage1DEXT
.type glTexSubImage1DEXT,#function
glTexSubImage1DEXT:
#ifdef SPARC_64BIT_ADDR
d9949 2
a9950 2
	sethi	%hi(8 * _gloffset_TexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage1D), %g2
d9955 1
a9955 1
	ld	[%g1 + (4 * _gloffset_TexSubImage1D)], %g3
d9960 4
a9963 4
.globl glTexSubImage2DEXT
.type glTexSubImage2DEXT,#function
glTexSubImage2DEXT:
#ifdef SPARC_64BIT_ADDR
d9970 2
a9971 2
	sethi	%hi(8 * _gloffset_TexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage2D), %g2
d9976 1
a9976 1
	ld	[%g1 + (4 * _gloffset_TexSubImage2D)], %g3
d9981 4
a9984 4
.globl glCopyTexImage1DEXT
.type glCopyTexImage1DEXT,#function
glCopyTexImage1DEXT:
#ifdef SPARC_64BIT_ADDR
d9991 2
a9992 2
	sethi	%hi(8 * _gloffset_CopyTexImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage1D), %g2
d9997 1
a9997 1
	ld	[%g1 + (4 * _gloffset_CopyTexImage1D)], %g3
d10002 4
a10005 4
.globl glCopyTexImage2DEXT
.type glCopyTexImage2DEXT,#function
glCopyTexImage2DEXT:
#ifdef SPARC_64BIT_ADDR
d10012 2
a10013 2
	sethi	%hi(8 * _gloffset_CopyTexImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexImage2D), %g2
d10018 1
a10018 1
	ld	[%g1 + (4 * _gloffset_CopyTexImage2D)], %g3
d10023 4
a10026 4
.globl glCopyTexSubImage1DEXT
.type glCopyTexSubImage1DEXT,#function
glCopyTexSubImage1DEXT:
#ifdef SPARC_64BIT_ADDR
d10033 2
a10034 2
	sethi	%hi(8 * _gloffset_CopyTexSubImage1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage1D), %g2
d10039 1
a10039 1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage1D)], %g3
d10044 4
a10047 4
.globl glCopyTexSubImage2DEXT
.type glCopyTexSubImage2DEXT,#function
glCopyTexSubImage2DEXT:
#ifdef SPARC_64BIT_ADDR
d10054 2
a10055 2
	sethi	%hi(8 * _gloffset_CopyTexSubImage2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage2D), %g2
d10060 1
a10060 1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage2D)], %g3
d10065 4
a10068 4
.globl glCopyTexSubImage3DEXT
.type glCopyTexSubImage3DEXT,#function
glCopyTexSubImage3DEXT:
#ifdef SPARC_64BIT_ADDR
d10075 2
a10076 2
	sethi	%hi(8 * _gloffset_CopyTexSubImage3D), %g2
	or	%g2, %lo(8 * _gloffset_CopyTexSubImage3D), %g2
d10081 1
a10081 1
	ld	[%g1 + (4 * _gloffset_CopyTexSubImage3D)], %g3
d10086 4
a10089 4
.globl glGetHistogramEXT
.type glGetHistogramEXT,#function
glGetHistogramEXT:
#ifdef SPARC_64BIT_ADDR
d10096 2
a10097 2
	sethi	%hi(8 * _gloffset_GetHistogramEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramEXT), %g2
d10102 1
a10102 1
	ld	[%g1 + (4 * _gloffset_GetHistogramEXT)], %g3
d10107 4
a10110 4
.globl glGetHistogramParameterfvEXT
.type glGetHistogramParameterfvEXT,#function
glGetHistogramParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10117 2
a10118 2
	sethi	%hi(8 * _gloffset_GetHistogramParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterfvEXT), %g2
d10123 1
a10123 1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterfvEXT)], %g3
d10128 4
a10131 4
.globl glGetHistogramParameterivEXT
.type glGetHistogramParameterivEXT,#function
glGetHistogramParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10138 2
a10139 2
	sethi	%hi(8 * _gloffset_GetHistogramParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetHistogramParameterivEXT), %g2
d10144 1
a10144 1
	ld	[%g1 + (4 * _gloffset_GetHistogramParameterivEXT)], %g3
d10149 4
a10152 4
.globl glGetMinmaxEXT
.type glGetMinmaxEXT,#function
glGetMinmaxEXT:
#ifdef SPARC_64BIT_ADDR
d10159 2
a10160 2
	sethi	%hi(8 * _gloffset_GetMinmaxEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxEXT), %g2
d10165 1
a10165 1
	ld	[%g1 + (4 * _gloffset_GetMinmaxEXT)], %g3
d10170 4
a10173 4
.globl glGetMinmaxParameterfvEXT
.type glGetMinmaxParameterfvEXT,#function
glGetMinmaxParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10180 2
a10181 2
	sethi	%hi(8 * _gloffset_GetMinmaxParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterfvEXT), %g2
d10186 1
a10186 1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterfvEXT)], %g3
d10191 4
a10194 4
.globl glGetMinmaxParameterivEXT
.type glGetMinmaxParameterivEXT,#function
glGetMinmaxParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10201 2
a10202 2
	sethi	%hi(8 * _gloffset_GetMinmaxParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetMinmaxParameterivEXT), %g2
d10207 1
a10207 1
	ld	[%g1 + (4 * _gloffset_GetMinmaxParameterivEXT)], %g3
d10212 4
a10215 4
.globl glHistogramEXT
.type glHistogramEXT,#function
glHistogramEXT:
#ifdef SPARC_64BIT_ADDR
d10222 2
a10223 2
	sethi	%hi(8 * _gloffset_Histogram), %g2
	or	%g2, %lo(8 * _gloffset_Histogram), %g2
d10228 1
a10228 1
	ld	[%g1 + (4 * _gloffset_Histogram)], %g3
d10233 4
a10236 4
.globl glMinmaxEXT
.type glMinmaxEXT,#function
glMinmaxEXT:
#ifdef SPARC_64BIT_ADDR
d10243 2
a10244 2
	sethi	%hi(8 * _gloffset_Minmax), %g2
	or	%g2, %lo(8 * _gloffset_Minmax), %g2
d10249 1
a10249 1
	ld	[%g1 + (4 * _gloffset_Minmax)], %g3
d10254 4
a10257 4
.globl glResetHistogramEXT
.type glResetHistogramEXT,#function
glResetHistogramEXT:
#ifdef SPARC_64BIT_ADDR
d10264 2
a10265 2
	sethi	%hi(8 * _gloffset_ResetHistogram), %g2
	or	%g2, %lo(8 * _gloffset_ResetHistogram), %g2
d10270 1
a10270 1
	ld	[%g1 + (4 * _gloffset_ResetHistogram)], %g3
d10275 4
a10278 4
.globl glResetMinmaxEXT
.type glResetMinmaxEXT,#function
glResetMinmaxEXT:
#ifdef SPARC_64BIT_ADDR
d10285 2
a10286 2
	sethi	%hi(8 * _gloffset_ResetMinmax), %g2
	or	%g2, %lo(8 * _gloffset_ResetMinmax), %g2
d10291 1
a10291 1
	ld	[%g1 + (4 * _gloffset_ResetMinmax)], %g3
d10296 4
a10299 4
.globl glConvolutionFilter1DEXT
.type glConvolutionFilter1DEXT,#function
glConvolutionFilter1DEXT:
#ifdef SPARC_64BIT_ADDR
d10306 2
a10307 2
	sethi	%hi(8 * _gloffset_ConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter1D), %g2
d10312 1
a10312 1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter1D)], %g3
d10317 4
a10320 4
.globl glConvolutionFilter2DEXT
.type glConvolutionFilter2DEXT,#function
glConvolutionFilter2DEXT:
#ifdef SPARC_64BIT_ADDR
d10327 2
a10328 2
	sethi	%hi(8 * _gloffset_ConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionFilter2D), %g2
d10333 1
a10333 1
	ld	[%g1 + (4 * _gloffset_ConvolutionFilter2D)], %g3
d10338 4
a10341 4
.globl glConvolutionParameterfEXT
.type glConvolutionParameterfEXT,#function
glConvolutionParameterfEXT:
#ifdef SPARC_64BIT_ADDR
d10348 2
a10349 2
	sethi	%hi(8 * _gloffset_ConvolutionParameterf), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterf), %g2
d10354 1
a10354 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterf)], %g3
d10359 4
a10362 4
.globl glConvolutionParameterfvEXT
.type glConvolutionParameterfvEXT,#function
glConvolutionParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10369 2
a10370 2
	sethi	%hi(8 * _gloffset_ConvolutionParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameterfv), %g2
d10375 1
a10375 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameterfv)], %g3
d10380 4
a10383 4
.globl glConvolutionParameteriEXT
.type glConvolutionParameteriEXT,#function
glConvolutionParameteriEXT:
#ifdef SPARC_64BIT_ADDR
d10390 2
a10391 2
	sethi	%hi(8 * _gloffset_ConvolutionParameteri), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteri), %g2
d10396 1
a10396 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteri)], %g3
d10401 4
a10404 4
.globl glConvolutionParameterivEXT
.type glConvolutionParameterivEXT,#function
glConvolutionParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10411 2
a10412 2
	sethi	%hi(8 * _gloffset_ConvolutionParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ConvolutionParameteriv), %g2
d10417 1
a10417 1
	ld	[%g1 + (4 * _gloffset_ConvolutionParameteriv)], %g3
d10422 4
a10425 4
.globl glCopyConvolutionFilter1DEXT
.type glCopyConvolutionFilter1DEXT,#function
glCopyConvolutionFilter1DEXT:
#ifdef SPARC_64BIT_ADDR
d10432 2
a10433 2
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter1D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter1D), %g2
d10438 1
a10438 1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter1D)], %g3
d10443 4
a10446 4
.globl glCopyConvolutionFilter2DEXT
.type glCopyConvolutionFilter2DEXT,#function
glCopyConvolutionFilter2DEXT:
#ifdef SPARC_64BIT_ADDR
d10453 2
a10454 2
	sethi	%hi(8 * _gloffset_CopyConvolutionFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_CopyConvolutionFilter2D), %g2
d10459 1
a10459 1
	ld	[%g1 + (4 * _gloffset_CopyConvolutionFilter2D)], %g3
d10464 4
a10467 4
.globl glGetConvolutionFilterEXT
.type glGetConvolutionFilterEXT,#function
glGetConvolutionFilterEXT:
#ifdef SPARC_64BIT_ADDR
d10474 2
a10475 2
	sethi	%hi(8 * _gloffset_GetConvolutionFilterEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionFilterEXT), %g2
d10480 1
a10480 1
	ld	[%g1 + (4 * _gloffset_GetConvolutionFilterEXT)], %g3
d10485 4
a10488 4
.globl glGetConvolutionParameterfvEXT
.type glGetConvolutionParameterfvEXT,#function
glGetConvolutionParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
d10495 2
a10496 2
	sethi	%hi(8 * _gloffset_GetConvolutionParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterfvEXT), %g2
d10501 1
a10501 1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterfvEXT)], %g3
d10506 4
a10509 4
.globl glGetConvolutionParameterivEXT
.type glGetConvolutionParameterivEXT,#function
glGetConvolutionParameterivEXT:
#ifdef SPARC_64BIT_ADDR
d10516 2
a10517 2
	sethi	%hi(8 * _gloffset_GetConvolutionParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetConvolutionParameterivEXT), %g2
d10522 1
a10522 1
	ld	[%g1 + (4 * _gloffset_GetConvolutionParameterivEXT)], %g3
d10527 4
a10530 4
.globl glGetSeparableFilterEXT
.type glGetSeparableFilterEXT,#function
glGetSeparableFilterEXT:
#ifdef SPARC_64BIT_ADDR
d10537 2
a10538 2
	sethi	%hi(8 * _gloffset_GetSeparableFilterEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetSeparableFilterEXT), %g2
d10543 1
a10543 1
	ld	[%g1 + (4 * _gloffset_GetSeparableFilterEXT)], %g3
d10548 4
a10551 4
.globl glSeparableFilter2DEXT
.type glSeparableFilter2DEXT,#function
glSeparableFilter2DEXT:
#ifdef SPARC_64BIT_ADDR
d10558 2
a10559 2
	sethi	%hi(8 * _gloffset_SeparableFilter2D), %g2
	or	%g2, %lo(8 * _gloffset_SeparableFilter2D), %g2
d10564 1
a10564 1
	ld	[%g1 + (4 * _gloffset_SeparableFilter2D)], %g3
d10569 4
a10572 4
.globl glColorTableSGI
.type glColorTableSGI,#function
glColorTableSGI:
#ifdef SPARC_64BIT_ADDR
d10579 2
a10580 2
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
d10585 1
a10585 1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
d10590 4
a10593 4
.globl glColorTableParameterfvSGI
.type glColorTableParameterfvSGI,#function
glColorTableParameterfvSGI:
#ifdef SPARC_64BIT_ADDR
d10600 2
a10601 2
	sethi	%hi(8 * _gloffset_ColorTableParameterfv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameterfv), %g2
d10606 1
a10606 1
	ld	[%g1 + (4 * _gloffset_ColorTableParameterfv)], %g3
d10611 4
a10614 4
.globl glColorTableParameterivSGI
.type glColorTableParameterivSGI,#function
glColorTableParameterivSGI:
#ifdef SPARC_64BIT_ADDR
d10621 2
a10622 2
	sethi	%hi(8 * _gloffset_ColorTableParameteriv), %g2
	or	%g2, %lo(8 * _gloffset_ColorTableParameteriv), %g2
d10627 1
a10627 1
	ld	[%g1 + (4 * _gloffset_ColorTableParameteriv)], %g3
d10632 4
a10635 4
.globl glCopyColorTableSGI
.type glCopyColorTableSGI,#function
glCopyColorTableSGI:
#ifdef SPARC_64BIT_ADDR
d10642 2
a10643 2
	sethi	%hi(8 * _gloffset_CopyColorTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorTable), %g2
d10648 1
a10648 1
	ld	[%g1 + (4 * _gloffset_CopyColorTable)], %g3
d10653 4
a10656 4
.globl glGetColorTableSGI
.type glGetColorTableSGI,#function
glGetColorTableSGI:
#ifdef SPARC_64BIT_ADDR
d10663 2
a10664 2
	sethi	%hi(8 * _gloffset_GetColorTableSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableSGI), %g2
d10669 1
a10669 1
	ld	[%g1 + (4 * _gloffset_GetColorTableSGI)], %g3
d10674 4
a10677 4
.globl glGetColorTableParameterfvSGI
.type glGetColorTableParameterfvSGI,#function
glGetColorTableParameterfvSGI:
#ifdef SPARC_64BIT_ADDR
d10684 2
a10685 2
	sethi	%hi(8 * _gloffset_GetColorTableParameterfvSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfvSGI), %g2
d10690 1
a10690 1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfvSGI)], %g3
d10695 4
a10698 4
.globl glGetColorTableParameterivSGI
.type glGetColorTableParameterivSGI,#function
glGetColorTableParameterivSGI:
#ifdef SPARC_64BIT_ADDR
d10705 2
a10706 2
	sethi	%hi(8 * _gloffset_GetColorTableParameterivSGI), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterivSGI), %g2
d10711 1
a10711 1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterivSGI)], %g3
d10716 4
a10719 4
.globl glPixelTexGenSGIX
.type glPixelTexGenSGIX,#function
glPixelTexGenSGIX:
#ifdef SPARC_64BIT_ADDR
d10726 2
a10727 2
	sethi	%hi(8 * _gloffset_PixelTexGenSGIX), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenSGIX), %g2
d10732 1
a10732 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenSGIX)], %g3
d10737 4
a10740 4
.globl glPixelTexGenParameteriSGIS
.type glPixelTexGenParameteriSGIS,#function
glPixelTexGenParameteriSGIS:
#ifdef SPARC_64BIT_ADDR
d10747 2
a10748 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameteriSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameteriSGIS), %g2
d10753 1
a10753 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameteriSGIS)], %g3
d10758 4
a10761 4
.globl glPixelTexGenParameterivSGIS
.type glPixelTexGenParameterivSGIS,#function
glPixelTexGenParameterivSGIS:
#ifdef SPARC_64BIT_ADDR
d10768 2
a10769 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameterivSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterivSGIS), %g2
d10774 1
a10774 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterivSGIS)], %g3
d10779 4
a10782 4
.globl glPixelTexGenParameterfSGIS
.type glPixelTexGenParameterfSGIS,#function
glPixelTexGenParameterfSGIS:
#ifdef SPARC_64BIT_ADDR
d10789 2
a10790 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameterfSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterfSGIS), %g2
d10795 1
a10795 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterfSGIS)], %g3
d10800 4
a10803 4
.globl glPixelTexGenParameterfvSGIS
.type glPixelTexGenParameterfvSGIS,#function
glPixelTexGenParameterfvSGIS:
#ifdef SPARC_64BIT_ADDR
d10810 2
a10811 2
	sethi	%hi(8 * _gloffset_PixelTexGenParameterfvSGIS), %g2
	or	%g2, %lo(8 * _gloffset_PixelTexGenParameterfvSGIS), %g2
d10816 1
a10816 1
	ld	[%g1 + (4 * _gloffset_PixelTexGenParameterfvSGIS)], %g3
d10821 4
a10824 4
.globl glGetPixelTexGenParameterivSGIS
.type glGetPixelTexGenParameterivSGIS,#function
glGetPixelTexGenParameterivSGIS:
#ifdef SPARC_64BIT_ADDR
d10831 2
a10832 2
	sethi	%hi(8 * _gloffset_GetPixelTexGenParameterivSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelTexGenParameterivSGIS), %g2
d10837 1
a10837 1
	ld	[%g1 + (4 * _gloffset_GetPixelTexGenParameterivSGIS)], %g3
d10842 4
a10845 4
.globl glGetPixelTexGenParameterfvSGIS
.type glGetPixelTexGenParameterfvSGIS,#function
glGetPixelTexGenParameterfvSGIS:
#ifdef SPARC_64BIT_ADDR
d10852 2
a10853 2
	sethi	%hi(8 * _gloffset_GetPixelTexGenParameterfvSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetPixelTexGenParameterfvSGIS), %g2
d10858 1
a10858 1
	ld	[%g1 + (4 * _gloffset_GetPixelTexGenParameterfvSGIS)], %g3
d10863 4
a10866 4
.globl glTexImage4DSGIS
.type glTexImage4DSGIS,#function
glTexImage4DSGIS:
#ifdef SPARC_64BIT_ADDR
d10873 2
a10874 2
	sethi	%hi(8 * _gloffset_TexImage4DSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexImage4DSGIS), %g2
d10879 1
a10879 1
	ld	[%g1 + (4 * _gloffset_TexImage4DSGIS)], %g3
d10884 4
a10887 4
.globl glTexSubImage4DSGIS
.type glTexSubImage4DSGIS,#function
glTexSubImage4DSGIS:
#ifdef SPARC_64BIT_ADDR
d10894 2
a10895 2
	sethi	%hi(8 * _gloffset_TexSubImage4DSGIS), %g2
	or	%g2, %lo(8 * _gloffset_TexSubImage4DSGIS), %g2
d10900 1
a10900 1
	ld	[%g1 + (4 * _gloffset_TexSubImage4DSGIS)], %g3
d10905 4
a10908 4
.globl glAreTexturesResidentEXT
.type glAreTexturesResidentEXT,#function
glAreTexturesResidentEXT:
#ifdef SPARC_64BIT_ADDR
d10915 2
a10916 2
	sethi	%hi(8 * _gloffset_AreTexturesResidentEXT), %g2
	or	%g2, %lo(8 * _gloffset_AreTexturesResidentEXT), %g2
d10921 1
a10921 1
	ld	[%g1 + (4 * _gloffset_AreTexturesResidentEXT)], %g3
d10926 4
a10929 4
.globl glBindTextureEXT
.type glBindTextureEXT,#function
glBindTextureEXT:
#ifdef SPARC_64BIT_ADDR
d10936 2
a10937 2
	sethi	%hi(8 * _gloffset_BindTexture), %g2
	or	%g2, %lo(8 * _gloffset_BindTexture), %g2
d10942 1
a10942 1
	ld	[%g1 + (4 * _gloffset_BindTexture)], %g3
d10947 4
a10950 4
.globl glDeleteTexturesEXT
.type glDeleteTexturesEXT,#function
glDeleteTexturesEXT:
#ifdef SPARC_64BIT_ADDR
d10957 2
a10958 2
	sethi	%hi(8 * _gloffset_DeleteTextures), %g2
	or	%g2, %lo(8 * _gloffset_DeleteTextures), %g2
d10963 1
a10963 1
	ld	[%g1 + (4 * _gloffset_DeleteTextures)], %g3
d10968 4
a10971 4
.globl glGenTexturesEXT
.type glGenTexturesEXT,#function
glGenTexturesEXT:
#ifdef SPARC_64BIT_ADDR
d10978 2
a10979 2
	sethi	%hi(8 * _gloffset_GenTexturesEXT), %g2
	or	%g2, %lo(8 * _gloffset_GenTexturesEXT), %g2
d10984 1
a10984 1
	ld	[%g1 + (4 * _gloffset_GenTexturesEXT)], %g3
d10989 4
a10992 4
.globl glIsTextureEXT
.type glIsTextureEXT,#function
glIsTextureEXT:
#ifdef SPARC_64BIT_ADDR
d10999 2
a11000 2
	sethi	%hi(8 * _gloffset_IsTextureEXT), %g2
	or	%g2, %lo(8 * _gloffset_IsTextureEXT), %g2
d11005 1
a11005 1
	ld	[%g1 + (4 * _gloffset_IsTextureEXT)], %g3
d11010 4
a11013 4
.globl glPrioritizeTexturesEXT
.type glPrioritizeTexturesEXT,#function
glPrioritizeTexturesEXT:
#ifdef SPARC_64BIT_ADDR
d11020 2
a11021 2
	sethi	%hi(8 * _gloffset_PrioritizeTextures), %g2
	or	%g2, %lo(8 * _gloffset_PrioritizeTextures), %g2
d11026 1
a11026 1
	ld	[%g1 + (4 * _gloffset_PrioritizeTextures)], %g3
d11031 4
a11034 4
.globl glDetailTexFuncSGIS
.type glDetailTexFuncSGIS,#function
glDetailTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
d11041 2
a11042 2
	sethi	%hi(8 * _gloffset_DetailTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_DetailTexFuncSGIS), %g2
d11047 1
a11047 2710
	ld	[%g1 + (4 * _gloffset_DetailTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetDetailTexFuncSGIS
.type glGetDetailTexFuncSGIS,#function
glGetDetailTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetDetailTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetDetailTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetDetailTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSharpenTexFuncSGIS
.type glSharpenTexFuncSGIS,#function
glSharpenTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SharpenTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SharpenTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SharpenTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetSharpenTexFuncSGIS
.type glGetSharpenTexFuncSGIS,#function
glGetSharpenTexFuncSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetSharpenTexFuncSGIS), %g2
	or	%g2, %lo(8 * _gloffset_GetSharpenTexFuncSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetSharpenTexFuncSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSampleMaskSGIS
.type glSampleMaskSGIS,#function
glSampleMaskSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SampleMaskSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SampleMaskSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SampleMaskSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSamplePatternSGIS
.type glSamplePatternSGIS,#function
glSamplePatternSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SamplePatternSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SamplePatternSGIS), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SamplePatternSGIS)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glArrayElementEXT
.type glArrayElementEXT,#function
glArrayElementEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ArrayElement), %g2
	or	%g2, %lo(8 * _gloffset_ArrayElement), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ArrayElement)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorPointerEXT
.type glColorPointerEXT,#function
glColorPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_ColorPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawArraysEXT
.type glDrawArraysEXT,#function
glDrawArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawArrays), %g2
	or	%g2, %lo(8 * _gloffset_DrawArrays), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawArrays)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glEdgeFlagPointerEXT
.type glEdgeFlagPointerEXT,#function
glEdgeFlagPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_EdgeFlagPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_EdgeFlagPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_EdgeFlagPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetPointervEXT
.type glGetPointervEXT,#function
glGetPointervEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetPointerv), %g2
	or	%g2, %lo(8 * _gloffset_GetPointerv), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetPointerv)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexPointerEXT
.type glIndexPointerEXT,#function
glIndexPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glNormalPointerEXT
.type glNormalPointerEXT,#function
glNormalPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_NormalPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_NormalPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_NormalPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTexCoordPointerEXT
.type glTexCoordPointerEXT,#function
glTexCoordPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TexCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_TexCoordPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TexCoordPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexPointerEXT
.type glVertexPointerEXT,#function
glVertexPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendEquationEXT
.type glBlendEquationEXT,#function
glBlendEquationEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendEquation), %g2
	or	%g2, %lo(8 * _gloffset_BlendEquation), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendEquation)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterfSGIX
.type glSpriteParameterfSGIX,#function
glSpriteParameterfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterfvSGIX
.type glSpriteParameterfvSGIX,#function
glSpriteParameterfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameteriSGIX
.type glSpriteParameteriSGIX,#function
glSpriteParameteriSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameteriSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameteriSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameteriSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSpriteParameterivSGIX
.type glSpriteParameterivSGIX,#function
glSpriteParameterivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SpriteParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_SpriteParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SpriteParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfEXT
.type glPointParameterfEXT,#function
glPointParameterfEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvEXT
.type glPointParameterfvEXT,#function
glPointParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfARB
.type glPointParameterfARB,#function
glPointParameterfARB:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvARB
.type glPointParameterfvARB,#function
glPointParameterfvARB:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfSGIS
.type glPointParameterfSGIS,#function
glPointParameterfSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPointParameterfvSGIS
.type glPointParameterfvSGIS,#function
glPointParameterfvSGIS:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetInstrumentsSGIX
.type glGetInstrumentsSGIX,#function
glGetInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glInstrumentsBufferSGIX
.type glInstrumentsBufferSGIX,#function
glInstrumentsBufferSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_InstrumentsBufferSGIX), %g2
	or	%g2, %lo(8 * _gloffset_InstrumentsBufferSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_InstrumentsBufferSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glPollInstrumentsSGIX
.type glPollInstrumentsSGIX,#function
glPollInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_PollInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_PollInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_PollInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReadInstrumentsSGIX
.type glReadInstrumentsSGIX,#function
glReadInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReadInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ReadInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReadInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStartInstrumentsSGIX
.type glStartInstrumentsSGIX,#function
glStartInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StartInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_StartInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StartInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glStopInstrumentsSGIX
.type glStopInstrumentsSGIX,#function
glStopInstrumentsSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_StopInstrumentsSGIX), %g2
	or	%g2, %lo(8 * _gloffset_StopInstrumentsSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_StopInstrumentsSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFrameZoomSGIX
.type glFrameZoomSGIX,#function
glFrameZoomSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FrameZoomSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FrameZoomSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FrameZoomSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glTagSampleBufferSGIX
.type glTagSampleBufferSGIX,#function
glTagSampleBufferSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_TagSampleBufferSGIX), %g2
	or	%g2, %lo(8 * _gloffset_TagSampleBufferSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_TagSampleBufferSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glReferencePlaneSGIX
.type glReferencePlaneSGIX,#function
glReferencePlaneSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ReferencePlaneSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ReferencePlaneSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ReferencePlaneSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlushRasterSGIX
.type glFlushRasterSGIX,#function
glFlushRasterSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FlushRasterSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FlushRasterSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FlushRasterSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorSubTableEXT
.type glColorSubTableEXT,#function
glColorSubTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCopyColorSubTableEXT
.type glCopyColorSubTableEXT,#function
glCopyColorSubTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CopyColorSubTable), %g2
	or	%g2, %lo(8 * _gloffset_CopyColorSubTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CopyColorSubTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glHintPGI
.type glHintPGI,#function
glHintPGI:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_HintPGI), %g2
	or	%g2, %lo(8 * _gloffset_HintPGI), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_HintPGI)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glColorTableEXT
.type glColorTableEXT,#function
glColorTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ColorTable), %g2
	or	%g2, %lo(8 * _gloffset_ColorTable), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ColorTable)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableEXT
.type glGetColorTableEXT,#function
glGetColorTableEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterivEXT
.type glGetColorTableParameterivEXT,#function
glGetColorTableParameterivEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterivEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetColorTableParameterfvEXT
.type glGetColorTableParameterfvEXT,#function
glGetColorTableParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetColorTableParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_GetColorTableParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetColorTableParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetListParameterfvSGIX
.type glGetListParameterfvSGIX,#function
glGetListParameterfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetListParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetListParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetListParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetListParameterivSGIX
.type glGetListParameterivSGIX,#function
glGetListParameterivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetListParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetListParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetListParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterfSGIX
.type glListParameterfSGIX,#function
glListParameterfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterfvSGIX
.type glListParameterfvSGIX,#function
glListParameterfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameteriSGIX
.type glListParameteriSGIX,#function
glListParameteriSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameteriSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameteriSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameteriSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glListParameterivSGIX
.type glListParameterivSGIX,#function
glListParameterivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ListParameterivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_ListParameterivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ListParameterivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexMaterialEXT
.type glIndexMaterialEXT,#function
glIndexMaterialEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexMaterialEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexMaterialEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexMaterialEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glIndexFuncEXT
.type glIndexFuncEXT,#function
glIndexFuncEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_IndexFuncEXT), %g2
	or	%g2, %lo(8 * _gloffset_IndexFuncEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_IndexFuncEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLockArraysEXT
.type glLockArraysEXT,#function
glLockArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LockArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_LockArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LockArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glUnlockArraysEXT
.type glUnlockArraysEXT,#function
glUnlockArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_UnlockArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_UnlockArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_UnlockArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullParameterdvEXT
.type glCullParameterdvEXT,#function
glCullParameterdvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullParameterdvEXT), %g2
	or	%g2, %lo(8 * _gloffset_CullParameterdvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullParameterdvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCullParameterfvEXT
.type glCullParameterfvEXT,#function
glCullParameterfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CullParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_CullParameterfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CullParameterfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentColorMaterialSGIX
.type glFragmentColorMaterialSGIX,#function
glFragmentColorMaterialSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentColorMaterialSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentColorMaterialSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentColorMaterialSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightfSGIX
.type glFragmentLightfSGIX,#function
glFragmentLightfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightfvSGIX
.type glFragmentLightfvSGIX,#function
glFragmentLightfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightiSGIX
.type glFragmentLightiSGIX,#function
glFragmentLightiSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightiSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightiSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightiSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightivSGIX
.type glFragmentLightivSGIX,#function
glFragmentLightivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelfSGIX
.type glFragmentLightModelfSGIX,#function
glFragmentLightModelfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelfvSGIX
.type glFragmentLightModelfvSGIX,#function
glFragmentLightModelfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModeliSGIX
.type glFragmentLightModeliSGIX,#function
glFragmentLightModeliSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModeliSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModeliSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModeliSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentLightModelivSGIX
.type glFragmentLightModelivSGIX,#function
glFragmentLightModelivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentLightModelivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentLightModelivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentLightModelivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialfSGIX
.type glFragmentMaterialfSGIX,#function
glFragmentMaterialfSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialfSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialfSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialfSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialfvSGIX
.type glFragmentMaterialfvSGIX,#function
glFragmentMaterialfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialiSGIX
.type glFragmentMaterialiSGIX,#function
glFragmentMaterialiSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialiSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialiSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialiSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFragmentMaterialivSGIX
.type glFragmentMaterialivSGIX,#function
glFragmentMaterialivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FragmentMaterialivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_FragmentMaterialivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FragmentMaterialivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentLightfvSGIX
.type glGetFragmentLightfvSGIX,#function
glGetFragmentLightfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentLightfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentLightfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentLightfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentLightivSGIX
.type glGetFragmentLightivSGIX,#function
glGetFragmentLightivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentLightivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentLightivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentLightivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentMaterialfvSGIX
.type glGetFragmentMaterialfvSGIX,#function
glGetFragmentMaterialfvSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentMaterialfvSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentMaterialfvSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentMaterialfvSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFragmentMaterialivSGIX
.type glGetFragmentMaterialivSGIX,#function
glGetFragmentMaterialivSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFragmentMaterialivSGIX), %g2
	or	%g2, %lo(8 * _gloffset_GetFragmentMaterialivSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFragmentMaterialivSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glLightEnviSGIX
.type glLightEnviSGIX,#function
glLightEnviSGIX:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_LightEnviSGIX), %g2
	or	%g2, %lo(8 * _gloffset_LightEnviSGIX), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_LightEnviSGIX)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glDrawRangeElementsEXT
.type glDrawRangeElementsEXT,#function
glDrawRangeElementsEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_DrawRangeElements), %g2
	or	%g2, %lo(8 * _gloffset_DrawRangeElements), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_DrawRangeElements)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3bEXT
.type glSecondaryColor3bEXT,#function
glSecondaryColor3bEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3bEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3bvEXT
.type glSecondaryColor3bvEXT,#function
glSecondaryColor3bvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3bvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3dEXT
.type glSecondaryColor3dEXT,#function
glSecondaryColor3dEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3dEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3dvEXT
.type glSecondaryColor3dvEXT,#function
glSecondaryColor3dvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3dvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3fEXT
.type glSecondaryColor3fEXT,#function
glSecondaryColor3fEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3fEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3fvEXT
.type glSecondaryColor3fvEXT,#function
glSecondaryColor3fvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3fvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3iEXT
.type glSecondaryColor3iEXT,#function
glSecondaryColor3iEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3iEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3iEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3iEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ivEXT
.type glSecondaryColor3ivEXT,#function
glSecondaryColor3ivEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3sEXT
.type glSecondaryColor3sEXT,#function
glSecondaryColor3sEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3sEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3sEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3sEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3svEXT
.type glSecondaryColor3svEXT,#function
glSecondaryColor3svEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3svEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3svEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3svEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ubEXT
.type glSecondaryColor3ubEXT,#function
glSecondaryColor3ubEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ubEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3ubvEXT
.type glSecondaryColor3ubvEXT,#function
glSecondaryColor3ubvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3uiEXT
.type glSecondaryColor3uiEXT,#function
glSecondaryColor3uiEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3uiEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uiEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uiEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3uivEXT
.type glSecondaryColor3uivEXT,#function
glSecondaryColor3uivEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3uivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uivEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uivEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3usEXT
.type glSecondaryColor3usEXT,#function
glSecondaryColor3usEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3usEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColor3usvEXT
.type glSecondaryColor3usvEXT,#function
glSecondaryColor3usvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColor3usvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glSecondaryColorPointerEXT
.type glSecondaryColorPointerEXT,#function
glSecondaryColorPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_SecondaryColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColorPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_SecondaryColorPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiDrawArraysEXT
.type glMultiDrawArraysEXT,#function
glMultiDrawArraysEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiDrawArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawArraysEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiDrawArraysEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glMultiDrawElementsEXT
.type glMultiDrawElementsEXT,#function
glMultiDrawElementsEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_MultiDrawElementsEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawElementsEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_MultiDrawElementsEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordfEXT
.type glFogCoordfEXT,#function
glFogCoordfEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordfEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordfvEXT
.type glFogCoordfvEXT,#function
glFogCoordfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoorddEXT
.type glFogCoorddEXT,#function
glFogCoorddEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoorddEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoorddEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoorddvEXT
.type glFogCoorddvEXT,#function
glFogCoorddvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoorddvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoorddvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFogCoordPointerEXT
.type glFogCoordPointerEXT,#function
glFogCoordPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FogCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FogCoordPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFuncSeparateEXT
.type glBlendFuncSeparateEXT,#function
glBlendFuncSeparateEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glBlendFuncSeparateINGR
.type glBlendFuncSeparateINGR,#function
glBlendFuncSeparateINGR:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightfEXT
.type glVertexWeightfEXT,#function
glVertexWeightfEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightfEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightfEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightfEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightfvEXT
.type glVertexWeightfvEXT,#function
glVertexWeightfvEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightfvEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightfvEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexWeightPointerEXT
.type glVertexWeightPointerEXT,#function
glVertexWeightPointerEXT:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexWeightPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_VertexWeightPointerEXT), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexWeightPointerEXT)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFlushVertexArrayRangeNV
.type glFlushVertexArrayRangeNV,#function
glFlushVertexArrayRangeNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FlushVertexArrayRangeNV), %g2
	or	%g2, %lo(8 * _gloffset_FlushVertexArrayRangeNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FlushVertexArrayRangeNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glVertexArrayRangeNV
.type glVertexArrayRangeNV,#function
glVertexArrayRangeNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_VertexArrayRangeNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexArrayRangeNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_VertexArrayRangeNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterfvNV
.type glCombinerParameterfvNV,#function
glCombinerParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterfNV
.type glCombinerParameterfNV,#function
glCombinerParameterfNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterfNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterfNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterfNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameterivNV
.type glCombinerParameterivNV,#function
glCombinerParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerParameteriNV
.type glCombinerParameteriNV,#function
glCombinerParameteriNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerParameteriNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerParameteriNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerInputNV
.type glCombinerInputNV,#function
glCombinerInputNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerInputNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerInputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerInputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glCombinerOutputNV
.type glCombinerOutputNV,#function
glCombinerOutputNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_CombinerOutputNV), %g2
	or	%g2, %lo(8 * _gloffset_CombinerOutputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_CombinerOutputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glFinalCombinerInputNV
.type glFinalCombinerInputNV,#function
glFinalCombinerInputNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_FinalCombinerInputNV), %g2
	or	%g2, %lo(8 * _gloffset_FinalCombinerInputNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_FinalCombinerInputNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerInputParameterfvNV
.type glGetCombinerInputParameterfvNV,#function
glGetCombinerInputParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerInputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerInputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerInputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerInputParameterivNV
.type glGetCombinerInputParameterivNV,#function
glGetCombinerInputParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerInputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerInputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerInputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerOutputParameterfvNV
.type glGetCombinerOutputParameterfvNV,#function
glGetCombinerOutputParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerOutputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerOutputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerOutputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetCombinerOutputParameterivNV
.type glGetCombinerOutputParameterivNV,#function
glGetCombinerOutputParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetCombinerOutputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetCombinerOutputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetCombinerOutputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFinalCombinerInputParameterfvNV
.type glGetFinalCombinerInputParameterfvNV,#function
glGetFinalCombinerInputParameterfvNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFinalCombinerInputParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFinalCombinerInputParameterfvNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFinalCombinerInputParameterfvNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glGetFinalCombinerInputParameterivNV
.type glGetFinalCombinerInputParameterivNV,#function
glGetFinalCombinerInputParameterivNV:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_GetFinalCombinerInputParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFinalCombinerInputParameterivNV), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_GetFinalCombinerInputParameterivNV)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glResizeBuffersMESA
.type glResizeBuffersMESA,#function
glResizeBuffersMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_ResizeBuffersMESA), %g2
	or	%g2, %lo(8 * _gloffset_ResizeBuffersMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_ResizeBuffersMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2dMESA
.type glWindowPos2dMESA,#function
glWindowPos2dMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2dvMESA
.type glWindowPos2dvMESA,#function
glWindowPos2dvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2fMESA
.type glWindowPos2fMESA,#function
glWindowPos2fMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2fvMESA
.type glWindowPos2fvMESA,#function
glWindowPos2fvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2iMESA
.type glWindowPos2iMESA,#function
glWindowPos2iMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2ivMESA
.type glWindowPos2ivMESA,#function
glWindowPos2ivMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2sMESA
.type glWindowPos2sMESA,#function
glWindowPos2sMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos2svMESA
.type glWindowPos2svMESA,#function
glWindowPos2svMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3dMESA
.type glWindowPos3dMESA,#function
glWindowPos3dMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3dvMESA
.type glWindowPos3dvMESA,#function
glWindowPos3dvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3fMESA
.type glWindowPos3fMESA,#function
glWindowPos3fMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
d11052 4
a11055 256
.globl glWindowPos3fvMESA
.type glWindowPos3fvMESA,#function
glWindowPos3fvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3iMESA
.type glWindowPos3iMESA,#function
glWindowPos3iMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3ivMESA
.type glWindowPos3ivMESA,#function
glWindowPos3ivMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3sMESA
.type glWindowPos3sMESA,#function
glWindowPos3sMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos3svMESA
.type glWindowPos3svMESA,#function
glWindowPos3svMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4dMESA
.type glWindowPos4dMESA,#function
glWindowPos4dMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4dMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4dMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4dvMESA
.type glWindowPos4dvMESA,#function
glWindowPos4dvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4dvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4dvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4fMESA
.type glWindowPos4fMESA,#function
glWindowPos4fMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4fMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4fMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4fvMESA
.type glWindowPos4fvMESA,#function
glWindowPos4fvMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4fvMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4fvMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4iMESA
.type glWindowPos4iMESA,#function
glWindowPos4iMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4iMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4iMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4ivMESA
.type glWindowPos4ivMESA,#function
glWindowPos4ivMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4ivMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4ivMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4sMESA
.type glWindowPos4sMESA,#function
glWindowPos4sMESA:
#ifdef SPARC_64BIT_ADDR
	sethi	%hi(0x00000000), %g2
	sethi	%hi(0x00000000), %g1
	or	%g2, %lo(0x00000000), %g2
	or	%g1, %lo(0x00000000), %g1
	sllx	%g2, 32, %g2
	ldx	[%g1 + %g2], %g1
	sethi	%hi(8 * _gloffset_WindowPos4sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4sMESA), %g2
	ldx	[%g1 + %g2], %g3
#else
	sethi	%hi(0x00000000), %g1
	ld	[%g1 + %lo(0x00000000)], %g1
	ld	[%g1 + (4 * _gloffset_WindowPos4sMESA)], %g3
#endif
	jmpl	%g3, %g0
	nop

.globl glWindowPos4svMESA
.type glWindowPos4svMESA,#function
glWindowPos4svMESA:
#ifdef SPARC_64BIT_ADDR
d11062 2
a11063 2
	sethi	%hi(8 * _gloffset_WindowPos4svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos4svMESA), %g2
d11068 1
a11068 1
	ld	[%g1 + (4 * _gloffset_WindowPos4svMESA)], %g3
d11073 4
a11076 4
.globl glTbufferMask3DFX
.type glTbufferMask3DFX,#function
glTbufferMask3DFX:
#ifdef SPARC_64BIT_ADDR
d11083 2
a11084 2
	sethi	%hi(8 * _gloffset_TbufferMask3DFX), %g2
	or	%g2, %lo(8 * _gloffset_TbufferMask3DFX), %g2
d11089 1
a11089 1
	ld	[%g1 + (4 * _gloffset_TbufferMask3DFX)], %g3
d11094 4
a11097 4
.globl glSampleMaskEXT
.type glSampleMaskEXT,#function
glSampleMaskEXT:
#ifdef SPARC_64BIT_ADDR
d11104 2
a11105 2
	sethi	%hi(8 * _gloffset_SampleMaskSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SampleMaskSGIS), %g2
d11110 1
a11110 1
	ld	[%g1 + (4 * _gloffset_SampleMaskSGIS)], %g3
d11115 4
a11118 4
.globl glSamplePatternEXT
.type glSamplePatternEXT,#function
glSamplePatternEXT:
#ifdef SPARC_64BIT_ADDR
d11125 2
a11126 2
	sethi	%hi(8 * _gloffset_SamplePatternSGIS), %g2
	or	%g2, %lo(8 * _gloffset_SamplePatternSGIS), %g2
d11131 1
a11131 1
	ld	[%g1 + (4 * _gloffset_SamplePatternSGIS)], %g3
d11136 4
a11139 4
.globl glDeleteFencesNV
.type glDeleteFencesNV,#function
glDeleteFencesNV:
#ifdef SPARC_64BIT_ADDR
d11146 2
a11147 2
	sethi	%hi(8 * _gloffset_DeleteFencesNV), %g2
	or	%g2, %lo(8 * _gloffset_DeleteFencesNV), %g2
d11152 1
a11152 1
	ld	[%g1 + (4 * _gloffset_DeleteFencesNV)], %g3
d11157 4
a11160 4
.globl glGenFencesNV
.type glGenFencesNV,#function
glGenFencesNV:
#ifdef SPARC_64BIT_ADDR
d11167 2
a11168 2
	sethi	%hi(8 * _gloffset_GenFencesNV), %g2
	or	%g2, %lo(8 * _gloffset_GenFencesNV), %g2
d11173 1
a11173 1
	ld	[%g1 + (4 * _gloffset_GenFencesNV)], %g3
d11178 4
a11181 4
.globl glIsFenceNV
.type glIsFenceNV,#function
glIsFenceNV:
#ifdef SPARC_64BIT_ADDR
d11188 2
a11189 2
	sethi	%hi(8 * _gloffset_IsFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_IsFenceNV), %g2
d11194 1
a11194 1
	ld	[%g1 + (4 * _gloffset_IsFenceNV)], %g3
d11199 4
a11202 4
.globl glTestFenceNV
.type glTestFenceNV,#function
glTestFenceNV:
#ifdef SPARC_64BIT_ADDR
d11209 2
a11210 2
	sethi	%hi(8 * _gloffset_TestFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_TestFenceNV), %g2
d11215 1
a11215 1
	ld	[%g1 + (4 * _gloffset_TestFenceNV)], %g3
d11220 4
a11223 4
.globl glGetFenceivNV
.type glGetFenceivNV,#function
glGetFenceivNV:
#ifdef SPARC_64BIT_ADDR
d11230 2
a11231 2
	sethi	%hi(8 * _gloffset_GetFenceivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetFenceivNV), %g2
d11236 1
a11236 1
	ld	[%g1 + (4 * _gloffset_GetFenceivNV)], %g3
d11241 4
a11244 4
.globl glFinishFenceNV
.type glFinishFenceNV,#function
glFinishFenceNV:
#ifdef SPARC_64BIT_ADDR
d11251 2
a11252 2
	sethi	%hi(8 * _gloffset_FinishFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_FinishFenceNV), %g2
d11257 1
a11257 1
	ld	[%g1 + (4 * _gloffset_FinishFenceNV)], %g3
d11262 4
a11265 4
.globl glSetFenceNV
.type glSetFenceNV,#function
glSetFenceNV:
#ifdef SPARC_64BIT_ADDR
d11272 2
a11273 2
	sethi	%hi(8 * _gloffset_SetFenceNV), %g2
	or	%g2, %lo(8 * _gloffset_SetFenceNV), %g2
d11278 1
a11278 1
	ld	[%g1 + (4 * _gloffset_SetFenceNV)], %g3
d11283 4
a11286 4
.globl glWindowPos2dARB
.type glWindowPos2dARB,#function
glWindowPos2dARB:
#ifdef SPARC_64BIT_ADDR
d11293 2
a11294 2
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
d11299 1
a11299 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
d11304 4
a11307 4
.globl glWindowPos2fARB
.type glWindowPos2fARB,#function
glWindowPos2fARB:
#ifdef SPARC_64BIT_ADDR
d11314 2
a11315 2
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
d11320 1
a11320 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
d11325 4
a11328 4
.globl glWindowPos2iARB
.type glWindowPos2iARB,#function
glWindowPos2iARB:
#ifdef SPARC_64BIT_ADDR
d11335 2
a11336 2
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
d11341 1
a11341 1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
d11346 4
a11349 4
.globl glWindowPos2sARB
.type glWindowPos2sARB,#function
glWindowPos2sARB:
#ifdef SPARC_64BIT_ADDR
d11356 2
a11357 2
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
d11362 1
a11362 1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
d11367 4
a11370 4
.globl glWindowPos2dvARB
.type glWindowPos2dvARB,#function
glWindowPos2dvARB:
#ifdef SPARC_64BIT_ADDR
d11377 2
a11378 2
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
d11383 1
a11383 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
d11388 4
a11391 4
.globl glWindowPos2fvARB
.type glWindowPos2fvARB,#function
glWindowPos2fvARB:
#ifdef SPARC_64BIT_ADDR
d11398 2
a11399 2
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
d11404 1
a11404 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
d11409 4
a11412 4
.globl glWindowPos2ivARB
.type glWindowPos2ivARB,#function
glWindowPos2ivARB:
#ifdef SPARC_64BIT_ADDR
d11419 2
a11420 2
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
d11425 1
a11425 1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
d11430 4
a11433 4
.globl glWindowPos2svARB
.type glWindowPos2svARB,#function
glWindowPos2svARB:
#ifdef SPARC_64BIT_ADDR
d11440 2
a11441 2
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
d11446 1
a11446 1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
d11451 4
a11454 4
.globl glWindowPos3dARB
.type glWindowPos3dARB,#function
glWindowPos3dARB:
#ifdef SPARC_64BIT_ADDR
d11461 2
a11462 2
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
d11467 1
a11467 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
d11472 4
a11475 4
.globl glWindowPos3fARB
.type glWindowPos3fARB,#function
glWindowPos3fARB:
#ifdef SPARC_64BIT_ADDR
d11482 2
a11483 2
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
d11488 1
a11488 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
d11493 4
a11496 4
.globl glWindowPos3iARB
.type glWindowPos3iARB,#function
glWindowPos3iARB:
#ifdef SPARC_64BIT_ADDR
d11503 2
a11504 2
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
d11509 1
a11509 1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
d11514 4
a11517 4
.globl glWindowPos3sARB
.type glWindowPos3sARB,#function
glWindowPos3sARB:
#ifdef SPARC_64BIT_ADDR
d11524 2
a11525 2
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
d11530 1
a11530 1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
d11535 4
a11538 4
.globl glWindowPos3dvARB
.type glWindowPos3dvARB,#function
glWindowPos3dvARB:
#ifdef SPARC_64BIT_ADDR
d11545 2
a11546 2
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
d11551 1
a11551 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
d11556 4
a11559 4
.globl glWindowPos3fvARB
.type glWindowPos3fvARB,#function
glWindowPos3fvARB:
#ifdef SPARC_64BIT_ADDR
d11566 2
a11567 2
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
d11572 1
a11572 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
d11577 4
a11580 4
.globl glWindowPos3ivARB
.type glWindowPos3ivARB,#function
glWindowPos3ivARB:
#ifdef SPARC_64BIT_ADDR
d11587 2
a11588 2
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
d11593 1
a11593 1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
d11598 4
a11601 4
.globl glWindowPos3svARB
.type glWindowPos3svARB,#function
glWindowPos3svARB:
#ifdef SPARC_64BIT_ADDR
d11608 2
a11609 2
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
d11614 1
a11614 1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
d11619 4
a11622 4
.globl glAreProgramsResidentNV
.type glAreProgramsResidentNV,#function
glAreProgramsResidentNV:
#ifdef SPARC_64BIT_ADDR
d11629 2
a11630 2
	sethi	%hi(8 * _gloffset_AreProgramsResidentNV), %g2
	or	%g2, %lo(8 * _gloffset_AreProgramsResidentNV), %g2
d11635 1
a11635 1
	ld	[%g1 + (4 * _gloffset_AreProgramsResidentNV)], %g3
d11640 4
a11643 4
.globl glBindProgramNV
.type glBindProgramNV,#function
glBindProgramNV:
#ifdef SPARC_64BIT_ADDR
d11650 2
a11651 2
	sethi	%hi(8 * _gloffset_BindProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_BindProgramNV), %g2
d11656 1
a11656 1
	ld	[%g1 + (4 * _gloffset_BindProgramNV)], %g3
d11661 4
a11664 4
.globl glDeleteProgramsNV
.type glDeleteProgramsNV,#function
glDeleteProgramsNV:
#ifdef SPARC_64BIT_ADDR
d11671 2
a11672 2
	sethi	%hi(8 * _gloffset_DeleteProgramsNV), %g2
	or	%g2, %lo(8 * _gloffset_DeleteProgramsNV), %g2
d11677 1
a11677 1
	ld	[%g1 + (4 * _gloffset_DeleteProgramsNV)], %g3
d11682 4
a11685 4
.globl glExecuteProgramNV
.type glExecuteProgramNV,#function
glExecuteProgramNV:
#ifdef SPARC_64BIT_ADDR
d11692 2
a11693 2
	sethi	%hi(8 * _gloffset_ExecuteProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_ExecuteProgramNV), %g2
d11698 1
a11698 1
	ld	[%g1 + (4 * _gloffset_ExecuteProgramNV)], %g3
d11703 4
a11706 4
.globl glGenProgramsNV
.type glGenProgramsNV,#function
glGenProgramsNV:
#ifdef SPARC_64BIT_ADDR
d11713 2
a11714 2
	sethi	%hi(8 * _gloffset_GenProgramsNV), %g2
	or	%g2, %lo(8 * _gloffset_GenProgramsNV), %g2
d11719 1
a11719 1
	ld	[%g1 + (4 * _gloffset_GenProgramsNV)], %g3
d11724 4
a11727 4
.globl glGetProgramParameterdvNV
.type glGetProgramParameterdvNV,#function
glGetProgramParameterdvNV:
#ifdef SPARC_64BIT_ADDR
d11734 2
a11735 2
	sethi	%hi(8 * _gloffset_GetProgramParameterdvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramParameterdvNV), %g2
d11740 1
a11740 1
	ld	[%g1 + (4 * _gloffset_GetProgramParameterdvNV)], %g3
d11745 4
a11748 4
.globl glGetProgramParameterfvNV
.type glGetProgramParameterfvNV,#function
glGetProgramParameterfvNV:
#ifdef SPARC_64BIT_ADDR
d11755 2
a11756 2
	sethi	%hi(8 * _gloffset_GetProgramParameterfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramParameterfvNV), %g2
d11761 1
a11761 1
	ld	[%g1 + (4 * _gloffset_GetProgramParameterfvNV)], %g3
d11766 4
a11769 4
.globl glGetProgramivNV
.type glGetProgramivNV,#function
glGetProgramivNV:
#ifdef SPARC_64BIT_ADDR
d11776 2
a11777 2
	sethi	%hi(8 * _gloffset_GetProgramivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramivNV), %g2
d11782 1
a11782 1
	ld	[%g1 + (4 * _gloffset_GetProgramivNV)], %g3
d11787 4
a11790 4
.globl glGetProgramStringNV
.type glGetProgramStringNV,#function
glGetProgramStringNV:
#ifdef SPARC_64BIT_ADDR
d11797 2
a11798 2
	sethi	%hi(8 * _gloffset_GetProgramStringNV), %g2
	or	%g2, %lo(8 * _gloffset_GetProgramStringNV), %g2
d11803 1
a11803 1
	ld	[%g1 + (4 * _gloffset_GetProgramStringNV)], %g3
d11808 4
a11811 4
.globl glGetTrackMatrixivNV
.type glGetTrackMatrixivNV,#function
glGetTrackMatrixivNV:
#ifdef SPARC_64BIT_ADDR
d11818 2
a11819 2
	sethi	%hi(8 * _gloffset_GetTrackMatrixivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetTrackMatrixivNV), %g2
d11824 1
a11824 1
	ld	[%g1 + (4 * _gloffset_GetTrackMatrixivNV)], %g3
d11829 4
a11832 4
.globl glGetVertexAttribdvNV
.type glGetVertexAttribdvNV,#function
glGetVertexAttribdvNV:
#ifdef SPARC_64BIT_ADDR
d11839 2
a11840 2
	sethi	%hi(8 * _gloffset_GetVertexAttribdvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribdvNV), %g2
d11845 1
a11845 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribdvNV)], %g3
d11850 4
a11853 4
.globl glGetVertexAttribfvNV
.type glGetVertexAttribfvNV,#function
glGetVertexAttribfvNV:
#ifdef SPARC_64BIT_ADDR
d11860 2
a11861 2
	sethi	%hi(8 * _gloffset_GetVertexAttribfvNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribfvNV), %g2
d11866 1
a11866 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribfvNV)], %g3
d11871 4
a11874 4
.globl glGetVertexAttribivNV
.type glGetVertexAttribivNV,#function
glGetVertexAttribivNV:
#ifdef SPARC_64BIT_ADDR
d11881 2
a11882 2
	sethi	%hi(8 * _gloffset_GetVertexAttribivNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribivNV), %g2
d11887 1
a11887 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribivNV)], %g3
d11892 4
a11895 4
.globl glGetVertexAttribPointervNV
.type glGetVertexAttribPointervNV,#function
glGetVertexAttribPointervNV:
#ifdef SPARC_64BIT_ADDR
d11902 2
a11903 2
	sethi	%hi(8 * _gloffset_GetVertexAttribPointervNV), %g2
	or	%g2, %lo(8 * _gloffset_GetVertexAttribPointervNV), %g2
d11908 1
a11908 1
	ld	[%g1 + (4 * _gloffset_GetVertexAttribPointervNV)], %g3
d11913 4
a11916 4
.globl glIsProgramNV
.type glIsProgramNV,#function
glIsProgramNV:
#ifdef SPARC_64BIT_ADDR
d11923 2
a11924 2
	sethi	%hi(8 * _gloffset_IsProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_IsProgramNV), %g2
d11929 1
a11929 1
	ld	[%g1 + (4 * _gloffset_IsProgramNV)], %g3
d11934 4
a11937 4
.globl glLoadProgramNV
.type glLoadProgramNV,#function
glLoadProgramNV:
#ifdef SPARC_64BIT_ADDR
d11944 2
a11945 2
	sethi	%hi(8 * _gloffset_LoadProgramNV), %g2
	or	%g2, %lo(8 * _gloffset_LoadProgramNV), %g2
d11950 1
a11950 1
	ld	[%g1 + (4 * _gloffset_LoadProgramNV)], %g3
d11955 4
a11958 4
.globl glProgramParameter4dNV
.type glProgramParameter4dNV,#function
glProgramParameter4dNV:
#ifdef SPARC_64BIT_ADDR
d11965 2
a11966 2
	sethi	%hi(8 * _gloffset_ProgramParameter4dNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4dNV), %g2
d11971 1
a11971 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4dNV)], %g3
d11976 4
a11979 4
.globl glProgramParameter4dvNV
.type glProgramParameter4dvNV,#function
glProgramParameter4dvNV:
#ifdef SPARC_64BIT_ADDR
d11986 2
a11987 2
	sethi	%hi(8 * _gloffset_ProgramParameter4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4dvNV), %g2
d11992 1
a11992 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4dvNV)], %g3
d11997 4
a12000 4
.globl glProgramParameter4fNV
.type glProgramParameter4fNV,#function
glProgramParameter4fNV:
#ifdef SPARC_64BIT_ADDR
d12007 2
a12008 2
	sethi	%hi(8 * _gloffset_ProgramParameter4fNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4fNV), %g2
d12013 1
a12013 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4fNV)], %g3
d12018 4
a12021 4
.globl glProgramParameter4fvNV
.type glProgramParameter4fvNV,#function
glProgramParameter4fvNV:
#ifdef SPARC_64BIT_ADDR
d12028 2
a12029 2
	sethi	%hi(8 * _gloffset_ProgramParameter4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameter4fvNV), %g2
d12034 1
a12034 1
	ld	[%g1 + (4 * _gloffset_ProgramParameter4fvNV)], %g3
d12039 4
a12042 4
.globl glProgramParameters4dvNV
.type glProgramParameters4dvNV,#function
glProgramParameters4dvNV:
#ifdef SPARC_64BIT_ADDR
d12049 2
a12050 2
	sethi	%hi(8 * _gloffset_ProgramParameters4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameters4dvNV), %g2
d12055 1
a12055 1
	ld	[%g1 + (4 * _gloffset_ProgramParameters4dvNV)], %g3
d12060 4
a12063 4
.globl glProgramParameters4fvNV
.type glProgramParameters4fvNV,#function
glProgramParameters4fvNV:
#ifdef SPARC_64BIT_ADDR
d12070 2
a12071 2
	sethi	%hi(8 * _gloffset_ProgramParameters4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_ProgramParameters4fvNV), %g2
d12076 1
a12076 1
	ld	[%g1 + (4 * _gloffset_ProgramParameters4fvNV)], %g3
d12081 4
a12084 4
.globl glRequestResidentProgramsNV
.type glRequestResidentProgramsNV,#function
glRequestResidentProgramsNV:
#ifdef SPARC_64BIT_ADDR
d12091 2
a12092 2
	sethi	%hi(8 * _gloffset_RequestResidentProgramsNV), %g2
	or	%g2, %lo(8 * _gloffset_RequestResidentProgramsNV), %g2
d12097 1
a12097 1
	ld	[%g1 + (4 * _gloffset_RequestResidentProgramsNV)], %g3
d12102 4
a12105 4
.globl glTrackMatrixNV
.type glTrackMatrixNV,#function
glTrackMatrixNV:
#ifdef SPARC_64BIT_ADDR
d12112 2
a12113 2
	sethi	%hi(8 * _gloffset_TrackMatrixNV), %g2
	or	%g2, %lo(8 * _gloffset_TrackMatrixNV), %g2
d12118 1
a12118 1
	ld	[%g1 + (4 * _gloffset_TrackMatrixNV)], %g3
d12123 4
a12126 4
.globl glVertexAttribPointerNV
.type glVertexAttribPointerNV,#function
glVertexAttribPointerNV:
#ifdef SPARC_64BIT_ADDR
d12133 2
a12134 2
	sethi	%hi(8 * _gloffset_VertexAttribPointerNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribPointerNV), %g2
d12139 1
a12139 1
	ld	[%g1 + (4 * _gloffset_VertexAttribPointerNV)], %g3
d12144 4
a12147 4
.globl glVertexAttrib1dNV
.type glVertexAttrib1dNV,#function
glVertexAttrib1dNV:
#ifdef SPARC_64BIT_ADDR
d12154 2
a12155 2
	sethi	%hi(8 * _gloffset_VertexAttrib1dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1dNV), %g2
d12160 1
a12160 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1dNV)], %g3
d12165 4
a12168 4
.globl glVertexAttrib1dvNV
.type glVertexAttrib1dvNV,#function
glVertexAttrib1dvNV:
#ifdef SPARC_64BIT_ADDR
d12175 2
a12176 2
	sethi	%hi(8 * _gloffset_VertexAttrib1dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1dvNV), %g2
d12181 1
a12181 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1dvNV)], %g3
d12186 4
a12189 4
.globl glVertexAttrib1fNV
.type glVertexAttrib1fNV,#function
glVertexAttrib1fNV:
#ifdef SPARC_64BIT_ADDR
d12196 2
a12197 2
	sethi	%hi(8 * _gloffset_VertexAttrib1fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1fNV), %g2
d12202 1
a12202 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1fNV)], %g3
d12207 4
a12210 4
.globl glVertexAttrib1fvNV
.type glVertexAttrib1fvNV,#function
glVertexAttrib1fvNV:
#ifdef SPARC_64BIT_ADDR
d12217 2
a12218 2
	sethi	%hi(8 * _gloffset_VertexAttrib1fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1fvNV), %g2
d12223 1
a12223 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1fvNV)], %g3
d12228 4
a12231 4
.globl glVertexAttrib1sNV
.type glVertexAttrib1sNV,#function
glVertexAttrib1sNV:
#ifdef SPARC_64BIT_ADDR
d12238 2
a12239 2
	sethi	%hi(8 * _gloffset_VertexAttrib1sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1sNV), %g2
d12244 1
a12244 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1sNV)], %g3
d12249 4
a12252 4
.globl glVertexAttrib1svNV
.type glVertexAttrib1svNV,#function
glVertexAttrib1svNV:
#ifdef SPARC_64BIT_ADDR
d12259 2
a12260 2
	sethi	%hi(8 * _gloffset_VertexAttrib1svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib1svNV), %g2
d12265 1
a12265 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib1svNV)], %g3
d12270 4
a12273 4
.globl glVertexAttrib2dNV
.type glVertexAttrib2dNV,#function
glVertexAttrib2dNV:
#ifdef SPARC_64BIT_ADDR
d12280 2
a12281 2
	sethi	%hi(8 * _gloffset_VertexAttrib2dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2dNV), %g2
d12286 1
a12286 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2dNV)], %g3
d12291 4
a12294 4
.globl glVertexAttrib2dvNV
.type glVertexAttrib2dvNV,#function
glVertexAttrib2dvNV:
#ifdef SPARC_64BIT_ADDR
d12301 2
a12302 2
	sethi	%hi(8 * _gloffset_VertexAttrib2dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2dvNV), %g2
d12307 1
a12307 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2dvNV)], %g3
d12312 4
a12315 4
.globl glVertexAttrib2fNV
.type glVertexAttrib2fNV,#function
glVertexAttrib2fNV:
#ifdef SPARC_64BIT_ADDR
d12322 2
a12323 2
	sethi	%hi(8 * _gloffset_VertexAttrib2fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2fNV), %g2
d12328 1
a12328 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2fNV)], %g3
d12333 4
a12336 4
.globl glVertexAttrib2fvNV
.type glVertexAttrib2fvNV,#function
glVertexAttrib2fvNV:
#ifdef SPARC_64BIT_ADDR
d12343 2
a12344 2
	sethi	%hi(8 * _gloffset_VertexAttrib2fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2fvNV), %g2
d12349 1
a12349 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2fvNV)], %g3
d12354 4
a12357 4
.globl glVertexAttrib2sNV
.type glVertexAttrib2sNV,#function
glVertexAttrib2sNV:
#ifdef SPARC_64BIT_ADDR
d12364 2
a12365 2
	sethi	%hi(8 * _gloffset_VertexAttrib2sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2sNV), %g2
d12370 1
a12370 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2sNV)], %g3
d12375 4
a12378 4
.globl glVertexAttrib2svNV
.type glVertexAttrib2svNV,#function
glVertexAttrib2svNV:
#ifdef SPARC_64BIT_ADDR
d12385 2
a12386 2
	sethi	%hi(8 * _gloffset_VertexAttrib2svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib2svNV), %g2
d12391 1
a12391 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib2svNV)], %g3
d12396 4
a12399 4
.globl glVertexAttrib3dNV
.type glVertexAttrib3dNV,#function
glVertexAttrib3dNV:
#ifdef SPARC_64BIT_ADDR
d12406 2
a12407 2
	sethi	%hi(8 * _gloffset_VertexAttrib3dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3dNV), %g2
d12412 1
a12412 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3dNV)], %g3
d12417 4
a12420 4
.globl glVertexAttrib3dvNV
.type glVertexAttrib3dvNV,#function
glVertexAttrib3dvNV:
#ifdef SPARC_64BIT_ADDR
d12427 2
a12428 2
	sethi	%hi(8 * _gloffset_VertexAttrib3dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3dvNV), %g2
d12433 1
a12433 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3dvNV)], %g3
d12438 4
a12441 4
.globl glVertexAttrib3fNV
.type glVertexAttrib3fNV,#function
glVertexAttrib3fNV:
#ifdef SPARC_64BIT_ADDR
d12448 2
a12449 2
	sethi	%hi(8 * _gloffset_VertexAttrib3fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3fNV), %g2
d12454 1
a12454 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3fNV)], %g3
d12459 4
a12462 4
.globl glVertexAttrib3fvNV
.type glVertexAttrib3fvNV,#function
glVertexAttrib3fvNV:
#ifdef SPARC_64BIT_ADDR
d12469 2
a12470 2
	sethi	%hi(8 * _gloffset_VertexAttrib3fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3fvNV), %g2
d12475 1
a12475 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3fvNV)], %g3
d12480 4
a12483 4
.globl glVertexAttrib3sNV
.type glVertexAttrib3sNV,#function
glVertexAttrib3sNV:
#ifdef SPARC_64BIT_ADDR
d12490 2
a12491 2
	sethi	%hi(8 * _gloffset_VertexAttrib3sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3sNV), %g2
d12496 1
a12496 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3sNV)], %g3
d12501 4
a12504 4
.globl glVertexAttrib3svNV
.type glVertexAttrib3svNV,#function
glVertexAttrib3svNV:
#ifdef SPARC_64BIT_ADDR
d12511 2
a12512 2
	sethi	%hi(8 * _gloffset_VertexAttrib3svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib3svNV), %g2
d12517 1
a12517 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib3svNV)], %g3
d12522 4
a12525 4
.globl glVertexAttrib4dNV
.type glVertexAttrib4dNV,#function
glVertexAttrib4dNV:
#ifdef SPARC_64BIT_ADDR
d12532 2
a12533 2
	sethi	%hi(8 * _gloffset_VertexAttrib4dNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4dNV), %g2
d12538 1
a12538 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4dNV)], %g3
d12543 4
a12546 4
.globl glVertexAttrib4dvNV
.type glVertexAttrib4dvNV,#function
glVertexAttrib4dvNV:
#ifdef SPARC_64BIT_ADDR
d12553 2
a12554 2
	sethi	%hi(8 * _gloffset_VertexAttrib4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4dvNV), %g2
d12559 1
a12559 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4dvNV)], %g3
d12564 4
a12567 4
.globl glVertexAttrib4fNV
.type glVertexAttrib4fNV,#function
glVertexAttrib4fNV:
#ifdef SPARC_64BIT_ADDR
d12574 2
a12575 2
	sethi	%hi(8 * _gloffset_VertexAttrib4fNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4fNV), %g2
d12580 1
a12580 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4fNV)], %g3
d12585 4
a12588 4
.globl glVertexAttrib4fvNV
.type glVertexAttrib4fvNV,#function
glVertexAttrib4fvNV:
#ifdef SPARC_64BIT_ADDR
d12595 2
a12596 2
	sethi	%hi(8 * _gloffset_VertexAttrib4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4fvNV), %g2
d12601 1
a12601 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4fvNV)], %g3
d12605 5
a12609 5

.globl glVertexAttrib4sNV
.type glVertexAttrib4sNV,#function
glVertexAttrib4sNV:
#ifdef SPARC_64BIT_ADDR
d12616 2
a12617 2
	sethi	%hi(8 * _gloffset_VertexAttrib4sNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4sNV), %g2
d12622 1
a12622 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4sNV)], %g3
d12627 4
a12630 4
.globl glVertexAttrib4svNV
.type glVertexAttrib4svNV,#function
glVertexAttrib4svNV:
#ifdef SPARC_64BIT_ADDR
d12637 2
a12638 2
	sethi	%hi(8 * _gloffset_VertexAttrib4svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4svNV), %g2
d12643 1
a12643 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4svNV)], %g3
d12648 4
a12651 4
.globl glVertexAttrib4ubNV
.type glVertexAttrib4ubNV,#function
glVertexAttrib4ubNV:
#ifdef SPARC_64BIT_ADDR
d12658 2
a12659 2
	sethi	%hi(8 * _gloffset_VertexAttrib4ubNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4ubNV), %g2
d12664 1
a12664 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4ubNV)], %g3
d12669 4
a12672 4
.globl glVertexAttrib4ubvNV
.type glVertexAttrib4ubvNV,#function
glVertexAttrib4ubvNV:
#ifdef SPARC_64BIT_ADDR
d12679 2
a12680 2
	sethi	%hi(8 * _gloffset_VertexAttrib4ubvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttrib4ubvNV), %g2
d12685 1
a12685 1
	ld	[%g1 + (4 * _gloffset_VertexAttrib4ubvNV)], %g3
d12690 4
a12693 4
.globl glVertexAttribs1dvNV
.type glVertexAttribs1dvNV,#function
glVertexAttribs1dvNV:
#ifdef SPARC_64BIT_ADDR
d12700 2
a12701 2
	sethi	%hi(8 * _gloffset_VertexAttribs1dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs1dvNV), %g2
d12706 1
a12706 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs1dvNV)], %g3
d12711 4
a12714 4
.globl glVertexAttribs1fvNV
.type glVertexAttribs1fvNV,#function
glVertexAttribs1fvNV:
#ifdef SPARC_64BIT_ADDR
d12721 2
a12722 2
	sethi	%hi(8 * _gloffset_VertexAttribs1fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs1fvNV), %g2
d12727 1
a12727 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs1fvNV)], %g3
d12732 4
a12735 4
.globl glVertexAttribs1svNV
.type glVertexAttribs1svNV,#function
glVertexAttribs1svNV:
#ifdef SPARC_64BIT_ADDR
d12742 2
a12743 2
	sethi	%hi(8 * _gloffset_VertexAttribs1svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs1svNV), %g2
d12748 1
a12748 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs1svNV)], %g3
d12753 4
a12756 4
.globl glVertexAttribs2dvNV
.type glVertexAttribs2dvNV,#function
glVertexAttribs2dvNV:
#ifdef SPARC_64BIT_ADDR
d12763 2
a12764 2
	sethi	%hi(8 * _gloffset_VertexAttribs2dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs2dvNV), %g2
d12769 1
a12769 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs2dvNV)], %g3
d12774 4
a12777 4
.globl glVertexAttribs2fvNV
.type glVertexAttribs2fvNV,#function
glVertexAttribs2fvNV:
#ifdef SPARC_64BIT_ADDR
d12784 2
a12785 2
	sethi	%hi(8 * _gloffset_VertexAttribs2fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs2fvNV), %g2
d12790 1
a12790 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs2fvNV)], %g3
d12795 4
a12798 4
.globl glVertexAttribs2svNV
.type glVertexAttribs2svNV,#function
glVertexAttribs2svNV:
#ifdef SPARC_64BIT_ADDR
d12805 2
a12806 2
	sethi	%hi(8 * _gloffset_VertexAttribs2svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs2svNV), %g2
d12811 1
a12811 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs2svNV)], %g3
d12816 4
a12819 4
.globl glVertexAttribs3dvNV
.type glVertexAttribs3dvNV,#function
glVertexAttribs3dvNV:
#ifdef SPARC_64BIT_ADDR
d12826 2
a12827 2
	sethi	%hi(8 * _gloffset_VertexAttribs3dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs3dvNV), %g2
d12832 1
a12832 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs3dvNV)], %g3
d12837 4
a12840 4
.globl glVertexAttribs3fvNV
.type glVertexAttribs3fvNV,#function
glVertexAttribs3fvNV:
#ifdef SPARC_64BIT_ADDR
d12847 2
a12848 2
	sethi	%hi(8 * _gloffset_VertexAttribs3fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs3fvNV), %g2
d12853 1
a12853 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs3fvNV)], %g3
d12858 4
a12861 4
.globl glVertexAttribs3svNV
.type glVertexAttribs3svNV,#function
glVertexAttribs3svNV:
#ifdef SPARC_64BIT_ADDR
d12868 2
a12869 2
	sethi	%hi(8 * _gloffset_VertexAttribs3svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs3svNV), %g2
d12874 1
a12874 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs3svNV)], %g3
d12879 4
a12882 4
.globl glVertexAttribs4dvNV
.type glVertexAttribs4dvNV,#function
glVertexAttribs4dvNV:
#ifdef SPARC_64BIT_ADDR
d12889 2
a12890 2
	sethi	%hi(8 * _gloffset_VertexAttribs4dvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4dvNV), %g2
d12895 1
a12895 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4dvNV)], %g3
d12900 4
a12903 4
.globl glVertexAttribs4fvNV
.type glVertexAttribs4fvNV,#function
glVertexAttribs4fvNV:
#ifdef SPARC_64BIT_ADDR
d12910 2
a12911 2
	sethi	%hi(8 * _gloffset_VertexAttribs4fvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4fvNV), %g2
d12916 1
a12916 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4fvNV)], %g3
d12921 4
a12924 4
.globl glVertexAttribs4svNV
.type glVertexAttribs4svNV,#function
glVertexAttribs4svNV:
#ifdef SPARC_64BIT_ADDR
d12931 2
a12932 2
	sethi	%hi(8 * _gloffset_VertexAttribs4svNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4svNV), %g2
d12937 1
a12937 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4svNV)], %g3
d12942 4
a12945 4
.globl glVertexAttribs4ubvNV
.type glVertexAttribs4ubvNV,#function
glVertexAttribs4ubvNV:
#ifdef SPARC_64BIT_ADDR
d12952 2
a12953 2
	sethi	%hi(8 * _gloffset_VertexAttribs4ubvNV), %g2
	or	%g2, %lo(8 * _gloffset_VertexAttribs4ubvNV), %g2
d12958 1
a12958 1
	ld	[%g1 + (4 * _gloffset_VertexAttribs4ubvNV)], %g3
d12963 4
a12966 4
.globl glPointParameteriNV
.type glPointParameteriNV,#function
glPointParameteriNV:
#ifdef SPARC_64BIT_ADDR
d12973 2
a12974 2
	sethi	%hi(8 * _gloffset_PointParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameteriNV), %g2
d12979 1
a12979 1
	ld	[%g1 + (4 * _gloffset_PointParameteriNV)], %g3
d12984 4
a12987 4
.globl glPointParameterivNV
.type glPointParameterivNV,#function
glPointParameterivNV:
#ifdef SPARC_64BIT_ADDR
d12994 2
a12995 2
	sethi	%hi(8 * _gloffset_PointParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterivNV), %g2
d13000 1
a13000 1
	ld	[%g1 + (4 * _gloffset_PointParameterivNV)], %g3
d13005 4
a13008 4
.globl glBlendFuncSeparate
.type glBlendFuncSeparate,#function
glBlendFuncSeparate:
#ifdef SPARC_64BIT_ADDR
d13015 2
a13016 2
	sethi	%hi(8 * _gloffset_BlendFuncSeparateEXT), %g2
	or	%g2, %lo(8 * _gloffset_BlendFuncSeparateEXT), %g2
d13021 1
a13021 1
	ld	[%g1 + (4 * _gloffset_BlendFuncSeparateEXT)], %g3
d13026 4
a13029 4
.globl glFogCoordf
.type glFogCoordf,#function
glFogCoordf:
#ifdef SPARC_64BIT_ADDR
d13036 2
a13037 2
	sethi	%hi(8 * _gloffset_FogCoordfEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfEXT), %g2
d13042 1
a13042 1
	ld	[%g1 + (4 * _gloffset_FogCoordfEXT)], %g3
d13047 4
a13050 4
.globl glFogCoordfv
.type glFogCoordfv,#function
glFogCoordfv:
#ifdef SPARC_64BIT_ADDR
d13057 2
a13058 2
	sethi	%hi(8 * _gloffset_FogCoordfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordfvEXT), %g2
d13063 1
a13063 1
	ld	[%g1 + (4 * _gloffset_FogCoordfvEXT)], %g3
d13068 4
a13071 4
.globl glFogCoordd
.type glFogCoordd,#function
glFogCoordd:
#ifdef SPARC_64BIT_ADDR
d13078 2
a13079 2
	sethi	%hi(8 * _gloffset_FogCoorddEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddEXT), %g2
d13084 1
a13084 1
	ld	[%g1 + (4 * _gloffset_FogCoorddEXT)], %g3
d13089 4
a13092 4
.globl glFogCoorddv
.type glFogCoorddv,#function
glFogCoorddv:
#ifdef SPARC_64BIT_ADDR
d13099 2
a13100 2
	sethi	%hi(8 * _gloffset_FogCoorddvEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoorddvEXT), %g2
d13105 1
a13105 1
	ld	[%g1 + (4 * _gloffset_FogCoorddvEXT)], %g3
d13110 4
a13113 4
.globl glFogCoordPointer
.type glFogCoordPointer,#function
glFogCoordPointer:
#ifdef SPARC_64BIT_ADDR
d13120 2
a13121 2
	sethi	%hi(8 * _gloffset_FogCoordPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_FogCoordPointerEXT), %g2
d13126 1
a13126 1
	ld	[%g1 + (4 * _gloffset_FogCoordPointerEXT)], %g3
d13131 4
a13134 4
.globl glMultiDrawArrays
.type glMultiDrawArrays,#function
glMultiDrawArrays:
#ifdef SPARC_64BIT_ADDR
d13141 2
a13142 2
	sethi	%hi(8 * _gloffset_MultiDrawArraysEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawArraysEXT), %g2
d13147 1
a13147 1
	ld	[%g1 + (4 * _gloffset_MultiDrawArraysEXT)], %g3
d13152 4
a13155 4
.globl glMultiDrawElements
.type glMultiDrawElements,#function
glMultiDrawElements:
#ifdef SPARC_64BIT_ADDR
d13162 2
a13163 2
	sethi	%hi(8 * _gloffset_MultiDrawElementsEXT), %g2
	or	%g2, %lo(8 * _gloffset_MultiDrawElementsEXT), %g2
d13168 1
a13168 1
	ld	[%g1 + (4 * _gloffset_MultiDrawElementsEXT)], %g3
d13173 4
a13176 4
.globl glPointParameterf
.type glPointParameterf,#function
glPointParameterf:
#ifdef SPARC_64BIT_ADDR
d13183 2
a13184 2
	sethi	%hi(8 * _gloffset_PointParameterfEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfEXT), %g2
d13189 1
a13189 1
	ld	[%g1 + (4 * _gloffset_PointParameterfEXT)], %g3
d13194 4
a13197 4
.globl glPointParameterfv
.type glPointParameterfv,#function
glPointParameterfv:
#ifdef SPARC_64BIT_ADDR
d13204 2
a13205 2
	sethi	%hi(8 * _gloffset_PointParameterfvEXT), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterfvEXT), %g2
d13210 1
a13210 1
	ld	[%g1 + (4 * _gloffset_PointParameterfvEXT)], %g3
d13215 4
a13218 4
.globl glPointParameteri
.type glPointParameteri,#function
glPointParameteri:
#ifdef SPARC_64BIT_ADDR
d13225 2
a13226 2
	sethi	%hi(8 * _gloffset_PointParameteriNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameteriNV), %g2
d13231 1
a13231 1
	ld	[%g1 + (4 * _gloffset_PointParameteriNV)], %g3
d13236 4
a13239 4
.globl glPointParameteriv
.type glPointParameteriv,#function
glPointParameteriv:
#ifdef SPARC_64BIT_ADDR
d13246 2
a13247 2
	sethi	%hi(8 * _gloffset_PointParameterivNV), %g2
	or	%g2, %lo(8 * _gloffset_PointParameterivNV), %g2
d13252 1
a13252 1
	ld	[%g1 + (4 * _gloffset_PointParameterivNV)], %g3
d13257 4
a13260 4
.globl glSecondaryColor3b
.type glSecondaryColor3b,#function
glSecondaryColor3b:
#ifdef SPARC_64BIT_ADDR
d13267 2
a13268 2
	sethi	%hi(8 * _gloffset_SecondaryColor3bEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bEXT), %g2
d13273 1
a13273 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bEXT)], %g3
d13278 4
a13281 4
.globl glSecondaryColor3bv
.type glSecondaryColor3bv,#function
glSecondaryColor3bv:
#ifdef SPARC_64BIT_ADDR
d13288 2
a13289 2
	sethi	%hi(8 * _gloffset_SecondaryColor3bvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3bvEXT), %g2
d13294 1
a13294 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3bvEXT)], %g3
d13299 4
a13302 4
.globl glSecondaryColor3d
.type glSecondaryColor3d,#function
glSecondaryColor3d:
#ifdef SPARC_64BIT_ADDR
d13309 2
a13310 2
	sethi	%hi(8 * _gloffset_SecondaryColor3dEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dEXT), %g2
d13315 1
a13315 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dEXT)], %g3
d13320 4
a13323 4
.globl glSecondaryColor3dv
.type glSecondaryColor3dv,#function
glSecondaryColor3dv:
#ifdef SPARC_64BIT_ADDR
d13330 2
a13331 2
	sethi	%hi(8 * _gloffset_SecondaryColor3dvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3dvEXT), %g2
d13336 1
a13336 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3dvEXT)], %g3
d13341 4
a13344 4
.globl glSecondaryColor3f
.type glSecondaryColor3f,#function
glSecondaryColor3f:
#ifdef SPARC_64BIT_ADDR
d13351 2
a13352 2
	sethi	%hi(8 * _gloffset_SecondaryColor3fEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fEXT), %g2
d13357 1
a13357 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fEXT)], %g3
d13362 4
a13365 4
.globl glSecondaryColor3fv
.type glSecondaryColor3fv,#function
glSecondaryColor3fv:
#ifdef SPARC_64BIT_ADDR
d13372 2
a13373 2
	sethi	%hi(8 * _gloffset_SecondaryColor3fvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3fvEXT), %g2
d13378 1
a13378 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3fvEXT)], %g3
d13383 4
a13386 4
.globl glSecondaryColor3i
.type glSecondaryColor3i,#function
glSecondaryColor3i:
#ifdef SPARC_64BIT_ADDR
d13393 2
a13394 2
	sethi	%hi(8 * _gloffset_SecondaryColor3iEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3iEXT), %g2
d13399 1
a13399 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3iEXT)], %g3
d13404 4
a13407 4
.globl glSecondaryColor3iv
.type glSecondaryColor3iv,#function
glSecondaryColor3iv:
#ifdef SPARC_64BIT_ADDR
d13414 2
a13415 2
	sethi	%hi(8 * _gloffset_SecondaryColor3ivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ivEXT), %g2
d13420 1
a13420 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ivEXT)], %g3
d13425 4
a13428 4
.globl glSecondaryColor3s
.type glSecondaryColor3s,#function
glSecondaryColor3s:
#ifdef SPARC_64BIT_ADDR
d13435 2
a13436 2
	sethi	%hi(8 * _gloffset_SecondaryColor3sEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3sEXT), %g2
d13441 1
a13441 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3sEXT)], %g3
d13446 4
a13449 4
.globl glSecondaryColor3sv
.type glSecondaryColor3sv,#function
glSecondaryColor3sv:
#ifdef SPARC_64BIT_ADDR
d13456 2
a13457 2
	sethi	%hi(8 * _gloffset_SecondaryColor3svEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3svEXT), %g2
d13462 1
a13462 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3svEXT)], %g3
d13467 4
a13470 4
.globl glSecondaryColor3ub
.type glSecondaryColor3ub,#function
glSecondaryColor3ub:
#ifdef SPARC_64BIT_ADDR
d13477 2
a13478 2
	sethi	%hi(8 * _gloffset_SecondaryColor3ubEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubEXT), %g2
d13483 1
a13483 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubEXT)], %g3
d13488 4
a13491 4
.globl glSecondaryColor3ubv
.type glSecondaryColor3ubv,#function
glSecondaryColor3ubv:
#ifdef SPARC_64BIT_ADDR
d13498 2
a13499 2
	sethi	%hi(8 * _gloffset_SecondaryColor3ubvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3ubvEXT), %g2
d13504 1
a13504 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3ubvEXT)], %g3
d13509 4
a13512 4
.globl glSecondaryColor3ui
.type glSecondaryColor3ui,#function
glSecondaryColor3ui:
#ifdef SPARC_64BIT_ADDR
d13519 2
a13520 2
	sethi	%hi(8 * _gloffset_SecondaryColor3uiEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uiEXT), %g2
d13525 1
a13525 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uiEXT)], %g3
d13530 4
a13533 4
.globl glSecondaryColor3uiv
.type glSecondaryColor3uiv,#function
glSecondaryColor3uiv:
#ifdef SPARC_64BIT_ADDR
d13540 2
a13541 2
	sethi	%hi(8 * _gloffset_SecondaryColor3uivEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3uivEXT), %g2
d13546 1
a13546 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3uivEXT)], %g3
d13551 4
a13554 4
.globl glSecondaryColor3us
.type glSecondaryColor3us,#function
glSecondaryColor3us:
#ifdef SPARC_64BIT_ADDR
d13561 2
a13562 2
	sethi	%hi(8 * _gloffset_SecondaryColor3usEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usEXT), %g2
d13567 1
a13567 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usEXT)], %g3
d13572 4
a13575 4
.globl glSecondaryColor3usv
.type glSecondaryColor3usv,#function
glSecondaryColor3usv:
#ifdef SPARC_64BIT_ADDR
d13582 2
a13583 2
	sethi	%hi(8 * _gloffset_SecondaryColor3usvEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColor3usvEXT), %g2
d13588 1
a13588 1
	ld	[%g1 + (4 * _gloffset_SecondaryColor3usvEXT)], %g3
d13593 4
a13596 4
.globl glSecondaryColorPointer
.type glSecondaryColorPointer,#function
glSecondaryColorPointer:
#ifdef SPARC_64BIT_ADDR
d13603 2
a13604 2
	sethi	%hi(8 * _gloffset_SecondaryColorPointerEXT), %g2
	or	%g2, %lo(8 * _gloffset_SecondaryColorPointerEXT), %g2
d13609 1
a13609 1
	ld	[%g1 + (4 * _gloffset_SecondaryColorPointerEXT)], %g3
d13614 4
a13617 4
.globl glWindowPos2d
.type glWindowPos2d,#function
glWindowPos2d:
#ifdef SPARC_64BIT_ADDR
d13624 2
a13625 2
	sethi	%hi(8 * _gloffset_WindowPos2dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dMESA), %g2
d13630 1
a13630 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dMESA)], %g3
d13635 4
a13638 4
.globl glWindowPos2dv
.type glWindowPos2dv,#function
glWindowPos2dv:
#ifdef SPARC_64BIT_ADDR
d13645 2
a13646 2
	sethi	%hi(8 * _gloffset_WindowPos2dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2dvMESA), %g2
d13651 1
a13651 1
	ld	[%g1 + (4 * _gloffset_WindowPos2dvMESA)], %g3
d13656 4
a13659 4
.globl glWindowPos2f
.type glWindowPos2f,#function
glWindowPos2f:
#ifdef SPARC_64BIT_ADDR
d13666 2
a13667 2
	sethi	%hi(8 * _gloffset_WindowPos2fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fMESA), %g2
d13672 1
a13672 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fMESA)], %g3
d13677 4
a13680 4
.globl glWindowPos2fv
.type glWindowPos2fv,#function
glWindowPos2fv:
#ifdef SPARC_64BIT_ADDR
d13687 2
a13688 2
	sethi	%hi(8 * _gloffset_WindowPos2fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2fvMESA), %g2
d13693 1
a13693 1
	ld	[%g1 + (4 * _gloffset_WindowPos2fvMESA)], %g3
d13698 4
a13701 4
.globl glWindowPos2i
.type glWindowPos2i,#function
glWindowPos2i:
#ifdef SPARC_64BIT_ADDR
d13708 2
a13709 2
	sethi	%hi(8 * _gloffset_WindowPos2iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2iMESA), %g2
d13714 1
a13714 1
	ld	[%g1 + (4 * _gloffset_WindowPos2iMESA)], %g3
d13719 4
a13722 4
.globl glWindowPos2iv
.type glWindowPos2iv,#function
glWindowPos2iv:
#ifdef SPARC_64BIT_ADDR
d13729 2
a13730 2
	sethi	%hi(8 * _gloffset_WindowPos2ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2ivMESA), %g2
d13735 1
a13735 1
	ld	[%g1 + (4 * _gloffset_WindowPos2ivMESA)], %g3
d13740 4
a13743 4
.globl glWindowPos2s
.type glWindowPos2s,#function
glWindowPos2s:
#ifdef SPARC_64BIT_ADDR
d13750 2
a13751 2
	sethi	%hi(8 * _gloffset_WindowPos2sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2sMESA), %g2
d13756 1
a13756 1
	ld	[%g1 + (4 * _gloffset_WindowPos2sMESA)], %g3
d13761 4
a13764 4
.globl glWindowPos2sv
.type glWindowPos2sv,#function
glWindowPos2sv:
#ifdef SPARC_64BIT_ADDR
d13771 2
a13772 2
	sethi	%hi(8 * _gloffset_WindowPos2svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos2svMESA), %g2
d13777 1
a13777 1
	ld	[%g1 + (4 * _gloffset_WindowPos2svMESA)], %g3
d13782 4
a13785 4
.globl glWindowPos3d
.type glWindowPos3d,#function
glWindowPos3d:
#ifdef SPARC_64BIT_ADDR
d13792 2
a13793 2
	sethi	%hi(8 * _gloffset_WindowPos3dMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dMESA), %g2
d13798 1
a13798 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dMESA)], %g3
d13803 4
a13806 4
.globl glWindowPos3dv
.type glWindowPos3dv,#function
glWindowPos3dv:
#ifdef SPARC_64BIT_ADDR
d13813 2
a13814 2
	sethi	%hi(8 * _gloffset_WindowPos3dvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3dvMESA), %g2
d13819 1
a13819 1
	ld	[%g1 + (4 * _gloffset_WindowPos3dvMESA)], %g3
d13824 4
a13827 4
.globl glWindowPos3f
.type glWindowPos3f,#function
glWindowPos3f:
#ifdef SPARC_64BIT_ADDR
d13834 2
a13835 2
	sethi	%hi(8 * _gloffset_WindowPos3fMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fMESA), %g2
d13840 1
a13840 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fMESA)], %g3
d13845 4
a13848 4
.globl glWindowPos3fv
.type glWindowPos3fv,#function
glWindowPos3fv:
#ifdef SPARC_64BIT_ADDR
d13855 2
a13856 2
	sethi	%hi(8 * _gloffset_WindowPos3fvMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3fvMESA), %g2
d13861 1
a13861 1
	ld	[%g1 + (4 * _gloffset_WindowPos3fvMESA)], %g3
d13866 4
a13869 4
.globl glWindowPos3i
.type glWindowPos3i,#function
glWindowPos3i:
#ifdef SPARC_64BIT_ADDR
d13876 2
a13877 2
	sethi	%hi(8 * _gloffset_WindowPos3iMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3iMESA), %g2
d13882 1
a13882 1
	ld	[%g1 + (4 * _gloffset_WindowPos3iMESA)], %g3
d13887 4
a13890 4
.globl glWindowPos3iv
.type glWindowPos3iv,#function
glWindowPos3iv:
#ifdef SPARC_64BIT_ADDR
d13897 2
a13898 2
	sethi	%hi(8 * _gloffset_WindowPos3ivMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3ivMESA), %g2
d13903 1
a13903 1
	ld	[%g1 + (4 * _gloffset_WindowPos3ivMESA)], %g3
d13908 4
a13911 4
.globl glWindowPos3s
.type glWindowPos3s,#function
glWindowPos3s:
#ifdef SPARC_64BIT_ADDR
d13918 2
a13919 2
	sethi	%hi(8 * _gloffset_WindowPos3sMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3sMESA), %g2
d13924 1
a13924 1
	ld	[%g1 + (4 * _gloffset_WindowPos3sMESA)], %g3
d13929 4
a13932 4
.globl glWindowPos3sv
.type glWindowPos3sv,#function
glWindowPos3sv:
#ifdef SPARC_64BIT_ADDR
d13939 2
a13940 2
	sethi	%hi(8 * _gloffset_WindowPos3svMESA), %g2
	or	%g2, %lo(8 * _gloffset_WindowPos3svMESA), %g2
d13945 1
a13945 1
	ld	[%g1 + (4 * _gloffset_WindowPos3svMESA)], %g3
d13950 4
a13953 4
.globl glActiveStencilFaceEXT
.type glActiveStencilFaceEXT,#function
glActiveStencilFaceEXT:
#ifdef SPARC_64BIT_ADDR
d13960 2
a13961 2
	sethi	%hi(8 * _gloffset_ActiveStencilFaceEXT), %g2
	or	%g2, %lo(8 * _gloffset_ActiveStencilFaceEXT), %g2
d13966 1
a13966 1
	ld	[%g1 + (4 * _gloffset_ActiveStencilFaceEXT)], %g3
d13970 1
a13970 1
	 nop
@

