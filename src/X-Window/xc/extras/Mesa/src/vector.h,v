head	1.2;
access;
symbols
	tg-mergetmp-2:1.2
	MIRBSD_7quater:1.2
	MIRBSD_7_ALPHA:1.2.0.4
	MIRBSD_7:1.2.0.2
	MIRBSD_7ter:1.2
	ctm-0349:1.1.1.1
	openbsd-xf4:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.08.19.32.14;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.01.02;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.01.02;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge conflicts
@
text
@
/*
 * Mesa 3-D graphics library
 * Version:  3.3
 * 
 * Copyright (C) 1999  Brian Paul   All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/*
 * New (3.1) transformation code written by Keith Whitwell.
 */


#ifndef _VECTOR_H_
#define _VECTOR_H_

#include "glheader.h"


/* Wrap all the information about vertices up in a struct.  Has
 * additional fields compared to the other vectors to help us track of
 * different vertex sizes, and whether we need to clean columns out
 * because they contain non-(0,0,0,1) values.  
 *
 * The start field is used to reserve data for copied vertices at the
 * end of gl_transform_vb, and avoids the need for a multiplication in
 * the transformation routines.
 */
typedef struct {
   GLfloat (*data)[4];           /* may be malloced or point to client data */
   GLfloat *start;
   GLuint count;
   GLuint stride;		 /* start to start */
   GLuint size;			 /* 2-4 for vertices and 1-4 for texcoords */
   GLuint flags;		 /* which columns are dirty */
   void *storage;
} GLvector4f;


extern void gl_vector4f_print( GLvector4f *v, GLubyte *, GLboolean );
extern void gl_vector4f_init( GLvector4f *v, GLuint flags,
			      GLfloat (*storage)[4] );
extern void gl_vector4f_alloc( GLvector4f *v, GLuint sz, GLuint flags,
			       GLuint count, GLuint alignment );
extern void gl_vector4f_free( GLvector4f *v );
extern void gl_vector4f_clean_elem( GLvector4f *vec, GLuint nr, GLuint elt );


#define VEC_DIRTY_0        0x1	/* dirty flags not really used any more */
#define VEC_DIRTY_1        0x2
#define VEC_DIRTY_2        0x4
#define VEC_DIRTY_3        0x8
#define VEC_MALLOC         0x10
#define VEC_WRITABLE       0x20	/* keep both + and - bits for easy testing */
#define VEC_NOT_WRITABLE   0x40
#define VEC_GOOD_STRIDE    0x80	
#define VEC_BAD_STRIDE     0x100

#define VEC_WRITABLE_FLAGS (VEC_WRITABLE|VEC_NOT_WRITABLE)
#define VEC_STRIDE_FLAGS   (VEC_GOOD_STRIDE|VEC_BAD_STRIDE)


#define VEC_SIZE_1   VEC_DIRTY_0
#define VEC_SIZE_2   (VEC_DIRTY_0|VEC_DIRTY_1)
#define VEC_SIZE_3   (VEC_DIRTY_0|VEC_DIRTY_1|VEC_DIRTY_2)
#define VEC_SIZE_4   (VEC_DIRTY_0|VEC_DIRTY_1|VEC_DIRTY_2|VEC_DIRTY_3)


/* Could use a single vector type for normals and vertices, but
 * this way avoids some casts.  
 */
typedef struct {
   GLfloat (*data)[3];       
   GLfloat *start;
   GLuint count;
   GLuint stride;
   GLuint flags;
   void *storage;
} GLvector3f;

extern void gl_vector3f_print( GLvector3f *v, GLubyte *, GLboolean );
extern void gl_vector3f_free( GLvector3f *v );
extern void gl_vector3f_init( GLvector3f *v, GLuint flags, GLfloat (*)[3] );
extern void gl_vector3f_alloc( GLvector3f *v, GLuint flags, GLuint count,
			       GLuint alignment );


/* For 4ub rgba values.
 */
typedef struct {
   GLubyte (*data)[4];
   GLubyte *start;
   GLuint count;
   GLuint stride;		 
   GLuint flags; 
   void *storage;
} GLvector4ub;

extern void gl_vector4ub_init( GLvector4ub *v, GLuint flags, 
			       GLubyte (*storage)[4] );
extern void gl_vector4ub_free( GLvector4ub * );
extern void gl_vector4ub_alloc( GLvector4ub *v, GLuint flags, GLuint count,
				GLuint alignment );




/* For 1ub values, eg edgeflag.
 */
typedef struct {
   GLubyte *data;
   GLubyte *start;
   GLuint count;
   GLuint stride;		 
   GLuint flags; 
   void *storage;
} GLvector1ub;

extern void gl_vector1ub_init( GLvector1ub *v, GLuint flags, GLubyte *storage);
extern void gl_vector1ub_free( GLvector1ub * );
extern void gl_vector1ub_alloc( GLvector1ub *v, GLuint flags, GLuint count,
				GLuint alignment );




/* For, eg Index, Array element.
 */
typedef struct {
   GLuint *data;
   GLuint *start;
   GLuint count;
   GLuint stride; 
   GLuint flags; 
   void *storage;
} GLvector1ui;

extern void gl_vector1ui_init( GLvector1ui *v, GLuint flags, GLuint *storage );
extern void gl_vector1ui_free( GLvector1ui * );
extern void gl_vector1ui_alloc( GLvector1ui *v, GLuint flags, GLuint count, 
				GLuint alignment );



/* End up doing a lot of slow imuls if not careful.
 */
#define VEC_ELT( v, t, i ) ((t *) (((GLbyte *)((v)->data))+(i)*(v)->stride) )


#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
