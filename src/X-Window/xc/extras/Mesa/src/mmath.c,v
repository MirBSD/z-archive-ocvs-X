head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.28.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.00.59;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.00.59;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.20.02;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.17.28.55;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.04.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@/* $XFree86: xc/extras/Mesa/src/mmath.c,v 1.5 2001/12/11 09:18:54 alanh Exp $ */
/*
 * Mesa 3-D graphics library
 * Version:  3.3
 * 
 * Copyright (C) 1999-2000  Brian Paul   All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */


#ifdef PC_HEADER
#include "all.h"
#else
#include "glheader.h"
#include "macros.h"
#include "mmath.h"
#endif


static int in_fast_math;

/*
 * A High Speed, Low Precision Square Root
 * by Paul Lalonde and Robert Dawson
 * from "Graphics Gems", Academic Press, 1990
 */

/*
 * SPARC implementation of a fast square root by table 
 * lookup.
 * SPARC floating point format is as follows:
 *
 * BIT 31 	30 	23 	22 	0
 *     sign	exponent	mantissa
 */
static short sqrttab[0x100];    /* declare table of square roots */

static void init_sqrt(void)
{
#ifdef FAST_MATH
   unsigned short i;
   float f;
   unsigned int *fi = (unsigned int *)&f;
                                /* to access the bits of a float in  */
                                /* C quickly we must misuse pointers */

   for(i=0; i<= 0x7f; i++) {
      *fi = 0;

      /*
       * Build a float with the bit pattern i as mantissa
       * and an exponent of 0, stored as 127
       */

      *fi = (i << 16) | (127 << 23);
      f = sqrt(f);

      /*
       * Take the square root then strip the first 7 bits of
       * the mantissa into the table
       */

      sqrttab[i] = (*fi & 0x7fffff) >> 16;

      /*
       * Repeat the process, this time with an exponent of
       * 1, stored as 128
       */

      *fi = 0;
      *fi = (i << 16) | (128 << 23);
      f = sqrt(f);
      sqrttab[i+0x80] = (*fi & 0x7fffff) >> 16;
   }
#else
   (void) sqrttab;  /* silence compiler warnings */
#endif /*FAST_MATH*/
}


float gl_sqrt( float x )
{
#ifdef FAST_MATH
   unsigned int *num = (unsigned int *)&x;
                                /* to access the bits of a float in C
                                 * we must misuse pointers */
                                                        
   short e;                     /* the exponent */
   if (x == 0.0F) return 0.0F;  /* check for square root of 0 */
   e = (*num >> 23) - 127;      /* get the exponent - on a SPARC the */
                                /* exponent is stored with 127 added */
   *num &= 0x7fffff;            /* leave only the mantissa */
   if (e & 0x01) *num |= 0x800000;
                                /* the exponent is odd so we have to */
                                /* look it up in the second half of  */
                                /* the lookup table, so we set the   */
                                /* high bit                                */
   e >>= 1;                     /* divide the exponent by two */
                                /* note that in C the shift */
                                /* operators are sign preserving */
                                /* for signed operands */
   /* Do the table lookup, based on the quaternary mantissa,
    * then reconstruct the result back into a float
    */
   *num = ((sqrttab[*num >> 16]) << 16) | ((e + 127) << 23);
   return x;
#else
   return sqrt(x);
#endif
}

float gl_ubyte_to_float_color_tab[256];
float gl_ubyte_to_float_255_color_tab[256];

static void
init_ubyte_color_tab(void)
{
   int i;
   for (i = 0 ; i < 256 ; i++) {
      gl_ubyte_to_float_color_tab[i] = (float) i * (1.0/255.0);
      gl_ubyte_to_float_255_color_tab[i] = (float) i;
   }
}

/*
 * Initialize tables, etc for fast math functions.
 */
void
_mesa_init_math(void)
{
   static GLboolean initialized = GL_FALSE;

   if (!initialized) {
      init_sqrt();
      init_ubyte_color_tab();

      initialized = GL_TRUE;
      in_fast_math = 0;

#if defined(_FPU_GETCW) && defined(_FPU_SETCW)
      {
         const char *debug = getenv("MESA_DEBUG");
         if (debug && strcmp(debug, "FP")==0) {
            /* die on FP exceptions */
            fpu_control_t mask;
            _FPU_GETCW(mask);
            mask &= ~(_FPU_MASK_IM | _FPU_MASK_DM | _FPU_MASK_ZM
                      | _FPU_MASK_OM | _FPU_MASK_UM);
            _FPU_SETCW(mask);
         }
      }
#endif
   }
}



/*
 * Return number of bits set in given GLuint.
 */
GLuint
_mesa_bitcount(GLuint n)
{
   GLuint bits;
   for (bits = 0; n > 0; n = n >> 1) {
      if (n & 1) {
         bits++;
      }
   }
   return bits;
}

@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d1 1
a1 1
/* $XFree86: xc/extras/Mesa/src/mmath.c,v 1.8 2003/10/22 15:27:40 tsi Exp $ */
d4 4
a7 4
 * Version:  3.5
 *
 * Copyright (C) 1999-2001  Brian Paul   All Rights Reserved.
 *
d14 1
a14 1
 *
d17 1
a17 1
 *
d27 3
d31 1
d33 1
d36 2
d45 1
a45 1
 * SPARC implementation of a fast square root by table
d58 4
a61 2
   fi_type fi;     /* to access the bits of a float in  C quickly  */
                   /* we use a union defined in glheader.h         */
d64 1
a64 1
      fi.i = 0;
d71 2
a72 2
      fi.i = (i << 16) | (127 << 23);
      fi.f = _mesa_sqrt(fi.f);
d79 1
a79 1
      sqrttab[i] = (fi.i & 0x7fffff) >> 16;
d86 4
a89 4
      fi.i = 0;
      fi.i = (i << 16) | (128 << 23);
      fi.f = sqrt(fi.f);
      sqrttab[i+0x80] = (fi.i & 0x7fffff) >> 16;
d100 1
a100 1
   fi_type num;
d102 2
a103 2
                                 * we use a union from glheader.h     */

d106 1
a106 2
   num.f = x;
   e = (num.i >> 23) - 127;     /* get the exponent - on a SPARC the */
d108 2
a109 2
   num.i &= 0x7fffff;           /* leave only the mantissa */
   if (e & 0x01) num.i |= 0x800000;
d121 2
a122 2
   num.i = ((sqrttab[num.i >> 16]) << 16) | ((e + 127) << 23);
   return num.f;
d124 1
a124 1
   return (GLfloat) _mesa_sqrt(x);
d128 2
d131 9
a139 3
/* ubyte -> float conversion */
float _mesa_ubyte_to_float_color_tab[256];

a149 5
      int i;
      for (i = 0; i < 256; i++) {
         _mesa_ubyte_to_float_color_tab[i] = (float) i / 255.0F;
      }

d151 1
d154 1
d158 2
a159 2
         const char *debug = _mesa_getenv("MESA_DEBUG");
         if (debug && _mesa_strcmp(debug, "FP")==0) {
d188 1
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d1 1
a1 1
/* $XFree86: xc/extras/Mesa/src/mmath.c,v 1.6 2002/02/22 19:25:36 dawes Exp $ */
d4 4
a7 4
 * Version:  3.5
 *
 * Copyright (C) 1999-2001  Brian Paul   All Rights Reserved.
 *
d14 1
a14 1
 *
d17 1
a17 1
 *
d31 1
d45 1
a45 1
 * SPARC implementation of a fast square root by table
d58 4
a61 2
   fi_type fi;     /* to access the bits of a float in  C quickly  */
                   /* we use a union defined in glheader.h         */
d64 1
a64 1
      fi.i = 0;
d71 2
a72 2
      fi.i = (i << 16) | (127 << 23);
      fi.f = sqrt(fi.f);
d79 1
a79 1
      sqrttab[i] = (fi.i & 0x7fffff) >> 16;
d86 4
a89 4
      fi.i = 0;
      fi.i = (i << 16) | (128 << 23);
      fi.f = sqrt(fi.f);
      sqrttab[i+0x80] = (fi.i & 0x7fffff) >> 16;
d100 1
a100 1
   fi_type num;
d102 2
a103 2
                                 * we use a union from glheader.h     */

d106 1
a106 2
   num.f = x;
   e = (num.i >> 23) - 127;     /* get the exponent - on a SPARC the */
d108 2
a109 2
   num.i &= 0x7fffff;           /* leave only the mantissa */
   if (e & 0x01) num.i |= 0x800000;
d121 2
a122 2
   num.i = ((sqrttab[num.i >> 16]) << 16) | ((e + 127) << 23);
   return num.f;
d124 1
a124 1
   return (GLfloat) sqrt(x);
d128 2
d131 9
a139 3
/* ubyte -> float conversion */
float _mesa_ubyte_to_float_color_tab[256];

a149 5
      int i;
      for (i = 0; i < 256; i++) {
         _mesa_ubyte_to_float_color_tab[i] = (float) i / 255.0F;
      }

d151 1
d188 1
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d1 1
a1 1
/* $XFree86: xc/extras/Mesa/src/mmath.c,v 1.8 2003/10/22 15:27:40 tsi Exp $ */
d27 3
d32 1
d35 2
d69 1
a69 1
      fi.f = _mesa_sqrt(fi.f);
d122 1
a122 1
   return (GLfloat) _mesa_sqrt(x);
d148 1
d152 2
a153 2
         const char *debug = _mesa_getenv("MESA_DEBUG");
         if (debug && _mesa_strcmp(debug, "FP")==0) {
@


