head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.16.28.21;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.01.02;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.01.02;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.20.04;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.17.29.03;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.04.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@
/*
 * Mesa 3-D graphics library
 * Version:  3.4
 *
 * Copyright (C) 1999-2000  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Author:
 *    Gareth Hughes <gareth@@valinux.com>
 */

#ifndef TEXFORMAT_H
#define TEXFORMAT_H

#include "types.h"


/* The Mesa internal texture image types.  These will be set to their
 * default value, but may be changed by drivers as required.
 */
				/* msb <------ TEXEL BITS -----------> lsb */
enum _format {			/* ---- ---- ---- ---- ---- ---- ---- ---- */
   MESA_FORMAT_RGBA8888,	/* RRRR RRRR GGGG GGGG BBBB BBBB AAAA AAAA */
   MESA_FORMAT_ABGR8888,	/* AAAA AAAA BBBB BBBB GGGG GGGG RRRR RRRR */
   MESA_FORMAT_ARGB8888,	/* AAAA AAAA RRRR RRRR GGGG GGGG BBBB BBBB */
   MESA_FORMAT_RGB888,		/*           RRRR RRRR GGGG GGGG BBBB BBBB */
   MESA_FORMAT_BGR888,		/*           BBBB BBBB GGGG GGGG RRRR RRRR */
   MESA_FORMAT_RGB565,		/*                     RRRR RGGG GGGB BBBB */
   MESA_FORMAT_ARGB4444,	/*                     AAAA RRRR GGGG BBBB */
   MESA_FORMAT_ARGB1555,	/*                     ARRR RRGG GGGB BBBB */
   MESA_FORMAT_AL88,		/*                     AAAA AAAA LLLL LLLL */
   MESA_FORMAT_RGB332,		/*                               RRRG GGBB */
   MESA_FORMAT_A8,		/*                               AAAA AAAA */
   MESA_FORMAT_L8,		/*                               LLLL LLLL */
   MESA_FORMAT_I8,		/*                               IIII IIII */
   MESA_FORMAT_CI8		/*                               CCCC CCCC */
};


extern void
_mesa_init_texture_format( GLcontext *ctx,
			   struct gl_texture_image *texImage,
			   GLenum internalFormat );


extern const struct gl_texture_format _mesa_texformat_rgba8888;
extern const struct gl_texture_format _mesa_texformat_abgr8888;
extern const struct gl_texture_format _mesa_texformat_argb8888;
extern const struct gl_texture_format _mesa_texformat_rgb888;
extern const struct gl_texture_format _mesa_texformat_bgr888;
extern const struct gl_texture_format _mesa_texformat_rgb565;
extern const struct gl_texture_format _mesa_texformat_argb4444;
extern const struct gl_texture_format _mesa_texformat_argb1555;
extern const struct gl_texture_format _mesa_texformat_al88;
extern const struct gl_texture_format _mesa_texformat_rgb332;
extern const struct gl_texture_format _mesa_texformat_a8;
extern const struct gl_texture_format _mesa_texformat_l8;
extern const struct gl_texture_format _mesa_texformat_i8;
extern const struct gl_texture_format _mesa_texformat_ci8;

extern const struct gl_texture_format _mesa_null_texformat;

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d4 1
a4 1
 * Version:  4.1
d6 1
a6 1
 * Copyright (C) 1999-2002  Brian Paul   All Rights Reserved.
d26 1
a26 1
 *    Gareth Hughes
d32 1
a32 1
#include "mtypes.h"
d35 2
a36 3
/*
 * The Mesa internal texture image types.
 * All texture images must be stored in one of these formats.
a37 13
enum _format {
   /* Hardware-friendly formats.  Drivers can override the default
    * formats and convert texture images to one of these as required.
    * The driver's ChooseTextureFormat() function will choose one of
    * these formats.
    * These formats are all little endian, as shown below.  They will be
    * most useful for x86-based PC graphics card drivers.
    *
    * NOTE: In the default case, some of these formats will be
    * duplicates of the generic formats listed below.  However, these
    * formats guarantee their internal component sizes, while GLchan may
    * vary betwen GLubyte, GLushort and GLfloat.
    */
d39 1
a39 1
				/* ---- ---- ---- ---- ---- ---- ---- ---- */
d41 1
d44 1
d53 1
a53 37
   MESA_FORMAT_CI8,		/*                               CCCC CCCC */
   MESA_FORMAT_YCBCR,		/*                     YYYY YYYY UorV UorV */
   MESA_FORMAT_YCBCR_REV,	/*                     UorV UorV YYYY YYYY */

#if 0
   /* upcoming little-endian formats: */

				/* msb <------ TEXEL BITS -----------> lsb */
				/* ---- ---- ---- ---- ---- ---- ---- ---- */
   MESA_FORMAT_ABGR8888,	/* AAAA AAAA BBBB BBBB GGGG GGGG RRRR RRRR */
   MESA_FORMAT_BGRA8888,	/* BBBB BBBB GGGG GGGG RRRR RRRR AAAA AAAA */
   MESA_FORMAT_BGR888,		/*           BBBB BBBB GGGG GGGG RRRR RRRR */
   MESA_FORMAT_BGR565,		/*                     BBBB BGGG GGGR RRRR */
   MESA_FORMAT_BGRA4444,	/*                     BBBB GGGG RRRR AAAA */
   MESA_FORMAT_BGRA5551,	/*                     BBBB BGGG GGRR RRRA */
   MESA_FORMAT_LA88,		/*                     LLLL LLLL AAAA AAAA */
   MESA_FORMAT_BGR233,		/*                               BBGG GRRR */
#endif

   /* Generic GLchan-based formats.  These are the default formats used
    * by the software rasterizer and, unless the driver overrides the
    * texture image functions, incoming images will be converted to one
    * of these formats.  Components are arrays of GLchan values, so
    * there will be no big/little endian issues.
    *
    * NOTE: Because these are based on the GLchan datatype, one cannot
    * assume 8 bits per channel with these formats.  If you require
    * GLubyte channels, use one of the hardware formats above.
    */
   MESA_FORMAT_RGBA,
   MESA_FORMAT_RGB,
   MESA_FORMAT_ALPHA,
   MESA_FORMAT_LUMINANCE,
   MESA_FORMAT_LUMINANCE_ALPHA,
   MESA_FORMAT_INTENSITY,
   MESA_FORMAT_COLOR_INDEX,
   MESA_FORMAT_DEPTH_COMPONENT
d57 4
a60 2
extern GLboolean
_mesa_is_hardware_tex_format( const struct gl_texture_format *format );
a61 3
extern const struct gl_texture_format *
_mesa_choose_tex_format( GLcontext *ctx, GLint internalFormat,
                         GLenum format, GLenum type );
a62 17
extern GLint
_mesa_base_compressed_texformat(GLcontext *ctx, GLint intFormat);


/* The default formats, GLchan per component:
 */
extern const struct gl_texture_format _mesa_texformat_rgba;
extern const struct gl_texture_format _mesa_texformat_rgb;
extern const struct gl_texture_format _mesa_texformat_alpha;
extern const struct gl_texture_format _mesa_texformat_luminance;
extern const struct gl_texture_format _mesa_texformat_luminance_alpha;
extern const struct gl_texture_format _mesa_texformat_intensity;
extern const struct gl_texture_format _mesa_texformat_color_index;
extern const struct gl_texture_format _mesa_texformat_depth_component;

/* The hardware-friendly formats:
 */
d64 1
d67 1
a76 2
extern const struct gl_texture_format _mesa_texformat_ycbcr;
extern const struct gl_texture_format _mesa_texformat_ycbcr_rev;
a77 2
/* The null format:
 */
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d4 1
a4 1
 * Version:  4.0.4
d6 1
a6 1
 * Copyright (C) 1999-2002  Brian Paul   All Rights Reserved.
d25 1
a25 1
 * Authors:
a26 1
 *    Brian Paul
d32 1
a32 1
#include "mtypes.h"
d35 2
a36 1
/* The Mesa internal texture image types.
a37 11
enum _format {
   /* Hardware-friendly formats.  Drivers can override the default
    * formats and convert texture images to one of these as required.
    * These formats are all little endian, as shown below.  They will be
    * most useful for x86-based PC graphics card drivers.
    *
    * NOTE: In the default case, some of these formats will be
    * duplicates of the default formats listed above.  However, these
    * formats guarantee their internal component sizes, while GLchan may
    * vary betwen GLubyte, GLushort and GLfloat.
    */
d39 1
a39 1
				/* ---- ---- ---- ---- ---- ---- ---- ---- */
d41 1
d44 1
d53 1
a53 22
   MESA_FORMAT_CI8,		/*                               CCCC CCCC */
   MESA_FORMAT_YCBCR,           /*                     YYYY YYYY UorV UorV */
   MESA_FORMAT_YCBCR_REV,       /*                     UorV UorV YYYY YYYY */

   /* Generic GLchan-based formats.  These are the default formats used
    * by the software rasterizer and, unless the driver overrides the
    * texture image functions, incoming images will be converted to one
    * of these formats.  Components are arrays of GLchan values, so
    * there will be no big/little endian issues.
    *
    * NOTE: Because these are based on the GLchan datatype, one cannot
    * assume 8 bits per channel with these formats.  If you require
    * GLubyte per channel, use one of the hardware formats above.
    */
   MESA_FORMAT_RGBA,
   MESA_FORMAT_RGB,
   MESA_FORMAT_ALPHA,
   MESA_FORMAT_LUMINANCE,
   MESA_FORMAT_LUMINANCE_ALPHA,
   MESA_FORMAT_INTENSITY,
   MESA_FORMAT_COLOR_INDEX,
   MESA_FORMAT_DEPTH_COMPONENT
d57 4
a60 2
extern GLboolean
_mesa_is_hardware_tex_format( const struct gl_texture_format *format );
a61 3
extern const struct gl_texture_format *
_mesa_choose_tex_format( GLcontext *ctx, GLint internalFormat,
                         GLenum format, GLenum type );
a62 21
extern GLint
_mesa_base_compressed_texformat( GLcontext *ctx, GLint intFormat );

extern GLint
_mesa_compressed_texture_size( GLcontext *ctx,
                               const struct gl_texture_image *texImage );


/* The default formats, GLchan per component:
 */
extern const struct gl_texture_format _mesa_texformat_rgba;
extern const struct gl_texture_format _mesa_texformat_rgb;
extern const struct gl_texture_format _mesa_texformat_alpha;
extern const struct gl_texture_format _mesa_texformat_luminance;
extern const struct gl_texture_format _mesa_texformat_luminance_alpha;
extern const struct gl_texture_format _mesa_texformat_intensity;
extern const struct gl_texture_format _mesa_texformat_color_index;
extern const struct gl_texture_format _mesa_texformat_depth_component;

/* The hardware-friendly formats:
 */
d64 1
d67 1
a76 2
extern const struct gl_texture_format _mesa_texformat_ycbcr;
extern const struct gl_texture_format _mesa_texformat_ycbcr_rev;
a77 2
/* The null format:
 */
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d4 1
a4 1
 * Version:  4.1
d25 3
a27 2
 * Author:
 *    Gareth Hughes
d36 1
a36 3
/*
 * The Mesa internal texture image types.
 * All texture images must be stored in one of these formats.
a40 2
    * The driver's ChooseTextureFormat() function will choose one of
    * these formats.
d45 1
a45 1
    * duplicates of the generic formats listed below.  However, these
d63 2
a64 17
   MESA_FORMAT_YCBCR,		/*                     YYYY YYYY UorV UorV */
   MESA_FORMAT_YCBCR_REV,	/*                     UorV UorV YYYY YYYY */

#if 0
   /* upcoming little-endian formats: */

				/* msb <------ TEXEL BITS -----------> lsb */
				/* ---- ---- ---- ---- ---- ---- ---- ---- */
   MESA_FORMAT_ABGR8888,	/* AAAA AAAA BBBB BBBB GGGG GGGG RRRR RRRR */
   MESA_FORMAT_BGRA8888,	/* BBBB BBBB GGGG GGGG RRRR RRRR AAAA AAAA */
   MESA_FORMAT_BGR888,		/*           BBBB BBBB GGGG GGGG RRRR RRRR */
   MESA_FORMAT_BGR565,		/*                     BBBB BGGG GGGR RRRR */
   MESA_FORMAT_BGRA4444,	/*                     BBBB GGGG RRRR AAAA */
   MESA_FORMAT_BGRA5551,	/*                     BBBB BGGG GGRR RRRA */
   MESA_FORMAT_LA88,		/*                     LLLL LLLL AAAA AAAA */
   MESA_FORMAT_BGR233,		/*                               BBGG GRRR */
#endif
d74 1
a74 1
    * GLubyte channels, use one of the hardware formats above.
d95 5
a99 1
_mesa_base_compressed_texformat(GLcontext *ctx, GLint intFormat);
@


