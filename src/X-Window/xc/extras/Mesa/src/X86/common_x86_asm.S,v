head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.28.28;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.01.06;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.01.06;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.20.10;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.17.29.35;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.04.57;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@
/*
 * Mesa 3-D graphics library
 * Version:  3.4
 *
 * Copyright (C) 1999-2000  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/*
 * Check extended CPU capabilities.  Now justs returns the raw CPUID
 * feature information, allowing the higher level code to interpret the
 * results.
 *
 * Written by Holger Waechtler <holger@@akaflieg.extern.tu-berlin.de>
 *
 * Cleaned up and simplified by Gareth Hughes <gareth@@valinux.com>
 */

#include "assyntax.h"
#include "common_x86_features.h"


/* Intel vendor string
 */
#define GENU	0x756e6547	/* "Genu" */
#define INEI	0x49656e69	/* "ineI" */
#define NTEL	0x6c65746e	/* "ntel" */

/* AMD vendor string
 */
#define AUTH	0x68747541	/* "Auth" */
#define ENTI	0x69746e65	/* "enti" */
#define CAMD	0x444d4163	/* "cAMD" */


	SEG_DATA

/* We might want to print out some useful messages.
 */
GLNAME( found_intel ):	STRING( "Genuine Intel processor found\n\0" )
GLNAME( found_amd ):	STRING( "Authentic AMD processor found\n\0" )

#ifdef USE_KATMAI_ASM
GLNAME( katmai_test_dummy ):
	D_LONG 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
#endif


	SEG_TEXT

ALIGNTEXT4
GLOBL GLNAME( gl_identify_x86_cpu_features )
GLNAME( gl_identify_x86_cpu_features ):

	PUSH_L	( EBX )

	/* Test for the CPUID command.  If the ID Flag bit in EFLAGS
	 * (bit 21) is writable, the CPUID command is present.
	 */
	PUSHF_L
	POP_L	( EAX )
	MOV_L	( EAX, ECX )
	XOR_L	( CONST(0x00200000), EAX )
	PUSH_L	( EAX )
	POPF_L
	PUSHF_L
	POP_L	( EAX )

	/* Verify the ID Flag bit has been written.
	 */
	CMP_L	( ECX, EAX )
	JZ	( LLBL ( cpuid_done ) )

	/* Get the CPU vendor info.
	 */
	XOR_L	( EAX, EAX )
	CPUID

	/* Test for Intel processors.  We must look for the
	 * "GenuineIntel" string in EBX, ECX and EDX.
	 */
	CMP_L	( CONST(GENU), EBX )
	JNE	( LLBL( cpuid_amd ) )
	CMP_L	( CONST(INEI), EDX )
	JNE	( LLBL( cpuid_amd ) )
	CMP_L	( CONST(NTEL), ECX )
	JNE	( LLBL( cpuid_amd ) )

	/* We have an Intel processor, so we can get the feature
	 * information with an CPUID input value of 1.
	 */
	MOV_L	( CONST(0x1), EAX )
	CPUID
	MOV_L	( EDX, EAX )
	JMP	( LLBL( cpuid_done ) )

LLBL( cpuid_amd ):

	/* Test for AMD processors.  We must look for the
	 * "AuthenticAMD" string in EBX, ECX and EDX.
	 */
	CMP_L	( CONST(AUTH), EBX )
	JNE	( LLBL( cpuid_other ) )
	CMP_L	( CONST(ENTI), EDX )
	JNE	( LLBL( cpuid_other ) )
	CMP_L	( CONST(CAMD), ECX )
	JNE	( LLBL( cpuid_other ) )

	/* We have an AMD processor, so we can get the feature
	 * information after we verify that the extended functions are
	 * supported.
	 */
	MOV_L	( CONST(0x80000000), EAX )
	CPUID
	TEST_L	( EAX, EAX )
	JZ	( LLBL ( cpuid_failed ) )

	MOV_L	( CONST(0x80000001), EAX )
	CPUID
	MOV_L	( EDX, EAX )
	JMP	( LLBL ( cpuid_done ) )

LLBL( cpuid_other ):

	/* Test for other processors here when required.
	 */

LLBL( cpuid_failed ):

	/* If we can't determine the feature information, we must
	 * return zero to indicate that no platform-specific
	 * optimizations can be used.
	 */
	MOV_L	( CONST(0), EAX )

LLBL ( cpuid_done ):

	POP_L	( EBX )
	RET


#ifdef USE_KATMAI_ASM
/* Execute an SSE instruction to see if the operating system correctly
 * supports SSE.  A signal handler for SIGILL should have been set
 * before calling this function, otherwise this could kill the client
 * application.
 */
ALIGNTEXT4
GLOBL GLNAME( gl_test_os_katmai_support )
GLNAME( gl_test_os_katmai_support ):

	XORPS	( XMM0, XMM0 )

	RET


/* Perform an SSE divide-by-zero to see if the operating system
 * correctly supports unmasked SIMD FPU exceptions.  Signal handlers for
 * SIGILL and SIGFPE should have been set before calling this function,
 * otherwise this could kill the client application.
 */
ALIGNTEXT4
GLOBL GLNAME( gl_test_os_katmai_exception_support )
GLNAME( gl_test_os_katmai_exception_support ):

	PUSH_L	( EBP )
	MOV_L	( ESP, EBP )
	SUB_L	( CONST( 8 ), ESP )

	/* Save the original MXCSR register value.
	 */
	STMXCSR	( REGOFF( -4, EBP ) )

	/* Unmask the divide-by-zero exception and perform one.
	 */
	STMXCSR	( REGOFF( -8, EBP ) )
	AND_L	( CONST( 0xfffffdff ), REGOFF( -8, EBP ) )
	LDMXCSR	( REGOFF( -8, EBP ) )

	XORPS	( XMM0, XMM0 )
	MOVUPS	( GLNAME( katmai_test_dummy ), XMM1 )

	DIVPS	( XMM0, XMM1 )

	/* Restore the original MXCSR register value.
	 */
	LDMXCSR	( REGOFF( -4, EBP ) )

	LEAVE
	RET

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d4 1
a4 1
 * Version:  5.0.1
d6 1
a6 1
 * Copyright (C) 1999-2003  Brian Paul   All Rights Reserved.
a24 1
/* $XFree86: xc/extras/Mesa/src/X86/common_x86_asm.S,v 1.17 2003/09/28 19:17:08 alanh Exp $ */
d36 1
a36 7
/*
 * NOTE: Avoid using spaces in between '(' ')' and arguments, especially
 * with macros like CONST, LLBL that expand to CONCAT(...).  Putting spaces
 * in there will break the build on some platforms.
 */

#include "matypes.h"
d60 5
d69 2
a70 2
GLOBL GLNAME( _mesa_identify_x86_cpu_features )
GLNAME( _mesa_identify_x86_cpu_features ):
a72 1
	PUSH_L	( ESI )
d89 1
a89 1
	JZ	( LLBL (cpuid_done) )
d100 1
a100 1
	JNE	( LLBL(cpuid_amd) )
d102 1
a102 1
	JNE	( LLBL(cpuid_amd) )
d104 1
a104 1
	JNE	( LLBL(cpuid_amd) )
d112 1
d114 1
a114 7
	/* Mask out highest bit, which is used by AMD for 3dnow.
	 * Newer Intel have this bit set, but do not support 3dnow.
	 */
	AND_L	( CONST(0X7FFFFFFF), EAX)
	JMP	( LLBL(cpuid_done) )

LLBL(cpuid_amd):
d120 1
a120 1
	JNE	( LLBL(cpuid_other) )
d122 1
a122 1
	JNE	( LLBL(cpuid_other) )
d124 1
a124 1
	JNE	( LLBL(cpuid_other) )
a129 9
	/* The features we need are almost all in the extended set.  The
	 * exception is SSE enable, which is in the standard set (0x1).
	 */
	MOV_L	( CONST(0x1), EAX )
	CPUID
	TEST_L	( EAX, EAX )
	JZ	( LLBL (cpuid_failed) )
	MOV_L	( EDX, ESI )

d133 1
a133 1
	JZ	( LLBL (cpuid_failed) )
d138 1
a138 5
	
	AND_L	( CONST(0x02000000), ESI )	/* OR in the SSE bit */
	OR_L	( ESI, EAX )
	
	JMP	( LLBL (cpuid_done) )
d140 1
a140 1
LLBL(cpuid_other):
d145 1
a145 1
LLBL(cpuid_failed):
d153 1
a153 1
LLBL (cpuid_done):
a154 1
	POP_L	( ESI )
d159 1
a159 1
#ifdef USE_SSE_ASM
d166 2
a167 2
GLOBL GLNAME( _mesa_test_os_sse_support )
GLNAME( _mesa_test_os_sse_support ):
d180 2
a181 2
GLOBL GLNAME( _mesa_test_os_sse_exception_support )
GLNAME( _mesa_test_os_sse_exception_support ):
d198 1
a198 7

	PUSH_L	( CONST( 0x3f800000 ) )
	PUSH_L	( CONST( 0x3f800000 ) )
	PUSH_L	( CONST( 0x3f800000 ) )
	PUSH_L	( CONST( 0x3f800000 ) )

	MOVUPS	( REGIND( ESP ), XMM1 )
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d4 1
a4 1
 * Version:  4.0.3
d6 1
a6 1
 * Copyright (C) 1999-2002  Brian Paul   All Rights Reserved.
a24 1
/* $XFree86: xc/extras/Mesa/src/X86/common_x86_asm.S,v 1.16 2002/12/16 16:18:33 dawes Exp $ */
d36 1
a36 7
/*
 * NOTE: Avoid using spaces in between '(' ')' and arguments, especially
 * with macros like CONST, LLBL that expand to CONCAT(...).  Putting spaces
 * in there will break the build on some platforms.
 */

#include "matypes.h"
d60 2
a61 2
#ifdef USE_SSE_ASM
GLNAME( sse_test_dummy ):
d69 2
a70 2
GLOBL GLNAME( _mesa_identify_x86_cpu_features )
GLNAME( _mesa_identify_x86_cpu_features ):
a72 1
	PUSH_L	( ESI )
d89 1
a89 1
	JZ	( LLBL (cpuid_done) )
d100 1
a100 1
	JNE	( LLBL(cpuid_amd) )
d102 1
a102 1
	JNE	( LLBL(cpuid_amd) )
d104 1
a104 1
	JNE	( LLBL(cpuid_amd) )
d112 1
d114 1
a114 7
	/* Mask out highest bit, which is used by AMD for 3dnow.
	 * Newer Intel have this bit set, but do not support 3dnow.
	 */
	AND_L	( CONST(0X7FFFFFFF), EAX)
	JMP	( LLBL(cpuid_done) )

LLBL(cpuid_amd):
d120 1
a120 1
	JNE	( LLBL(cpuid_other) )
d122 1
a122 1
	JNE	( LLBL(cpuid_other) )
d124 1
a124 1
	JNE	( LLBL(cpuid_other) )
a129 9
	/* The features we need are almost all in the extended set.  The
	 * exception is SSE enable, which is in the standard set (0x1).
	 */
	MOV_L	( CONST(0x1), EAX )
	CPUID
	TEST_L	( EAX, EAX )
	JZ	( LLBL (cpuid_failed) )
	MOV_L	( EDX, ESI )

d133 1
a133 1
	JZ	( LLBL (cpuid_failed) )
d138 1
a138 5
	
	AND_L	( CONST(0x02000000), ESI )	/* OR in the SSE bit */
	OR_L	( ESI, EAX )
	
	JMP	( LLBL (cpuid_done) )
d140 1
a140 1
LLBL(cpuid_other):
d145 1
a145 1
LLBL(cpuid_failed):
d153 1
a153 1
LLBL (cpuid_done):
a154 1
	POP_L	( ESI )
d159 1
a159 1
#ifdef USE_SSE_ASM
d166 2
a167 2
GLOBL GLNAME( _mesa_test_os_sse_support )
GLNAME( _mesa_test_os_sse_support ):
d180 2
a181 2
GLOBL GLNAME( _mesa_test_os_sse_exception_support )
GLNAME( _mesa_test_os_sse_exception_support ):
d198 1
a198 1
	MOVUPS	( CONTENT( GLNAME( sse_test_dummy ) ), XMM1 )
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d4 1
a4 1
 * Version:  5.0.1
d6 1
a6 1
 * Copyright (C) 1999-2003  Brian Paul   All Rights Reserved.
d25 1
a25 1
/* $XFree86: xc/extras/Mesa/src/X86/common_x86_asm.S,v 1.17 2003/09/28 19:17:08 alanh Exp $ */
d67 5
d225 1
a225 7

	PUSH_L	( CONST( 0x3f800000 ) )
	PUSH_L	( CONST( 0x3f800000 ) )
	PUSH_L	( CONST( 0x3f800000 ) )
	PUSH_L	( CONST( 0x3f800000 ) )

	MOVUPS	( REGIND( ESP ), XMM1 )
@


