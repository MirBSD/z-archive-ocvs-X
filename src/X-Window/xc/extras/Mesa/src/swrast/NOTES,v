head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.28.42;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.04.08.18.20.11;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.04.08.18.20.11;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.05.07;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@INTRODUCTION

Mesa's native software rasterizer.  This module provides the fallback
paths for rasterization operations and states that aren't accelerated
in hardware drivers, and as the full rasterization engine in software
drivers.

The swrast module 'stands alone', relying only on interfaces to core
mesa and it's own driver interface.  It knows nothing about the tnl or
other modules, allowing it to be used for fallback paths in future tnl
schemes without modification.

As well as providing triangle/line/point rasterization functionality,
the module provides implementations of the pixel operations
(ReadPixels, etc), and texture operations (CopyTexSubImage) which may
be plugged in to the core Mesa driver interface where accelerated
versions of these operations are unavailable.


STATE

To create and destroy the module:

	GLboolean _swrast_CreateContext( GLcontext *ctx );
	void _swrast_DestroyContext( GLcontext *ctx );
   
This module tracks state changes internally and maintains derived
values based on the current state.  For this to work, the driver
ensure the following funciton is called whenever the state changes and
the swsetup module is 'awake':

	void _swrast_InvalidateState( GLcontext *ctx, GLuint new_state );

There is no explicit call to put the swrast module to sleep.  


CUSTOMIZATION

   void (*choose_point)( GLcontext * );
   void (*choose_line)( GLcontext * );
   void (*choose_triangle)( GLcontext * );

Drivers may add additional triangle/line/point functions to swrast by
overriding these functions.  It is necessary for the driver to be very
careful that it doesn't return an inappropriate function, eg a
rasterization function in feedback mode.  See the X11 driver for
examples.

DRIVER INTERFACE

The swrast device driver provides swrast primarily with span- and
pixel- level interfaces to a framebuffer, with a few additional hooks
for locking and setting the read buffer.

See the definition of struct swrast_device_driver in swrast.h.@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@@
