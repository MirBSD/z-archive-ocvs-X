head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.1
	cvs-200410241530:1.1.1.1
	cvs-200410012000:1.1.1.1
	cvs-200407141120:1.1.1.1
	cvs-200406231010:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.1
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.1
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.16.29.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.01.11;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.01.11;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.05.38;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of files not used in MirBSD - clean tree. People who want them got cvs.
@
text
@$!---------------make.com for xpmlib----------------------------------------
$! make xpmlib under VMS
$!
$ Make = ""
$!
$! Where are we?
$!
$ here = f$directory()
$ disk = f$trnlnm("SYS$DISK")
$ path = "''disk'"+ "''here'" 
$ xpath = "''path'" - "SXPM]" + "lib]"
$ if f$trnlnm("X11").eqs."" then define x11 decw$include,'xpath
$!
$! Check for MMK/MMS
$!
$ If F$Search ("Sys$System:MMS.EXE") .nes. "" Then Make = "MMS"
$ If F$Type (MMK) .eqs. "STRING" Then Make = "MMK"
$!
$! Look for the compiler used
$!
$ ccopt = "/define=(NEED_STRCASECMP,NEED_STRDUP,NO_ZPIPE)"
$ if f$getsyi("HW_MODEL").ge.1024
$ then
$  ccopt = "/prefix=all"+ccopt
$  comp  = "__decc__=1"
$  if f$trnlnm("SYS").eqs."" then define sys sys$library:
$ else
$  if f$search("SYS$SYSTEM:DECC$COMPILER.EXE").eqs.""
$   then
$    comp  = "__vaxc__=1"
$    if f$trnlnm("SYS").eqs."" then define sys sys$library:
$   else
$    if f$trnlnm("SYS").eqs."" then define sys decc$library_include:
$    ccopt = "/decc/prefix=all"+ccopt
$    comp  = "__decc__=1"
$  endif
$ endif
$!
$! Produce linker-options file according to X-Release and compiler used
$!
$ open/write optf sxpm.opt
$ write optf "libxpm.olb/lib"
$ write optf "sys$share:decw$xextlibshr.exe/share"
$ write optf "sys$share:decw$xlibshr.exe/share"
$ @@sys$update:decw$get_image_version sys$share:decw$xlibshr.exe decw$version
$ if f$extract(4,3,decw$version).eqs."1.1"
$ then
$   write optf "sys$share:decw$xtshr.exe/share"
$ endif
$ if f$extract(4,3,decw$version).eqs."1.2"
$ then
$   write optf "sys$share:decw$xtlibshrr5.exe/share"
$ endif
$ close optf
$!
$! Build the thing plain or with 'Make'
$!
$ write sys$output "Compiling XPMlib sources ..."
$  if (Make .eqs. "")
$   then
$    'Make'/Macro = ('comp')
$  else
$   CALL MAKE CrBufFrI.OBJ "CC ''CCOPT' CrBufFrI" -
                CrBufFrI.c XpmI.h xpm.h
$   CALL MAKE CrBufFrP.OBJ "CC ''CCOPT' CrBufFrP" -
                CrBufFrP.c XpmI.h xpm.h
$   CALL MAKE CrDatFI.OBJ "CC ''CCOPT' CrDatFrI" -
                CrDatFrI.c XpmI.h xpm.h
$   CALL MAKE CrDatFP.OBJ "CC ''CCOPT' CrDatFrP" -
                CrDatFrP.c XpmI.h xpm.h
$   CALL MAKE CrIFrBuf.OBJ "CC ''CCOPT' CrIFrBuf" -
                CrIFrBuf.c XpmI.h xpm.h
$   CALL MAKE CrIFrDat.OBJ "CC ''CCOPT' CrIFrDat" -
                CrIFrDat.c XpmI.h xpm.h
$   CALL MAKE CrPFrBuf.OBJ "CC ''CCOPT' CrPFrBuf" -
                CrPFrBuf.c XpmI.h xpm.h
$   CALL MAKE CrPFrDat.OBJ "CC ''CCOPT' CrPFrDat" -
                CrPFrDat.c XpmI.h xpm.h
$   CALL MAKE RdFToDat.OBJ "CC ''CCOPT' RdFToDat" -
                RdFToDat.c XpmI.h xpm.h
$   CALL MAKE RdFToI.OBJ "CC ''CCOPT' RdFToI" -
                RdFToI.c XpmI.h xpm.h
$   CALL MAKE RdFToP.OBJ "CC ''CCOPT' RdFToP" -
                RdFToP.c XpmI.h xpm.h
$   CALL MAKE WrFFrDat.OBJ "CC ''CCOPT' WrFFrDat" -
                WrFFrDat.c XpmI.h xpm.h
$   CALL MAKE WrFFrI.OBJ "CC ''CCOPT' WrFFrI" -
                WrFFrI.c XpmI.h xpm.h
$   CALL MAKE WrFFrP.OBJ "CC ''CCOPT' WrFFrP" -
                WrFFrP.c XpmI.h xpm.h
$   CALL MAKE create.OBJ "CC ''CCOPT' create" -
                create.c XpmI.h xpm.h
$   CALL MAKE data.OBJ "CC ''CCOPT' data" -
                data.c XpmI.h xpm.h
$   CALL MAKE hashtab.OBJ "CC ''CCOPT' hashtab" -
                hashtab.c XpmI.h xpm.h
$   CALL MAKE misc.OBJ "CC ''CCOPT' misc" -
                misc.c XpmI.h xpm.h
$   CALL MAKE parse.OBJ "CC ''CCOPT' parse" -
                parse.c XpmI.h xpm.h
$   CALL MAKE rgb.OBJ "CC ''CCOPT' rgb" -
                rgb.c XpmI.h xpm.h
$   CALL MAKE scan.OBJ "CC ''CCOPT' scan" -
                scan.c XpmI.h xpm.h
$   CALL MAKE Attrib.OBJ "CC ''CCOPT' Attrib" -
                Attrib.c XpmI.h xpm.h
$   CALL MAKE CrIFrP.OBJ "CC ''CCOPT' CrIFrP" -
                CrIFrP.c XpmI.h xpm.h
$   CALL MAKE CrPFrI.OBJ "CC ''CCOPT' CrPFrI" -
                CrPFrI.c XpmI.h xpm.h
$   CALL MAKE Image.OBJ "CC ''CCOPT' Image" -
                Image.c XpmI.h xpm.h
$   CALL MAKE Info.OBJ "CC ''CCOPT' Info" -
                Info.c XpmI.h xpm.h
$   CALL MAKE RdFToBuf.OBJ "CC ''CCOPT' RdFToBuf" -
                RdFToBuf.c XpmI.h xpm.h
$   CALL MAKE WrFFrBuf.OBJ "CC ''CCOPT' WrFFrBuf" -
                WrFFrBuf.c XpmI.h xpm.h
$   write sys$output "Building XPMlib ..."
$   CALL MAKE LIBXPM.OLB "lib/crea libxpm.olb *.obj" *.OBJ
$   CALL MAKE SXPM.OBJ "CC  ''CCOPT' [-.sxpm]sxpm" -
                [-.sxpm]sxpm.c xpm.h
$   write sys$output "Linking SXPM ..."
$   CALL MAKE SXPM.EXE "LINK  sxpm,sxpm.opt/OPT" sxpm.OBJ
$  endif
$ write sys$output "XPMlib build completed"
$ sxpm :=="$''path'sxpm.exe"
$ exit
$!
$!
$MAKE: SUBROUTINE   !SUBROUTINE TO CHECK DEPENDENCIES
$ V = 'F$Verify(0)
$! P1 = What we are trying to make
$! P2 = Command to make it
$! P3 - P8  What it depends on
$
$ If F$Search(P1) .Eqs. "" Then Goto Makeit
$ Time = F$CvTime(F$File(P1,"RDT"))
$arg=3
$Loop:
$       Argument = P'arg
$       If Argument .Eqs. "" Then Goto Exit
$       El=0
$Loop2:
$       File = F$Element(El," ",Argument)
$       If File .Eqs. " " Then Goto Endl
$       AFile = ""
$Loop3:
$       OFile = AFile
$       AFile = F$Search(File)
$       If AFile .Eqs. "" .Or. AFile .Eqs. OFile Then Goto NextEl
$       If F$CvTime(F$File(AFile,"RDT")) .Ges. Time Then Goto Makeit
$       Goto Loop3
$NextEL:
$       El = El + 1
$       Goto Loop2
$EndL:
$ arg=arg+1
$ If arg .Le. 8 Then Goto Loop
$ Goto Exit
$
$Makeit:
$ VV=F$VERIFY(0)
$ write sys$output P2
$ 'P2
$ VV='F$Verify(VV)
$Exit:
$ If V Then Set Verify
$ENDSUBROUTINE
@


1.1
log
@Initial revision
@
text
@@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
