head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.04.16;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.04.16;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.31.31;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.17.58.42;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.18.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $XFree86: xc/lib/GL/mesa/src/drv/r128/r128_dd.c,v 1.12 2001/04/10 16:07:52 dawes Exp $ */
/**************************************************************************

Copyright 1999, 2000 ATI Technologies Inc. and Precision Insight, Inc.,
                                               Cedar Park, Texas.
All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
on the rights to use, copy, modify, merge, publish, distribute, sub
license, and/or sell copies of the Software, and to permit persons to whom
the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice (including the next
paragraph) shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
ATI, PRECISION INSIGHT AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
USE OR OTHER DEALINGS IN THE SOFTWARE.

**************************************************************************/

/*
 * Authors:
 *   Gareth Hughes <gareth@@valinux.com>
 *   Kevin E. Martin <martin@@valinux.com>
 *
 */

#include "r128_context.h"
#include "r128_ioctl.h"
#include "r128_state.h"
#include "r128_vb.h"
#include "r128_pipeline.h"
#include "r128_dd.h"

#include "extensions.h"
#if defined(USE_X86_ASM) || defined(USE_3DNOW_ASM) || defined(USE_KATMAI_ASM)
#include "X86/common_x86_asm.h"
#endif

#define R128_DATE	"20010405"


/* Return the width and height of the current color buffer.
 */
static void r128DDGetBufferSize( GLcontext *ctx,
				 GLuint *width, GLuint *height )
{
   r128ContextPtr rmesa = R128_CONTEXT(ctx);

   LOCK_HARDWARE( rmesa );
   *width  = rmesa->driDrawable->w;
   *height = rmesa->driDrawable->h;
   UNLOCK_HARDWARE( rmesa );
}

/* Return various strings for glGetString().
 */
static const GLubyte *r128DDGetString( GLcontext *ctx, GLenum name )
{
   r128ContextPtr rmesa = R128_CONTEXT(ctx);
   static char buffer[128];

   switch ( name ) {
   case GL_VENDOR:
      return (GLubyte *)"VA Linux Systems, Inc.";

   case GL_RENDERER:
      sprintf( buffer, "Mesa DRI Rage128 " R128_DATE );

      /* Append any chipset-specific information.
       */
      if ( R128_IS_PRO( rmesa ) ) {
	 strncat( buffer, " Pro", 4 );
      }
      if ( R128_IS_MOBILITY( rmesa ) ) {
	 strncat( buffer, " M3", 3 );
      }

      /* Append any AGP/PCI-specific information.
       */
      switch ( rmesa->r128Screen->AGPMode ) {
      case 1:
	 strncat( buffer, " AGP 1x", 7 );
	 break;
      case 2:
	 strncat( buffer, " AGP 2x", 7 );
	 break;
      case 4:
	 strncat( buffer, " AGP 4x", 7 );
	 break;
      }

      /* Append any CPU-specific information.
       */
#ifdef USE_X86_ASM
      if ( gl_x86_cpu_features ) {
	 strncat( buffer, " x86", 4 );
      }
#endif
#ifdef USE_MMX_ASM
      if ( cpu_has_mmx ) {
	 strncat( buffer, "/MMX", 4 );
      }
#endif
#ifdef USE_3DNOW_ASM
      if ( cpu_has_3dnow ) {
	 strncat( buffer, "/3DNow!", 7 );
      }
#endif
#ifdef USE_KATMAI_ASM
      if ( cpu_has_xmm ) {
	 strncat( buffer, "/SSE", 4 );
      }
#endif
      return (GLubyte *)buffer;

   default:
      return NULL;
   }
}

/* Send all commands to the hardware.  If vertex buffers or indirect
 * buffers are in use, then we need to make sure they are sent to the
 * hardware.  All commands that are normally sent to the ring are
 * already considered `flushed'.
 */
static void r128DDFlush( GLcontext *ctx )
{
   r128ContextPtr rmesa = R128_CONTEXT(ctx);

   FLUSH_BATCH( rmesa );

#if ENABLE_PERF_BOXES
   if ( rmesa->boxes ) {
      LOCK_HARDWARE( rmesa );
      r128PerformanceBoxesLocked( rmesa );
      UNLOCK_HARDWARE( rmesa );
   }

   /* Log the performance counters if necessary */
   r128PerformanceCounters( rmesa );
#endif
}

/* Make sure all commands have been sent to the hardware and have
 * completed processing.
 */
static void r128DDFinish( GLcontext *ctx )
{
   r128ContextPtr rmesa = R128_CONTEXT(ctx);

#if ENABLE_PERF_BOXES
   /* Bump the performance counter */
   rmesa->c_drawWaits++;
#endif

   r128DDFlush( ctx );
   r128WaitForIdle( rmesa );
}

/* Return various parameters requested by Mesa (this is deprecated).
 */
static GLint r128DDGetParameteri( const GLcontext *ctx, GLint param )
{
   switch ( param ) {
   case DD_HAVE_HARDWARE_FOG:
      return 1;
   default:
      return 0;
   }
}

/* Initialize the extensions supported by this driver.
 */
void r128DDInitExtensions( GLcontext *ctx )
{
   gl_extensions_disable( ctx, "GL_ARB_imaging" );
   gl_extensions_disable( ctx, "GL_ARB_texture_compression" );
   gl_extensions_disable( ctx, "GL_ARB_texture_cube_map" );

   gl_extensions_disable( ctx, "GL_EXT_blend_color" );
   gl_extensions_disable( ctx, "GL_EXT_blend_func_separate" );
   gl_extensions_disable( ctx, "GL_EXT_blend_logic_op" );
   gl_extensions_disable( ctx, "GL_EXT_blend_minmax" );
   gl_extensions_disable( ctx, "GL_EXT_blend_subtract" );
   gl_extensions_disable( ctx, "GL_EXT_convolution" );
   gl_extensions_disable( ctx, "GL_EXT_paletted_texture" );
   gl_extensions_disable( ctx, "GL_EXT_point_parameters" );
   gl_extensions_disable( ctx, "GL_EXT_shared_texture_palette" );
   gl_extensions_disable( ctx, "GL_EXT_texture_env_combine" );

   gl_extensions_disable( ctx, "GL_HP_occlusion_test" );

   gl_extensions_disable( ctx, "GL_INGR_blend_func_separate" );

   gl_extensions_disable( ctx, "GL_SGI_color_matrix" );
   gl_extensions_disable( ctx, "GL_SGI_color_table" );
   gl_extensions_disable( ctx, "GL_SGIX_pixel_texture" );
}

/* Initialize the driver's misc functions.
 */
void r128DDInitDriverFuncs( GLcontext *ctx )
{
   ctx->Driver.GetBufferSize		= r128DDGetBufferSize;
   ctx->Driver.GetString		= r128DDGetString;
   ctx->Driver.Finish			= r128DDFinish;
   ctx->Driver.Flush			= r128DDFlush;

   ctx->Driver.Error			= NULL;
   ctx->Driver.GetParameteri		= r128DDGetParameteri;

   ctx->Driver.DrawPixels		= NULL;
   ctx->Driver.Bitmap			= NULL;

   ctx->Driver.RegisterVB		= r128DDRegisterVB;
   ctx->Driver.UnregisterVB		= r128DDUnregisterVB;
   ctx->Driver.BuildPrecalcPipeline	= r128DDBuildPrecalcPipeline;
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d1 1
a1 1
/* $XFree86: xc/lib/GL/mesa/src/drv/r128/r128_dd.c,v 1.16 2003/09/28 20:15:20 alanh Exp $ */
d40 1
d43 4
a46 3
#include "context.h"

#include "utils.h"
d48 1
a48 1
#define DRIVER_DATE	"20030328"
d53 1
a53 1
static void r128DDGetBufferSize( GLframebuffer *buffer,
a55 1
   GET_CURRENT_CONTEXT(ctx);
a69 4
   unsigned   offset;
   const char * card_name = "Rage 128";
   GLuint agp_mode = rmesa->r128Screen->IsPCI ? 0 :
      rmesa->r128Screen->AGPMode;
d76 3
a78 1
      /* Select the spefic chipset.
d81 1
a81 1
	 card_name = "Rage 128 Pro";
d83 2
a84 2
      else if ( R128_IS_MOBILITY( rmesa ) ) {
	 card_name = "Rage 128 Mobility";
d87 13
a99 2
      offset = driGetRendererString( buffer, card_name, DRIVER_DATE,
				     agp_mode );
d101 22
d169 39
d213 14
a226 6
   ctx->Driver.GetBufferSize	= r128DDGetBufferSize;
   ctx->Driver.ResizeBuffers    = _swrast_alloc_buffers;
   ctx->Driver.GetString	= r128DDGetString;
   ctx->Driver.Finish		= r128DDFinish;
   ctx->Driver.Flush		= r128DDFlush;
   ctx->Driver.Error		= NULL;
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d1 1
a1 1
/* $XFree86: xc/lib/GL/mesa/src/drv/r128/r128_dd.c,v 1.15 2002/10/30 12:51:38 alanh Exp $ */
d40 1
a42 1
#include "context.h"
d44 1
a44 1
#if defined(USE_X86_ASM)
d48 1
a48 1
#define R128_DATE	"20020221"
d53 1
a53 1
static void r128DDGetBufferSize( GLframebuffer *buffer,
a55 1
   GET_CURRENT_CONTEXT(ctx);
d87 1
a87 1
      /* Append any AGP-specific information.
d104 1
a104 1
      if ( _mesa_x86_cpu_features ) {
d107 1
d118 1
a118 1
#ifdef USE_SSE_ASM
a122 1
#endif
d169 11
d185 22
a206 4
   _mesa_enable_extension( ctx, "GL_ARB_multitexture" );
   _mesa_enable_extension( ctx, "GL_ARB_texture_env_add" );
   _mesa_enable_extension( ctx, "GL_EXT_texture_env_add" );
   _mesa_enable_imaging_extensions( ctx );
d213 14
a226 6
   ctx->Driver.GetBufferSize	= r128DDGetBufferSize;
   ctx->Driver.ResizeBuffers    = _swrast_alloc_buffers;
   ctx->Driver.GetString	= r128DDGetString;
   ctx->Driver.Finish		= r128DDFinish;
   ctx->Driver.Flush		= r128DDFlush;
   ctx->Driver.Error		= NULL;
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d1 1
a1 1
/* $XFree86: xc/lib/GL/mesa/src/drv/r128/r128_dd.c,v 1.16 2003/09/28 20:15:20 alanh Exp $ */
d43 4
d48 1
a48 3
#include "utils.h"

#define DRIVER_DATE	"20030328"
a70 4
   unsigned   offset;
   const char * card_name = "Rage 128";
   GLuint agp_mode = rmesa->r128Screen->IsPCI ? 0 :
      rmesa->r128Screen->AGPMode;
d77 3
a79 1
      /* Select the spefic chipset.
d82 1
a82 1
	 card_name = "Rage 128 Pro";
d84 2
a85 2
      else if ( R128_IS_MOBILITY( rmesa ) ) {
	 card_name = "Rage 128 Mobility";
d88 13
a100 2
      offset = driGetRendererString( buffer, card_name, DRIVER_DATE,
				     agp_mode );
d102 22
d170 10
@


