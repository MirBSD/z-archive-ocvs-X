head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.04.16;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.04.16;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.31.26;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.17.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/**************************************************************************

Copyright 2001 VA Linux Systems Inc., Fremont, California.

All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
on the rights to use, copy, modify, merge, publish, distribute, sub
license, and/or sell copies of the Software, and to permit persons to whom
the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice (including the next
paragraph) shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
ATI, VA LINUX SYSTEMS AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
USE OR OTHER DEALINGS IN THE SOFTWARE.

**************************************************************************/

/* $XFree86: xc/lib/GL/mesa/src/drv/i830/i830_ioctl.h,v 1.1 2001/10/04 18:28:21 alanh Exp $ */

/*
 * Author:
 *   Jeff Hartmann <jhartmann@@valinux.com>
 *
 * Heavily based on the I810 driver, which was written by:
 *   Keith Whitwell <keithw@@valinux.com>
 */

#ifndef I830_IOCTL_H
#define I830_IOCTL_H

#include "i830_drv.h"


GLuint *i830AllocDwords( i830ContextPtr imesa, int dwords );

void i830GetGeneralDmaBufferLocked( i830ContextPtr mmesa ); 

void i830FlushVertices( i830ContextPtr mmesa ); 
void i830FlushVerticesLocked( i830ContextPtr mmesa );

void i830FlushGeneralLocked( i830ContextPtr imesa );
void i830WaitAgeLocked( i830ContextPtr imesa, int age );
void i830WaitAge( i830ContextPtr imesa, int age );

void i830DmaFinish( i830ContextPtr imesa );

void i830RegetLockQuiescent( i830ContextPtr imesa );

void i830DDInitIoctlFuncs( GLcontext *ctx );

void i830SwapBuffers( i830ContextPtr imesa );

int i830_check_copy(int fd);

GLbitfield i830Clear( GLcontext *ctx, GLbitfield mask, GLboolean all,
		      GLint cx, GLint cy, GLint cw, GLint ch );

#define FLUSH_BATCH(imesa) do {						\
        if (I830_DEBUG&DEBUG_VERBOSE_IOCTL)  				\
              fprintf(stderr, "FLUSH_BATCH in %s\n", __FUNCTION__);	\
	if (imesa->vertex_dma_buffer) i830FlushVertices(imesa);		\
} while (0)

extern drmBufPtr i830_get_buffer_ioctl( i830ContextPtr imesa );

static __inline
GLuint *i830AllocDwordsInline( i830ContextPtr imesa, int dwords )
{
   int bytes = dwords * 4;
   GLuint *start;

   if (!imesa->vertex_dma_buffer) 
   {
      LOCK_HARDWARE(imesa);
      imesa->vertex_dma_buffer = i830_get_buffer_ioctl( imesa );
      UNLOCK_HARDWARE(imesa);
   } 
   else if (imesa->vertex_dma_buffer->used + bytes > 
	    imesa->vertex_dma_buffer->total) 
   {
      LOCK_HARDWARE(imesa);
      i830FlushVerticesLocked( imesa );
      imesa->vertex_dma_buffer = i830_get_buffer_ioctl( imesa );
      UNLOCK_HARDWARE(imesa);
   }

   start = (GLuint *)((char *)imesa->vertex_dma_buffer->address + 
		      imesa->vertex_dma_buffer->used);

   imesa->vertex_dma_buffer->used += bytes;
   return start;
}

static __inline
GLuint *i830AllocDwordsInlineLocked( i830ContextPtr imesa, int dwords )
{
   int bytes = dwords * 4;
   GLuint *start;

   if (!imesa->vertex_dma_buffer) 
   {
      imesa->vertex_dma_buffer = i830_get_buffer_ioctl( imesa );
   } 
   else if (imesa->vertex_dma_buffer->used + bytes > 
	    imesa->vertex_dma_buffer->total) 
   {
      i830FlushVerticesLocked( imesa );
      imesa->vertex_dma_buffer = i830_get_buffer_ioctl( imesa );
   }

   start = (GLuint *)((char *)imesa->vertex_dma_buffer->address + 
		      imesa->vertex_dma_buffer->used);

   imesa->vertex_dma_buffer->used += bytes;
   return start;
}

#endif
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@a0 1

d28 1
a28 1
/* $XFree86: xc/lib/GL/mesa/src/drv/i830/i830_ioctl.h,v 1.3 2002/10/30 12:51:35 alanh Exp $ */
d32 1
a32 3
 *   Jeff Hartmann <jhartmann@@2d3d.com>
 *   Graeme Fisher <graeme@@2d3d.co.za>
 *   Abraham vd Merwe <abraham@@2d3d.co.za>
d35 1
a35 1
 *   Keith Whitwell <keith@@tungstengraphics.com>
d41 4
a44 1
#include "i830_context.h"
d46 6
a51 6
GLuint *i830AllocDwords (i830ContextPtr imesa, int dwords);
void i830EmitPrim( i830ContextPtr imesa );
void i830FlushPrims( i830ContextPtr mmesa );
void i830FlushPrimsLocked( i830ContextPtr mmesa );
void i830FlushPrimsGetBuffer( i830ContextPtr imesa );
void i830FlushPrimsGetBufferLocked( i830ContextPtr imesa );
d54 1
d56 1
d58 1
d60 3
a62 2
void i830CopyBuffer( const __DRIdrawablePrivate *dpriv );
void i830PageFlip( const __DRIdrawablePrivate *dpriv );
d65 2
a66 7
#define I830_STATECHANGE(imesa, flag)               	\
do {  							\
   if (imesa->vertex_low != imesa->vertex_last_prim)  	\
      i830FlushPrims(imesa);                    	\
   imesa->dirty |= flag;                   		\
} while (0)

d68 4
a71 5
#define I830_FIREVERTICES(imesa)      	\
do {                             	\
   if (imesa->vertex_buffer) {  	\
      i830FlushPrims(imesa);		\
}                                   	\
d74 1
d76 2
a77 1
static __inline GLuint *i830AllocDmaLow( i830ContextPtr imesa, int bytes )
d79 11
a89 4
   if (imesa->vertex_low + bytes > imesa->vertex_high) {
      i830FlushPrimsGetBuffer( imesa );
   }
   
d91 4
a94 3
      GLuint *start = (GLuint *)(imesa->vertex_addr + imesa->vertex_low);
      imesa->vertex_low += bytes;
      return start;
d96 6
d104 2
a105 2
static __inline GLuint *i830AllocDmaLowLocked( i830ContextPtr imesa, 
					       int bytes )
d107 9
a115 4
   if (imesa->vertex_low + bytes > imesa->vertex_high) {
      i830FlushPrimsGetBufferLocked( imesa );
   }
   
d117 2
a118 3
      GLuint *start = (GLuint *)(imesa->vertex_addr + imesa->vertex_low);
      imesa->vertex_low += bytes;
      return start;
d120 6
a126 1

@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@a0 1

d28 1
a28 1
/* $XFree86: xc/lib/GL/mesa/src/drv/i830/i830_ioctl.h,v 1.3 2002/10/30 12:51:35 alanh Exp $ */
d32 1
a32 3
 *   Jeff Hartmann <jhartmann@@2d3d.com>
 *   Graeme Fisher <graeme@@2d3d.co.za>
 *   Abraham vd Merwe <abraham@@2d3d.co.za>
d35 1
a35 1
 *   Keith Whitwell <keith@@tungstengraphics.com>
d41 4
a44 1
#include "i830_context.h"
d46 6
a51 6
GLuint *i830AllocDwords (i830ContextPtr imesa, int dwords);
void i830EmitPrim( i830ContextPtr imesa );
void i830FlushPrims( i830ContextPtr mmesa );
void i830FlushPrimsLocked( i830ContextPtr mmesa );
void i830FlushPrimsGetBuffer( i830ContextPtr imesa );
void i830FlushPrimsGetBufferLocked( i830ContextPtr imesa );
d54 1
d56 1
d58 1
d60 3
a62 2
void i830CopyBuffer( const __DRIdrawablePrivate *dpriv );
void i830PageFlip( const __DRIdrawablePrivate *dpriv );
d65 2
a66 7
#define I830_STATECHANGE(imesa, flag)               	\
do {  							\
   if (imesa->vertex_low != imesa->vertex_last_prim)  	\
      i830FlushPrims(imesa);                    	\
   imesa->dirty |= flag;                   		\
} while (0)

d68 4
a71 5
#define I830_FIREVERTICES(imesa)      	\
do {                             	\
   if (imesa->vertex_buffer) {  	\
      i830FlushPrims(imesa);		\
}                                   	\
d74 1
d76 2
a77 1
static __inline GLuint *i830AllocDmaLow( i830ContextPtr imesa, int bytes )
d79 11
a89 4
   if (imesa->vertex_low + bytes > imesa->vertex_high) {
      i830FlushPrimsGetBuffer( imesa );
   }
   
d91 4
a94 3
      GLuint *start = (GLuint *)(imesa->vertex_addr + imesa->vertex_low);
      imesa->vertex_low += bytes;
      return start;
d96 6
d104 2
a105 2
static __inline GLuint *i830AllocDmaLowLocked( i830ContextPtr imesa, 
					       int bytes )
d107 9
a115 4
   if (imesa->vertex_low + bytes > imesa->vertex_high) {
      i830FlushPrimsGetBufferLocked( imesa );
   }
   
d117 2
a118 3
      GLuint *start = (GLuint *)(imesa->vertex_addr + imesa->vertex_low);
      imesa->vertex_low += bytes;
      return start;
d120 6
a126 1

@

