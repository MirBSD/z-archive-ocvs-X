head	1.2;
access;
symbols
	ctm-0349:1.1.1.1 openbsd-xf4:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.08.19.32.29;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.20.04.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.20.04.11;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge conflicts
@
text
@#ifndef DRI_TEX_HEAP_H
#define DRI_TEX_HEAP_H


/* Private struct.
 */
typedef struct {
	unsigned char next, prev; /* indices to form a circular LRU  */
	unsigned char in_use;	  /* owned by a client, or free? */
	int age;		  /* tracked by clients to update local LRU's */
} driTexRegion;


/* This is the global part of the shared texture mechanism.
 *
 * Do not use this struct directly - declare an equivalent one with a 
 * larger list[] array, tuned to suit your application.
 *
 * Your expanded struct should be placed in the driver-specific
 * portion of the sarea.
 */
struct {
	int globalAge;
	driTexRegion list[1];	/* drivers will want to define a larger list */
} driGlobalList; 


/* This is the client-private part of the mechanism.
 *
 * Clients will place one or more of these structs in their driver
 * context struct to manage one or more global texture heaps.  All
 * fields except print_local_lru must be filled in.
 */
struct dri_tex_heap_t {

	int heapId;		/* client-supplied identifier */
	void *driverContext;	/* pointer to the client's context private */
	int size;		/* heap size in bytes */
	int logGranularity;	/* log base 2 of size of single heap region */
	int nrRegions;	        /* number of elements in global list */
	driGlobalList *shared;	/* pointer to sarea driGlobalList struct */
	int localAge;	        /* initialize to zero */
	
	/* Callback to the client to let it know a region of texture
	 * space has changed age.  The client must integrate this
	 * information with its local texture knowledge, in particular
	 * checking whether any of its own textures have been
	 * invalidated.
	 */
	void (*textures_gone)( void *driverContext,
			       int heapId,
			       int offset, 
			       int size,
			       int inUse );

	/* Optional hook for debugging.
	 */
	void (*print_local_lru)( void *driverContext,
				 int heapId );
} driTexHeap;


#define DRI_AGE_TEXTURES( heap )			\
   if ((heap)->localAge > (heap)->shared->globalAge)	\
      driAgeTextures( heap );


/* This should be called whenever there has been contention on the
 * hardware lock.  Clients can shortcircuit this slightly by using
 * DRI_AGE_TEXTURES, above.
 */
void driAgeTextures( driTexHeap *heap );

#endif

				
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@
