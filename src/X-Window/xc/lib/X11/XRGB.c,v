head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.04.36;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.04.36;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.18.01.52;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.18.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Xorg: XRGB.c,v 1.3 2000/08/17 19:45:04 cpqbld Exp $ */

/*
 * Code and supporting documentation (c) Copyright 1990 1991 Tektronix, Inc.
 * 	All Rights Reserved
 * 
 * This file is a component of an X Window System-specific implementation
 * of Xcms based on the TekColor Color Management System.  Permission is
 * hereby granted to use, copy, modify, sell, and otherwise distribute this
 * software and its documentation for any purpose and without fee, provided
 * that this copyright, permission, and disclaimer notice is reproduced in
 * all copies of this software and in supporting documentation.  TekColor
 * is a trademark of Tektronix, Inc.
 * 
 * Tektronix makes no representation about the suitability of this software
 * for any purpose.  It is provided "as is" and with all faults.
 * 
 * TEKTRONIX DISCLAIMS ALL WARRANTIES APPLICABLE TO THIS SOFTWARE,
 * INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE.  IN NO EVENT SHALL TEKTRONIX BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
 * RESULTING FROM LOSS OF USE, DATA, OR PROFITS, WHETHER IN AN ACTION OF
 * CONTRACT, NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR THE PERFORMANCE OF THIS SOFTWARE.
 *
 *
 *	NAME
 *		XcmsRtoX.c
 *
 *	DESCRIPTION
 *		Convert color specifications in XcmsRGB format in one array of
 *		XcmsColor structures to RGB in an array of XColor structures.
 *
 *
 */
/* $XFree86: xc/lib/X11/XRGB.c,v 3.3 2001/07/29 05:01:11 tsi Exp $ */

#include "Xlibint.h"
#include "Xcmsint.h"

/*
 *      LOCAL VARIABLES
 */

static unsigned short const MASK[17] = {
    0x0000,	/*  0 bitsPerRGB */
    0x8000,	/*  1 bitsPerRGB */
    0xc000,	/*  2 bitsPerRGB */
    0xe000,	/*  3 bitsPerRGB */
    0xf000,	/*  4 bitsPerRGB */
    0xf800,	/*  5 bitsPerRGB */
    0xfc00,	/*  6 bitsPerRGB */
    0xfe00,	/*  7 bitsPerRGB */
    0xff00,	/*  8 bitsPerRGB */
    0xff80,	/*  9 bitsPerRGB */
    0xffc0,	/* 10 bitsPerRGB */
    0xffe0,	/* 11 bitsPerRGB */
    0xfff0,	/* 12 bitsPerRGB */
    0xfff8,	/* 13 bitsPerRGB */
    0xfffc,	/* 14 bitsPerRGB */
    0xfffe,	/* 15 bitsPerRGB */
    0xffff	/* 16 bitsPerRGB */
};



/************************************************************************
 *									*
 *			API PRIVATE ROUTINES				*
 *									*
 ************************************************************************/

/*
 *	NAME
 *		_XcmsRGB_to_XColor - 
 *
 *	SYNOPSIS
 */
void
_XcmsRGB_to_XColor(pColors, pXColors, nColors)
    XcmsColor *pColors;
    XColor *pXColors;
    unsigned int nColors;
/*
 *	DESCRIPTION
 *	    Translates a color specification in XcmsRGBFormat in a XcmsColor
 * 	    structure to an XColor structure.
 *
 *	RETURNS
 *		void.
 */
{
    for (; nColors--; pXColors++, pColors++) {
	pXColors->pixel = pColors->pixel;
	pXColors->red = pColors->spec.RGB.red;
	pXColors->green = pColors->spec.RGB.green;
	pXColors->blue  = pColors->spec.RGB.blue;
	pXColors->flags = (DoRed | DoGreen | DoBlue);
    }
}


/*
 *	NAME
 *		_XColor_to_XcmsRGB
 *
 *	SYNOPSIS
 */
void
_XColor_to_XcmsRGB(ccc, pXColors, pColors, nColors)
    XcmsCCC ccc;
    XColor *pXColors;
    XcmsColor *pColors;
    unsigned int nColors;
/*
 *	DESCRIPTION
 *		Translates an RGB color specification in an XColor
 *		structure to an XcmsRGB structure.
 *
 *		IMPORTANT NOTE:  Bit replication that may have been caused
 *		with ResolveColor() routine in the X Server is undone
 *		here if requested!  For example, if red = 0xcaca and the
 *		bits_per_rgb is 8, then spec.RGB.red will be 0xca00.
 *
 *	RETURNS
 *		void
 */
{
    int bits_per_rgb = ccc->visual->bits_per_rgb;

    for (; nColors--; pXColors++, pColors++) {
	pColors->spec.RGB.red = (pXColors->red & MASK[bits_per_rgb]);
	pColors->spec.RGB.green = (pXColors->green & MASK[bits_per_rgb]);
	pColors->spec.RGB.blue = (pXColors->blue & MASK[bits_per_rgb]);
	pColors->format = XcmsRGBFormat;
	pColors->pixel = pXColors->pixel;
    }
}


/*
 *	NAME
 *		_XcmsResolveColor
 *
 *	SYNOPSIS
 */
void
_XcmsResolveColor(ccc, pXcmsColor)
    XcmsCCC ccc;
    XcmsColor *pXcmsColor;
/*
 *	DESCRIPTION
 *	    Uses the X Server ResolveColor() algorithm to
 *	    modify values to closest values supported by hardware.
 *	    Old algorithm simply masked low-order bits.  The new algorithm
 *	    has the effect of replicating significant bits into lower order
 *	    bits in order to stretch the hardware value into all 16 bits.
 *
 *	    On a display with N-bit DACs, the "hardware" color is computed as:
 *
 *	    ((unsignedlong)(ClientValue >> (16-N)) * 0xFFFF) / ((1 << N) - 1)
 *		
 *
 *	RETURNS
 *		void.
 */
{
    int shift;
    int max_color;

    shift = 16 - ccc->visual->bits_per_rgb;
    max_color = (1 << ccc->visual->bits_per_rgb) - 1;


    pXcmsColor->spec.RGB.red =
	    ((unsigned long)(pXcmsColor->spec.RGB.red >> shift) * 0xFFFF)
	    / max_color;
    pXcmsColor->spec.RGB.green =
	    ((unsigned long)(pXcmsColor->spec.RGB.green >> shift) * 0xFFFF)
	    / max_color;
    pXcmsColor->spec.RGB.blue =
	    ((unsigned long)(pXcmsColor->spec.RGB.blue  >> shift) * 0xFFFF)
	    / max_color;
}


/*
 *	NAME
 *		_XcmsUnresolveColor
 *
 *	SYNOPSIS
 */
void
_XcmsUnresolveColor(ccc, pColor)
    XcmsCCC ccc;
    XcmsColor *pColor;
/*
 *	DESCRIPTION
 *		Masks out insignificant bits.
 *
 *	RETURNS
 *		void.
 *
 *	ASSUMPTIONS
 *		format == XcmsRGBFormat
 */
{
    int bits_per_rgb = ccc->visual->bits_per_rgb;

    pColor->spec.RGB.red &= MASK[bits_per_rgb];
    pColor->spec.RGB.green &= MASK[bits_per_rgb];
    pColor->spec.RGB.blue &= MASK[bits_per_rgb];
}


/*
 *	NAME
 *		_XUnresolveColor
 *
 *	SYNOPSIS
 */
void
_XUnresolveColor(ccc, pXColor)
    XcmsCCC ccc;
    XColor *pXColor;
/*
 *	DESCRIPTION
 *		Masks out insignificant bits.
 *
 *	RETURNS
 *		void.
 */
{
    int bits_per_rgb = ccc->visual->bits_per_rgb;

    pXColor->red &= MASK[bits_per_rgb];
    pXColor->green &= MASK[bits_per_rgb];
    pXColor->blue &= MASK[bits_per_rgb];
}

@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d36 1
a36 1
/* $XFree86: xc/lib/X11/XRGB.c,v 3.4 2003/04/13 19:22:19 dawes Exp $ */
a39 1
#include "Cv.h"
d80 4
a83 4
_XcmsRGB_to_XColor(
    XcmsColor *pColors,
    XColor *pXColors,
    unsigned int nColors)
d110 5
a114 5
_XColor_to_XcmsRGB(
    XcmsCCC ccc,
    XColor *pXColors,
    XcmsColor *pColors,
    unsigned int nColors)
d148 3
a150 3
_XcmsResolveColor(
    XcmsCCC ccc,
    XcmsColor *pXcmsColor)
d194 3
a196 3
_XcmsUnresolveColor(
    XcmsCCC ccc,
    XcmsColor *pColor)
d223 3
a225 3
_XUnresolveColor(
    XcmsCCC ccc,
    XColor *pXColor)
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d36 1
a36 1
/* $XFree86: xc/lib/X11/XRGB.c,v 3.4 2003/04/13 19:22:19 dawes Exp $ */
a39 1
#include "Cv.h"
d80 4
a83 4
_XcmsRGB_to_XColor(
    XcmsColor *pColors,
    XColor *pXColors,
    unsigned int nColors)
d110 5
a114 5
_XColor_to_XcmsRGB(
    XcmsCCC ccc,
    XColor *pXColors,
    XcmsColor *pColors,
    unsigned int nColors)
d148 3
a150 3
_XcmsResolveColor(
    XcmsCCC ccc,
    XcmsColor *pXcmsColor)
d194 3
a196 3
_XcmsUnresolveColor(
    XcmsCCC ccc,
    XcmsColor *pColor)
d223 3
a225 3
_XUnresolveColor(
    XcmsCCC ccc,
    XColor *pXColor)
@

