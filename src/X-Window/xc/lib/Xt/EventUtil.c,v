head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.4
	MIRBSD_7:1.1.1.1.0.2
	MIRBSD_7ter:1.1.1.1
	cvs-20011091815:1.1.1.1
	cvs-200309162130:1.1.1.1
	cvs-200308302005:1.1.1.1
	ctmx-0387:1.1.1.1
	ctmx-0384:1.1.1.1
	MIRBSD_5:1.1.1.1
	ctmx-0375:1.1.1.1
	ctmx-0373:1.1.1.1
	ctm-0371:1.1.1.1
	ctm-0370:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-0363:1.1.1.1
	ctm-0359:1.1.1.1
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.04.57;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.04.57;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.02.18.05.07;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.07.14.11.58.24;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.19.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Xorg: EventUtil.c,v 1.4 2001/02/09 02:03:54 xorgcvs Exp $ */

/********************************************************

Copyright 1988 by Hewlett-Packard Company
Copyright 1987, 1988, 1989 by Digital Equipment Corporation, Maynard, Massachusetts
Copyright 1993 by Sun Microsystems, Inc. Mountain View, CA.

Permission to use, copy, modify, and distribute this software 
and its documentation for any purpose and without fee is hereby 
granted, provided that the above copyright notice appear in all 
copies and that both that copyright notice and this permission 
notice appear in supporting documentation, and that the names of 
Hewlett-Packard, Digital, or Sun  not be used in advertising or 
publicity pertaining to distribution of the software without specific, 
written prior permission.

DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

SUN DISCLAIMS ALL WARRANTIES WITH REGARD TO  THIS  SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FIT-
NESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL SUN BE  LI-
ABLE  FOR  ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,  DATA  OR
PROFITS,  WHETHER  IN  AN  ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION  WITH
THE USE OR PERFORMANCE OF THIS SOFTWARE.

********************************************************/

/*

Copyright 1987, 1988, 1989, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.

*/
/* $XFree86: xc/lib/Xt/EventUtil.c,v 1.6 2001/12/14 19:56:13 dawes Exp $ */

#include "IntrinsicI.h"
#include "PassivGraI.h"
#include "StringDefs.h"
#include "EventI.h"

static XContext 	perWidgetInputContext = 0;

void _XtFreePerWidgetInput(w, pwi)
    Widget 		w;
    XtPerWidgetInput	pwi;
{
    LOCK_PROCESS;
    XDeleteContext(XtDisplay(w), 
		   (Window)w,
		   perWidgetInputContext);
    
    XtFree((char *)pwi);
    UNLOCK_PROCESS;
}

/*
 * This routine gets the passive list associated with the widget
 * from the context manager.
 */
#if NeedFunctionPrototypes
XtPerWidgetInput _XtGetPerWidgetInput(
    Widget	widget,
    _XtBoolean	create
    )
#else
XtPerWidgetInput _XtGetPerWidgetInput(widget, create)
    Widget	widget;
    Boolean	create;
#endif
{
    XtPerWidgetInput	pwi = NULL;
    Display		*dpy = widget->core.screen->display;

    LOCK_PROCESS;
    if (! perWidgetInputContext)
      perWidgetInputContext = XUniqueContext();
    
    if (XFindContext(dpy, 
		     (Window)widget, 
		     perWidgetInputContext, 
		     (XPointer *)&pwi) &&
	create) 
      {
	  pwi = (XtPerWidgetInput) 
	    __XtMalloc((unsigned) sizeof(XtPerWidgetInputRec));
	  
	  pwi->focusKid = NULL;
	  pwi->queryEventDescendant = NULL;
	  pwi->focalPoint = XtUnrelated;
	  pwi->keyList =
	    pwi->ptrList = NULL;

	  pwi->haveFocus =
	      pwi->map_handler_added =
		  pwi->realize_handler_added = 
		      pwi->active_handler_added = FALSE;
	  
	  XtAddCallback(widget, XtNdestroyCallback, 
			_XtDestroyServerGrabs, (XtPointer)pwi);

	  (void) XSaveContext(dpy, 
			      (Window)widget, 
			      perWidgetInputContext, 
			      (char *) pwi);
      }
    UNLOCK_PROCESS;
    return pwi;
}


void _XtFillAncestorList(listPtr, maxElemsPtr, numElemsPtr, start, breakWidget)
    Widget	**listPtr;
    int		*maxElemsPtr, *numElemsPtr;
    Widget	start, breakWidget;
{
#define CACHESIZE 16
    Cardinal	i;
    Widget	w;
    Widget	*trace = *listPtr;

    /* First time in, allocate the ancestor list */
    if (trace == NULL) 
      {
	  trace = (Widget *) __XtMalloc(CACHESIZE * sizeof(Widget));
	  *maxElemsPtr = CACHESIZE;
      }	
    /* First fill in the ancestor list */

    trace[0] = start;

    for (i = 1, w = XtParent(start); 
	 w != NULL && !XtIsShell(trace[i-1]) && trace[i-1] != breakWidget; 
	 w = XtParent(w), i++) {
	if (i == *maxElemsPtr) {
	    /* This should rarely happen, but if it does it'll probably
	       happen again, so grow the ancestor list */
	    *maxElemsPtr += CACHESIZE;
	    trace = (Widget *) XtRealloc((char*)trace,
					 sizeof(Widget) * (*maxElemsPtr));
	}
	trace[i] = w;
    }
    *listPtr = trace;
    *numElemsPtr = i;
#undef CACHESIZE
}  


Widget _XtFindRemapWidget(event, widget, mask, pdi)
    XEvent	*event;
    Widget	widget;
    EventMask	mask;
    XtPerDisplayInput pdi;
{
    Widget		dspWidget = widget;
    
    if (!pdi->traceDepth || !(widget == pdi->trace[0]))
      {
	  _XtFillAncestorList(&pdi->trace, &pdi->traceMax, 
			      &pdi->traceDepth, widget, NULL);
	  pdi->focusWidget = NULL; /* invalidate the focus
				      cache */
      }
    if (mask & (KeyPressMask | KeyReleaseMask))
	  dspWidget = _XtProcessKeyboardEvent((XKeyEvent*)event, widget, pdi);
    else if (mask &(ButtonPressMask | ButtonReleaseMask))
	  dspWidget = _XtProcessPointerEvent((XButtonEvent*)event, widget,pdi);

    return dspWidget;
}

void _XtUngrabBadGrabs(event, widget, mask, pdi)
    XEvent	*event;
    Widget	widget;
    EventMask	mask;
    XtPerDisplayInput pdi;
{
    XKeyEvent	* ke = (XKeyEvent *) event;

    if (mask & (KeyPressMask | KeyReleaseMask))
      {
	  if (IsServerGrab(pdi->keyboard.grabType) &&
	      !_XtOnGrabList(pdi->keyboard.grab.widget,
			     pdi->grabList))
	    XtUngrabKeyboard(widget, ke->time);

      }
    else
      {
	  if (IsServerGrab(pdi->pointer.grabType) &&
	      !_XtOnGrabList(pdi->pointer.grab.widget,
			     pdi->grabList))
	    XtUngrabPointer(widget, ke->time);
      }
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d62 1
a62 1
/* $XFree86: xc/lib/Xt/EventUtil.c,v 1.7 2003/04/21 16:34:27 herrb Exp $ */
d88 1
d91 7
a97 1
    _XtBoolean	create)
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d62 1
a62 1
/* $XFree86: xc/lib/Xt/EventUtil.c,v 1.7 2003/04/21 16:34:27 herrb Exp $ */
d88 1
d91 7
a97 1
    _XtBoolean	create)
@


1.1.1.3
log
@OpenBSD XF4 tree (minus old and mit) as of today
-> lib and fvwm fixes
@
text
@d9 7
a15 7
Permission to use, copy, modify, and distribute this software
and its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both that copyright notice and this permission
notice appear in supporting documentation, and that the names of
Hewlett-Packard, Digital, or Sun  not be used in advertising or
publicity pertaining to distribution of the software without specific,
d62 1
a62 1
/* $XFree86: xc/lib/Xt/EventUtil.c,v 1.8 2004/05/05 00:07:03 dickey Exp $ */
d71 3
a73 3
void _XtFreePerWidgetInput(
    Widget 		w,
    XtPerWidgetInput	pwi)
d76 1
a76 1
    XDeleteContext(XtDisplay(w),
d79 1
a79 1

d98 4
a101 4

    if (XFindContext(dpy,
		     (Window)widget,
		     perWidgetInputContext,
d103 1
a103 1
	create)
d105 1
a105 1
	  pwi = (XtPerWidgetInput)
d107 1
a107 1

d116 1
a116 1
		  pwi->realize_handler_added =
d118 2
a119 2

	  XtAddCallback(widget, XtNdestroyCallback,
d122 3
a124 3
	  (void) XSaveContext(dpy,
			      (Window)widget,
			      perWidgetInputContext,
d132 4
a135 6
void _XtFillAncestorList(
    Widget	**listPtr,
    int		*maxElemsPtr,
    int		*numElemsPtr,
    Widget	start,
    Widget	breakWidget)
d143 1
a143 1
    if (trace == NULL)
d147 1
a147 1
      }
d152 2
a153 2
    for (i = 1, w = XtParent(start);
	 w != NULL && !XtIsShell(trace[i-1]) && trace[i-1] != breakWidget;
d155 1
a155 1
	if (i == (Cardinal) *maxElemsPtr) {
d167 1
a167 1
}
d170 5
a174 5
Widget _XtFindRemapWidget(
    XEvent	*event,
    Widget	widget,
    EventMask	mask,
    XtPerDisplayInput pdi)
d177 1
a177 1

d180 1
a180 1
	  _XtFillAncestorList(&pdi->trace, &pdi->traceMax,
d193 5
a197 5
void _XtUngrabBadGrabs(
    XEvent	*event,
    Widget	widget,
    EventMask	mask,
    XtPerDisplayInput pdi)
@


