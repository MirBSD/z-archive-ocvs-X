head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.3
	cvs-200410241530:1.1.1.3
	cvs-200410012000:1.1.1.3
	cvs-200407141120:1.1.1.3
	cvs-200406231010:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.3
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.3
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.04.53;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.04.53;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.32.34;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.03.02.18.04.00;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.19.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*-
 * Copyright (c) 1998-1999 Shunsuke Akiyama <akiyama@@jp.FreeBSD.org>.
 * All rights reserved.
 * Copyright (c) 1998-1999 X-TrueType Server Project, All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	Id: FontCache.c,v 1.8 1999/01/31 12:52:49 akiyama Exp $
 */

/* THIS IS NOT AN X CONSORTIUM STANDARD */

#define NEED_EVENTS
#define NEED_REPLIES
#include "Xlibint.h"
#include "fontcachstr.h"
#include "Xext.h"
#include "extutil.h"

static XExtensionInfo _fontcache_info_data;
static XExtensionInfo *fontcache_info = &_fontcache_info_data;
static char *fontcache_extension_name = FONTCACHENAME;

#define FontCacheCheckExtension(dpy,i,val) \
  XextCheckExtension (dpy, i, fontcache_extension_name, val)

/*****************************************************************************
 *                                                                           *
 *			   private utility routines                          *
 *                                                                           *
 *****************************************************************************/

static int close_display();
static /* const */ XExtensionHooks fontcache_extension_hooks = {
    NULL,				/* create_gc */
    NULL,				/* copy_gc */
    NULL,				/* flush_gc */
    NULL,				/* free_gc */
    NULL,				/* create_font */
    NULL,				/* free_font */
    close_display,			/* close_display */
    NULL,				/* wire_to_event */
    NULL,				/* event_to_wire */
    NULL,				/* error */
    NULL,				/* error_string */
};

static XEXT_GENERATE_FIND_DISPLAY (find_display, fontcache_info, 
				   fontcache_extension_name, 
				   &fontcache_extension_hooks, 
				   0, NULL)

static XEXT_GENERATE_CLOSE_DISPLAY (close_display, fontcache_info)


/*****************************************************************************
 *                                                                           *
 *		    public Font-Misc Extension routines                      *
 *                                                                           *
 *****************************************************************************/

Bool FontCacheQueryExtension (dpy, event_basep, error_basep)
    Display *dpy;
    int *event_basep, *error_basep;
{
    XExtDisplayInfo *info = find_display (dpy);

    if (XextHasExtension(info)) {
	*event_basep = info->codes->first_event;
	*error_basep = info->codes->first_error;
	return True;
    } else {
	return False;
    }
}

Bool FontCacheQueryVersion(dpy, majorVersion, minorVersion)
    Display* dpy;
    int* majorVersion;
    int* minorVersion;
{
    XExtDisplayInfo *info = find_display (dpy);
    xFontCacheQueryVersionReply rep;
    xFontCacheQueryVersionReq *req;

    FontCacheCheckExtension (dpy, info, False);

    LockDisplay(dpy);
    GetReq(FontCacheQueryVersion, req);
    req->reqType = info->codes->major_opcode;
    req->fontcacheReqType = X_FontCacheQueryVersion;
    if (!_XReply(dpy, (xReply *)&rep, 0, xFalse)) {
	UnlockDisplay(dpy);
	SyncHandle();
	return False;
    }
    *majorVersion = rep.majorVersion;
    *minorVersion = rep.minorVersion;
    UnlockDisplay(dpy);
    SyncHandle();
    return True;
}

Bool FontCacheGetCacheSettings(dpy, cacheinfo)
    Display* dpy;
    FontCacheSettings *cacheinfo;
{
    XExtDisplayInfo *info = find_display (dpy);
    xFontCacheGetCacheSettingsReply rep;
    xFontCacheGetCacheSettingsReq *req;

    FontCacheCheckExtension (dpy, info, False);

    LockDisplay(dpy);
    GetReq(FontCacheGetCacheSettings, req);
    req->reqType = info->codes->major_opcode;
    req->fontcacheReqType = X_FontCacheGetCacheSettings;
    if (!_XReply(dpy, (xReply *)&rep, 0, xFalse)) {
	UnlockDisplay(dpy);
	SyncHandle();
	return False;
    }
    /* XXX */
    cacheinfo->himark = rep.himark;
    cacheinfo->lowmark = rep.lowmark;
    cacheinfo->balance = rep.balance;
    /* XXX */
    UnlockDisplay(dpy);
    SyncHandle();
    return True;
}

Bool FontCacheChangeCacheSettings(dpy, cacheinfo)
    Display* dpy;
    FontCacheSettings *cacheinfo;
{
    XExtDisplayInfo *info = find_display (dpy);
    xFontCacheChangeCacheSettingsReq *req;

    FontCacheCheckExtension (dpy, info, False);

    LockDisplay(dpy);
    GetReq(FontCacheChangeCacheSettings, req);
    req->reqType = info->codes->major_opcode;
    req->fontcacheReqType = X_FontCacheChangeCacheSettings;
    /* XXX */
    req->himark = cacheinfo->himark;
    req->lowmark = cacheinfo->lowmark;
    req->balance = cacheinfo->balance;
    /* XXX */
    UnlockDisplay(dpy);
    SyncHandle();
    return True;
}

Bool FontCacheGetCacheStatistics(dpy, cachestats)
    Display* dpy;
    FontCacheStatistics *cachestats;
{
    XExtDisplayInfo *info = find_display (dpy);
    xFontCacheGetCacheStatisticsReply rep;
    xFontCacheGetCacheStatisticsReq *req;

    FontCacheCheckExtension (dpy, info, False);

    LockDisplay(dpy);
    GetReq(FontCacheGetCacheStatistics, req);
    req->reqType = info->codes->major_opcode;
    req->fontcacheReqType = X_FontCacheGetCacheStatistics;
    if (!_XReply(dpy, (xReply *)&rep,
		(SIZEOF(xFontCacheGetCacheStatisticsReply)-SIZEOF(xReply))>>2,
		 xFalse)) {
	UnlockDisplay(dpy);
	SyncHandle();
	return False;
    }
    /* XXX */
    cachestats->purge_runs = rep.purge_runs;
    cachestats->purge_stat = rep.purge_stat;
    cachestats->balance = rep.balance;
    cachestats->f.hits = rep.f_hits;
    cachestats->f.misshits = rep.f_misshits;
    cachestats->f.purged = rep.f_purged;
    cachestats->f.usage = rep.f_usage;
    cachestats->v.hits = rep.v_hits;
    cachestats->v.misshits = rep.v_misshits;
    cachestats->v.purged = rep.v_purged;
    cachestats->v.usage = rep.v_usage;
    /* XXX */
    UnlockDisplay(dpy);
    SyncHandle();
    return True;
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@a29 1
/* $XFree86: xc/lib/Xfontcache/FontCache.c,v 1.4 2003/10/15 22:05:14 herrb Exp $ */
d35 4
a38 4
#include <X11/Xlibint.h>
#include <X11/extensions/fontcachstr.h>
#include <X11/extensions/Xext.h>
#include <X11/extensions/extutil.h>
d53 1
a53 2
static int close_display(Display *, XExtCodes *);

d82 3
a84 2
Bool
FontCacheQueryExtension(Display *dpy, int *event_basep, int *error_basep)
d97 4
a100 2
Bool
FontCacheQueryVersion(Display *dpy, int *majorVersion, int *minorVersion)
d124 3
a126 2
Bool
FontCacheGetCacheSettings(Display *dpy, FontCacheSettings *cacheinfo)
d153 3
a155 2
Bool
FontCacheChangeCacheSettings(Display *dpy, FontCacheSettings *cacheinfo)
d176 3
a178 2
Bool
FontCacheGetCacheStatistics(Display *dpy, FontCacheStatistics *cachestats)
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@a29 1
/* $XFree86: xc/lib/Xfontcache/FontCache.c,v 1.3 2002/10/16 00:37:28 dawes Exp $ */
d35 4
a38 4
#include <X11/Xlibint.h>
#include <X11/extensions/fontcachstr.h>
#include <X11/extensions/Xext.h>
#include <X11/extensions/extutil.h>
@


1.1.1.3
log
@That's what OpenBSD will, probably, ship as XF4 in 3.5
their last sync against XFree86 4.3-current has been
imported into our vendor branch, too
@
text
@d30 1
a30 1
/* $XFree86: xc/lib/Xfontcache/FontCache.c,v 1.4 2003/10/15 22:05:14 herrb Exp $ */
d54 1
a54 2
static int close_display(Display *, XExtCodes *);

d83 3
a85 2
Bool
FontCacheQueryExtension(Display *dpy, int *event_basep, int *error_basep)
d98 4
a101 2
Bool
FontCacheQueryVersion(Display *dpy, int *majorVersion, int *minorVersion)
d125 3
a127 2
Bool
FontCacheGetCacheSettings(Display *dpy, FontCacheSettings *cacheinfo)
d154 3
a156 2
Bool
FontCacheChangeCacheSettings(Display *dpy, FontCacheSettings *cacheinfo)
d177 3
a179 2
Bool
FontCacheGetCacheStatistics(Display *dpy, FontCacheStatistics *cachestats)
@


