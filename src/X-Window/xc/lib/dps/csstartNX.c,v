head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.20.05.05;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.05.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.32.55;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.19.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
  csstartNX.c

 * (c) Copyright 1992-1994 Adobe Systems Incorporated.
 * All rights reserved.
 * 
 * Permission to use, copy, modify, distribute, and sublicense this software
 * and its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notices appear in all copies and that
 * both those copyright notices and this permission notice appear in
 * supporting documentation and that the name of Adobe Systems Incorporated
 * not be used in advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.  No trademark license
 * to use the Adobe trademarks is hereby granted.  If the Adobe trademark
 * "Display PostScript"(tm) is used to describe this software, its
 * functionality or for any other purpose, such use shall be limited to a
 * statement that this software works in conjunction with the Display
 * PostScript system.  Proper trademark attribution to reflect Adobe's
 * ownership of the trademark shall be given whenever any such reference to
 * the Display PostScript system is made.
 * 
 * ADOBE MAKES NO REPRESENTATIONS ABOUT THE SUITABILITY OF THE SOFTWARE FOR
 * ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT EXPRESS OR IMPLIED WARRANTY.
 * ADOBE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON- INFRINGEMENT OF THIRD PARTY RIGHTS.  IN NO EVENT SHALL ADOBE BE LIABLE
 * TO YOU OR ANY OTHER PARTY FOR ANY SPECIAL, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE, STRICT LIABILITY OR ANY OTHER ACTION ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ADOBE WILL NOT
 * PROVIDE ANY TRAINING OR OTHER SUPPORT FOR THE SOFTWARE.
 * 
 * Adobe, PostScript, and Display PostScript are trademarks of Adobe Systems
 * Incorporated which may be registered in certain jurisdictions
 * 
 * Author:  Adobe Systems Incorporated
 */
/* $XFree86: xc/lib/dps/csstartNX.c,v 1.6 2001/10/28 03:32:43 tsi Exp $ */

#include <sys/param.h>
#include <X11/X.h>
#include <X11/Xlibint.h>
#include <sys/wait.h>
#include <DPS/dpsNXargs.h>
#include <sys/socket.h>
#include <errno.h>
#include <X11/Xos.h>

#include "DPSCAPproto.h"
#include "Xlibnet.h"            /* New for R5, delete for R4 */
#include "dpsassert.h"
#include "csfindNX.h"
#include "csstartNX.h"

/* ---Defines--- */

#include <stddef.h>
  
#define DOZETIME 1              /* time to wait for agent to start up (sec) */

#define BASE_TCP_PORT CSDPSPORT

#ifndef CSDPSMAXPORT
#define CSDPSMAXPORT 16
#endif

#ifndef SO_REUSEADDR
#define SO_REUSEADDR 1
#endif

/* ---Globals--- */

pid_t gSecretAgentPID = 0;	/* PID of launched agent *Shh!* Not public! */

/* ---Private Functions--- */

static int
TryTCP(void)
{
    struct sockaddr_in insock;
    int request;
    unsigned short port, startPort = 0;
    struct servent *serventInfo;
    int okay;

#ifndef ultrix
    /* Ultrix has a nasty bug in getservbyname().  If the name passed
       to it doesn't exist in the services list it will seg. fault...
       * sigh *  */
    if ((serventInfo = getservbyname(DPS_NX_SERV_NAME,
    					(char *) 0)) != 0)
        if (strcmp("tcp", serventInfo->s_proto) == 0) {
	  startPort = ntohs(serventInfo->s_port);
	}
    /* So, for Ultrix we just default to the default default port :-) */ 
#endif /* ultrix */
    if (startPort == 0) startPort = BASE_TCP_PORT;
    if ((request = socket (AF_INET, SOCK_STREAM, 0)) < 0) 
    {
	DPSWarnProc(NULL, "Creating TCP socket while recommending port\n");
	return -1;
    } 
#ifdef SO_REUSEADDR
    /* Necesary to restart the server without a reboot */
    {
	int one = 1;
	setsockopt(request, SOL_SOCKET, SO_REUSEADDR, (char *)&one, sizeof(int));
    }
    /* What the hell is all this?  I'll tell you.  We don't know
       a prioi what port is free, so we try to bind to each
       in sequence and return the one that works. */
#if !defined(AIXV3)
    {
      struct linger lingere;
      
      lingere.l_onoff = 0;		/* off */
      lingere.l_linger = 0;		/* don't */
      if(setsockopt(request, SOL_SOCKET, SO_LINGER, (char *)&lingere,
        sizeof(struct linger)) != 0)
      DPSWarnProc(NULL,
		  "Couldn't set TCP SO_DONTLINGER while recommending port.");
    }
#endif /* AIXV3 */
#endif /* SO_REUSEADDR */
    bzero((char *)&insock, sizeof (insock));
    insock.sin_family = AF_INET;
    insock.sin_addr.s_addr = htonl(INADDR_ANY);
    okay = 0;
    
    for (port = startPort; (int) port < (int) startPort + CSDPSMAXPORT; port++)
    {
    int result;
    insock.sin_port = htons(port);
    
    errno = 0;
    result = bind(request, (struct sockaddr *) &insock, sizeof (insock));
    if (result < 0)
        {
	if (errno != EADDRINUSE)
	    {
	    DPSWarnProc(NULL, "Binding TCP socket while recommending port.\n");
	    close(request);
	    return -1;
	    }
	continue;
	}
    else
        {
        /* We have a good port number */
        okay = 1;
	break;
	}
    }
    close(request);
    return (okay) ? port : -1;
}

/* ---Functions--- */

int
XDPSNXRecommendPort(int transport)
{
    int ret;
    
    switch (transport)
        {
	case XDPSNX_TRANS_UNIX:
	    /* If the TCP socket exists, we just assume the UNIX one
	       is there too.  FALL THRU! */
	case XDPSNX_TRANS_TCP: /* TCP */
	    ret = TryTCP();
	    break;
	default: ret = -1;
	}
    return(ret);
}

int
StartXDPSNX(char **additionalArgs)
{
  char **args, **cpp;
  pid_t childPid;
  int argc = 1;			/* 1, args[0]:=path, args[1]:=null */
  int i = 0;
  int status = Success;		/* assume we'll succeed */
  char *execObj, **execArgs;

  (void) XDPSGetNXArg(XDPSNX_EXEC_FILE, (void **) &execObj);
  if (execObj == 0) return (!Success);

  /* Create the argv list for the execl() call */
  (void) XDPSGetNXArg(XDPSNX_EXEC_ARGS, (void **) &execArgs);
  if (execArgs != 0)
    for(cpp = execArgs; *cpp != 0; cpp++, argc++); /* count args. */
  if (additionalArgs != 0)	/* add on the add-on args. */
    for(cpp = additionalArgs; *cpp != 0; cpp++, argc++); 

  args = (char **) Xmalloc(sizeof(char *) * (argc+1));
  if (args == 0)
    return(!Success);
  args[argc] = 0;		/* cap end of args */
  args[i++] = execObj;
  if (additionalArgs != 0)
    for(cpp = additionalArgs; *cpp != 0; cpp++, i++) args[i] = *cpp;
  if (execArgs != 0)
    for(cpp = execArgs; *cpp != 0; cpp++, i++) args[i] = *cpp;

  /* now try to start up the agent... */
  if ((childPid = fork()) != -1) {
    if (childPid == 0) {	/* Child process */
#ifndef __EMX__
      if (setsid() < 0)
        DPSWarnProc(NULL, "Agent unable to create session.  Continuing...\n");
#endif

      /* Try to start the agent */
      if (execvp(args[0], args) < 0) { /* Error!! */
	exit(1);		/* This is OKAY, we're the child here */
      }
      /* SHOULD NEVER REACH HERE */
    } else {			/* Parent (NX Client) */
      (void) sleep(DOZETIME);
      /* if decmips, pray that we hesitate long enough for the child... */
      /* Check on child (NX Agent) */
      if (waitpid(childPid, NULL, WNOHANG) != 0) {
	/* Server terminated or stopped; don't care, result is same... */
	status = !Success;
      } else {			/* we think the agent started okay */
	gSecretAgentPID = childPid; /* set secret global */
      }
    }
  } else {			/* Error in fork */
    status = !Success;
  }
  if (args != 0) (void) XFree(args);
  return(status);
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d38 1
a38 1
/* $XFree86: xc/lib/dps/csstartNX.c,v 1.7 2002/05/31 18:45:48 dawes Exp $ */
d211 1
a211 1
#ifndef __UNIXOS2__
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d38 1
a38 1
/* $XFree86: xc/lib/dps/csstartNX.c,v 1.7 2002/05/31 18:45:48 dawes Exp $ */
d211 1
a211 1
#ifndef __UNIXOS2__
@

