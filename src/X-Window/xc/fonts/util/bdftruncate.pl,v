head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-2:1.1.1.2
	cvs-200410241530:1.1.1.2
	cvs-200410012000:1.1.1.2
	cvs-200407141120:1.1.1.2
	cvs-200406231010:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405271510:1.1.1.2
	XFree86_4_4_0:1.1.9.1
	cvs-200403021700:1.1.1.2
	XFREE86_20040213:1.1.9.1
	xc:1.1.9
	cvs-200401291925:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.4
	MIRBSD_7:1.1.1.2.0.2
	MIRBSD_7ter:1.1.1.2
	cvs-20011091815:1.1.1.2
	cvs-200309162130:1.1.1.2
	cvs-200308302005:1.1.1.2
	ctmx-0387:1.1.1.2
	ctmx-0384:1.1.1.2
	MIRBSD_5:1.1.1.2
	ctmx-0375:1.1.1.2
	ctmx-0373:1.1.1.2
	ctm-0371:1.1.1.2
	ctm-0370:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-0363:1.1.1.2
	ctm-0359:1.1.1.2
	ctm-0349:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.20.04.03;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.9.1;
next	;

1.1.1.1
date	2003.03.22.20.04.03;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.08.18.31.00;	author tg;	state Stab;
branches;
next	;

1.1.9.1
date	2004.02.14.19.17.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl
#
# bdftruncate.pl -- Markus Kuhn <mkuhn@@acm.org>
#
# This Perl script allows you to generate from an ISO10646-1 encoded
# BDF font other ISO10646-1 BDF fonts in which all characters above
# a threshold code value are stored unencoded.
#
# Id: bdftruncate.pl,v 1.4 2000-06-26 14:24:07+01 mgk25 Rel mgk25 $

print STDERR <<End if $#ARGV != 0;

Usage: bdftruncate.pl threshold <source.bdf >destination.bdf

Example:

   ucs2any.pl 0x3200 <6x13.bdf >6x13t.bdf

will generate the file 6x13t.bdf in which all glyphs with codes
>= 0x3200 will only be stored unencoded (i.e., ENCODING -1).

End

exit 1 if $#ARGV != 0;

# read threshold value from command line
$threshold = $ARGV[0];
if ($threshold =~ /^(0[xX]|U[+-]?)([0-9a-fA-F]+)$/) {
    $threshold = hex($2);
} elsif (!($threshold =~ /^[0-9]+$/)) {
    die("Illegal threshold '$threshold'!\n");
}

# filter file
while (<STDIN>) {
    if (/^ENCODING\s+(-?\d+)/ && $1 >= $threshold) {
	print "ENCODING -1\n";
    } elsif (/^STARTFONT/) {
	print;
	print "COMMENT AUTOMATICALLY GENERATED FILE. DO NOT EDIT!\n";
	printf("COMMENT In this version of the font file, all characters >= " .
	       "U+%04X are\nCOMMENT not encoded to keep XFontStruct small.\n",
	       $threshold);
    } else {
	s/^COMMENT\s+\"(.*)\"$/COMMENT $1/;
        s/^COMMENT\s+\$[I]d: (.*)\$\s*$/COMMENT Derived from $1\n/;
	print;
    }
}
@


1.1.9.1
log
@OpenBSD just has imported exactly this tree into their vendor branch,
called the same tag, in XF4/xc
This is, apparently, the last XFree86 snapshot before the licence change
(ie, addition of the advertising clause)

Since the developers don't see any problems with that, and we would like
to integrate improvements done by the remaining one or two (or so) XFree86
developers (j/k), this prepares enabling us to update X-Window in the future.
@
text
@d9 1
a9 25
# Id: bdftruncate.pl,v 1.5 2001-05-31 10:58:58+01 mgk25 Exp $

# Subroutine to identify whether the ISO 10646/Unicode character code
# ucs belongs into the East Asian Wide (W) or East Asian FullWidth
# (F) category as defined in Unicode Technical Report #11.
sub iswide ($) {
    my $ucs = shift(@@_);

    return ($ucs >= 0x1100 &&
            ($ucs <= 0x115f ||                   # Hangul Jamo
             ($ucs >= 0x2e80 && $ucs <= 0xa4cf &&
              ($ucs & ~0x0011) != 0x300a && $ucs != 0x303f) || # CJK .. Yi
             ($ucs >= 0xac00 && $ucs <= 0xd7a3) || # Hangul Syllables
             ($ucs >= 0xf900 && $ucs <= 0xfaff) || # CJK Comp. Ideographs
             ($ucs >= 0xfe30 && $ucs <= 0xfe6f) || # CJK Comp. Forms
             ($ucs >= 0xff00 && $ucs <= 0xff5f) || # Fullwidth Forms
             ($ucs >= 0xffe0 && $ucs <= 0xffe6) ||
             ($ucs >= 0x20000 && $ucs <= 0x2ffff)));
}

# parse options
if ($ARGV[0] eq '-w' || $ARGV[0] eq '+w') {
    $removewide = $ARGV[0] eq '-w';
    shift @@ARGV;
}
d13 1
a13 1
Usage: bdftruncate [+w|-w] threshold <source.bdf >destination.bdf
d17 1
a17 1
   bdftruncate 0x3200 <6x13.bdf >6x13t.bdf
a20 2
Option -w removes East Asian Wide and East Asian FullWidth characters
(default if threshold <= 0x3200), and option +w keeps them.
a32 1
$removewide = $threshold <= 0x3200 unless defined $removewide;
d36 1
a36 2
    if (/^ENCODING\s+(-?\d+)/ && 
	($1 >= $threshold || ($removewide && iswide($1)))) {
@


1.1.1.1
log
@Import OpenBSD 3.3 XF4 repository from CTM 3132 the first time
This finalizes starting an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@The X-Windowing System

Import XFree86 4.3 from OpenBSD by CTM, in the hope it's stable
@
text
@d9 1
a9 25
# Id: bdftruncate.pl,v 1.5 2001-05-31 10:58:58+01 mgk25 Exp $

# Subroutine to identify whether the ISO 10646/Unicode character code
# ucs belongs into the East Asian Wide (W) or East Asian FullWidth
# (F) category as defined in Unicode Technical Report #11.
sub iswide ($) {
    my $ucs = shift(@@_);

    return ($ucs >= 0x1100 &&
            ($ucs <= 0x115f ||                   # Hangul Jamo
             ($ucs >= 0x2e80 && $ucs <= 0xa4cf &&
              ($ucs & ~0x0011) != 0x300a && $ucs != 0x303f) || # CJK .. Yi
             ($ucs >= 0xac00 && $ucs <= 0xd7a3) || # Hangul Syllables
             ($ucs >= 0xf900 && $ucs <= 0xfaff) || # CJK Comp. Ideographs
             ($ucs >= 0xfe30 && $ucs <= 0xfe6f) || # CJK Comp. Forms
             ($ucs >= 0xff00 && $ucs <= 0xff5f) || # Fullwidth Forms
             ($ucs >= 0xffe0 && $ucs <= 0xffe6) ||
             ($ucs >= 0x20000 && $ucs <= 0x2ffff)));
}

# parse options
if ($ARGV[0] eq '-w' || $ARGV[0] eq '+w') {
    $removewide = $ARGV[0] eq '-w';
    shift @@ARGV;
}
d13 1
a13 1
Usage: bdftruncate [+w|-w] threshold <source.bdf >destination.bdf
d17 1
a17 1
   bdftruncate 0x3200 <6x13.bdf >6x13t.bdf
a20 2
Option -w removes East Asian Wide and East Asian FullWidth characters
(default if threshold <= 0x3200), and option +w keeps them.
a32 1
$removewide = $threshold <= 0x3200 unless defined $removewide;
d36 1
a36 2
    if (/^ENCODING\s+(-?\d+)/ && 
	($1 >= $threshold || ($removewide && iswide($1)))) {
@

